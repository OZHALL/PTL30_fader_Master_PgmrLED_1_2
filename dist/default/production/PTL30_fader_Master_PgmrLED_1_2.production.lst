

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 19 16:50:46 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	text22,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text24,local,class=CODE,merge=1,delta=2
    50                           	psect	swtext1,local,class=CONST,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 1.45
    57                           ; Generated 16/11/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F18855 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  001C                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  008C                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0095                     	;# 
   130  0096                     	;# 
   131  0097                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009A                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0110                     	;# 
   145  0110                     	;# 
   146  0111                     	;# 
   147  0112                     	;# 
   148  0112                     	;# 
   149  0113                     	;# 
   150  0114                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0116                     	;# 
   155  0117                     	;# 
   156  0119                     	;# 
   157  0119                     	;# 
   158  0119                     	;# 
   159  011A                     	;# 
   160  011A                     	;# 
   161  011A                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011B                     	;# 
   167  011C                     	;# 
   168  011C                     	;# 
   169  011C                     	;# 
   170  011D                     	;# 
   171  011D                     	;# 
   172  011D                     	;# 
   173  011E                     	;# 
   174  011E                     	;# 
   175  011E                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  011F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  018E                     	;# 
   184  018F                     	;# 
   185  0190                     	;# 
   186  0191                     	;# 
   187  0192                     	;# 
   188  0196                     	;# 
   189  0197                     	;# 
   190  0198                     	;# 
   191  0199                     	;# 
   192  019A                     	;# 
   193  019B                     	;# 
   194  019C                     	;# 
   195  020C                     	;# 
   196  020C                     	;# 
   197  020D                     	;# 
   198  020E                     	;# 
   199  020F                     	;# 
   200  020F                     	;# 
   201  0210                     	;# 
   202  0210                     	;# 
   203  0211                     	;# 
   204  0211                     	;# 
   205  0212                     	;# 
   206  0212                     	;# 
   207  0213                     	;# 
   208  0214                     	;# 
   209  0215                     	;# 
   210  0215                     	;# 
   211  0216                     	;# 
   212  0216                     	;# 
   213  0217                     	;# 
   214  0217                     	;# 
   215  0218                     	;# 
   216  0218                     	;# 
   217  0219                     	;# 
   218  021A                     	;# 
   219  021B                     	;# 
   220  021B                     	;# 
   221  021C                     	;# 
   222  021C                     	;# 
   223  021D                     	;# 
   224  021D                     	;# 
   225  021E                     	;# 
   226  021F                     	;# 
   227  028C                     	;# 
   228  028C                     	;# 
   229  028D                     	;# 
   230  028D                     	;# 
   231  028E                     	;# 
   232  028F                     	;# 
   233  0290                     	;# 
   234  0290                     	;# 
   235  0291                     	;# 
   236  0292                     	;# 
   237  0292                     	;# 
   238  0293                     	;# 
   239  0293                     	;# 
   240  0294                     	;# 
   241  0295                     	;# 
   242  0296                     	;# 
   243  0296                     	;# 
   244  0297                     	;# 
   245  0298                     	;# 
   246  0298                     	;# 
   247  0299                     	;# 
   248  0299                     	;# 
   249  029A                     	;# 
   250  029B                     	;# 
   251  029C                     	;# 
   252  029C                     	;# 
   253  029D                     	;# 
   254  030C                     	;# 
   255  030C                     	;# 
   256  030D                     	;# 
   257  030E                     	;# 
   258  030F                     	;# 
   259  0310                     	;# 
   260  0310                     	;# 
   261  0311                     	;# 
   262  0312                     	;# 
   263  0313                     	;# 
   264  0314                     	;# 
   265  0314                     	;# 
   266  0315                     	;# 
   267  0316                     	;# 
   268  0317                     	;# 
   269  0318                     	;# 
   270  0318                     	;# 
   271  0319                     	;# 
   272  031A                     	;# 
   273  031B                     	;# 
   274  031C                     	;# 
   275  031C                     	;# 
   276  031D                     	;# 
   277  031E                     	;# 
   278  031F                     	;# 
   279  038C                     	;# 
   280  038D                     	;# 
   281  038E                     	;# 
   282  0390                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  040C                     	;# 
   286  040D                     	;# 
   287  040E                     	;# 
   288  040F                     	;# 
   289  0410                     	;# 
   290  0411                     	;# 
   291  0416                     	;# 
   292  0416                     	;# 
   293  0417                     	;# 
   294  0418                     	;# 
   295  0418                     	;# 
   296  0419                     	;# 
   297  041A                     	;# 
   298  041A                     	;# 
   299  041B                     	;# 
   300  041C                     	;# 
   301  041C                     	;# 
   302  041D                     	;# 
   303  041E                     	;# 
   304  041F                     	;# 
   305  048C                     	;# 
   306  048C                     	;# 
   307  048D                     	;# 
   308  048E                     	;# 
   309  048F                     	;# 
   310  048F                     	;# 
   311  0490                     	;# 
   312  0491                     	;# 
   313  0492                     	;# 
   314  0492                     	;# 
   315  0493                     	;# 
   316  0494                     	;# 
   317  0495                     	;# 
   318  0495                     	;# 
   319  0496                     	;# 
   320  0497                     	;# 
   321  0498                     	;# 
   322  0499                     	;# 
   323  049A                     	;# 
   324  049B                     	;# 
   325  049C                     	;# 
   326  049D                     	;# 
   327  050C                     	;# 
   328  050C                     	;# 
   329  050D                     	;# 
   330  050E                     	;# 
   331  050F                     	;# 
   332  050F                     	;# 
   333  0510                     	;# 
   334  0511                     	;# 
   335  0512                     	;# 
   336  0512                     	;# 
   337  0513                     	;# 
   338  0514                     	;# 
   339  0515                     	;# 
   340  0515                     	;# 
   341  0516                     	;# 
   342  0517                     	;# 
   343  0518                     	;# 
   344  0519                     	;# 
   345  051A                     	;# 
   346  051B                     	;# 
   347  051C                     	;# 
   348  051D                     	;# 
   349  058C                     	;# 
   350  058C                     	;# 
   351  058D                     	;# 
   352  058E                     	;# 
   353  058F                     	;# 
   354  058F                     	;# 
   355  0590                     	;# 
   356  0591                     	;# 
   357  0592                     	;# 
   358  0593                     	;# 
   359  060C                     	;# 
   360  060D                     	;# 
   361  060E                     	;# 
   362  060F                     	;# 
   363  0610                     	;# 
   364  0611                     	;# 
   365  0612                     	;# 
   366  0613                     	;# 
   367  0614                     	;# 
   368  0616                     	;# 
   369  0617                     	;# 
   370  0618                     	;# 
   371  0619                     	;# 
   372  061A                     	;# 
   373  061B                     	;# 
   374  061C                     	;# 
   375  061D                     	;# 
   376  061E                     	;# 
   377  068C                     	;# 
   378  068D                     	;# 
   379  068E                     	;# 
   380  068F                     	;# 
   381  0690                     	;# 
   382  0691                     	;# 
   383  0692                     	;# 
   384  0693                     	;# 
   385  0694                     	;# 
   386  070C                     	;# 
   387  070D                     	;# 
   388  070E                     	;# 
   389  070F                     	;# 
   390  0710                     	;# 
   391  0711                     	;# 
   392  0712                     	;# 
   393  0713                     	;# 
   394  0714                     	;# 
   395  0716                     	;# 
   396  0717                     	;# 
   397  0718                     	;# 
   398  0719                     	;# 
   399  071A                     	;# 
   400  071B                     	;# 
   401  071C                     	;# 
   402  071D                     	;# 
   403  071E                     	;# 
   404  0796                     	;# 
   405  0797                     	;# 
   406  0798                     	;# 
   407  0799                     	;# 
   408  079A                     	;# 
   409  079B                     	;# 
   410  080C                     	;# 
   411  080D                     	;# 
   412  080E                     	;# 
   413  080F                     	;# 
   414  0810                     	;# 
   415  0811                     	;# 
   416  0812                     	;# 
   417  0813                     	;# 
   418  0814                     	;# 
   419  081A                     	;# 
   420  081B                     	;# 
   421  081C                     	;# 
   422  081D                     	;# 
   423  081E                     	;# 
   424  081F                     	;# 
   425  088C                     	;# 
   426  088D                     	;# 
   427  088E                     	;# 
   428  088F                     	;# 
   429  0890                     	;# 
   430  0891                     	;# 
   431  0892                     	;# 
   432  0893                     	;# 
   433  0895                     	;# 
   434  0896                     	;# 
   435  0897                     	;# 
   436  0898                     	;# 
   437  0899                     	;# 
   438  089A                     	;# 
   439  089B                     	;# 
   440  090C                     	;# 
   441  090E                     	;# 
   442  090F                     	;# 
   443  091F                     	;# 
   444  091F                     	;# 
   445  098F                     	;# 
   446  098F                     	;# 
   447  0990                     	;# 
   448  0991                     	;# 
   449  0992                     	;# 
   450  0993                     	;# 
   451  0994                     	;# 
   452  0995                     	;# 
   453  0996                     	;# 
   454  0997                     	;# 
   455  0E0F                     	;# 
   456  0E10                     	;# 
   457  0E11                     	;# 
   458  0E12                     	;# 
   459  0E13                     	;# 
   460  0E14                     	;# 
   461  0E15                     	;# 
   462  0E16                     	;# 
   463  0E17                     	;# 
   464  0E18                     	;# 
   465  0E19                     	;# 
   466  0E1A                     	;# 
   467  0E1B                     	;# 
   468  0E1C                     	;# 
   469  0E1D                     	;# 
   470  0E1E                     	;# 
   471  0E1F                     	;# 
   472  0E20                     	;# 
   473  0E21                     	;# 
   474  0E22                     	;# 
   475  0E23                     	;# 
   476  0E24                     	;# 
   477  0E25                     	;# 
   478  0E26                     	;# 
   479  0E27                     	;# 
   480  0E28                     	;# 
   481  0E29                     	;# 
   482  0E2A                     	;# 
   483  0E2B                     	;# 
   484  0E2C                     	;# 
   485  0E2D                     	;# 
   486  0E2E                     	;# 
   487  0E2F                     	;# 
   488  0E30                     	;# 
   489  0E31                     	;# 
   490  0E32                     	;# 
   491  0E33                     	;# 
   492  0E34                     	;# 
   493  0E35                     	;# 
   494  0E36                     	;# 
   495  0E37                     	;# 
   496  0E8F                     	;# 
   497  0E90                     	;# 
   498  0E91                     	;# 
   499  0E92                     	;# 
   500  0E93                     	;# 
   501  0E94                     	;# 
   502  0E95                     	;# 
   503  0E96                     	;# 
   504  0E97                     	;# 
   505  0E9C                     	;# 
   506  0E9D                     	;# 
   507  0E9E                     	;# 
   508  0EA1                     	;# 
   509  0EA2                     	;# 
   510  0EA3                     	;# 
   511  0EA4                     	;# 
   512  0EA5                     	;# 
   513  0EA9                     	;# 
   514  0EAA                     	;# 
   515  0EAB                     	;# 
   516  0EAC                     	;# 
   517  0EB1                     	;# 
   518  0EB2                     	;# 
   519  0EB3                     	;# 
   520  0EB8                     	;# 
   521  0EB9                     	;# 
   522  0EBA                     	;# 
   523  0EBB                     	;# 
   524  0EBC                     	;# 
   525  0EBD                     	;# 
   526  0EBE                     	;# 
   527  0EC3                     	;# 
   528  0EC5                     	;# 
   529  0EC6                     	;# 
   530  0EC7                     	;# 
   531  0EC8                     	;# 
   532  0EC9                     	;# 
   533  0ECA                     	;# 
   534  0ECB                     	;# 
   535  0ECC                     	;# 
   536  0F10                     	;# 
   537  0F11                     	;# 
   538  0F12                     	;# 
   539  0F13                     	;# 
   540  0F14                     	;# 
   541  0F15                     	;# 
   542  0F16                     	;# 
   543  0F17                     	;# 
   544  0F18                     	;# 
   545  0F19                     	;# 
   546  0F1A                     	;# 
   547  0F1B                     	;# 
   548  0F1C                     	;# 
   549  0F1D                     	;# 
   550  0F1E                     	;# 
   551  0F1F                     	;# 
   552  0F20                     	;# 
   553  0F21                     	;# 
   554  0F22                     	;# 
   555  0F23                     	;# 
   556  0F24                     	;# 
   557  0F25                     	;# 
   558  0F26                     	;# 
   559  0F27                     	;# 
   560  0F38                     	;# 
   561  0F39                     	;# 
   562  0F3A                     	;# 
   563  0F3B                     	;# 
   564  0F3C                     	;# 
   565  0F3D                     	;# 
   566  0F3E                     	;# 
   567  0F3F                     	;# 
   568  0F40                     	;# 
   569  0F41                     	;# 
   570  0F43                     	;# 
   571  0F44                     	;# 
   572  0F45                     	;# 
   573  0F46                     	;# 
   574  0F47                     	;# 
   575  0F48                     	;# 
   576  0F49                     	;# 
   577  0F4A                     	;# 
   578  0F4B                     	;# 
   579  0F4C                     	;# 
   580  0F4E                     	;# 
   581  0F4F                     	;# 
   582  0F50                     	;# 
   583  0F51                     	;# 
   584  0F52                     	;# 
   585  0F53                     	;# 
   586  0F54                     	;# 
   587  0F55                     	;# 
   588  0F56                     	;# 
   589  0F57                     	;# 
   590  0F65                     	;# 
   591  0F68                     	;# 
   592  0F69                     	;# 
   593  0F6A                     	;# 
   594  0F6B                     	;# 
   595  0FE4                     	;# 
   596  0FE5                     	;# 
   597  0FE6                     	;# 
   598  0FE7                     	;# 
   599  0FE8                     	;# 
   600  0FE9                     	;# 
   601  0FEA                     	;# 
   602  0FEB                     	;# 
   603  0FED                     	;# 
   604  0FEE                     	;# 
   605  0FEF                     	;# 
   606  0000                     	;# 
   607  0001                     	;# 
   608  0002                     	;# 
   609  0003                     	;# 
   610  0004                     	;# 
   611  0005                     	;# 
   612  0006                     	;# 
   613  0007                     	;# 
   614  0008                     	;# 
   615  0009                     	;# 
   616  000A                     	;# 
   617  000B                     	;# 
   618  000C                     	;# 
   619  000D                     	;# 
   620  000E                     	;# 
   621  0010                     	;# 
   622  0011                     	;# 
   623  0012                     	;# 
   624  0013                     	;# 
   625  0016                     	;# 
   626  0017                     	;# 
   627  0018                     	;# 
   628  001C                     	;# 
   629  001C                     	;# 
   630  001D                     	;# 
   631  001D                     	;# 
   632  001E                     	;# 
   633  001F                     	;# 
   634  008C                     	;# 
   635  008C                     	;# 
   636  008D                     	;# 
   637  008E                     	;# 
   638  008E                     	;# 
   639  008F                     	;# 
   640  0090                     	;# 
   641  0090                     	;# 
   642  0091                     	;# 
   643  0093                     	;# 
   644  0094                     	;# 
   645  0095                     	;# 
   646  0096                     	;# 
   647  0097                     	;# 
   648  0098                     	;# 
   649  0099                     	;# 
   650  009A                     	;# 
   651  009B                     	;# 
   652  009C                     	;# 
   653  009D                     	;# 
   654  009E                     	;# 
   655  010C                     	;# 
   656  010D                     	;# 
   657  010E                     	;# 
   658  010E                     	;# 
   659  010F                     	;# 
   660  0110                     	;# 
   661  0110                     	;# 
   662  0111                     	;# 
   663  0112                     	;# 
   664  0112                     	;# 
   665  0113                     	;# 
   666  0114                     	;# 
   667  0114                     	;# 
   668  0115                     	;# 
   669  0116                     	;# 
   670  0116                     	;# 
   671  0117                     	;# 
   672  0119                     	;# 
   673  0119                     	;# 
   674  0119                     	;# 
   675  011A                     	;# 
   676  011A                     	;# 
   677  011A                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011B                     	;# 
   683  011C                     	;# 
   684  011C                     	;# 
   685  011C                     	;# 
   686  011D                     	;# 
   687  011D                     	;# 
   688  011D                     	;# 
   689  011E                     	;# 
   690  011E                     	;# 
   691  011E                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  011F                     	;# 
   697  018C                     	;# 
   698  018D                     	;# 
   699  018E                     	;# 
   700  018F                     	;# 
   701  0190                     	;# 
   702  0191                     	;# 
   703  0192                     	;# 
   704  0196                     	;# 
   705  0197                     	;# 
   706  0198                     	;# 
   707  0199                     	;# 
   708  019A                     	;# 
   709  019B                     	;# 
   710  019C                     	;# 
   711  020C                     	;# 
   712  020C                     	;# 
   713  020D                     	;# 
   714  020E                     	;# 
   715  020F                     	;# 
   716  020F                     	;# 
   717  0210                     	;# 
   718  0210                     	;# 
   719  0211                     	;# 
   720  0211                     	;# 
   721  0212                     	;# 
   722  0212                     	;# 
   723  0213                     	;# 
   724  0214                     	;# 
   725  0215                     	;# 
   726  0215                     	;# 
   727  0216                     	;# 
   728  0216                     	;# 
   729  0217                     	;# 
   730  0217                     	;# 
   731  0218                     	;# 
   732  0218                     	;# 
   733  0219                     	;# 
   734  021A                     	;# 
   735  021B                     	;# 
   736  021B                     	;# 
   737  021C                     	;# 
   738  021C                     	;# 
   739  021D                     	;# 
   740  021D                     	;# 
   741  021E                     	;# 
   742  021F                     	;# 
   743  028C                     	;# 
   744  028C                     	;# 
   745  028D                     	;# 
   746  028D                     	;# 
   747  028E                     	;# 
   748  028F                     	;# 
   749  0290                     	;# 
   750  0290                     	;# 
   751  0291                     	;# 
   752  0292                     	;# 
   753  0292                     	;# 
   754  0293                     	;# 
   755  0293                     	;# 
   756  0294                     	;# 
   757  0295                     	;# 
   758  0296                     	;# 
   759  0296                     	;# 
   760  0297                     	;# 
   761  0298                     	;# 
   762  0298                     	;# 
   763  0299                     	;# 
   764  0299                     	;# 
   765  029A                     	;# 
   766  029B                     	;# 
   767  029C                     	;# 
   768  029C                     	;# 
   769  029D                     	;# 
   770  030C                     	;# 
   771  030C                     	;# 
   772  030D                     	;# 
   773  030E                     	;# 
   774  030F                     	;# 
   775  0310                     	;# 
   776  0310                     	;# 
   777  0311                     	;# 
   778  0312                     	;# 
   779  0313                     	;# 
   780  0314                     	;# 
   781  0314                     	;# 
   782  0315                     	;# 
   783  0316                     	;# 
   784  0317                     	;# 
   785  0318                     	;# 
   786  0318                     	;# 
   787  0319                     	;# 
   788  031A                     	;# 
   789  031B                     	;# 
   790  031C                     	;# 
   791  031C                     	;# 
   792  031D                     	;# 
   793  031E                     	;# 
   794  031F                     	;# 
   795  038C                     	;# 
   796  038D                     	;# 
   797  038E                     	;# 
   798  0390                     	;# 
   799  0391                     	;# 
   800  0392                     	;# 
   801  040C                     	;# 
   802  040D                     	;# 
   803  040E                     	;# 
   804  040F                     	;# 
   805  0410                     	;# 
   806  0411                     	;# 
   807  0416                     	;# 
   808  0416                     	;# 
   809  0417                     	;# 
   810  0418                     	;# 
   811  0418                     	;# 
   812  0419                     	;# 
   813  041A                     	;# 
   814  041A                     	;# 
   815  041B                     	;# 
   816  041C                     	;# 
   817  041C                     	;# 
   818  041D                     	;# 
   819  041E                     	;# 
   820  041F                     	;# 
   821  048C                     	;# 
   822  048C                     	;# 
   823  048D                     	;# 
   824  048E                     	;# 
   825  048F                     	;# 
   826  048F                     	;# 
   827  0490                     	;# 
   828  0491                     	;# 
   829  0492                     	;# 
   830  0492                     	;# 
   831  0493                     	;# 
   832  0494                     	;# 
   833  0495                     	;# 
   834  0495                     	;# 
   835  0496                     	;# 
   836  0497                     	;# 
   837  0498                     	;# 
   838  0499                     	;# 
   839  049A                     	;# 
   840  049B                     	;# 
   841  049C                     	;# 
   842  049D                     	;# 
   843  050C                     	;# 
   844  050C                     	;# 
   845  050D                     	;# 
   846  050E                     	;# 
   847  050F                     	;# 
   848  050F                     	;# 
   849  0510                     	;# 
   850  0511                     	;# 
   851  0512                     	;# 
   852  0512                     	;# 
   853  0513                     	;# 
   854  0514                     	;# 
   855  0515                     	;# 
   856  0515                     	;# 
   857  0516                     	;# 
   858  0517                     	;# 
   859  0518                     	;# 
   860  0519                     	;# 
   861  051A                     	;# 
   862  051B                     	;# 
   863  051C                     	;# 
   864  051D                     	;# 
   865  058C                     	;# 
   866  058C                     	;# 
   867  058D                     	;# 
   868  058E                     	;# 
   869  058F                     	;# 
   870  058F                     	;# 
   871  0590                     	;# 
   872  0591                     	;# 
   873  0592                     	;# 
   874  0593                     	;# 
   875  060C                     	;# 
   876  060D                     	;# 
   877  060E                     	;# 
   878  060F                     	;# 
   879  0610                     	;# 
   880  0611                     	;# 
   881  0612                     	;# 
   882  0613                     	;# 
   883  0614                     	;# 
   884  0616                     	;# 
   885  0617                     	;# 
   886  0618                     	;# 
   887  0619                     	;# 
   888  061A                     	;# 
   889  061B                     	;# 
   890  061C                     	;# 
   891  061D                     	;# 
   892  061E                     	;# 
   893  068C                     	;# 
   894  068D                     	;# 
   895  068E                     	;# 
   896  068F                     	;# 
   897  0690                     	;# 
   898  0691                     	;# 
   899  0692                     	;# 
   900  0693                     	;# 
   901  0694                     	;# 
   902  070C                     	;# 
   903  070D                     	;# 
   904  070E                     	;# 
   905  070F                     	;# 
   906  0710                     	;# 
   907  0711                     	;# 
   908  0712                     	;# 
   909  0713                     	;# 
   910  0714                     	;# 
   911  0716                     	;# 
   912  0717                     	;# 
   913  0718                     	;# 
   914  0719                     	;# 
   915  071A                     	;# 
   916  071B                     	;# 
   917  071C                     	;# 
   918  071D                     	;# 
   919  071E                     	;# 
   920  0796                     	;# 
   921  0797                     	;# 
   922  0798                     	;# 
   923  0799                     	;# 
   924  079A                     	;# 
   925  079B                     	;# 
   926  080C                     	;# 
   927  080D                     	;# 
   928  080E                     	;# 
   929  080F                     	;# 
   930  0810                     	;# 
   931  0811                     	;# 
   932  0812                     	;# 
   933  0813                     	;# 
   934  0814                     	;# 
   935  081A                     	;# 
   936  081B                     	;# 
   937  081C                     	;# 
   938  081D                     	;# 
   939  081E                     	;# 
   940  081F                     	;# 
   941  088C                     	;# 
   942  088D                     	;# 
   943  088E                     	;# 
   944  088F                     	;# 
   945  0890                     	;# 
   946  0891                     	;# 
   947  0892                     	;# 
   948  0893                     	;# 
   949  0895                     	;# 
   950  0896                     	;# 
   951  0897                     	;# 
   952  0898                     	;# 
   953  0899                     	;# 
   954  089A                     	;# 
   955  089B                     	;# 
   956  090C                     	;# 
   957  090E                     	;# 
   958  090F                     	;# 
   959  091F                     	;# 
   960  091F                     	;# 
   961  098F                     	;# 
   962  098F                     	;# 
   963  0990                     	;# 
   964  0991                     	;# 
   965  0992                     	;# 
   966  0993                     	;# 
   967  0994                     	;# 
   968  0995                     	;# 
   969  0996                     	;# 
   970  0997                     	;# 
   971  0E0F                     	;# 
   972  0E10                     	;# 
   973  0E11                     	;# 
   974  0E12                     	;# 
   975  0E13                     	;# 
   976  0E14                     	;# 
   977  0E15                     	;# 
   978  0E16                     	;# 
   979  0E17                     	;# 
   980  0E18                     	;# 
   981  0E19                     	;# 
   982  0E1A                     	;# 
   983  0E1B                     	;# 
   984  0E1C                     	;# 
   985  0E1D                     	;# 
   986  0E1E                     	;# 
   987  0E1F                     	;# 
   988  0E20                     	;# 
   989  0E21                     	;# 
   990  0E22                     	;# 
   991  0E23                     	;# 
   992  0E24                     	;# 
   993  0E25                     	;# 
   994  0E26                     	;# 
   995  0E27                     	;# 
   996  0E28                     	;# 
   997  0E29                     	;# 
   998  0E2A                     	;# 
   999  0E2B                     	;# 
  1000  0E2C                     	;# 
  1001  0E2D                     	;# 
  1002  0E2E                     	;# 
  1003  0E2F                     	;# 
  1004  0E30                     	;# 
  1005  0E31                     	;# 
  1006  0E32                     	;# 
  1007  0E33                     	;# 
  1008  0E34                     	;# 
  1009  0E35                     	;# 
  1010  0E36                     	;# 
  1011  0E37                     	;# 
  1012  0E8F                     	;# 
  1013  0E90                     	;# 
  1014  0E91                     	;# 
  1015  0E92                     	;# 
  1016  0E93                     	;# 
  1017  0E94                     	;# 
  1018  0E95                     	;# 
  1019  0E96                     	;# 
  1020  0E97                     	;# 
  1021  0E9C                     	;# 
  1022  0E9D                     	;# 
  1023  0E9E                     	;# 
  1024  0EA1                     	;# 
  1025  0EA2                     	;# 
  1026  0EA3                     	;# 
  1027  0EA4                     	;# 
  1028  0EA5                     	;# 
  1029  0EA9                     	;# 
  1030  0EAA                     	;# 
  1031  0EAB                     	;# 
  1032  0EAC                     	;# 
  1033  0EB1                     	;# 
  1034  0EB2                     	;# 
  1035  0EB3                     	;# 
  1036  0EB8                     	;# 
  1037  0EB9                     	;# 
  1038  0EBA                     	;# 
  1039  0EBB                     	;# 
  1040  0EBC                     	;# 
  1041  0EBD                     	;# 
  1042  0EBE                     	;# 
  1043  0EC3                     	;# 
  1044  0EC5                     	;# 
  1045  0EC6                     	;# 
  1046  0EC7                     	;# 
  1047  0EC8                     	;# 
  1048  0EC9                     	;# 
  1049  0ECA                     	;# 
  1050  0ECB                     	;# 
  1051  0ECC                     	;# 
  1052  0F10                     	;# 
  1053  0F11                     	;# 
  1054  0F12                     	;# 
  1055  0F13                     	;# 
  1056  0F14                     	;# 
  1057  0F15                     	;# 
  1058  0F16                     	;# 
  1059  0F17                     	;# 
  1060  0F18                     	;# 
  1061  0F19                     	;# 
  1062  0F1A                     	;# 
  1063  0F1B                     	;# 
  1064  0F1C                     	;# 
  1065  0F1D                     	;# 
  1066  0F1E                     	;# 
  1067  0F1F                     	;# 
  1068  0F20                     	;# 
  1069  0F21                     	;# 
  1070  0F22                     	;# 
  1071  0F23                     	;# 
  1072  0F24                     	;# 
  1073  0F25                     	;# 
  1074  0F26                     	;# 
  1075  0F27                     	;# 
  1076  0F38                     	;# 
  1077  0F39                     	;# 
  1078  0F3A                     	;# 
  1079  0F3B                     	;# 
  1080  0F3C                     	;# 
  1081  0F3D                     	;# 
  1082  0F3E                     	;# 
  1083  0F3F                     	;# 
  1084  0F40                     	;# 
  1085  0F41                     	;# 
  1086  0F43                     	;# 
  1087  0F44                     	;# 
  1088  0F45                     	;# 
  1089  0F46                     	;# 
  1090  0F47                     	;# 
  1091  0F48                     	;# 
  1092  0F49                     	;# 
  1093  0F4A                     	;# 
  1094  0F4B                     	;# 
  1095  0F4C                     	;# 
  1096  0F4E                     	;# 
  1097  0F4F                     	;# 
  1098  0F50                     	;# 
  1099  0F51                     	;# 
  1100  0F52                     	;# 
  1101  0F53                     	;# 
  1102  0F54                     	;# 
  1103  0F55                     	;# 
  1104  0F56                     	;# 
  1105  0F57                     	;# 
  1106  0F65                     	;# 
  1107  0F68                     	;# 
  1108  0F69                     	;# 
  1109  0F6A                     	;# 
  1110  0F6B                     	;# 
  1111  0FE4                     	;# 
  1112  0FE5                     	;# 
  1113  0FE6                     	;# 
  1114  0FE7                     	;# 
  1115  0FE8                     	;# 
  1116  0FE9                     	;# 
  1117  0FEA                     	;# 
  1118  0FEB                     	;# 
  1119  0FED                     	;# 
  1120  0FEE                     	;# 
  1121  0FEF                     	;# 
  1122  0000                     	;# 
  1123  0001                     	;# 
  1124  0002                     	;# 
  1125  0003                     	;# 
  1126  0004                     	;# 
  1127  0005                     	;# 
  1128  0006                     	;# 
  1129  0007                     	;# 
  1130  0008                     	;# 
  1131  0009                     	;# 
  1132  000A                     	;# 
  1133  000B                     	;# 
  1134  000C                     	;# 
  1135  000D                     	;# 
  1136  000E                     	;# 
  1137  0010                     	;# 
  1138  0011                     	;# 
  1139  0012                     	;# 
  1140  0013                     	;# 
  1141  0016                     	;# 
  1142  0017                     	;# 
  1143  0018                     	;# 
  1144  001C                     	;# 
  1145  001C                     	;# 
  1146  001D                     	;# 
  1147  001D                     	;# 
  1148  001E                     	;# 
  1149  001F                     	;# 
  1150  008C                     	;# 
  1151  008C                     	;# 
  1152  008D                     	;# 
  1153  008E                     	;# 
  1154  008E                     	;# 
  1155  008F                     	;# 
  1156  0090                     	;# 
  1157  0090                     	;# 
  1158  0091                     	;# 
  1159  0093                     	;# 
  1160  0094                     	;# 
  1161  0095                     	;# 
  1162  0096                     	;# 
  1163  0097                     	;# 
  1164  0098                     	;# 
  1165  0099                     	;# 
  1166  009A                     	;# 
  1167  009B                     	;# 
  1168  009C                     	;# 
  1169  009D                     	;# 
  1170  009E                     	;# 
  1171  010C                     	;# 
  1172  010D                     	;# 
  1173  010E                     	;# 
  1174  010E                     	;# 
  1175  010F                     	;# 
  1176  0110                     	;# 
  1177  0110                     	;# 
  1178  0111                     	;# 
  1179  0112                     	;# 
  1180  0112                     	;# 
  1181  0113                     	;# 
  1182  0114                     	;# 
  1183  0114                     	;# 
  1184  0115                     	;# 
  1185  0116                     	;# 
  1186  0116                     	;# 
  1187  0117                     	;# 
  1188  0119                     	;# 
  1189  0119                     	;# 
  1190  0119                     	;# 
  1191  011A                     	;# 
  1192  011A                     	;# 
  1193  011A                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011B                     	;# 
  1199  011C                     	;# 
  1200  011C                     	;# 
  1201  011C                     	;# 
  1202  011D                     	;# 
  1203  011D                     	;# 
  1204  011D                     	;# 
  1205  011E                     	;# 
  1206  011E                     	;# 
  1207  011E                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  011F                     	;# 
  1211  011F                     	;# 
  1212  011F                     	;# 
  1213  018C                     	;# 
  1214  018D                     	;# 
  1215  018E                     	;# 
  1216  018F                     	;# 
  1217  0190                     	;# 
  1218  0191                     	;# 
  1219  0192                     	;# 
  1220  0196                     	;# 
  1221  0197                     	;# 
  1222  0198                     	;# 
  1223  0199                     	;# 
  1224  019A                     	;# 
  1225  019B                     	;# 
  1226  019C                     	;# 
  1227  020C                     	;# 
  1228  020C                     	;# 
  1229  020D                     	;# 
  1230  020E                     	;# 
  1231  020F                     	;# 
  1232  020F                     	;# 
  1233  0210                     	;# 
  1234  0210                     	;# 
  1235  0211                     	;# 
  1236  0211                     	;# 
  1237  0212                     	;# 
  1238  0212                     	;# 
  1239  0213                     	;# 
  1240  0214                     	;# 
  1241  0215                     	;# 
  1242  0215                     	;# 
  1243  0216                     	;# 
  1244  0216                     	;# 
  1245  0217                     	;# 
  1246  0217                     	;# 
  1247  0218                     	;# 
  1248  0218                     	;# 
  1249  0219                     	;# 
  1250  021A                     	;# 
  1251  021B                     	;# 
  1252  021B                     	;# 
  1253  021C                     	;# 
  1254  021C                     	;# 
  1255  021D                     	;# 
  1256  021D                     	;# 
  1257  021E                     	;# 
  1258  021F                     	;# 
  1259  028C                     	;# 
  1260  028C                     	;# 
  1261  028D                     	;# 
  1262  028D                     	;# 
  1263  028E                     	;# 
  1264  028F                     	;# 
  1265  0290                     	;# 
  1266  0290                     	;# 
  1267  0291                     	;# 
  1268  0292                     	;# 
  1269  0292                     	;# 
  1270  0293                     	;# 
  1271  0293                     	;# 
  1272  0294                     	;# 
  1273  0295                     	;# 
  1274  0296                     	;# 
  1275  0296                     	;# 
  1276  0297                     	;# 
  1277  0298                     	;# 
  1278  0298                     	;# 
  1279  0299                     	;# 
  1280  0299                     	;# 
  1281  029A                     	;# 
  1282  029B                     	;# 
  1283  029C                     	;# 
  1284  029C                     	;# 
  1285  029D                     	;# 
  1286  030C                     	;# 
  1287  030C                     	;# 
  1288  030D                     	;# 
  1289  030E                     	;# 
  1290  030F                     	;# 
  1291  0310                     	;# 
  1292  0310                     	;# 
  1293  0311                     	;# 
  1294  0312                     	;# 
  1295  0313                     	;# 
  1296  0314                     	;# 
  1297  0314                     	;# 
  1298  0315                     	;# 
  1299  0316                     	;# 
  1300  0317                     	;# 
  1301  0318                     	;# 
  1302  0318                     	;# 
  1303  0319                     	;# 
  1304  031A                     	;# 
  1305  031B                     	;# 
  1306  031C                     	;# 
  1307  031C                     	;# 
  1308  031D                     	;# 
  1309  031E                     	;# 
  1310  031F                     	;# 
  1311  038C                     	;# 
  1312  038D                     	;# 
  1313  038E                     	;# 
  1314  0390                     	;# 
  1315  0391                     	;# 
  1316  0392                     	;# 
  1317  040C                     	;# 
  1318  040D                     	;# 
  1319  040E                     	;# 
  1320  040F                     	;# 
  1321  0410                     	;# 
  1322  0411                     	;# 
  1323  0416                     	;# 
  1324  0416                     	;# 
  1325  0417                     	;# 
  1326  0418                     	;# 
  1327  0418                     	;# 
  1328  0419                     	;# 
  1329  041A                     	;# 
  1330  041A                     	;# 
  1331  041B                     	;# 
  1332  041C                     	;# 
  1333  041C                     	;# 
  1334  041D                     	;# 
  1335  041E                     	;# 
  1336  041F                     	;# 
  1337  048C                     	;# 
  1338  048C                     	;# 
  1339  048D                     	;# 
  1340  048E                     	;# 
  1341  048F                     	;# 
  1342  048F                     	;# 
  1343  0490                     	;# 
  1344  0491                     	;# 
  1345  0492                     	;# 
  1346  0492                     	;# 
  1347  0493                     	;# 
  1348  0494                     	;# 
  1349  0495                     	;# 
  1350  0495                     	;# 
  1351  0496                     	;# 
  1352  0497                     	;# 
  1353  0498                     	;# 
  1354  0499                     	;# 
  1355  049A                     	;# 
  1356  049B                     	;# 
  1357  049C                     	;# 
  1358  049D                     	;# 
  1359  050C                     	;# 
  1360  050C                     	;# 
  1361  050D                     	;# 
  1362  050E                     	;# 
  1363  050F                     	;# 
  1364  050F                     	;# 
  1365  0510                     	;# 
  1366  0511                     	;# 
  1367  0512                     	;# 
  1368  0512                     	;# 
  1369  0513                     	;# 
  1370  0514                     	;# 
  1371  0515                     	;# 
  1372  0515                     	;# 
  1373  0516                     	;# 
  1374  0517                     	;# 
  1375  0518                     	;# 
  1376  0519                     	;# 
  1377  051A                     	;# 
  1378  051B                     	;# 
  1379  051C                     	;# 
  1380  051D                     	;# 
  1381  058C                     	;# 
  1382  058C                     	;# 
  1383  058D                     	;# 
  1384  058E                     	;# 
  1385  058F                     	;# 
  1386  058F                     	;# 
  1387  0590                     	;# 
  1388  0591                     	;# 
  1389  0592                     	;# 
  1390  0593                     	;# 
  1391  060C                     	;# 
  1392  060D                     	;# 
  1393  060E                     	;# 
  1394  060F                     	;# 
  1395  0610                     	;# 
  1396  0611                     	;# 
  1397  0612                     	;# 
  1398  0613                     	;# 
  1399  0614                     	;# 
  1400  0616                     	;# 
  1401  0617                     	;# 
  1402  0618                     	;# 
  1403  0619                     	;# 
  1404  061A                     	;# 
  1405  061B                     	;# 
  1406  061C                     	;# 
  1407  061D                     	;# 
  1408  061E                     	;# 
  1409  068C                     	;# 
  1410  068D                     	;# 
  1411  068E                     	;# 
  1412  068F                     	;# 
  1413  0690                     	;# 
  1414  0691                     	;# 
  1415  0692                     	;# 
  1416  0693                     	;# 
  1417  0694                     	;# 
  1418  070C                     	;# 
  1419  070D                     	;# 
  1420  070E                     	;# 
  1421  070F                     	;# 
  1422  0710                     	;# 
  1423  0711                     	;# 
  1424  0712                     	;# 
  1425  0713                     	;# 
  1426  0714                     	;# 
  1427  0716                     	;# 
  1428  0717                     	;# 
  1429  0718                     	;# 
  1430  0719                     	;# 
  1431  071A                     	;# 
  1432  071B                     	;# 
  1433  071C                     	;# 
  1434  071D                     	;# 
  1435  071E                     	;# 
  1436  0796                     	;# 
  1437  0797                     	;# 
  1438  0798                     	;# 
  1439  0799                     	;# 
  1440  079A                     	;# 
  1441  079B                     	;# 
  1442  080C                     	;# 
  1443  080D                     	;# 
  1444  080E                     	;# 
  1445  080F                     	;# 
  1446  0810                     	;# 
  1447  0811                     	;# 
  1448  0812                     	;# 
  1449  0813                     	;# 
  1450  0814                     	;# 
  1451  081A                     	;# 
  1452  081B                     	;# 
  1453  081C                     	;# 
  1454  081D                     	;# 
  1455  081E                     	;# 
  1456  081F                     	;# 
  1457  088C                     	;# 
  1458  088D                     	;# 
  1459  088E                     	;# 
  1460  088F                     	;# 
  1461  0890                     	;# 
  1462  0891                     	;# 
  1463  0892                     	;# 
  1464  0893                     	;# 
  1465  0895                     	;# 
  1466  0896                     	;# 
  1467  0897                     	;# 
  1468  0898                     	;# 
  1469  0899                     	;# 
  1470  089A                     	;# 
  1471  089B                     	;# 
  1472  090C                     	;# 
  1473  090E                     	;# 
  1474  090F                     	;# 
  1475  091F                     	;# 
  1476  091F                     	;# 
  1477  098F                     	;# 
  1478  098F                     	;# 
  1479  0990                     	;# 
  1480  0991                     	;# 
  1481  0992                     	;# 
  1482  0993                     	;# 
  1483  0994                     	;# 
  1484  0995                     	;# 
  1485  0996                     	;# 
  1486  0997                     	;# 
  1487  0E0F                     	;# 
  1488  0E10                     	;# 
  1489  0E11                     	;# 
  1490  0E12                     	;# 
  1491  0E13                     	;# 
  1492  0E14                     	;# 
  1493  0E15                     	;# 
  1494  0E16                     	;# 
  1495  0E17                     	;# 
  1496  0E18                     	;# 
  1497  0E19                     	;# 
  1498  0E1A                     	;# 
  1499  0E1B                     	;# 
  1500  0E1C                     	;# 
  1501  0E1D                     	;# 
  1502  0E1E                     	;# 
  1503  0E1F                     	;# 
  1504  0E20                     	;# 
  1505  0E21                     	;# 
  1506  0E22                     	;# 
  1507  0E23                     	;# 
  1508  0E24                     	;# 
  1509  0E25                     	;# 
  1510  0E26                     	;# 
  1511  0E27                     	;# 
  1512  0E28                     	;# 
  1513  0E29                     	;# 
  1514  0E2A                     	;# 
  1515  0E2B                     	;# 
  1516  0E2C                     	;# 
  1517  0E2D                     	;# 
  1518  0E2E                     	;# 
  1519  0E2F                     	;# 
  1520  0E30                     	;# 
  1521  0E31                     	;# 
  1522  0E32                     	;# 
  1523  0E33                     	;# 
  1524  0E34                     	;# 
  1525  0E35                     	;# 
  1526  0E36                     	;# 
  1527  0E37                     	;# 
  1528  0E8F                     	;# 
  1529  0E90                     	;# 
  1530  0E91                     	;# 
  1531  0E92                     	;# 
  1532  0E93                     	;# 
  1533  0E94                     	;# 
  1534  0E95                     	;# 
  1535  0E96                     	;# 
  1536  0E97                     	;# 
  1537  0E9C                     	;# 
  1538  0E9D                     	;# 
  1539  0E9E                     	;# 
  1540  0EA1                     	;# 
  1541  0EA2                     	;# 
  1542  0EA3                     	;# 
  1543  0EA4                     	;# 
  1544  0EA5                     	;# 
  1545  0EA9                     	;# 
  1546  0EAA                     	;# 
  1547  0EAB                     	;# 
  1548  0EAC                     	;# 
  1549  0EB1                     	;# 
  1550  0EB2                     	;# 
  1551  0EB3                     	;# 
  1552  0EB8                     	;# 
  1553  0EB9                     	;# 
  1554  0EBA                     	;# 
  1555  0EBB                     	;# 
  1556  0EBC                     	;# 
  1557  0EBD                     	;# 
  1558  0EBE                     	;# 
  1559  0EC3                     	;# 
  1560  0EC5                     	;# 
  1561  0EC6                     	;# 
  1562  0EC7                     	;# 
  1563  0EC8                     	;# 
  1564  0EC9                     	;# 
  1565  0ECA                     	;# 
  1566  0ECB                     	;# 
  1567  0ECC                     	;# 
  1568  0F10                     	;# 
  1569  0F11                     	;# 
  1570  0F12                     	;# 
  1571  0F13                     	;# 
  1572  0F14                     	;# 
  1573  0F15                     	;# 
  1574  0F16                     	;# 
  1575  0F17                     	;# 
  1576  0F18                     	;# 
  1577  0F19                     	;# 
  1578  0F1A                     	;# 
  1579  0F1B                     	;# 
  1580  0F1C                     	;# 
  1581  0F1D                     	;# 
  1582  0F1E                     	;# 
  1583  0F1F                     	;# 
  1584  0F20                     	;# 
  1585  0F21                     	;# 
  1586  0F22                     	;# 
  1587  0F23                     	;# 
  1588  0F24                     	;# 
  1589  0F25                     	;# 
  1590  0F26                     	;# 
  1591  0F27                     	;# 
  1592  0F38                     	;# 
  1593  0F39                     	;# 
  1594  0F3A                     	;# 
  1595  0F3B                     	;# 
  1596  0F3C                     	;# 
  1597  0F3D                     	;# 
  1598  0F3E                     	;# 
  1599  0F3F                     	;# 
  1600  0F40                     	;# 
  1601  0F41                     	;# 
  1602  0F43                     	;# 
  1603  0F44                     	;# 
  1604  0F45                     	;# 
  1605  0F46                     	;# 
  1606  0F47                     	;# 
  1607  0F48                     	;# 
  1608  0F49                     	;# 
  1609  0F4A                     	;# 
  1610  0F4B                     	;# 
  1611  0F4C                     	;# 
  1612  0F4E                     	;# 
  1613  0F4F                     	;# 
  1614  0F50                     	;# 
  1615  0F51                     	;# 
  1616  0F52                     	;# 
  1617  0F53                     	;# 
  1618  0F54                     	;# 
  1619  0F55                     	;# 
  1620  0F56                     	;# 
  1621  0F57                     	;# 
  1622  0F65                     	;# 
  1623  0F68                     	;# 
  1624  0F69                     	;# 
  1625  0F6A                     	;# 
  1626  0F6B                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0013                     	;# 
  1657  0016                     	;# 
  1658  0017                     	;# 
  1659  0018                     	;# 
  1660  001C                     	;# 
  1661  001C                     	;# 
  1662  001D                     	;# 
  1663  001D                     	;# 
  1664  001E                     	;# 
  1665  001F                     	;# 
  1666  008C                     	;# 
  1667  008C                     	;# 
  1668  008D                     	;# 
  1669  008E                     	;# 
  1670  008E                     	;# 
  1671  008F                     	;# 
  1672  0090                     	;# 
  1673  0090                     	;# 
  1674  0091                     	;# 
  1675  0093                     	;# 
  1676  0094                     	;# 
  1677  0095                     	;# 
  1678  0096                     	;# 
  1679  0097                     	;# 
  1680  0098                     	;# 
  1681  0099                     	;# 
  1682  009A                     	;# 
  1683  009B                     	;# 
  1684  009C                     	;# 
  1685  009D                     	;# 
  1686  009E                     	;# 
  1687  010C                     	;# 
  1688  010D                     	;# 
  1689  010E                     	;# 
  1690  010E                     	;# 
  1691  010F                     	;# 
  1692  0110                     	;# 
  1693  0110                     	;# 
  1694  0111                     	;# 
  1695  0112                     	;# 
  1696  0112                     	;# 
  1697  0113                     	;# 
  1698  0114                     	;# 
  1699  0114                     	;# 
  1700  0115                     	;# 
  1701  0116                     	;# 
  1702  0116                     	;# 
  1703  0117                     	;# 
  1704  0119                     	;# 
  1705  0119                     	;# 
  1706  0119                     	;# 
  1707  011A                     	;# 
  1708  011A                     	;# 
  1709  011A                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011B                     	;# 
  1715  011C                     	;# 
  1716  011C                     	;# 
  1717  011C                     	;# 
  1718  011D                     	;# 
  1719  011D                     	;# 
  1720  011D                     	;# 
  1721  011E                     	;# 
  1722  011E                     	;# 
  1723  011E                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  011F                     	;# 
  1729  018C                     	;# 
  1730  018D                     	;# 
  1731  018E                     	;# 
  1732  018F                     	;# 
  1733  0190                     	;# 
  1734  0191                     	;# 
  1735  0192                     	;# 
  1736  0196                     	;# 
  1737  0197                     	;# 
  1738  0198                     	;# 
  1739  0199                     	;# 
  1740  019A                     	;# 
  1741  019B                     	;# 
  1742  019C                     	;# 
  1743  020C                     	;# 
  1744  020C                     	;# 
  1745  020D                     	;# 
  1746  020E                     	;# 
  1747  020F                     	;# 
  1748  020F                     	;# 
  1749  0210                     	;# 
  1750  0210                     	;# 
  1751  0211                     	;# 
  1752  0211                     	;# 
  1753  0212                     	;# 
  1754  0212                     	;# 
  1755  0213                     	;# 
  1756  0214                     	;# 
  1757  0215                     	;# 
  1758  0215                     	;# 
  1759  0216                     	;# 
  1760  0216                     	;# 
  1761  0217                     	;# 
  1762  0217                     	;# 
  1763  0218                     	;# 
  1764  0218                     	;# 
  1765  0219                     	;# 
  1766  021A                     	;# 
  1767  021B                     	;# 
  1768  021B                     	;# 
  1769  021C                     	;# 
  1770  021C                     	;# 
  1771  021D                     	;# 
  1772  021D                     	;# 
  1773  021E                     	;# 
  1774  021F                     	;# 
  1775  028C                     	;# 
  1776  028C                     	;# 
  1777  028D                     	;# 
  1778  028D                     	;# 
  1779  028E                     	;# 
  1780  028F                     	;# 
  1781  0290                     	;# 
  1782  0290                     	;# 
  1783  0291                     	;# 
  1784  0292                     	;# 
  1785  0292                     	;# 
  1786  0293                     	;# 
  1787  0293                     	;# 
  1788  0294                     	;# 
  1789  0295                     	;# 
  1790  0296                     	;# 
  1791  0296                     	;# 
  1792  0297                     	;# 
  1793  0298                     	;# 
  1794  0298                     	;# 
  1795  0299                     	;# 
  1796  0299                     	;# 
  1797  029A                     	;# 
  1798  029B                     	;# 
  1799  029C                     	;# 
  1800  029C                     	;# 
  1801  029D                     	;# 
  1802  030C                     	;# 
  1803  030C                     	;# 
  1804  030D                     	;# 
  1805  030E                     	;# 
  1806  030F                     	;# 
  1807  0310                     	;# 
  1808  0310                     	;# 
  1809  0311                     	;# 
  1810  0312                     	;# 
  1811  0313                     	;# 
  1812  0314                     	;# 
  1813  0314                     	;# 
  1814  0315                     	;# 
  1815  0316                     	;# 
  1816  0317                     	;# 
  1817  0318                     	;# 
  1818  0318                     	;# 
  1819  0319                     	;# 
  1820  031A                     	;# 
  1821  031B                     	;# 
  1822  031C                     	;# 
  1823  031C                     	;# 
  1824  031D                     	;# 
  1825  031E                     	;# 
  1826  031F                     	;# 
  1827  038C                     	;# 
  1828  038D                     	;# 
  1829  038E                     	;# 
  1830  0390                     	;# 
  1831  0391                     	;# 
  1832  0392                     	;# 
  1833  040C                     	;# 
  1834  040D                     	;# 
  1835  040E                     	;# 
  1836  040F                     	;# 
  1837  0410                     	;# 
  1838  0411                     	;# 
  1839  0416                     	;# 
  1840  0416                     	;# 
  1841  0417                     	;# 
  1842  0418                     	;# 
  1843  0418                     	;# 
  1844  0419                     	;# 
  1845  041A                     	;# 
  1846  041A                     	;# 
  1847  041B                     	;# 
  1848  041C                     	;# 
  1849  041C                     	;# 
  1850  041D                     	;# 
  1851  041E                     	;# 
  1852  041F                     	;# 
  1853  048C                     	;# 
  1854  048C                     	;# 
  1855  048D                     	;# 
  1856  048E                     	;# 
  1857  048F                     	;# 
  1858  048F                     	;# 
  1859  0490                     	;# 
  1860  0491                     	;# 
  1861  0492                     	;# 
  1862  0492                     	;# 
  1863  0493                     	;# 
  1864  0494                     	;# 
  1865  0495                     	;# 
  1866  0495                     	;# 
  1867  0496                     	;# 
  1868  0497                     	;# 
  1869  0498                     	;# 
  1870  0499                     	;# 
  1871  049A                     	;# 
  1872  049B                     	;# 
  1873  049C                     	;# 
  1874  049D                     	;# 
  1875  050C                     	;# 
  1876  050C                     	;# 
  1877  050D                     	;# 
  1878  050E                     	;# 
  1879  050F                     	;# 
  1880  050F                     	;# 
  1881  0510                     	;# 
  1882  0511                     	;# 
  1883  0512                     	;# 
  1884  0512                     	;# 
  1885  0513                     	;# 
  1886  0514                     	;# 
  1887  0515                     	;# 
  1888  0515                     	;# 
  1889  0516                     	;# 
  1890  0517                     	;# 
  1891  0518                     	;# 
  1892  0519                     	;# 
  1893  051A                     	;# 
  1894  051B                     	;# 
  1895  051C                     	;# 
  1896  051D                     	;# 
  1897  058C                     	;# 
  1898  058C                     	;# 
  1899  058D                     	;# 
  1900  058E                     	;# 
  1901  058F                     	;# 
  1902  058F                     	;# 
  1903  0590                     	;# 
  1904  0591                     	;# 
  1905  0592                     	;# 
  1906  0593                     	;# 
  1907  060C                     	;# 
  1908  060D                     	;# 
  1909  060E                     	;# 
  1910  060F                     	;# 
  1911  0610                     	;# 
  1912  0611                     	;# 
  1913  0612                     	;# 
  1914  0613                     	;# 
  1915  0614                     	;# 
  1916  0616                     	;# 
  1917  0617                     	;# 
  1918  0618                     	;# 
  1919  0619                     	;# 
  1920  061A                     	;# 
  1921  061B                     	;# 
  1922  061C                     	;# 
  1923  061D                     	;# 
  1924  061E                     	;# 
  1925  068C                     	;# 
  1926  068D                     	;# 
  1927  068E                     	;# 
  1928  068F                     	;# 
  1929  0690                     	;# 
  1930  0691                     	;# 
  1931  0692                     	;# 
  1932  0693                     	;# 
  1933  0694                     	;# 
  1934  070C                     	;# 
  1935  070D                     	;# 
  1936  070E                     	;# 
  1937  070F                     	;# 
  1938  0710                     	;# 
  1939  0711                     	;# 
  1940  0712                     	;# 
  1941  0713                     	;# 
  1942  0714                     	;# 
  1943  0716                     	;# 
  1944  0717                     	;# 
  1945  0718                     	;# 
  1946  0719                     	;# 
  1947  071A                     	;# 
  1948  071B                     	;# 
  1949  071C                     	;# 
  1950  071D                     	;# 
  1951  071E                     	;# 
  1952  0796                     	;# 
  1953  0797                     	;# 
  1954  0798                     	;# 
  1955  0799                     	;# 
  1956  079A                     	;# 
  1957  079B                     	;# 
  1958  080C                     	;# 
  1959  080D                     	;# 
  1960  080E                     	;# 
  1961  080F                     	;# 
  1962  0810                     	;# 
  1963  0811                     	;# 
  1964  0812                     	;# 
  1965  0813                     	;# 
  1966  0814                     	;# 
  1967  081A                     	;# 
  1968  081B                     	;# 
  1969  081C                     	;# 
  1970  081D                     	;# 
  1971  081E                     	;# 
  1972  081F                     	;# 
  1973  088C                     	;# 
  1974  088D                     	;# 
  1975  088E                     	;# 
  1976  088F                     	;# 
  1977  0890                     	;# 
  1978  0891                     	;# 
  1979  0892                     	;# 
  1980  0893                     	;# 
  1981  0895                     	;# 
  1982  0896                     	;# 
  1983  0897                     	;# 
  1984  0898                     	;# 
  1985  0899                     	;# 
  1986  089A                     	;# 
  1987  089B                     	;# 
  1988  090C                     	;# 
  1989  090E                     	;# 
  1990  090F                     	;# 
  1991  091F                     	;# 
  1992  091F                     	;# 
  1993  098F                     	;# 
  1994  098F                     	;# 
  1995  0990                     	;# 
  1996  0991                     	;# 
  1997  0992                     	;# 
  1998  0993                     	;# 
  1999  0994                     	;# 
  2000  0995                     	;# 
  2001  0996                     	;# 
  2002  0997                     	;# 
  2003  0E0F                     	;# 
  2004  0E10                     	;# 
  2005  0E11                     	;# 
  2006  0E12                     	;# 
  2007  0E13                     	;# 
  2008  0E14                     	;# 
  2009  0E15                     	;# 
  2010  0E16                     	;# 
  2011  0E17                     	;# 
  2012  0E18                     	;# 
  2013  0E19                     	;# 
  2014  0E1A                     	;# 
  2015  0E1B                     	;# 
  2016  0E1C                     	;# 
  2017  0E1D                     	;# 
  2018  0E1E                     	;# 
  2019  0E1F                     	;# 
  2020  0E20                     	;# 
  2021  0E21                     	;# 
  2022  0E22                     	;# 
  2023  0E23                     	;# 
  2024  0E24                     	;# 
  2025  0E25                     	;# 
  2026  0E26                     	;# 
  2027  0E27                     	;# 
  2028  0E28                     	;# 
  2029  0E29                     	;# 
  2030  0E2A                     	;# 
  2031  0E2B                     	;# 
  2032  0E2C                     	;# 
  2033  0E2D                     	;# 
  2034  0E2E                     	;# 
  2035  0E2F                     	;# 
  2036  0E30                     	;# 
  2037  0E31                     	;# 
  2038  0E32                     	;# 
  2039  0E33                     	;# 
  2040  0E34                     	;# 
  2041  0E35                     	;# 
  2042  0E36                     	;# 
  2043  0E37                     	;# 
  2044  0E8F                     	;# 
  2045  0E90                     	;# 
  2046  0E91                     	;# 
  2047  0E92                     	;# 
  2048  0E93                     	;# 
  2049  0E94                     	;# 
  2050  0E95                     	;# 
  2051  0E96                     	;# 
  2052  0E97                     	;# 
  2053  0E9C                     	;# 
  2054  0E9D                     	;# 
  2055  0E9E                     	;# 
  2056  0EA1                     	;# 
  2057  0EA2                     	;# 
  2058  0EA3                     	;# 
  2059  0EA4                     	;# 
  2060  0EA5                     	;# 
  2061  0EA9                     	;# 
  2062  0EAA                     	;# 
  2063  0EAB                     	;# 
  2064  0EAC                     	;# 
  2065  0EB1                     	;# 
  2066  0EB2                     	;# 
  2067  0EB3                     	;# 
  2068  0EB8                     	;# 
  2069  0EB9                     	;# 
  2070  0EBA                     	;# 
  2071  0EBB                     	;# 
  2072  0EBC                     	;# 
  2073  0EBD                     	;# 
  2074  0EBE                     	;# 
  2075  0EC3                     	;# 
  2076  0EC5                     	;# 
  2077  0EC6                     	;# 
  2078  0EC7                     	;# 
  2079  0EC8                     	;# 
  2080  0EC9                     	;# 
  2081  0ECA                     	;# 
  2082  0ECB                     	;# 
  2083  0ECC                     	;# 
  2084  0F10                     	;# 
  2085  0F11                     	;# 
  2086  0F12                     	;# 
  2087  0F13                     	;# 
  2088  0F14                     	;# 
  2089  0F15                     	;# 
  2090  0F16                     	;# 
  2091  0F17                     	;# 
  2092  0F18                     	;# 
  2093  0F19                     	;# 
  2094  0F1A                     	;# 
  2095  0F1B                     	;# 
  2096  0F1C                     	;# 
  2097  0F1D                     	;# 
  2098  0F1E                     	;# 
  2099  0F1F                     	;# 
  2100  0F20                     	;# 
  2101  0F21                     	;# 
  2102  0F22                     	;# 
  2103  0F23                     	;# 
  2104  0F24                     	;# 
  2105  0F25                     	;# 
  2106  0F26                     	;# 
  2107  0F27                     	;# 
  2108  0F38                     	;# 
  2109  0F39                     	;# 
  2110  0F3A                     	;# 
  2111  0F3B                     	;# 
  2112  0F3C                     	;# 
  2113  0F3D                     	;# 
  2114  0F3E                     	;# 
  2115  0F3F                     	;# 
  2116  0F40                     	;# 
  2117  0F41                     	;# 
  2118  0F43                     	;# 
  2119  0F44                     	;# 
  2120  0F45                     	;# 
  2121  0F46                     	;# 
  2122  0F47                     	;# 
  2123  0F48                     	;# 
  2124  0F49                     	;# 
  2125  0F4A                     	;# 
  2126  0F4B                     	;# 
  2127  0F4C                     	;# 
  2128  0F4E                     	;# 
  2129  0F4F                     	;# 
  2130  0F50                     	;# 
  2131  0F51                     	;# 
  2132  0F52                     	;# 
  2133  0F53                     	;# 
  2134  0F54                     	;# 
  2135  0F55                     	;# 
  2136  0F56                     	;# 
  2137  0F57                     	;# 
  2138  0F65                     	;# 
  2139  0F68                     	;# 
  2140  0F69                     	;# 
  2141  0F6A                     	;# 
  2142  0F6B                     	;# 
  2143  0FE4                     	;# 
  2144  0FE5                     	;# 
  2145  0FE6                     	;# 
  2146  0FE7                     	;# 
  2147  0FE8                     	;# 
  2148  0FE9                     	;# 
  2149  0FEA                     	;# 
  2150  0FEB                     	;# 
  2151  0FED                     	;# 
  2152  0FEE                     	;# 
  2153  0FEF                     	;# 
  2154  0000                     	;# 
  2155  0001                     	;# 
  2156  0002                     	;# 
  2157  0003                     	;# 
  2158  0004                     	;# 
  2159  0005                     	;# 
  2160  0006                     	;# 
  2161  0007                     	;# 
  2162  0008                     	;# 
  2163  0009                     	;# 
  2164  000A                     	;# 
  2165  000B                     	;# 
  2166  000C                     	;# 
  2167  000D                     	;# 
  2168  000E                     	;# 
  2169  0010                     	;# 
  2170  0011                     	;# 
  2171  0012                     	;# 
  2172  0013                     	;# 
  2173  0016                     	;# 
  2174  0017                     	;# 
  2175  0018                     	;# 
  2176  001C                     	;# 
  2177  001C                     	;# 
  2178  001D                     	;# 
  2179  001D                     	;# 
  2180  001E                     	;# 
  2181  001F                     	;# 
  2182  008C                     	;# 
  2183  008C                     	;# 
  2184  008D                     	;# 
  2185  008E                     	;# 
  2186  008E                     	;# 
  2187  008F                     	;# 
  2188  0090                     	;# 
  2189  0090                     	;# 
  2190  0091                     	;# 
  2191  0093                     	;# 
  2192  0094                     	;# 
  2193  0095                     	;# 
  2194  0096                     	;# 
  2195  0097                     	;# 
  2196  0098                     	;# 
  2197  0099                     	;# 
  2198  009A                     	;# 
  2199  009B                     	;# 
  2200  009C                     	;# 
  2201  009D                     	;# 
  2202  009E                     	;# 
  2203  010C                     	;# 
  2204  010D                     	;# 
  2205  010E                     	;# 
  2206  010E                     	;# 
  2207  010F                     	;# 
  2208  0110                     	;# 
  2209  0110                     	;# 
  2210  0111                     	;# 
  2211  0112                     	;# 
  2212  0112                     	;# 
  2213  0113                     	;# 
  2214  0114                     	;# 
  2215  0114                     	;# 
  2216  0115                     	;# 
  2217  0116                     	;# 
  2218  0116                     	;# 
  2219  0117                     	;# 
  2220  0119                     	;# 
  2221  0119                     	;# 
  2222  0119                     	;# 
  2223  011A                     	;# 
  2224  011A                     	;# 
  2225  011A                     	;# 
  2226  011B                     	;# 
  2227  011B                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011B                     	;# 
  2231  011C                     	;# 
  2232  011C                     	;# 
  2233  011C                     	;# 
  2234  011D                     	;# 
  2235  011D                     	;# 
  2236  011D                     	;# 
  2237  011E                     	;# 
  2238  011E                     	;# 
  2239  011E                     	;# 
  2240  011F                     	;# 
  2241  011F                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  011F                     	;# 
  2245  018C                     	;# 
  2246  018D                     	;# 
  2247  018E                     	;# 
  2248  018F                     	;# 
  2249  0190                     	;# 
  2250  0191                     	;# 
  2251  0192                     	;# 
  2252  0196                     	;# 
  2253  0197                     	;# 
  2254  0198                     	;# 
  2255  0199                     	;# 
  2256  019A                     	;# 
  2257  019B                     	;# 
  2258  019C                     	;# 
  2259  020C                     	;# 
  2260  020C                     	;# 
  2261  020D                     	;# 
  2262  020E                     	;# 
  2263  020F                     	;# 
  2264  020F                     	;# 
  2265  0210                     	;# 
  2266  0210                     	;# 
  2267  0211                     	;# 
  2268  0211                     	;# 
  2269  0212                     	;# 
  2270  0212                     	;# 
  2271  0213                     	;# 
  2272  0214                     	;# 
  2273  0215                     	;# 
  2274  0215                     	;# 
  2275  0216                     	;# 
  2276  0216                     	;# 
  2277  0217                     	;# 
  2278  0217                     	;# 
  2279  0218                     	;# 
  2280  0218                     	;# 
  2281  0219                     	;# 
  2282  021A                     	;# 
  2283  021B                     	;# 
  2284  021B                     	;# 
  2285  021C                     	;# 
  2286  021C                     	;# 
  2287  021D                     	;# 
  2288  021D                     	;# 
  2289  021E                     	;# 
  2290  021F                     	;# 
  2291  028C                     	;# 
  2292  028C                     	;# 
  2293  028D                     	;# 
  2294  028D                     	;# 
  2295  028E                     	;# 
  2296  028F                     	;# 
  2297  0290                     	;# 
  2298  0290                     	;# 
  2299  0291                     	;# 
  2300  0292                     	;# 
  2301  0292                     	;# 
  2302  0293                     	;# 
  2303  0293                     	;# 
  2304  0294                     	;# 
  2305  0295                     	;# 
  2306  0296                     	;# 
  2307  0296                     	;# 
  2308  0297                     	;# 
  2309  0298                     	;# 
  2310  0298                     	;# 
  2311  0299                     	;# 
  2312  0299                     	;# 
  2313  029A                     	;# 
  2314  029B                     	;# 
  2315  029C                     	;# 
  2316  029C                     	;# 
  2317  029D                     	;# 
  2318  030C                     	;# 
  2319  030C                     	;# 
  2320  030D                     	;# 
  2321  030E                     	;# 
  2322  030F                     	;# 
  2323  0310                     	;# 
  2324  0310                     	;# 
  2325  0311                     	;# 
  2326  0312                     	;# 
  2327  0313                     	;# 
  2328  0314                     	;# 
  2329  0314                     	;# 
  2330  0315                     	;# 
  2331  0316                     	;# 
  2332  0317                     	;# 
  2333  0318                     	;# 
  2334  0318                     	;# 
  2335  0319                     	;# 
  2336  031A                     	;# 
  2337  031B                     	;# 
  2338  031C                     	;# 
  2339  031C                     	;# 
  2340  031D                     	;# 
  2341  031E                     	;# 
  2342  031F                     	;# 
  2343  038C                     	;# 
  2344  038D                     	;# 
  2345  038E                     	;# 
  2346  0390                     	;# 
  2347  0391                     	;# 
  2348  0392                     	;# 
  2349  040C                     	;# 
  2350  040D                     	;# 
  2351  040E                     	;# 
  2352  040F                     	;# 
  2353  0410                     	;# 
  2354  0411                     	;# 
  2355  0416                     	;# 
  2356  0416                     	;# 
  2357  0417                     	;# 
  2358  0418                     	;# 
  2359  0418                     	;# 
  2360  0419                     	;# 
  2361  041A                     	;# 
  2362  041A                     	;# 
  2363  041B                     	;# 
  2364  041C                     	;# 
  2365  041C                     	;# 
  2366  041D                     	;# 
  2367  041E                     	;# 
  2368  041F                     	;# 
  2369  048C                     	;# 
  2370  048C                     	;# 
  2371  048D                     	;# 
  2372  048E                     	;# 
  2373  048F                     	;# 
  2374  048F                     	;# 
  2375  0490                     	;# 
  2376  0491                     	;# 
  2377  0492                     	;# 
  2378  0492                     	;# 
  2379  0493                     	;# 
  2380  0494                     	;# 
  2381  0495                     	;# 
  2382  0495                     	;# 
  2383  0496                     	;# 
  2384  0497                     	;# 
  2385  0498                     	;# 
  2386  0499                     	;# 
  2387  049A                     	;# 
  2388  049B                     	;# 
  2389  049C                     	;# 
  2390  049D                     	;# 
  2391  050C                     	;# 
  2392  050C                     	;# 
  2393  050D                     	;# 
  2394  050E                     	;# 
  2395  050F                     	;# 
  2396  050F                     	;# 
  2397  0510                     	;# 
  2398  0511                     	;# 
  2399  0512                     	;# 
  2400  0512                     	;# 
  2401  0513                     	;# 
  2402  0514                     	;# 
  2403  0515                     	;# 
  2404  0515                     	;# 
  2405  0516                     	;# 
  2406  0517                     	;# 
  2407  0518                     	;# 
  2408  0519                     	;# 
  2409  051A                     	;# 
  2410  051B                     	;# 
  2411  051C                     	;# 
  2412  051D                     	;# 
  2413  058C                     	;# 
  2414  058C                     	;# 
  2415  058D                     	;# 
  2416  058E                     	;# 
  2417  058F                     	;# 
  2418  058F                     	;# 
  2419  0590                     	;# 
  2420  0591                     	;# 
  2421  0592                     	;# 
  2422  0593                     	;# 
  2423  060C                     	;# 
  2424  060D                     	;# 
  2425  060E                     	;# 
  2426  060F                     	;# 
  2427  0610                     	;# 
  2428  0611                     	;# 
  2429  0612                     	;# 
  2430  0613                     	;# 
  2431  0614                     	;# 
  2432  0616                     	;# 
  2433  0617                     	;# 
  2434  0618                     	;# 
  2435  0619                     	;# 
  2436  061A                     	;# 
  2437  061B                     	;# 
  2438  061C                     	;# 
  2439  061D                     	;# 
  2440  061E                     	;# 
  2441  068C                     	;# 
  2442  068D                     	;# 
  2443  068E                     	;# 
  2444  068F                     	;# 
  2445  0690                     	;# 
  2446  0691                     	;# 
  2447  0692                     	;# 
  2448  0693                     	;# 
  2449  0694                     	;# 
  2450  070C                     	;# 
  2451  070D                     	;# 
  2452  070E                     	;# 
  2453  070F                     	;# 
  2454  0710                     	;# 
  2455  0711                     	;# 
  2456  0712                     	;# 
  2457  0713                     	;# 
  2458  0714                     	;# 
  2459  0716                     	;# 
  2460  0717                     	;# 
  2461  0718                     	;# 
  2462  0719                     	;# 
  2463  071A                     	;# 
  2464  071B                     	;# 
  2465  071C                     	;# 
  2466  071D                     	;# 
  2467  071E                     	;# 
  2468  0796                     	;# 
  2469  0797                     	;# 
  2470  0798                     	;# 
  2471  0799                     	;# 
  2472  079A                     	;# 
  2473  079B                     	;# 
  2474  080C                     	;# 
  2475  080D                     	;# 
  2476  080E                     	;# 
  2477  080F                     	;# 
  2478  0810                     	;# 
  2479  0811                     	;# 
  2480  0812                     	;# 
  2481  0813                     	;# 
  2482  0814                     	;# 
  2483  081A                     	;# 
  2484  081B                     	;# 
  2485  081C                     	;# 
  2486  081D                     	;# 
  2487  081E                     	;# 
  2488  081F                     	;# 
  2489  088C                     	;# 
  2490  088D                     	;# 
  2491  088E                     	;# 
  2492  088F                     	;# 
  2493  0890                     	;# 
  2494  0891                     	;# 
  2495  0892                     	;# 
  2496  0893                     	;# 
  2497  0895                     	;# 
  2498  0896                     	;# 
  2499  0897                     	;# 
  2500  0898                     	;# 
  2501  0899                     	;# 
  2502  089A                     	;# 
  2503  089B                     	;# 
  2504  090C                     	;# 
  2505  090E                     	;# 
  2506  090F                     	;# 
  2507  091F                     	;# 
  2508  091F                     	;# 
  2509  098F                     	;# 
  2510  098F                     	;# 
  2511  0990                     	;# 
  2512  0991                     	;# 
  2513  0992                     	;# 
  2514  0993                     	;# 
  2515  0994                     	;# 
  2516  0995                     	;# 
  2517  0996                     	;# 
  2518  0997                     	;# 
  2519  0E0F                     	;# 
  2520  0E10                     	;# 
  2521  0E11                     	;# 
  2522  0E12                     	;# 
  2523  0E13                     	;# 
  2524  0E14                     	;# 
  2525  0E15                     	;# 
  2526  0E16                     	;# 
  2527  0E17                     	;# 
  2528  0E18                     	;# 
  2529  0E19                     	;# 
  2530  0E1A                     	;# 
  2531  0E1B                     	;# 
  2532  0E1C                     	;# 
  2533  0E1D                     	;# 
  2534  0E1E                     	;# 
  2535  0E1F                     	;# 
  2536  0E20                     	;# 
  2537  0E21                     	;# 
  2538  0E22                     	;# 
  2539  0E23                     	;# 
  2540  0E24                     	;# 
  2541  0E25                     	;# 
  2542  0E26                     	;# 
  2543  0E27                     	;# 
  2544  0E28                     	;# 
  2545  0E29                     	;# 
  2546  0E2A                     	;# 
  2547  0E2B                     	;# 
  2548  0E2C                     	;# 
  2549  0E2D                     	;# 
  2550  0E2E                     	;# 
  2551  0E2F                     	;# 
  2552  0E30                     	;# 
  2553  0E31                     	;# 
  2554  0E32                     	;# 
  2555  0E33                     	;# 
  2556  0E34                     	;# 
  2557  0E35                     	;# 
  2558  0E36                     	;# 
  2559  0E37                     	;# 
  2560  0E8F                     	;# 
  2561  0E90                     	;# 
  2562  0E91                     	;# 
  2563  0E92                     	;# 
  2564  0E93                     	;# 
  2565  0E94                     	;# 
  2566  0E95                     	;# 
  2567  0E96                     	;# 
  2568  0E97                     	;# 
  2569  0E9C                     	;# 
  2570  0E9D                     	;# 
  2571  0E9E                     	;# 
  2572  0EA1                     	;# 
  2573  0EA2                     	;# 
  2574  0EA3                     	;# 
  2575  0EA4                     	;# 
  2576  0EA5                     	;# 
  2577  0EA9                     	;# 
  2578  0EAA                     	;# 
  2579  0EAB                     	;# 
  2580  0EAC                     	;# 
  2581  0EB1                     	;# 
  2582  0EB2                     	;# 
  2583  0EB3                     	;# 
  2584  0EB8                     	;# 
  2585  0EB9                     	;# 
  2586  0EBA                     	;# 
  2587  0EBB                     	;# 
  2588  0EBC                     	;# 
  2589  0EBD                     	;# 
  2590  0EBE                     	;# 
  2591  0EC3                     	;# 
  2592  0EC5                     	;# 
  2593  0EC6                     	;# 
  2594  0EC7                     	;# 
  2595  0EC8                     	;# 
  2596  0EC9                     	;# 
  2597  0ECA                     	;# 
  2598  0ECB                     	;# 
  2599  0ECC                     	;# 
  2600  0F10                     	;# 
  2601  0F11                     	;# 
  2602  0F12                     	;# 
  2603  0F13                     	;# 
  2604  0F14                     	;# 
  2605  0F15                     	;# 
  2606  0F16                     	;# 
  2607  0F17                     	;# 
  2608  0F18                     	;# 
  2609  0F19                     	;# 
  2610  0F1A                     	;# 
  2611  0F1B                     	;# 
  2612  0F1C                     	;# 
  2613  0F1D                     	;# 
  2614  0F1E                     	;# 
  2615  0F1F                     	;# 
  2616  0F20                     	;# 
  2617  0F21                     	;# 
  2618  0F22                     	;# 
  2619  0F23                     	;# 
  2620  0F24                     	;# 
  2621  0F25                     	;# 
  2622  0F26                     	;# 
  2623  0F27                     	;# 
  2624  0F38                     	;# 
  2625  0F39                     	;# 
  2626  0F3A                     	;# 
  2627  0F3B                     	;# 
  2628  0F3C                     	;# 
  2629  0F3D                     	;# 
  2630  0F3E                     	;# 
  2631  0F3F                     	;# 
  2632  0F40                     	;# 
  2633  0F41                     	;# 
  2634  0F43                     	;# 
  2635  0F44                     	;# 
  2636  0F45                     	;# 
  2637  0F46                     	;# 
  2638  0F47                     	;# 
  2639  0F48                     	;# 
  2640  0F49                     	;# 
  2641  0F4A                     	;# 
  2642  0F4B                     	;# 
  2643  0F4C                     	;# 
  2644  0F4E                     	;# 
  2645  0F4F                     	;# 
  2646  0F50                     	;# 
  2647  0F51                     	;# 
  2648  0F52                     	;# 
  2649  0F53                     	;# 
  2650  0F54                     	;# 
  2651  0F55                     	;# 
  2652  0F56                     	;# 
  2653  0F57                     	;# 
  2654  0F65                     	;# 
  2655  0F68                     	;# 
  2656  0F69                     	;# 
  2657  0F6A                     	;# 
  2658  0F6B                     	;# 
  2659  0FE4                     	;# 
  2660  0FE5                     	;# 
  2661  0FE6                     	;# 
  2662  0FE7                     	;# 
  2663  0FE8                     	;# 
  2664  0FE9                     	;# 
  2665  0FEA                     	;# 
  2666  0FEB                     	;# 
  2667  0FED                     	;# 
  2668  0FEE                     	;# 
  2669  0FEF                     	;# 
  2670  0000                     	;# 
  2671  0001                     	;# 
  2672  0002                     	;# 
  2673  0003                     	;# 
  2674  0004                     	;# 
  2675  0005                     	;# 
  2676  0006                     	;# 
  2677  0007                     	;# 
  2678  0008                     	;# 
  2679  0009                     	;# 
  2680  000A                     	;# 
  2681  000B                     	;# 
  2682  000C                     	;# 
  2683  000D                     	;# 
  2684  000E                     	;# 
  2685  0010                     	;# 
  2686  0011                     	;# 
  2687  0012                     	;# 
  2688  0013                     	;# 
  2689  0016                     	;# 
  2690  0017                     	;# 
  2691  0018                     	;# 
  2692  001C                     	;# 
  2693  001C                     	;# 
  2694  001D                     	;# 
  2695  001D                     	;# 
  2696  001E                     	;# 
  2697  001F                     	;# 
  2698  008C                     	;# 
  2699  008C                     	;# 
  2700  008D                     	;# 
  2701  008E                     	;# 
  2702  008E                     	;# 
  2703  008F                     	;# 
  2704  0090                     	;# 
  2705  0090                     	;# 
  2706  0091                     	;# 
  2707  0093                     	;# 
  2708  0094                     	;# 
  2709  0095                     	;# 
  2710  0096                     	;# 
  2711  0097                     	;# 
  2712  0098                     	;# 
  2713  0099                     	;# 
  2714  009A                     	;# 
  2715  009B                     	;# 
  2716  009C                     	;# 
  2717  009D                     	;# 
  2718  009E                     	;# 
  2719  010C                     	;# 
  2720  010D                     	;# 
  2721  010E                     	;# 
  2722  010E                     	;# 
  2723  010F                     	;# 
  2724  0110                     	;# 
  2725  0110                     	;# 
  2726  0111                     	;# 
  2727  0112                     	;# 
  2728  0112                     	;# 
  2729  0113                     	;# 
  2730  0114                     	;# 
  2731  0114                     	;# 
  2732  0115                     	;# 
  2733  0116                     	;# 
  2734  0116                     	;# 
  2735  0117                     	;# 
  2736  0119                     	;# 
  2737  0119                     	;# 
  2738  0119                     	;# 
  2739  011A                     	;# 
  2740  011A                     	;# 
  2741  011A                     	;# 
  2742  011B                     	;# 
  2743  011B                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011B                     	;# 
  2747  011C                     	;# 
  2748  011C                     	;# 
  2749  011C                     	;# 
  2750  011D                     	;# 
  2751  011D                     	;# 
  2752  011D                     	;# 
  2753  011E                     	;# 
  2754  011E                     	;# 
  2755  011E                     	;# 
  2756  011F                     	;# 
  2757  011F                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  011F                     	;# 
  2761  018C                     	;# 
  2762  018D                     	;# 
  2763  018E                     	;# 
  2764  018F                     	;# 
  2765  0190                     	;# 
  2766  0191                     	;# 
  2767  0192                     	;# 
  2768  0196                     	;# 
  2769  0197                     	;# 
  2770  0198                     	;# 
  2771  0199                     	;# 
  2772  019A                     	;# 
  2773  019B                     	;# 
  2774  019C                     	;# 
  2775  020C                     	;# 
  2776  020C                     	;# 
  2777  020D                     	;# 
  2778  020E                     	;# 
  2779  020F                     	;# 
  2780  020F                     	;# 
  2781  0210                     	;# 
  2782  0210                     	;# 
  2783  0211                     	;# 
  2784  0211                     	;# 
  2785  0212                     	;# 
  2786  0212                     	;# 
  2787  0213                     	;# 
  2788  0214                     	;# 
  2789  0215                     	;# 
  2790  0215                     	;# 
  2791  0216                     	;# 
  2792  0216                     	;# 
  2793  0217                     	;# 
  2794  0217                     	;# 
  2795  0218                     	;# 
  2796  0218                     	;# 
  2797  0219                     	;# 
  2798  021A                     	;# 
  2799  021B                     	;# 
  2800  021B                     	;# 
  2801  021C                     	;# 
  2802  021C                     	;# 
  2803  021D                     	;# 
  2804  021D                     	;# 
  2805  021E                     	;# 
  2806  021F                     	;# 
  2807  028C                     	;# 
  2808  028C                     	;# 
  2809  028D                     	;# 
  2810  028D                     	;# 
  2811  028E                     	;# 
  2812  028F                     	;# 
  2813  0290                     	;# 
  2814  0290                     	;# 
  2815  0291                     	;# 
  2816  0292                     	;# 
  2817  0292                     	;# 
  2818  0293                     	;# 
  2819  0293                     	;# 
  2820  0294                     	;# 
  2821  0295                     	;# 
  2822  0296                     	;# 
  2823  0296                     	;# 
  2824  0297                     	;# 
  2825  0298                     	;# 
  2826  0298                     	;# 
  2827  0299                     	;# 
  2828  0299                     	;# 
  2829  029A                     	;# 
  2830  029B                     	;# 
  2831  029C                     	;# 
  2832  029C                     	;# 
  2833  029D                     	;# 
  2834  030C                     	;# 
  2835  030C                     	;# 
  2836  030D                     	;# 
  2837  030E                     	;# 
  2838  030F                     	;# 
  2839  0310                     	;# 
  2840  0310                     	;# 
  2841  0311                     	;# 
  2842  0312                     	;# 
  2843  0313                     	;# 
  2844  0314                     	;# 
  2845  0314                     	;# 
  2846  0315                     	;# 
  2847  0316                     	;# 
  2848  0317                     	;# 
  2849  0318                     	;# 
  2850  0318                     	;# 
  2851  0319                     	;# 
  2852  031A                     	;# 
  2853  031B                     	;# 
  2854  031C                     	;# 
  2855  031C                     	;# 
  2856  031D                     	;# 
  2857  031E                     	;# 
  2858  031F                     	;# 
  2859  038C                     	;# 
  2860  038D                     	;# 
  2861  038E                     	;# 
  2862  0390                     	;# 
  2863  0391                     	;# 
  2864  0392                     	;# 
  2865  040C                     	;# 
  2866  040D                     	;# 
  2867  040E                     	;# 
  2868  040F                     	;# 
  2869  0410                     	;# 
  2870  0411                     	;# 
  2871  0416                     	;# 
  2872  0416                     	;# 
  2873  0417                     	;# 
  2874  0418                     	;# 
  2875  0418                     	;# 
  2876  0419                     	;# 
  2877  041A                     	;# 
  2878  041A                     	;# 
  2879  041B                     	;# 
  2880  041C                     	;# 
  2881  041C                     	;# 
  2882  041D                     	;# 
  2883  041E                     	;# 
  2884  041F                     	;# 
  2885  048C                     	;# 
  2886  048C                     	;# 
  2887  048D                     	;# 
  2888  048E                     	;# 
  2889  048F                     	;# 
  2890  048F                     	;# 
  2891  0490                     	;# 
  2892  0491                     	;# 
  2893  0492                     	;# 
  2894  0492                     	;# 
  2895  0493                     	;# 
  2896  0494                     	;# 
  2897  0495                     	;# 
  2898  0495                     	;# 
  2899  0496                     	;# 
  2900  0497                     	;# 
  2901  0498                     	;# 
  2902  0499                     	;# 
  2903  049A                     	;# 
  2904  049B                     	;# 
  2905  049C                     	;# 
  2906  049D                     	;# 
  2907  050C                     	;# 
  2908  050C                     	;# 
  2909  050D                     	;# 
  2910  050E                     	;# 
  2911  050F                     	;# 
  2912  050F                     	;# 
  2913  0510                     	;# 
  2914  0511                     	;# 
  2915  0512                     	;# 
  2916  0512                     	;# 
  2917  0513                     	;# 
  2918  0514                     	;# 
  2919  0515                     	;# 
  2920  0515                     	;# 
  2921  0516                     	;# 
  2922  0517                     	;# 
  2923  0518                     	;# 
  2924  0519                     	;# 
  2925  051A                     	;# 
  2926  051B                     	;# 
  2927  051C                     	;# 
  2928  051D                     	;# 
  2929  058C                     	;# 
  2930  058C                     	;# 
  2931  058D                     	;# 
  2932  058E                     	;# 
  2933  058F                     	;# 
  2934  058F                     	;# 
  2935  0590                     	;# 
  2936  0591                     	;# 
  2937  0592                     	;# 
  2938  0593                     	;# 
  2939  060C                     	;# 
  2940  060D                     	;# 
  2941  060E                     	;# 
  2942  060F                     	;# 
  2943  0610                     	;# 
  2944  0611                     	;# 
  2945  0612                     	;# 
  2946  0613                     	;# 
  2947  0614                     	;# 
  2948  0616                     	;# 
  2949  0617                     	;# 
  2950  0618                     	;# 
  2951  0619                     	;# 
  2952  061A                     	;# 
  2953  061B                     	;# 
  2954  061C                     	;# 
  2955  061D                     	;# 
  2956  061E                     	;# 
  2957  068C                     	;# 
  2958  068D                     	;# 
  2959  068E                     	;# 
  2960  068F                     	;# 
  2961  0690                     	;# 
  2962  0691                     	;# 
  2963  0692                     	;# 
  2964  0693                     	;# 
  2965  0694                     	;# 
  2966  070C                     	;# 
  2967  070D                     	;# 
  2968  070E                     	;# 
  2969  070F                     	;# 
  2970  0710                     	;# 
  2971  0711                     	;# 
  2972  0712                     	;# 
  2973  0713                     	;# 
  2974  0714                     	;# 
  2975  0716                     	;# 
  2976  0717                     	;# 
  2977  0718                     	;# 
  2978  0719                     	;# 
  2979  071A                     	;# 
  2980  071B                     	;# 
  2981  071C                     	;# 
  2982  071D                     	;# 
  2983  071E                     	;# 
  2984  0796                     	;# 
  2985  0797                     	;# 
  2986  0798                     	;# 
  2987  0799                     	;# 
  2988  079A                     	;# 
  2989  079B                     	;# 
  2990  080C                     	;# 
  2991  080D                     	;# 
  2992  080E                     	;# 
  2993  080F                     	;# 
  2994  0810                     	;# 
  2995  0811                     	;# 
  2996  0812                     	;# 
  2997  0813                     	;# 
  2998  0814                     	;# 
  2999  081A                     	;# 
  3000  081B                     	;# 
  3001  081C                     	;# 
  3002  081D                     	;# 
  3003  081E                     	;# 
  3004  081F                     	;# 
  3005  088C                     	;# 
  3006  088D                     	;# 
  3007  088E                     	;# 
  3008  088F                     	;# 
  3009  0890                     	;# 
  3010  0891                     	;# 
  3011  0892                     	;# 
  3012  0893                     	;# 
  3013  0895                     	;# 
  3014  0896                     	;# 
  3015  0897                     	;# 
  3016  0898                     	;# 
  3017  0899                     	;# 
  3018  089A                     	;# 
  3019  089B                     	;# 
  3020  090C                     	;# 
  3021  090E                     	;# 
  3022  090F                     	;# 
  3023  091F                     	;# 
  3024  091F                     	;# 
  3025  098F                     	;# 
  3026  098F                     	;# 
  3027  0990                     	;# 
  3028  0991                     	;# 
  3029  0992                     	;# 
  3030  0993                     	;# 
  3031  0994                     	;# 
  3032  0995                     	;# 
  3033  0996                     	;# 
  3034  0997                     	;# 
  3035  0E0F                     	;# 
  3036  0E10                     	;# 
  3037  0E11                     	;# 
  3038  0E12                     	;# 
  3039  0E13                     	;# 
  3040  0E14                     	;# 
  3041  0E15                     	;# 
  3042  0E16                     	;# 
  3043  0E17                     	;# 
  3044  0E18                     	;# 
  3045  0E19                     	;# 
  3046  0E1A                     	;# 
  3047  0E1B                     	;# 
  3048  0E1C                     	;# 
  3049  0E1D                     	;# 
  3050  0E1E                     	;# 
  3051  0E1F                     	;# 
  3052  0E20                     	;# 
  3053  0E21                     	;# 
  3054  0E22                     	;# 
  3055  0E23                     	;# 
  3056  0E24                     	;# 
  3057  0E25                     	;# 
  3058  0E26                     	;# 
  3059  0E27                     	;# 
  3060  0E28                     	;# 
  3061  0E29                     	;# 
  3062  0E2A                     	;# 
  3063  0E2B                     	;# 
  3064  0E2C                     	;# 
  3065  0E2D                     	;# 
  3066  0E2E                     	;# 
  3067  0E2F                     	;# 
  3068  0E30                     	;# 
  3069  0E31                     	;# 
  3070  0E32                     	;# 
  3071  0E33                     	;# 
  3072  0E34                     	;# 
  3073  0E35                     	;# 
  3074  0E36                     	;# 
  3075  0E37                     	;# 
  3076  0E8F                     	;# 
  3077  0E90                     	;# 
  3078  0E91                     	;# 
  3079  0E92                     	;# 
  3080  0E93                     	;# 
  3081  0E94                     	;# 
  3082  0E95                     	;# 
  3083  0E96                     	;# 
  3084  0E97                     	;# 
  3085  0E9C                     	;# 
  3086  0E9D                     	;# 
  3087  0E9E                     	;# 
  3088  0EA1                     	;# 
  3089  0EA2                     	;# 
  3090  0EA3                     	;# 
  3091  0EA4                     	;# 
  3092  0EA5                     	;# 
  3093  0EA9                     	;# 
  3094  0EAA                     	;# 
  3095  0EAB                     	;# 
  3096  0EAC                     	;# 
  3097  0EB1                     	;# 
  3098  0EB2                     	;# 
  3099  0EB3                     	;# 
  3100  0EB8                     	;# 
  3101  0EB9                     	;# 
  3102  0EBA                     	;# 
  3103  0EBB                     	;# 
  3104  0EBC                     	;# 
  3105  0EBD                     	;# 
  3106  0EBE                     	;# 
  3107  0EC3                     	;# 
  3108  0EC5                     	;# 
  3109  0EC6                     	;# 
  3110  0EC7                     	;# 
  3111  0EC8                     	;# 
  3112  0EC9                     	;# 
  3113  0ECA                     	;# 
  3114  0ECB                     	;# 
  3115  0ECC                     	;# 
  3116  0F10                     	;# 
  3117  0F11                     	;# 
  3118  0F12                     	;# 
  3119  0F13                     	;# 
  3120  0F14                     	;# 
  3121  0F15                     	;# 
  3122  0F16                     	;# 
  3123  0F17                     	;# 
  3124  0F18                     	;# 
  3125  0F19                     	;# 
  3126  0F1A                     	;# 
  3127  0F1B                     	;# 
  3128  0F1C                     	;# 
  3129  0F1D                     	;# 
  3130  0F1E                     	;# 
  3131  0F1F                     	;# 
  3132  0F20                     	;# 
  3133  0F21                     	;# 
  3134  0F22                     	;# 
  3135  0F23                     	;# 
  3136  0F24                     	;# 
  3137  0F25                     	;# 
  3138  0F26                     	;# 
  3139  0F27                     	;# 
  3140  0F38                     	;# 
  3141  0F39                     	;# 
  3142  0F3A                     	;# 
  3143  0F3B                     	;# 
  3144  0F3C                     	;# 
  3145  0F3D                     	;# 
  3146  0F3E                     	;# 
  3147  0F3F                     	;# 
  3148  0F40                     	;# 
  3149  0F41                     	;# 
  3150  0F43                     	;# 
  3151  0F44                     	;# 
  3152  0F45                     	;# 
  3153  0F46                     	;# 
  3154  0F47                     	;# 
  3155  0F48                     	;# 
  3156  0F49                     	;# 
  3157  0F4A                     	;# 
  3158  0F4B                     	;# 
  3159  0F4C                     	;# 
  3160  0F4E                     	;# 
  3161  0F4F                     	;# 
  3162  0F50                     	;# 
  3163  0F51                     	;# 
  3164  0F52                     	;# 
  3165  0F53                     	;# 
  3166  0F54                     	;# 
  3167  0F55                     	;# 
  3168  0F56                     	;# 
  3169  0F57                     	;# 
  3170  0F65                     	;# 
  3171  0F68                     	;# 
  3172  0F69                     	;# 
  3173  0F6A                     	;# 
  3174  0F6B                     	;# 
  3175  0FE4                     	;# 
  3176  0FE5                     	;# 
  3177  0FE6                     	;# 
  3178  0FE7                     	;# 
  3179  0FE8                     	;# 
  3180  0FE9                     	;# 
  3181  0FEA                     	;# 
  3182  0FEB                     	;# 
  3183  0FED                     	;# 
  3184  0FEE                     	;# 
  3185  0FEF                     	;# 
  3186  0000                     	;# 
  3187  0001                     	;# 
  3188  0002                     	;# 
  3189  0003                     	;# 
  3190  0004                     	;# 
  3191  0005                     	;# 
  3192  0006                     	;# 
  3193  0007                     	;# 
  3194  0008                     	;# 
  3195  0009                     	;# 
  3196  000A                     	;# 
  3197  000B                     	;# 
  3198  000C                     	;# 
  3199  000D                     	;# 
  3200  000E                     	;# 
  3201  0010                     	;# 
  3202  0011                     	;# 
  3203  0012                     	;# 
  3204  0013                     	;# 
  3205  0016                     	;# 
  3206  0017                     	;# 
  3207  0018                     	;# 
  3208  001C                     	;# 
  3209  001C                     	;# 
  3210  001D                     	;# 
  3211  001D                     	;# 
  3212  001E                     	;# 
  3213  001F                     	;# 
  3214  008C                     	;# 
  3215  008C                     	;# 
  3216  008D                     	;# 
  3217  008E                     	;# 
  3218  008E                     	;# 
  3219  008F                     	;# 
  3220  0090                     	;# 
  3221  0090                     	;# 
  3222  0091                     	;# 
  3223  0093                     	;# 
  3224  0094                     	;# 
  3225  0095                     	;# 
  3226  0096                     	;# 
  3227  0097                     	;# 
  3228  0098                     	;# 
  3229  0099                     	;# 
  3230  009A                     	;# 
  3231  009B                     	;# 
  3232  009C                     	;# 
  3233  009D                     	;# 
  3234  009E                     	;# 
  3235  010C                     	;# 
  3236  010D                     	;# 
  3237  010E                     	;# 
  3238  010E                     	;# 
  3239  010F                     	;# 
  3240  0110                     	;# 
  3241  0110                     	;# 
  3242  0111                     	;# 
  3243  0112                     	;# 
  3244  0112                     	;# 
  3245  0113                     	;# 
  3246  0114                     	;# 
  3247  0114                     	;# 
  3248  0115                     	;# 
  3249  0116                     	;# 
  3250  0116                     	;# 
  3251  0117                     	;# 
  3252  0119                     	;# 
  3253  0119                     	;# 
  3254  0119                     	;# 
  3255  011A                     	;# 
  3256  011A                     	;# 
  3257  011A                     	;# 
  3258  011B                     	;# 
  3259  011B                     	;# 
  3260  011B                     	;# 
  3261  011B                     	;# 
  3262  011B                     	;# 
  3263  011C                     	;# 
  3264  011C                     	;# 
  3265  011C                     	;# 
  3266  011D                     	;# 
  3267  011D                     	;# 
  3268  011D                     	;# 
  3269  011E                     	;# 
  3270  011E                     	;# 
  3271  011E                     	;# 
  3272  011F                     	;# 
  3273  011F                     	;# 
  3274  011F                     	;# 
  3275  011F                     	;# 
  3276  011F                     	;# 
  3277  018C                     	;# 
  3278  018D                     	;# 
  3279  018E                     	;# 
  3280  018F                     	;# 
  3281  0190                     	;# 
  3282  0191                     	;# 
  3283  0192                     	;# 
  3284  0196                     	;# 
  3285  0197                     	;# 
  3286  0198                     	;# 
  3287  0199                     	;# 
  3288  019A                     	;# 
  3289  019B                     	;# 
  3290  019C                     	;# 
  3291  020C                     	;# 
  3292  020C                     	;# 
  3293  020D                     	;# 
  3294  020E                     	;# 
  3295  020F                     	;# 
  3296  020F                     	;# 
  3297  0210                     	;# 
  3298  0210                     	;# 
  3299  0211                     	;# 
  3300  0211                     	;# 
  3301  0212                     	;# 
  3302  0212                     	;# 
  3303  0213                     	;# 
  3304  0214                     	;# 
  3305  0215                     	;# 
  3306  0215                     	;# 
  3307  0216                     	;# 
  3308  0216                     	;# 
  3309  0217                     	;# 
  3310  0217                     	;# 
  3311  0218                     	;# 
  3312  0218                     	;# 
  3313  0219                     	;# 
  3314  021A                     	;# 
  3315  021B                     	;# 
  3316  021B                     	;# 
  3317  021C                     	;# 
  3318  021C                     	;# 
  3319  021D                     	;# 
  3320  021D                     	;# 
  3321  021E                     	;# 
  3322  021F                     	;# 
  3323  028C                     	;# 
  3324  028C                     	;# 
  3325  028D                     	;# 
  3326  028D                     	;# 
  3327  028E                     	;# 
  3328  028F                     	;# 
  3329  0290                     	;# 
  3330  0290                     	;# 
  3331  0291                     	;# 
  3332  0292                     	;# 
  3333  0292                     	;# 
  3334  0293                     	;# 
  3335  0293                     	;# 
  3336  0294                     	;# 
  3337  0295                     	;# 
  3338  0296                     	;# 
  3339  0296                     	;# 
  3340  0297                     	;# 
  3341  0298                     	;# 
  3342  0298                     	;# 
  3343  0299                     	;# 
  3344  0299                     	;# 
  3345  029A                     	;# 
  3346  029B                     	;# 
  3347  029C                     	;# 
  3348  029C                     	;# 
  3349  029D                     	;# 
  3350  030C                     	;# 
  3351  030C                     	;# 
  3352  030D                     	;# 
  3353  030E                     	;# 
  3354  030F                     	;# 
  3355  0310                     	;# 
  3356  0310                     	;# 
  3357  0311                     	;# 
  3358  0312                     	;# 
  3359  0313                     	;# 
  3360  0314                     	;# 
  3361  0314                     	;# 
  3362  0315                     	;# 
  3363  0316                     	;# 
  3364  0317                     	;# 
  3365  0318                     	;# 
  3366  0318                     	;# 
  3367  0319                     	;# 
  3368  031A                     	;# 
  3369  031B                     	;# 
  3370  031C                     	;# 
  3371  031C                     	;# 
  3372  031D                     	;# 
  3373  031E                     	;# 
  3374  031F                     	;# 
  3375  038C                     	;# 
  3376  038D                     	;# 
  3377  038E                     	;# 
  3378  0390                     	;# 
  3379  0391                     	;# 
  3380  0392                     	;# 
  3381  040C                     	;# 
  3382  040D                     	;# 
  3383  040E                     	;# 
  3384  040F                     	;# 
  3385  0410                     	;# 
  3386  0411                     	;# 
  3387  0416                     	;# 
  3388  0416                     	;# 
  3389  0417                     	;# 
  3390  0418                     	;# 
  3391  0418                     	;# 
  3392  0419                     	;# 
  3393  041A                     	;# 
  3394  041A                     	;# 
  3395  041B                     	;# 
  3396  041C                     	;# 
  3397  041C                     	;# 
  3398  041D                     	;# 
  3399  041E                     	;# 
  3400  041F                     	;# 
  3401  048C                     	;# 
  3402  048C                     	;# 
  3403  048D                     	;# 
  3404  048E                     	;# 
  3405  048F                     	;# 
  3406  048F                     	;# 
  3407  0490                     	;# 
  3408  0491                     	;# 
  3409  0492                     	;# 
  3410  0492                     	;# 
  3411  0493                     	;# 
  3412  0494                     	;# 
  3413  0495                     	;# 
  3414  0495                     	;# 
  3415  0496                     	;# 
  3416  0497                     	;# 
  3417  0498                     	;# 
  3418  0499                     	;# 
  3419  049A                     	;# 
  3420  049B                     	;# 
  3421  049C                     	;# 
  3422  049D                     	;# 
  3423  050C                     	;# 
  3424  050C                     	;# 
  3425  050D                     	;# 
  3426  050E                     	;# 
  3427  050F                     	;# 
  3428  050F                     	;# 
  3429  0510                     	;# 
  3430  0511                     	;# 
  3431  0512                     	;# 
  3432  0512                     	;# 
  3433  0513                     	;# 
  3434  0514                     	;# 
  3435  0515                     	;# 
  3436  0515                     	;# 
  3437  0516                     	;# 
  3438  0517                     	;# 
  3439  0518                     	;# 
  3440  0519                     	;# 
  3441  051A                     	;# 
  3442  051B                     	;# 
  3443  051C                     	;# 
  3444  051D                     	;# 
  3445  058C                     	;# 
  3446  058C                     	;# 
  3447  058D                     	;# 
  3448  058E                     	;# 
  3449  058F                     	;# 
  3450  058F                     	;# 
  3451  0590                     	;# 
  3452  0591                     	;# 
  3453  0592                     	;# 
  3454  0593                     	;# 
  3455  060C                     	;# 
  3456  060D                     	;# 
  3457  060E                     	;# 
  3458  060F                     	;# 
  3459  0610                     	;# 
  3460  0611                     	;# 
  3461  0612                     	;# 
  3462  0613                     	;# 
  3463  0614                     	;# 
  3464  0616                     	;# 
  3465  0617                     	;# 
  3466  0618                     	;# 
  3467  0619                     	;# 
  3468  061A                     	;# 
  3469  061B                     	;# 
  3470  061C                     	;# 
  3471  061D                     	;# 
  3472  061E                     	;# 
  3473  068C                     	;# 
  3474  068D                     	;# 
  3475  068E                     	;# 
  3476  068F                     	;# 
  3477  0690                     	;# 
  3478  0691                     	;# 
  3479  0692                     	;# 
  3480  0693                     	;# 
  3481  0694                     	;# 
  3482  070C                     	;# 
  3483  070D                     	;# 
  3484  070E                     	;# 
  3485  070F                     	;# 
  3486  0710                     	;# 
  3487  0711                     	;# 
  3488  0712                     	;# 
  3489  0713                     	;# 
  3490  0714                     	;# 
  3491  0716                     	;# 
  3492  0717                     	;# 
  3493  0718                     	;# 
  3494  0719                     	;# 
  3495  071A                     	;# 
  3496  071B                     	;# 
  3497  071C                     	;# 
  3498  071D                     	;# 
  3499  071E                     	;# 
  3500  0796                     	;# 
  3501  0797                     	;# 
  3502  0798                     	;# 
  3503  0799                     	;# 
  3504  079A                     	;# 
  3505  079B                     	;# 
  3506  080C                     	;# 
  3507  080D                     	;# 
  3508  080E                     	;# 
  3509  080F                     	;# 
  3510  0810                     	;# 
  3511  0811                     	;# 
  3512  0812                     	;# 
  3513  0813                     	;# 
  3514  0814                     	;# 
  3515  081A                     	;# 
  3516  081B                     	;# 
  3517  081C                     	;# 
  3518  081D                     	;# 
  3519  081E                     	;# 
  3520  081F                     	;# 
  3521  088C                     	;# 
  3522  088D                     	;# 
  3523  088E                     	;# 
  3524  088F                     	;# 
  3525  0890                     	;# 
  3526  0891                     	;# 
  3527  0892                     	;# 
  3528  0893                     	;# 
  3529  0895                     	;# 
  3530  0896                     	;# 
  3531  0897                     	;# 
  3532  0898                     	;# 
  3533  0899                     	;# 
  3534  089A                     	;# 
  3535  089B                     	;# 
  3536  090C                     	;# 
  3537  090E                     	;# 
  3538  090F                     	;# 
  3539  091F                     	;# 
  3540  091F                     	;# 
  3541  098F                     	;# 
  3542  098F                     	;# 
  3543  0990                     	;# 
  3544  0991                     	;# 
  3545  0992                     	;# 
  3546  0993                     	;# 
  3547  0994                     	;# 
  3548  0995                     	;# 
  3549  0996                     	;# 
  3550  0997                     	;# 
  3551  0E0F                     	;# 
  3552  0E10                     	;# 
  3553  0E11                     	;# 
  3554  0E12                     	;# 
  3555  0E13                     	;# 
  3556  0E14                     	;# 
  3557  0E15                     	;# 
  3558  0E16                     	;# 
  3559  0E17                     	;# 
  3560  0E18                     	;# 
  3561  0E19                     	;# 
  3562  0E1A                     	;# 
  3563  0E1B                     	;# 
  3564  0E1C                     	;# 
  3565  0E1D                     	;# 
  3566  0E1E                     	;# 
  3567  0E1F                     	;# 
  3568  0E20                     	;# 
  3569  0E21                     	;# 
  3570  0E22                     	;# 
  3571  0E23                     	;# 
  3572  0E24                     	;# 
  3573  0E25                     	;# 
  3574  0E26                     	;# 
  3575  0E27                     	;# 
  3576  0E28                     	;# 
  3577  0E29                     	;# 
  3578  0E2A                     	;# 
  3579  0E2B                     	;# 
  3580  0E2C                     	;# 
  3581  0E2D                     	;# 
  3582  0E2E                     	;# 
  3583  0E2F                     	;# 
  3584  0E30                     	;# 
  3585  0E31                     	;# 
  3586  0E32                     	;# 
  3587  0E33                     	;# 
  3588  0E34                     	;# 
  3589  0E35                     	;# 
  3590  0E36                     	;# 
  3591  0E37                     	;# 
  3592  0E8F                     	;# 
  3593  0E90                     	;# 
  3594  0E91                     	;# 
  3595  0E92                     	;# 
  3596  0E93                     	;# 
  3597  0E94                     	;# 
  3598  0E95                     	;# 
  3599  0E96                     	;# 
  3600  0E97                     	;# 
  3601  0E9C                     	;# 
  3602  0E9D                     	;# 
  3603  0E9E                     	;# 
  3604  0EA1                     	;# 
  3605  0EA2                     	;# 
  3606  0EA3                     	;# 
  3607  0EA4                     	;# 
  3608  0EA5                     	;# 
  3609  0EA9                     	;# 
  3610  0EAA                     	;# 
  3611  0EAB                     	;# 
  3612  0EAC                     	;# 
  3613  0EB1                     	;# 
  3614  0EB2                     	;# 
  3615  0EB3                     	;# 
  3616  0EB8                     	;# 
  3617  0EB9                     	;# 
  3618  0EBA                     	;# 
  3619  0EBB                     	;# 
  3620  0EBC                     	;# 
  3621  0EBD                     	;# 
  3622  0EBE                     	;# 
  3623  0EC3                     	;# 
  3624  0EC5                     	;# 
  3625  0EC6                     	;# 
  3626  0EC7                     	;# 
  3627  0EC8                     	;# 
  3628  0EC9                     	;# 
  3629  0ECA                     	;# 
  3630  0ECB                     	;# 
  3631  0ECC                     	;# 
  3632  0F10                     	;# 
  3633  0F11                     	;# 
  3634  0F12                     	;# 
  3635  0F13                     	;# 
  3636  0F14                     	;# 
  3637  0F15                     	;# 
  3638  0F16                     	;# 
  3639  0F17                     	;# 
  3640  0F18                     	;# 
  3641  0F19                     	;# 
  3642  0F1A                     	;# 
  3643  0F1B                     	;# 
  3644  0F1C                     	;# 
  3645  0F1D                     	;# 
  3646  0F1E                     	;# 
  3647  0F1F                     	;# 
  3648  0F20                     	;# 
  3649  0F21                     	;# 
  3650  0F22                     	;# 
  3651  0F23                     	;# 
  3652  0F24                     	;# 
  3653  0F25                     	;# 
  3654  0F26                     	;# 
  3655  0F27                     	;# 
  3656  0F38                     	;# 
  3657  0F39                     	;# 
  3658  0F3A                     	;# 
  3659  0F3B                     	;# 
  3660  0F3C                     	;# 
  3661  0F3D                     	;# 
  3662  0F3E                     	;# 
  3663  0F3F                     	;# 
  3664  0F40                     	;# 
  3665  0F41                     	;# 
  3666  0F43                     	;# 
  3667  0F44                     	;# 
  3668  0F45                     	;# 
  3669  0F46                     	;# 
  3670  0F47                     	;# 
  3671  0F48                     	;# 
  3672  0F49                     	;# 
  3673  0F4A                     	;# 
  3674  0F4B                     	;# 
  3675  0F4C                     	;# 
  3676  0F4E                     	;# 
  3677  0F4F                     	;# 
  3678  0F50                     	;# 
  3679  0F51                     	;# 
  3680  0F52                     	;# 
  3681  0F53                     	;# 
  3682  0F54                     	;# 
  3683  0F55                     	;# 
  3684  0F56                     	;# 
  3685  0F57                     	;# 
  3686  0F65                     	;# 
  3687  0F68                     	;# 
  3688  0F69                     	;# 
  3689  0F6A                     	;# 
  3690  0F6B                     	;# 
  3691  0FE4                     	;# 
  3692  0FE5                     	;# 
  3693  0FE6                     	;# 
  3694  0FE7                     	;# 
  3695  0FE8                     	;# 
  3696  0FE9                     	;# 
  3697  0FEA                     	;# 
  3698  0FEB                     	;# 
  3699  0FED                     	;# 
  3700  0FEE                     	;# 
  3701  0FEF                     	;# 
  3702  0000                     	;# 
  3703  0001                     	;# 
  3704  0002                     	;# 
  3705  0003                     	;# 
  3706  0004                     	;# 
  3707  0005                     	;# 
  3708  0006                     	;# 
  3709  0007                     	;# 
  3710  0008                     	;# 
  3711  0009                     	;# 
  3712  000A                     	;# 
  3713  000B                     	;# 
  3714  000C                     	;# 
  3715  000D                     	;# 
  3716  000E                     	;# 
  3717  0010                     	;# 
  3718  0011                     	;# 
  3719  0012                     	;# 
  3720  0013                     	;# 
  3721  0016                     	;# 
  3722  0017                     	;# 
  3723  0018                     	;# 
  3724  001C                     	;# 
  3725  001C                     	;# 
  3726  001D                     	;# 
  3727  001D                     	;# 
  3728  001E                     	;# 
  3729  001F                     	;# 
  3730  008C                     	;# 
  3731  008C                     	;# 
  3732  008D                     	;# 
  3733  008E                     	;# 
  3734  008E                     	;# 
  3735  008F                     	;# 
  3736  0090                     	;# 
  3737  0090                     	;# 
  3738  0091                     	;# 
  3739  0093                     	;# 
  3740  0094                     	;# 
  3741  0095                     	;# 
  3742  0096                     	;# 
  3743  0097                     	;# 
  3744  0098                     	;# 
  3745  0099                     	;# 
  3746  009A                     	;# 
  3747  009B                     	;# 
  3748  009C                     	;# 
  3749  009D                     	;# 
  3750  009E                     	;# 
  3751  010C                     	;# 
  3752  010D                     	;# 
  3753  010E                     	;# 
  3754  010E                     	;# 
  3755  010F                     	;# 
  3756  0110                     	;# 
  3757  0110                     	;# 
  3758  0111                     	;# 
  3759  0112                     	;# 
  3760  0112                     	;# 
  3761  0113                     	;# 
  3762  0114                     	;# 
  3763  0114                     	;# 
  3764  0115                     	;# 
  3765  0116                     	;# 
  3766  0116                     	;# 
  3767  0117                     	;# 
  3768  0119                     	;# 
  3769  0119                     	;# 
  3770  0119                     	;# 
  3771  011A                     	;# 
  3772  011A                     	;# 
  3773  011A                     	;# 
  3774  011B                     	;# 
  3775  011B                     	;# 
  3776  011B                     	;# 
  3777  011B                     	;# 
  3778  011B                     	;# 
  3779  011C                     	;# 
  3780  011C                     	;# 
  3781  011C                     	;# 
  3782  011D                     	;# 
  3783  011D                     	;# 
  3784  011D                     	;# 
  3785  011E                     	;# 
  3786  011E                     	;# 
  3787  011E                     	;# 
  3788  011F                     	;# 
  3789  011F                     	;# 
  3790  011F                     	;# 
  3791  011F                     	;# 
  3792  011F                     	;# 
  3793  018C                     	;# 
  3794  018D                     	;# 
  3795  018E                     	;# 
  3796  018F                     	;# 
  3797  0190                     	;# 
  3798  0191                     	;# 
  3799  0192                     	;# 
  3800  0196                     	;# 
  3801  0197                     	;# 
  3802  0198                     	;# 
  3803  0199                     	;# 
  3804  019A                     	;# 
  3805  019B                     	;# 
  3806  019C                     	;# 
  3807  020C                     	;# 
  3808  020C                     	;# 
  3809  020D                     	;# 
  3810  020E                     	;# 
  3811  020F                     	;# 
  3812  020F                     	;# 
  3813  0210                     	;# 
  3814  0210                     	;# 
  3815  0211                     	;# 
  3816  0211                     	;# 
  3817  0212                     	;# 
  3818  0212                     	;# 
  3819  0213                     	;# 
  3820  0214                     	;# 
  3821  0215                     	;# 
  3822  0215                     	;# 
  3823  0216                     	;# 
  3824  0216                     	;# 
  3825  0217                     	;# 
  3826  0217                     	;# 
  3827  0218                     	;# 
  3828  0218                     	;# 
  3829  0219                     	;# 
  3830  021A                     	;# 
  3831  021B                     	;# 
  3832  021B                     	;# 
  3833  021C                     	;# 
  3834  021C                     	;# 
  3835  021D                     	;# 
  3836  021D                     	;# 
  3837  021E                     	;# 
  3838  021F                     	;# 
  3839  028C                     	;# 
  3840  028C                     	;# 
  3841  028D                     	;# 
  3842  028D                     	;# 
  3843  028E                     	;# 
  3844  028F                     	;# 
  3845  0290                     	;# 
  3846  0290                     	;# 
  3847  0291                     	;# 
  3848  0292                     	;# 
  3849  0292                     	;# 
  3850  0293                     	;# 
  3851  0293                     	;# 
  3852  0294                     	;# 
  3853  0295                     	;# 
  3854  0296                     	;# 
  3855  0296                     	;# 
  3856  0297                     	;# 
  3857  0298                     	;# 
  3858  0298                     	;# 
  3859  0299                     	;# 
  3860  0299                     	;# 
  3861  029A                     	;# 
  3862  029B                     	;# 
  3863  029C                     	;# 
  3864  029C                     	;# 
  3865  029D                     	;# 
  3866  030C                     	;# 
  3867  030C                     	;# 
  3868  030D                     	;# 
  3869  030E                     	;# 
  3870  030F                     	;# 
  3871  0310                     	;# 
  3872  0310                     	;# 
  3873  0311                     	;# 
  3874  0312                     	;# 
  3875  0313                     	;# 
  3876  0314                     	;# 
  3877  0314                     	;# 
  3878  0315                     	;# 
  3879  0316                     	;# 
  3880  0317                     	;# 
  3881  0318                     	;# 
  3882  0318                     	;# 
  3883  0319                     	;# 
  3884  031A                     	;# 
  3885  031B                     	;# 
  3886  031C                     	;# 
  3887  031C                     	;# 
  3888  031D                     	;# 
  3889  031E                     	;# 
  3890  031F                     	;# 
  3891  038C                     	;# 
  3892  038D                     	;# 
  3893  038E                     	;# 
  3894  0390                     	;# 
  3895  0391                     	;# 
  3896  0392                     	;# 
  3897  040C                     	;# 
  3898  040D                     	;# 
  3899  040E                     	;# 
  3900  040F                     	;# 
  3901  0410                     	;# 
  3902  0411                     	;# 
  3903  0416                     	;# 
  3904  0416                     	;# 
  3905  0417                     	;# 
  3906  0418                     	;# 
  3907  0418                     	;# 
  3908  0419                     	;# 
  3909  041A                     	;# 
  3910  041A                     	;# 
  3911  041B                     	;# 
  3912  041C                     	;# 
  3913  041C                     	;# 
  3914  041D                     	;# 
  3915  041E                     	;# 
  3916  041F                     	;# 
  3917  048C                     	;# 
  3918  048C                     	;# 
  3919  048D                     	;# 
  3920  048E                     	;# 
  3921  048F                     	;# 
  3922  048F                     	;# 
  3923  0490                     	;# 
  3924  0491                     	;# 
  3925  0492                     	;# 
  3926  0492                     	;# 
  3927  0493                     	;# 
  3928  0494                     	;# 
  3929  0495                     	;# 
  3930  0495                     	;# 
  3931  0496                     	;# 
  3932  0497                     	;# 
  3933  0498                     	;# 
  3934  0499                     	;# 
  3935  049A                     	;# 
  3936  049B                     	;# 
  3937  049C                     	;# 
  3938  049D                     	;# 
  3939  050C                     	;# 
  3940  050C                     	;# 
  3941  050D                     	;# 
  3942  050E                     	;# 
  3943  050F                     	;# 
  3944  050F                     	;# 
  3945  0510                     	;# 
  3946  0511                     	;# 
  3947  0512                     	;# 
  3948  0512                     	;# 
  3949  0513                     	;# 
  3950  0514                     	;# 
  3951  0515                     	;# 
  3952  0515                     	;# 
  3953  0516                     	;# 
  3954  0517                     	;# 
  3955  0518                     	;# 
  3956  0519                     	;# 
  3957  051A                     	;# 
  3958  051B                     	;# 
  3959  051C                     	;# 
  3960  051D                     	;# 
  3961  058C                     	;# 
  3962  058C                     	;# 
  3963  058D                     	;# 
  3964  058E                     	;# 
  3965  058F                     	;# 
  3966  058F                     	;# 
  3967  0590                     	;# 
  3968  0591                     	;# 
  3969  0592                     	;# 
  3970  0593                     	;# 
  3971  060C                     	;# 
  3972  060D                     	;# 
  3973  060E                     	;# 
  3974  060F                     	;# 
  3975  0610                     	;# 
  3976  0611                     	;# 
  3977  0612                     	;# 
  3978  0613                     	;# 
  3979  0614                     	;# 
  3980  0616                     	;# 
  3981  0617                     	;# 
  3982  0618                     	;# 
  3983  0619                     	;# 
  3984  061A                     	;# 
  3985  061B                     	;# 
  3986  061C                     	;# 
  3987  061D                     	;# 
  3988  061E                     	;# 
  3989  068C                     	;# 
  3990  068D                     	;# 
  3991  068E                     	;# 
  3992  068F                     	;# 
  3993  0690                     	;# 
  3994  0691                     	;# 
  3995  0692                     	;# 
  3996  0693                     	;# 
  3997  0694                     	;# 
  3998  070C                     	;# 
  3999  070D                     	;# 
  4000  070E                     	;# 
  4001  070F                     	;# 
  4002  0710                     	;# 
  4003  0711                     	;# 
  4004  0712                     	;# 
  4005  0713                     	;# 
  4006  0714                     	;# 
  4007  0716                     	;# 
  4008  0717                     	;# 
  4009  0718                     	;# 
  4010  0719                     	;# 
  4011  071A                     	;# 
  4012  071B                     	;# 
  4013  071C                     	;# 
  4014  071D                     	;# 
  4015  071E                     	;# 
  4016  0796                     	;# 
  4017  0797                     	;# 
  4018  0798                     	;# 
  4019  0799                     	;# 
  4020  079A                     	;# 
  4021  079B                     	;# 
  4022  080C                     	;# 
  4023  080D                     	;# 
  4024  080E                     	;# 
  4025  080F                     	;# 
  4026  0810                     	;# 
  4027  0811                     	;# 
  4028  0812                     	;# 
  4029  0813                     	;# 
  4030  0814                     	;# 
  4031  081A                     	;# 
  4032  081B                     	;# 
  4033  081C                     	;# 
  4034  081D                     	;# 
  4035  081E                     	;# 
  4036  081F                     	;# 
  4037  088C                     	;# 
  4038  088D                     	;# 
  4039  088E                     	;# 
  4040  088F                     	;# 
  4041  0890                     	;# 
  4042  0891                     	;# 
  4043  0892                     	;# 
  4044  0893                     	;# 
  4045  0895                     	;# 
  4046  0896                     	;# 
  4047  0897                     	;# 
  4048  0898                     	;# 
  4049  0899                     	;# 
  4050  089A                     	;# 
  4051  089B                     	;# 
  4052  090C                     	;# 
  4053  090E                     	;# 
  4054  090F                     	;# 
  4055  091F                     	;# 
  4056  091F                     	;# 
  4057  098F                     	;# 
  4058  098F                     	;# 
  4059  0990                     	;# 
  4060  0991                     	;# 
  4061  0992                     	;# 
  4062  0993                     	;# 
  4063  0994                     	;# 
  4064  0995                     	;# 
  4065  0996                     	;# 
  4066  0997                     	;# 
  4067  0E0F                     	;# 
  4068  0E10                     	;# 
  4069  0E11                     	;# 
  4070  0E12                     	;# 
  4071  0E13                     	;# 
  4072  0E14                     	;# 
  4073  0E15                     	;# 
  4074  0E16                     	;# 
  4075  0E17                     	;# 
  4076  0E18                     	;# 
  4077  0E19                     	;# 
  4078  0E1A                     	;# 
  4079  0E1B                     	;# 
  4080  0E1C                     	;# 
  4081  0E1D                     	;# 
  4082  0E1E                     	;# 
  4083  0E1F                     	;# 
  4084  0E20                     	;# 
  4085  0E21                     	;# 
  4086  0E22                     	;# 
  4087  0E23                     	;# 
  4088  0E24                     	;# 
  4089  0E25                     	;# 
  4090  0E26                     	;# 
  4091  0E27                     	;# 
  4092  0E28                     	;# 
  4093  0E29                     	;# 
  4094  0E2A                     	;# 
  4095  0E2B                     	;# 
  4096  0E2C                     	;# 
  4097  0E2D                     	;# 
  4098  0E2E                     	;# 
  4099  0E2F                     	;# 
  4100  0E30                     	;# 
  4101  0E31                     	;# 
  4102  0E32                     	;# 
  4103  0E33                     	;# 
  4104  0E34                     	;# 
  4105  0E35                     	;# 
  4106  0E36                     	;# 
  4107  0E37                     	;# 
  4108  0E8F                     	;# 
  4109  0E90                     	;# 
  4110  0E91                     	;# 
  4111  0E92                     	;# 
  4112  0E93                     	;# 
  4113  0E94                     	;# 
  4114  0E95                     	;# 
  4115  0E96                     	;# 
  4116  0E97                     	;# 
  4117  0E9C                     	;# 
  4118  0E9D                     	;# 
  4119  0E9E                     	;# 
  4120  0EA1                     	;# 
  4121  0EA2                     	;# 
  4122  0EA3                     	;# 
  4123  0EA4                     	;# 
  4124  0EA5                     	;# 
  4125  0EA9                     	;# 
  4126  0EAA                     	;# 
  4127  0EAB                     	;# 
  4128  0EAC                     	;# 
  4129  0EB1                     	;# 
  4130  0EB2                     	;# 
  4131  0EB3                     	;# 
  4132  0EB8                     	;# 
  4133  0EB9                     	;# 
  4134  0EBA                     	;# 
  4135  0EBB                     	;# 
  4136  0EBC                     	;# 
  4137  0EBD                     	;# 
  4138  0EBE                     	;# 
  4139  0EC3                     	;# 
  4140  0EC5                     	;# 
  4141  0EC6                     	;# 
  4142  0EC7                     	;# 
  4143  0EC8                     	;# 
  4144  0EC9                     	;# 
  4145  0ECA                     	;# 
  4146  0ECB                     	;# 
  4147  0ECC                     	;# 
  4148  0F10                     	;# 
  4149  0F11                     	;# 
  4150  0F12                     	;# 
  4151  0F13                     	;# 
  4152  0F14                     	;# 
  4153  0F15                     	;# 
  4154  0F16                     	;# 
  4155  0F17                     	;# 
  4156  0F18                     	;# 
  4157  0F19                     	;# 
  4158  0F1A                     	;# 
  4159  0F1B                     	;# 
  4160  0F1C                     	;# 
  4161  0F1D                     	;# 
  4162  0F1E                     	;# 
  4163  0F1F                     	;# 
  4164  0F20                     	;# 
  4165  0F21                     	;# 
  4166  0F22                     	;# 
  4167  0F23                     	;# 
  4168  0F24                     	;# 
  4169  0F25                     	;# 
  4170  0F26                     	;# 
  4171  0F27                     	;# 
  4172  0F38                     	;# 
  4173  0F39                     	;# 
  4174  0F3A                     	;# 
  4175  0F3B                     	;# 
  4176  0F3C                     	;# 
  4177  0F3D                     	;# 
  4178  0F3E                     	;# 
  4179  0F3F                     	;# 
  4180  0F40                     	;# 
  4181  0F41                     	;# 
  4182  0F43                     	;# 
  4183  0F44                     	;# 
  4184  0F45                     	;# 
  4185  0F46                     	;# 
  4186  0F47                     	;# 
  4187  0F48                     	;# 
  4188  0F49                     	;# 
  4189  0F4A                     	;# 
  4190  0F4B                     	;# 
  4191  0F4C                     	;# 
  4192  0F4E                     	;# 
  4193  0F4F                     	;# 
  4194  0F50                     	;# 
  4195  0F51                     	;# 
  4196  0F52                     	;# 
  4197  0F53                     	;# 
  4198  0F54                     	;# 
  4199  0F55                     	;# 
  4200  0F56                     	;# 
  4201  0F57                     	;# 
  4202  0F65                     	;# 
  4203  0F68                     	;# 
  4204  0F69                     	;# 
  4205  0F6A                     	;# 
  4206  0F6B                     	;# 
  4207  0FE4                     	;# 
  4208  0FE5                     	;# 
  4209  0FE6                     	;# 
  4210  0FE7                     	;# 
  4211  0FE8                     	;# 
  4212  0FE9                     	;# 
  4213  0FEA                     	;# 
  4214  0FEB                     	;# 
  4215  0FED                     	;# 
  4216  0FEE                     	;# 
  4217  0FEF                     	;# 
  4218                           
  4219                           	psect	idataBANK1
  4220  072A                     __pidataBANK1:	
  4221                           
  4222                           ;initializer for _segdisp
  4223  072A  3403               	retlw	3
  4224  072B  3400               	retlw	0
  4225  072C  349F               	retlw	159
  4226  072D  3400               	retlw	0
  4227  072E  3425               	retlw	37
  4228  072F  3400               	retlw	0
  4229  0730  340D               	retlw	13
  4230  0731  3400               	retlw	0
  4231  0732  3499               	retlw	153
  4232  0733  3400               	retlw	0
  4233  0734  3449               	retlw	73
  4234  0735  3400               	retlw	0
  4235  0736  3441               	retlw	65
  4236  0737  3400               	retlw	0
  4237  0738  341B               	retlw	27
  4238  0739  3400               	retlw	0
  4239  073A  3401               	retlw	1
  4240  073B  3400               	retlw	0
  4241  073C  3409               	retlw	9
  4242  073D  3400               	retlw	0
  4243                           
  4244                           ;initializer for MYI2C_Write2LEDBytes@F14471
  4245  073E  34A0               	retlw	160
  4246  073F  34A1               	retlw	161
  4247  0740  34A2               	retlw	162
  4248  0741  34A3               	retlw	163
  4249  0742  34A4               	retlw	164
  4250  0743  34A5               	retlw	165
  4251  0744  34A6               	retlw	166
  4252  0745  34A7               	retlw	167
  4253  0746  34A8               	retlw	168
  4254  0747  34A9               	retlw	169
  4255  0748  34AA               	retlw	170
  4256  0749  34AB               	retlw	171
  4257  074A  34AC               	retlw	172
  4258  074B  34AD               	retlw	173
  4259  074C  34AE               	retlw	174
  4260  074D  34AF               	retlw	175
  4261                           
  4262                           	psect	stringtext1
  4263  1000                     __pstringtext1:	
  4264  1000                     _cPowerOfTwo:	
  4265  1000  3401               	retlw	1
  4266  1001  3400               	retlw	0
  4267  1002  3402               	retlw	2
  4268  1003  3400               	retlw	0
  4269  1004  3404               	retlw	4
  4270  1005  3400               	retlw	0
  4271  1006  3408               	retlw	8
  4272  1007  3400               	retlw	0
  4273  1008  3410               	retlw	16
  4274  1009  3400               	retlw	0
  4275  100A  3420               	retlw	32
  4276  100B  3400               	retlw	0
  4277  100C  3440               	retlw	64
  4278  100D  3400               	retlw	0
  4279  100E  3480               	retlw	128
  4280  100F  3400               	retlw	0
  4281  1010                     __end_of_cPowerOfTwo:	
  4282                           
  4283                           	psect	stringtext2
  4284  1010                     __pstringtext2:	
  4285  1010                     _clockMicroTime:	
  4286  1010  34C8               	retlw	200
  4287  1011  3400               	retlw	0
  4288  1012                     __end_of_clockMicroTime:	
  4289                           
  4290                           	psect	stringtext3
  4291  1012                     __pstringtext3:	
  4292  1012                     _lineSettleMicroTime:	
  4293  1012  3490               	retlw	144
  4294  1013  3401               	retlw	1
  4295  1014                     __end_of_lineSettleMicroTime:	
  4296                           
  4297                           	psect	stringtext4
  4298  1014                     __pstringtext4:	
  4299  1014                     _toggleDly:	
  4300  1014  340A               	retlw	10
  4301  1015  3400               	retlw	0
  4302  1016                     __end_of_toggleDly:	
  4303                           
  4304                           	psect	stringtext5
  4305  1016                     __pstringtext5:	
  4306  1016                     _twoK:	
  4307  1016  3410               	retlw	16
  4308  1017  3427               	retlw	39
  4309  1018                     __end_of_twoK:	
  4310                           
  4311                           	psect	stringtext6
  4312  1018                     __pstringtext6:	
  4313  1018                     _speed:	
  4314  1018  3432               	retlw	50
  4315  1019  3400               	retlw	0
  4316  101A                     __end_of_speed:	
  4317                           
  4318                           	psect	stringtext7
  4319  101A                     __pstringtext7:	
  4320  101A                     _datapin:	
  4321  101A  3412               	retlw	18
  4322  101B  3400               	retlw	0
  4323  101C                     __end_of_datapin:	
  4324                           
  4325                           	psect	stringtext8
  4326  101C                     __pstringtext8:	
  4327  101C                     _clockpin:	
  4328  101C  3411               	retlw	17
  4329  101D  3400               	retlw	0
  4330  101E                     __end_of_clockpin:	
  4331                           
  4332                           	psect	stringtext9
  4333  101E                     __pstringtext9:	
  4334  101E                     _latchpin:	
  4335  101E  3410               	retlw	16
  4336  101F  3400               	retlw	0
  4337  1020                     __end_of_latchpin:	
  4338                           
  4339                           	psect	stringtext10
  4340  1020                     __pstringtext10:	
  4341  1020                     main@iResetValue:	
  4342  1020  3464               	retlw	100
  4343  1021  3400               	retlw	0
  4344  1022                     __end_ofmain@iResetValue:	
  4345                           
  4346                           	psect	stringtext11
  4347  1022                     __pstringtext11:	
  4348  1022                     _cMstrClkAdjust:	
  4349  1022  3420               	retlw	32
  4350  1023  3400               	retlw	0
  4351  1024                     __end_of_cMstrClkAdjust:	
  4352  000C                     _PORTA	set	12
  4353  0018                     _LATCbits	set	24
  4354  0013                     _TRISCbits	set	19
  4355  000E                     _PORTC	set	14
  4356  000D                     _PORTB	set	13
  4357  000B                     _INTCONbits	set	11
  4358  0013                     _TRISC	set	19
  4359  0012                     _TRISB	set	18
  4360  0011                     _TRISA	set	17
  4361  0018                     _LATC	set	24
  4362  0017                     _LATB	set	23
  4363  0016                     _LATA	set	22
  4364  005F                     _GIE	set	95
  4365  0094                     _ADCON1bits	set	148
  4366  008E                     _ADPREVL	set	142
  4367  008F                     _ADPREVH	set	143
  4368  0097                     _ADSTATbits	set	151
  4369  0090                     _ADACCL	set	144
  4370  0091                     _ADACCH	set	145
  4371  0095                     _ADCON2bits	set	149
  4372  0096                     _ADCON3bits	set	150
  4373  008C                     _ADRESL	set	140
  4374  008D                     _ADRESH	set	141
  4375  0093                     _ADCON0bits	set	147
  4376  0093                     _ADCON0	set	147
  4377  009E                     _ADPCH	set	158
  4378  009D                     _ADACQ	set	157
  4379  009C                     _ADPRE	set	156
  4380  009B                     _ADCAP	set	155
  4381  009A                     _ADREF	set	154
  4382  0098                     _ADCLK	set	152
  4383  0097                     _ADSTAT	set	151
  4384  0099                     _ADACT	set	153
  4385  0096                     _ADCON3	set	150
  4386  0095                     _ADCON2	set	149
  4387  0094                     _ADCON1	set	148
  4388  0116                     _ADERRL	set	278
  4389  0117                     _ADERRH	set	279
  4390  0114                     _ADFLTRL	set	276
  4391  0115                     _ADFLTRH	set	277
  4392  010C                     _ADCNT	set	268
  4393  0113                     _ADSTPTH	set	275
  4394  0112                     _ADSTPTL	set	274
  4395  0111                     _ADUTHH	set	273
  4396  0110                     _ADUTHL	set	272
  4397  010F                     _ADLTHH	set	271
  4398  010E                     _ADLTHL	set	270
  4399  010D                     _ADRPT	set	269
  4400  018C                     _SSP1BUF	set	396
  4401  0191                     _SSP1CON2bits	set	401
  4402  0190                     _SSP1CON1bits	set	400
  4403  018D                     _SSP1ADD	set	397
  4404  0192                     _SSP1CON3	set	402
  4405  0190                     _SSP1CON1	set	400
  4406  018F                     _SSP1STAT	set	399
  4407  0719                     _PIE3bits	set	1817
  4408  070F                     _PIR3bits	set	1807
  4409  0892                     _OSCTUNE	set	2194
  4410  0893                     _OSCFRQ	set	2195
  4411  0891                     _OSCEN	set	2193
  4412  088F                     _OSCCON3	set	2191
  4413  088D                     _OSCCON1	set	2189
  4414  0EC5                     _SSP1CLKPPSbits	set	3781
  4415  0EC6                     _SSP1DATPPSbits	set	3782
  4416  0E8F                     _PPSLOCKbits	set	3727
  4417  0E8F                     _PPSLOCK	set	3727
  4418  0F4E                     _ANSELCbits	set	3918
  4419  0F24                     _RC4PPS	set	3876
  4420  0F23                     _RC3PPS	set	3875
  4421  0F50                     _ODCONC	set	3920
  4422  0F45                     _ODCONB	set	3909
  4423  0F3A                     _ODCONA	set	3898
  4424  0F4F                     _WPUC	set	3919
  4425  0F39                     _WPUA	set	3897
  4426  0F44                     _WPUB	set	3908
  4427  0F65                     _WPUE	set	3941
  4428  0F38                     _ANSELA	set	3896
  4429  0F43                     _ANSELB	set	3907
  4430  0F4E                     _ANSELC	set	3918
  4431                           
  4432                           ; #config settings
  4433  0000                     
  4434                           	psect	cinit
  4435  0022                     start_initialization:	
  4436  0022                     __initialization:	
  4437                           
  4438                           ; Initialize objects allocated to BANK1
  4439  0022  302A               	movlw	low __pidataBANK1
  4440  0023  0084               	movwf	4
  4441  0024  3087               	movlw	(high __pidataBANK1)| (0+128)
  4442  0025  0085               	movwf	5
  4443  0026  30C5               	movlw	low __pdataBANK1
  4444  0027  0086               	movwf	6
  4445  0028  3000               	movlw	high __pdataBANK1
  4446  0029  0087               	movwf	7
  4447  002A  3024               	movlw	36
  4448  002B  318F  277E  3180   	fcall	init_ram
  4449                           
  4450                           ; Clear objects allocated to COMMON
  4451  002E  01F0               	clrf	__pbssCOMMON& (0+127)
  4452  002F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4453  0030  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4454  0031  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4455  0032  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4456  0033  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4457  0034  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  4458                           
  4459                           ; Clear objects allocated to BANK0
  4460  0035  01EC               	clrf	__pbssBANK0& (0+127)
  4461  0036  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  4462  0037  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  4463  0038  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  4464                           
  4465                           ; Clear objects allocated to BANK1
  4466  0039  30A0               	movlw	low __pbssBANK1
  4467  003A  0084               	movwf	4
  4468  003B  3000               	movlw	high __pbssBANK1
  4469  003C  0085               	movwf	5
  4470  003D  3025               	movlw	37
  4471  003E  318F  2778         	fcall	clear_ram0
  4472  0040                     end_of_initialization:	
  4473                           ;End of C runtime variable initialization code
  4474                           
  4475  0040                     __end_of__initialization:	
  4476  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4477  0041  0020               	movlb	0
  4478  0042  3180  2844         	ljmp	_main	;jump to C main() function
  4479                           
  4480                           	psect	bssCOMMON
  4481  0070                     __pbssCOMMON:	
  4482  0070                     I2C1_ISR@pi2c_buf_ptr:	
  4483  0070                     	ds	1
  4484  0071                     _p_i2c1_current:	
  4485  0071                     	ds	1
  4486  0072                     _p_i2c1_trb_current:	
  4487  0072                     	ds	1
  4488  0073                     _i2c1_trb_count:	
  4489  0073                     	ds	1
  4490  0074                     _i2c1_state:	
  4491  0074                     	ds	1
  4492  0075                     I2C1_ISR@i2c_address:	
  4493  0075                     	ds	2
  4494                           
  4495                           	psect	bssBANK0
  4496  006C                     __pbssBANK0:	
  4497  006C                     _iLEDs0_LSB:	
  4498  006C                     	ds	1
  4499  006D                     _iLEDs0_MSB:	
  4500  006D                     	ds	1
  4501  006E                     I2C1_ISR@i2c_10bit_address_restart:	
  4502  006E                     	ds	1
  4503  006F                     I2C1_ISR@i2c_bytes_left:	
  4504  006F                     	ds	1
  4505                           
  4506                           	psect	bssBANK1
  4507  00A0                     __pbssBANK1:	
  4508  00A0                     _i2c1_object:	
  4509  00A0                     	ds	5
  4510  00A5                     _d:	
  4511  00A5                     	ds	3
  4512  00A8                     _b:	
  4513  00A8                     	ds	3
  4514  00AB                     _e:	
  4515  00AB                     	ds	2
  4516  00AD                     _c:	
  4517  00AD                     	ds	2
  4518  00AF                     _wkFaderValue:	
  4519  00AF                     	ds	1
  4520  00B0                     _iLEDs1_LSB:	
  4521  00B0                     	ds	1
  4522  00B1                     _iLEDs1_MSB:	
  4523  00B1                     	ds	1
  4524  00B2                     _byteFaderValue:	
  4525  00B2                     	ds	8
  4526  00BA                     I2C1_MasterRead@trBlock:	
  4527  00BA                     	ds	4
  4528  00BE                     I2C1_MasterWrite@trBlock:	
  4529  00BE                     	ds	4
  4530  00C2                     _i2c1_tr_queue:	
  4531  00C2                     	ds	3
  4532                           
  4533                           	psect	dataBANK1
  4534  00C5                     __pdataBANK1:	
  4535  00C5                     _segdisp:	
  4536  00C5                     	ds	20
  4537  00D9                     MYI2C_Write2LEDBytes@F14471:	
  4538  00D9                     	ds	16
  4539                           
  4540                           	psect	inittext
  4541  0F7E                     init_ram:	
  4542  0F7E  00FE               	movwf	126
  4543  0F7F                     initloop:	
  4544  0F7F  0012               	moviw fsr0++
  4545  0F80  001E               	movwi fsr1++
  4546  0F81  0BFE               	decfsz	126,f
  4547  0F82  2F7F               	goto	initloop
  4548  0F83  3400               	retlw	0
  4549                           
  4550                           	psect	clrtext
  4551  0F78                     clear_ram0:	
  4552                           ;	Called with FSR0 containing the base address, and
  4553                           ;	WREG with the size to clear
  4554                           
  4555  0F78  0064               	clrwdt	;clear the watchdog before getting into this loop
  4556  0F79                     clrloop0:	
  4557  0F79  0180               	clrf	0	;clear RAM location pointed to by FSR
  4558  0F7A  3101               	addfsr 0,1
  4559  0F7B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4560  0F7C  2F79               	goto	clrloop0	;have we reached the end yet?
  4561  0F7D  3400               	retlw	0	;all done for this memory range, return
  4562                           
  4563                           	psect	cstackCOMMON
  4564  0077                     __pcstackCOMMON:	
  4565  0077                     ?_OSCILLATOR_Initialize:	
  4566  0077                     ?_I2C1_Initialize:	
  4567                           ; 1 bytes @ 0x0
  4568                           
  4569  0077                     ?_ADCC_Initialize:	
  4570                           ; 1 bytes @ 0x0
  4571                           
  4572  0077                     ?_I2C1_Stop:	
  4573                           ; 1 bytes @ 0x0
  4574                           
  4575  0077                     ??_I2C1_Stop:	
  4576                           ; 1 bytes @ 0x0
  4577                           
  4578  0077                     ?_I2C1_FunctionComplete:	
  4579                           ; 1 bytes @ 0x0
  4580                           
  4581  0077                     ??_I2C1_FunctionComplete:	
  4582                           ; 1 bytes @ 0x0
  4583                           
  4584  0077                     ?_initDAC528:	
  4585                           ; 1 bytes @ 0x0
  4586                           
  4587  0077                     ?_LED7SegSetup:	
  4588                           ; 1 bytes @ 0x0
  4589                           
  4590  0077                     ?_PIN_MANAGER_Initialize:	
  4591                           ; 1 bytes @ 0x0
  4592                           
  4593  0077                     ?_SYSTEM_Initialize:	
  4594                           ; 1 bytes @ 0x0
  4595                           
  4596  0077                     ?_I2C1_ISR:	
  4597                           ; 1 bytes @ 0x0
  4598                           
  4599  0077                     ?_I2C1_BusCollisionISR:	
  4600                           ; 1 bytes @ 0x0
  4601                           
  4602  0077                     ??_I2C1_BusCollisionISR:	
  4603                           ; 1 bytes @ 0x0
  4604                           
  4605  0077                     ?_INTERRUPT_InterruptManager:	
  4606                           ; 1 bytes @ 0x0
  4607                           
  4608  0077                     ?_main:	
  4609                           ; 1 bytes @ 0x0
  4610                           
  4611  0077                     ?_LED7SegPinWrite:	
  4612                           ; 1 bytes @ 0x0
  4613                           
  4614  0077                     ?_LED7SegPulseClock:	
  4615                           ; 1 bytes @ 0x0
  4616                           
  4617  0077                     ?_LED7SegShiftOutPulseClock:	
  4618                           ; 1 bytes @ 0x0
  4619                           
  4620                           
  4621                           ; 1 bytes @ 0x0
  4622  0077                     	ds	1
  4623  0078                     I2C1_Stop@completion_code:	
  4624                           
  4625                           ; 1 bytes @ 0x1
  4626  0078                     	ds	1
  4627  0079                     ??_I2C1_ISR:	
  4628                           
  4629                           ; 1 bytes @ 0x2
  4630  0079                     	ds	4
  4631  007D                     ??_INTERRUPT_InterruptManager:	
  4632                           
  4633                           ; 1 bytes @ 0x6
  4634  007D                     	ds	1
  4635                           
  4636                           	psect	cstackBANK0
  4637  0020                     __pcstackBANK0:	
  4638  0020                     ??_OSCILLATOR_Initialize:	
  4639  0020                     ??_I2C1_Initialize:	
  4640                           ; 1 bytes @ 0x0
  4641                           
  4642  0020                     ??_ADCC_Initialize:	
  4643                           ; 1 bytes @ 0x0
  4644                           
  4645  0020                     ??_LED7SegSetup:	
  4646                           ; 1 bytes @ 0x0
  4647                           
  4648  0020                     ??_PIN_MANAGER_Initialize:	
  4649                           ; 1 bytes @ 0x0
  4650                           
  4651  0020                     ??_LED7SegPinWrite:	
  4652                           ; 1 bytes @ 0x0
  4653                           
  4654  0020                     ?_ADCC_GetSingleConversion:	
  4655                           ; 1 bytes @ 0x0
  4656                           
  4657  0020                     ?___wmul:	
  4658                           ; 2 bytes @ 0x0
  4659                           
  4660  0020                     ?___ftpack:	
  4661                           ; 2 bytes @ 0x0
  4662                           
  4663  0020                     PIN_MANAGER_Initialize@state:	
  4664                           ; 3 bytes @ 0x0
  4665                           
  4666  0020                     LED7SegPinWrite@val:	
  4667                           ; 1 bytes @ 0x0
  4668                           
  4669  0020                     ___wmul@multiplier:	
  4670                           ; 1 bytes @ 0x0
  4671                           
  4672  0020                     ___ftpack@arg:	
  4673                           ; 2 bytes @ 0x0
  4674                           
  4675                           
  4676                           ; 3 bytes @ 0x0
  4677  0020                     	ds	1
  4678  0021                     ??_SYSTEM_Initialize:	
  4679                           
  4680                           ; 1 bytes @ 0x1
  4681  0021                     	ds	1
  4682  0022                     ___wmul@multiplicand:	
  4683                           
  4684                           ; 2 bytes @ 0x2
  4685  0022                     	ds	1
  4686  0023                     ??_ADCC_GetSingleConversion:	
  4687  0023                     ADCC_GetSingleConversion@channel:	
  4688                           ; 1 bytes @ 0x3
  4689                           
  4690  0023                     ___ftpack@exp:	
  4691                           ; 1 bytes @ 0x3
  4692                           
  4693                           
  4694                           ; 1 bytes @ 0x3
  4695  0023                     	ds	1
  4696  0024                     ??___wmul:	
  4697  0024                     ___ftpack@sign:	
  4698                           ; 1 bytes @ 0x4
  4699                           
  4700  0024                     ___wmul@product:	
  4701                           ; 1 bytes @ 0x4
  4702                           
  4703                           
  4704                           ; 2 bytes @ 0x4
  4705  0024                     	ds	1
  4706  0025                     ??___ftpack:	
  4707                           
  4708                           ; 1 bytes @ 0x5
  4709  0025                     	ds	1
  4710  0026                     ?_delay:	
  4711  0026                     delay@delaytime:	
  4712                           ; 1 bytes @ 0x6
  4713                           
  4714                           
  4715                           ; 2 bytes @ 0x6
  4716  0026                     	ds	2
  4717  0028                     ??_delay:	
  4718  0028                     ?___awtoft:	
  4719                           ; 1 bytes @ 0x8
  4720                           
  4721  0028                     ___awtoft@c:	
  4722                           ; 3 bytes @ 0x8
  4723                           
  4724                           
  4725                           ; 2 bytes @ 0x8
  4726  0028                     	ds	1
  4727  0029                     delay@adjustedDelaytime:	
  4728                           
  4729                           ; 4 bytes @ 0x9
  4730  0029                     	ds	2
  4731  002B                     ??___awtoft:	
  4732                           
  4733                           ; 1 bytes @ 0xB
  4734  002B                     	ds	2
  4735  002D                     ___awtoft@sign:	
  4736  002D                     delay@counter:	
  4737                           ; 1 bytes @ 0xD
  4738                           
  4739                           
  4740                           ; 4 bytes @ 0xD
  4741  002D                     	ds	1
  4742  002E                     ?___ftdiv:	
  4743  002E                     ?___ftmul:	
  4744                           ; 3 bytes @ 0xE
  4745                           
  4746  002E                     ___ftdiv@f2:	
  4747                           ; 3 bytes @ 0xE
  4748                           
  4749  002E                     ___ftmul@f1:	
  4750                           ; 3 bytes @ 0xE
  4751                           
  4752                           
  4753                           ; 3 bytes @ 0xE
  4754  002E                     	ds	3
  4755  0031                     ?_blinkyLoop:	
  4756  0031                     ??_LED7SegPulseClock:	
  4757                           ; 1 bytes @ 0x11
  4758                           
  4759  0031                     ??_LED7SegShiftOutPulseClock:	
  4760                           ; 1 bytes @ 0x11
  4761                           
  4762  0031                     blinkyLoop@maxLoops:	
  4763                           ; 1 bytes @ 0x11
  4764                           
  4765  0031                     ___ftdiv@f1:	
  4766                           ; 2 bytes @ 0x11
  4767                           
  4768  0031                     ___ftmul@f2:	
  4769                           ; 3 bytes @ 0x11
  4770                           
  4771                           
  4772                           ; 3 bytes @ 0x11
  4773  0031                     	ds	1
  4774  0032                     LED7SegShiftOutPulseClock@val:	
  4775                           
  4776                           ; 1 bytes @ 0x12
  4777  0032                     	ds	1
  4778  0033                     ??_blinkyLoop:	
  4779  0033                     LED7SegShiftOutPulseClock@i:	
  4780                           ; 1 bytes @ 0x13
  4781                           
  4782                           
  4783                           ; 1 bytes @ 0x13
  4784  0033                     	ds	1
  4785  0034                     ?_LED7SegDisplayValueByDigit:	
  4786  0034                     ??___ftdiv:	
  4787                           ; 1 bytes @ 0x14
  4788                           
  4789  0034                     ??___ftmul:	
  4790                           ; 1 bytes @ 0x14
  4791                           
  4792  0034                     blinkyLoop@delayTime:	
  4793                           ; 1 bytes @ 0x14
  4794                           
  4795  0034                     LED7SegDisplayValueByDigit@iTensDigit:	
  4796                           ; 2 bytes @ 0x14
  4797                           
  4798                           
  4799                           ; 2 bytes @ 0x14
  4800  0034                     	ds	2
  4801  0036                     blinkyLoop@loopCount:	
  4802  0036                     LED7SegDisplayValueByDigit@iUnitsDigit:	
  4803                           ; 2 bytes @ 0x16
  4804                           
  4805                           
  4806                           ; 2 bytes @ 0x16
  4807  0036                     	ds	2
  4808  0038                     ??_LED7SegDisplayValueByDigit:	
  4809  0038                     ___ftdiv@cntr:	
  4810                           ; 1 bytes @ 0x18
  4811                           
  4812  0038                     ___ftmul@exp:	
  4813                           ; 1 bytes @ 0x18
  4814                           
  4815  0038                     LED7SegDisplayValueByDigit@iTensCode:	
  4816                           ; 1 bytes @ 0x18
  4817                           
  4818                           
  4819                           ; 2 bytes @ 0x18
  4820  0038                     	ds	1
  4821  0039                     ___ftdiv@f3:	
  4822  0039                     ___ftmul@f3_as_product:	
  4823                           ; 3 bytes @ 0x19
  4824                           
  4825                           
  4826                           ; 3 bytes @ 0x19
  4827  0039                     	ds	3
  4828  003C                     ___ftdiv@exp:	
  4829  003C                     ___ftmul@cntr:	
  4830                           ; 1 bytes @ 0x1C
  4831                           
  4832                           
  4833                           ; 1 bytes @ 0x1C
  4834  003C                     	ds	1
  4835  003D                     ___ftdiv@sign:	
  4836  003D                     ___ftmul@sign:	
  4837                           ; 1 bytes @ 0x1D
  4838                           
  4839                           
  4840                           ; 1 bytes @ 0x1D
  4841  003D                     	ds	1
  4842  003E                     ?___fttol:	
  4843  003E                     ___fttol@f1:	
  4844                           ; 4 bytes @ 0x1E
  4845                           
  4846                           
  4847                           ; 3 bytes @ 0x1E
  4848  003E                     	ds	4
  4849  0042                     ??___fttol:	
  4850                           
  4851                           ; 1 bytes @ 0x22
  4852  0042                     	ds	4
  4853  0046                     ___fttol@sign1:	
  4854                           
  4855                           ; 1 bytes @ 0x26
  4856  0046                     	ds	1
  4857  0047                     ___fttol@lval:	
  4858                           
  4859                           ; 4 bytes @ 0x27
  4860  0047                     	ds	4
  4861  004B                     ___fttol@exp1:	
  4862                           
  4863                           ; 1 bytes @ 0x2B
  4864  004B                     	ds	1
  4865  004C                     ?_putByte:	
  4866  004C                     putByte@clockPin:	
  4867                           ; 1 bytes @ 0x2C
  4868                           
  4869                           
  4870                           ; 2 bytes @ 0x2C
  4871  004C                     	ds	2
  4872  004E                     ??_putByte:	
  4873                           
  4874                           ; 1 bytes @ 0x2E
  4875  004E                     	ds	4
  4876  0052                     putByte@data:	
  4877                           
  4878                           ; 1 bytes @ 0x32
  4879  0052                     	ds	1
  4880  0053                     putByte@mask:	
  4881                           
  4882                           ; 1 bytes @ 0x33
  4883  0053                     	ds	1
  4884  0054                     putByte@i:	
  4885                           
  4886                           ; 1 bytes @ 0x34
  4887  0054                     	ds	1
  4888  0055                     ??_initDAC528:	
  4889  0055                     ?_writeDAC528:	
  4890                           ; 1 bytes @ 0x35
  4891                           
  4892  0055                     writeDAC528@dacNumber:	
  4893                           ; 1 bytes @ 0x35
  4894                           
  4895                           
  4896                           ; 2 bytes @ 0x35
  4897  0055                     	ds	2
  4898  0057                     writeDAC528@dacData:	
  4899                           
  4900                           ; 1 bytes @ 0x37
  4901  0057                     	ds	1
  4902  0058                     ??_writeDAC528:	
  4903                           
  4904                           ; 1 bytes @ 0x38
  4905  0058                     	ds	1
  4906  0059                     writeDAC528@wkDacNumber:	
  4907                           
  4908                           ; 1 bytes @ 0x39
  4909  0059                     	ds	1
  4910  005A                     ??_main:	
  4911                           
  4912                           ; 1 bytes @ 0x3A
  4913  005A                     	ds	4
  4914  005E                     main@I2C_ADDRESS_FADELED0:	
  4915                           
  4916                           ; 1 bytes @ 0x3E
  4917  005E                     	ds	1
  4918  005F                     main@readStatus:	
  4919                           
  4920                           ; 1 bytes @ 0x3F
  4921  005F                     	ds	1
  4922  0060                     main@iChangeCount:	
  4923                           
  4924                           ; 1 bytes @ 0x40
  4925  0060                     	ds	1
  4926  0061                     main@POT0Value:	
  4927                           
  4928                           ; 1 bytes @ 0x41
  4929  0061                     	ds	1
  4930  0062                     main@POT1Value:	
  4931                           
  4932                           ; 1 bytes @ 0x42
  4933  0062                     	ds	1
  4934  0063                     main@iCounter:	
  4935                           
  4936                           ; 2 bytes @ 0x43
  4937  0063                     	ds	2
  4938  0065                     main@prevFader8bitValue:	
  4939                           
  4940                           ; 1 bytes @ 0x45
  4941  0065                     	ds	1
  4942  0066                     main@iLoopCounter:	
  4943                           
  4944                           ; 2 bytes @ 0x46
  4945  0066                     	ds	2
  4946  0068                     main@fader8bitValue:	
  4947                           
  4948                           ; 1 bytes @ 0x48
  4949  0068                     	ds	1
  4950  0069                     main@DACDataValue:	
  4951                           
  4952                           ; 1 bytes @ 0x49
  4953  0069                     	ds	1
  4954  006A                     main@faderValue:	
  4955                           
  4956                           ; 2 bytes @ 0x4A
  4957  006A                     	ds	2
  4958                           
  4959                           	psect	maintext
  4960  0044                     __pmaintext:	
  4961 ;;
  4962 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4963 ;;
  4964 ;; *************** function _main *****************
  4965 ;; Defined at:
  4966 ;;		line 163 in file "main.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;		None
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  faderValue      2   74[BANK0 ] int 
  4971 ;;  iLoopCounter    2   70[BANK0 ] unsigned int 
  4972 ;;  iCounter        2   67[BANK0 ] unsigned int 
  4973 ;;  iLSByte         2    0        unsigned int 
  4974 ;;  iMSByte         2    0        unsigned int 
  4975 ;;  DACDataValue    1   73[BANK0 ] unsigned char 
  4976 ;;  fader8bitVal    1   72[BANK0 ] unsigned char 
  4977 ;;  prevFader8bi    1   69[BANK0 ] unsigned char 
  4978 ;;  POT1Value       1   66[BANK0 ] unsigned char 
  4979 ;;  POT0Value       1   65[BANK0 ] unsigned char 
  4980 ;;  iChangeCount    1   64[BANK0 ] unsigned char 
  4981 ;;  readStatus      1   63[BANK0 ] enum E14267
  4982 ;;  I2C_ADDRESS_    1   62[BANK0 ] unsigned char 
  4983 ;; Return value:  Size  Location     Type
  4984 ;;                  1    wreg      void 
  4985 ;; Registers used:
  4986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4987 ;; Tracked objects:
  4988 ;;		On entry : B1F/0
  4989 ;;		On exit  : 0/0
  4990 ;;		Unchanged: 0/0
  4991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4993 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4996 ;;Total ram usage:       18 bytes
  4997 ;; Hardware stack levels required when called:    8
  4998 ;; This function calls:
  4999 ;;		_ADCC_GetSingleConversion
  5000 ;;		_LED7SegDisplayValueByDigit
  5001 ;;		_LED7SegSetup
  5002 ;;		_SYSTEM_Initialize
  5003 ;;		___awtoft
  5004 ;;		___ftdiv
  5005 ;;		___fttol
  5006 ;;		_blinkyLoop
  5007 ;;		_delay
  5008 ;;		_initDAC528
  5009 ;;		_writeDAC528
  5010 ;; This function is called by:
  5011 ;;		Startup code after reset
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           
  5016                           ;psect for function _main
  5017  0044                     _main:	
  5018                           
  5019                           ;main.c: 165: uint8_t I2C_ADDRESS_FADELED0 = 0x10;
  5020                           
  5021                           ;incstack = 0
  5022                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5023  0044  3010               	movlw	16
  5024  0045  0020               	movlb	0	; select bank0
  5025  0046  00DA               	movwf	??_main
  5026  0047  085A               	movf	??_main,w
  5027  0048  00DE               	movwf	main@I2C_ADDRESS_FADELED0
  5028                           
  5029                           ;main.c: 166: uint16_t iCounter=0;
  5030  0049  01E3               	clrf	main@iCounter
  5031  004A  01E4               	clrf	main@iCounter+1
  5032                           
  5033                           ;main.c: 167: uint16_t iMSByte;
  5034                           ;main.c: 168: uint16_t iLSByte;
  5035                           ;main.c: 169: const uint16_t iResetValue=100;
  5036                           ;main.c: 170: uint16_t iLoopCounter=0;
  5037  004B  01E6               	clrf	main@iLoopCounter
  5038  004C  01E7               	clrf	main@iLoopCounter+1
  5039                           
  5040                           ;main.c: 171: uint8_t iChangeCount=0;
  5041  004D  01E0               	clrf	main@iChangeCount
  5042                           
  5043                           ;main.c: 172: int faderValue;
  5044                           ;main.c: 173: uint8_t fader8bitValue;
  5045                           ;main.c: 174: uint8_t prevFader8bitValue;
  5046                           ;main.c: 175: uint8_t POT0Value;
  5047                           ;main.c: 176: uint8_t POT1Value;
  5048                           ;main.c: 177: uint8_t DACDataValue;
  5049                           ;main.c: 179: I2C1_MESSAGE_STATUS readStatus=0;
  5050  004E  01DF               	clrf	main@readStatus
  5051                           
  5052                           ;main.c: 182: SYSTEM_Initialize();
  5053  004F  318F  2796  3180   	fcall	_SYSTEM_Initialize
  5054                           
  5055                           ;main.c: 183: initDAC528();
  5056  0052  318F  27D3  3180   	fcall	_initDAC528
  5057                           
  5058                           ;main.c: 184: LED7SegSetup();
  5059  0055  318F  27A2  3180   	fcall	_LED7SegSetup
  5060                           
  5061                           ;main.c: 189: (INTCONbits.GIE = 1);
  5062  0058  178B               	bsf	11,7	;volatile
  5063                           
  5064                           ;main.c: 192: (INTCONbits.PEIE = 1);
  5065  0059  170B               	bsf	11,6	;volatile
  5066                           
  5067                           ;main.c: 201: faderValue=ADCC_GetSingleConversion(FADER5);
  5068  005A  3005               	movlw	5
  5069  005B  318F  27BF  3180   	fcall	_ADCC_GetSingleConversion
  5070  005E  0020               	movlb	0	; select bank0
  5071  005F  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5072  0060  00EB               	movwf	main@faderValue+1
  5073  0061  0820               	movf	?_ADCC_GetSingleConversion,w
  5074  0062  00EA               	movwf	main@faderValue
  5075                           
  5076                           ;main.c: 202: prevFader8bitValue=faderValue>>2;
  5077  0063  086B               	movf	main@faderValue+1,w
  5078  0064  00DB               	movwf	??_main+1
  5079  0065  086A               	movf	main@faderValue,w
  5080  0066  00DA               	movwf	??_main
  5081  0067  0D5B               	rlf	??_main+1,w
  5082  0068  0CDB               	rrf	??_main+1,f
  5083  0069  0CDA               	rrf	??_main,f
  5084  006A  0D5B               	rlf	??_main+1,w
  5085  006B  0CDB               	rrf	??_main+1,f
  5086  006C  0CDA               	rrf	??_main,f
  5087  006D  085A               	movf	??_main,w
  5088  006E  00DC               	movwf	??_main+2
  5089  006F  085C               	movf	??_main+2,w
  5090  0070  00E5               	movwf	main@prevFader8bitValue
  5091                           
  5092                           ;main.c: 204: blinkyLoop(10);
  5093  0071  300A               	movlw	10
  5094  0072  00B1               	movwf	blinkyLoop@maxLoops
  5095  0073  3000               	movlw	0
  5096  0074  00B2               	movwf	blinkyLoop@maxLoops+1
  5097  0075  3185  25DB  3180   	fcall	_blinkyLoop
  5098  0078                     l3453:	
  5099                           ;main.c: 209: while (1) {
  5100                           
  5101                           
  5102                           ;main.c: 210: iLoopCounter++;
  5103  0078  3001               	movlw	1
  5104  0079  0020               	movlb	0	; select bank0
  5105  007A  07E6               	addwf	main@iLoopCounter,f
  5106  007B  3000               	movlw	0
  5107  007C  3DE7               	addwfc	main@iLoopCounter+1,f
  5108                           
  5109                           ;main.c: 211: if (iResetValue<=iLoopCounter) iLoopCounter=0;
  5110  007D  3020               	movlw	low (main@iResetValue| (0+32768))
  5111  007E  0084               	movwf	4
  5112  007F  3090               	movlw	high (main@iResetValue| (0+32768))
  5113  0080  0085               	movwf	5
  5114  0081  3F00               	moviw [0]fsr0
  5115  0082  00DA               	movwf	??_main
  5116  0083  3F01               	moviw [1]fsr0
  5117  0084  00DB               	movwf	??_main+1
  5118  0085  085B               	movf	??_main+1,w
  5119  0086  0267               	subwf	main@iLoopCounter+1,w
  5120  0087  1D03               	skipz
  5121  0088  288B               	goto	u3045
  5122  0089  085A               	movf	??_main,w
  5123  008A  0266               	subwf	main@iLoopCounter,w
  5124  008B                     u3045:	
  5125  008B  1C03               	skipc
  5126  008C  288F               	goto	l3459
  5127  008D  01E6               	clrf	main@iLoopCounter
  5128  008E  01E7               	clrf	main@iLoopCounter+1
  5129  008F                     l3459:	
  5130                           
  5131                           ;main.c: 214: {
  5132                           ;main.c: 215: delay(100);
  5133  008F  3064               	movlw	100
  5134  0090  00A6               	movwf	delay@delaytime
  5135  0091  3000               	movlw	0
  5136  0092  00A7               	movwf	delay@delaytime+1
  5137  0093  3186  263D  3180   	fcall	_delay
  5138                           
  5139                           ;main.c: 216: faderValue=ADCC_GetSingleConversion(FADER0);
  5140  0096  3000               	movlw	0
  5141  0097  318F  27BF  3180   	fcall	_ADCC_GetSingleConversion
  5142  009A  0020               	movlb	0	; select bank0
  5143  009B  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5144  009C  00EB               	movwf	main@faderValue+1
  5145  009D  0820               	movf	?_ADCC_GetSingleConversion,w
  5146  009E  00EA               	movwf	main@faderValue
  5147                           
  5148                           ;main.c: 217: fader8bitValue=faderValue>>2;
  5149  009F  086B               	movf	main@faderValue+1,w
  5150  00A0  00DB               	movwf	??_main+1
  5151  00A1  086A               	movf	main@faderValue,w
  5152  00A2  00DA               	movwf	??_main
  5153  00A3  0D5B               	rlf	??_main+1,w
  5154  00A4  0CDB               	rrf	??_main+1,f
  5155  00A5  0CDA               	rrf	??_main,f
  5156  00A6  0D5B               	rlf	??_main+1,w
  5157  00A7  0CDB               	rrf	??_main+1,f
  5158  00A8  0CDA               	rrf	??_main,f
  5159  00A9  085A               	movf	??_main,w
  5160  00AA  00DC               	movwf	??_main+2
  5161  00AB  085C               	movf	??_main+2,w
  5162  00AC  00E8               	movwf	main@fader8bitValue
  5163                           
  5164                           ;main.c: 218: delay(100);
  5165  00AD  3064               	movlw	100
  5166  00AE  00A6               	movwf	delay@delaytime
  5167  00AF  3000               	movlw	0
  5168  00B0  00A7               	movwf	delay@delaytime+1
  5169  00B1  3186  263D  3180   	fcall	_delay
  5170                           
  5171                           ;main.c: 219: faderValue=ADCC_GetSingleConversion(POT0);
  5172  00B4  3004               	movlw	4
  5173  00B5  318F  27BF  3180   	fcall	_ADCC_GetSingleConversion
  5174  00B8  0020               	movlb	0	; select bank0
  5175  00B9  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5176  00BA  00EB               	movwf	main@faderValue+1
  5177  00BB  0820               	movf	?_ADCC_GetSingleConversion,w
  5178  00BC  00EA               	movwf	main@faderValue
  5179                           
  5180                           ;main.c: 220: faderValue=1023-faderValue;
  5181  00BD  096A               	comf	main@faderValue,w
  5182  00BE  00DA               	movwf	??_main
  5183  00BF  096B               	comf	main@faderValue+1,w
  5184  00C0  00DB               	movwf	??_main+1
  5185  00C1  0ADA               	incf	??_main,f
  5186  00C2  1903               	skipnz
  5187  00C3  0ADB               	incf	??_main+1,f
  5188  00C4  085A               	movf	??_main,w
  5189  00C5  3EFF               	addlw	255
  5190  00C6  00EA               	movwf	main@faderValue
  5191  00C7  3003               	movlw	3
  5192  00C8  3D5B               	addwfc	??_main+1,w
  5193  00C9  00EB               	movwf	main@faderValue+1
  5194                           
  5195                           ;main.c: 222: POT0Value=faderValue/102.3;
  5196  00CA  086B               	movf	main@faderValue+1,w
  5197  00CB  00A9               	movwf	___awtoft@c+1
  5198  00CC  086A               	movf	main@faderValue,w
  5199  00CD  00A8               	movwf	___awtoft@c
  5200  00CE  3187  274E  3180   	fcall	___awtoft
  5201  00D1  0020               	movlb	0	; select bank0
  5202  00D2  0828               	movf	?___awtoft,w
  5203  00D3  00B1               	movwf	___ftdiv@f1
  5204  00D4  0829               	movf	?___awtoft+1,w
  5205  00D5  00B2               	movwf	___ftdiv@f1+1
  5206  00D6  082A               	movf	?___awtoft+2,w
  5207  00D7  00B3               	movwf	___ftdiv@f1+2
  5208  00D8  309A               	movlw	154
  5209  00D9  00AE               	movwf	___ftdiv@f2
  5210  00DA  30CC               	movlw	204
  5211  00DB  00AF               	movwf	___ftdiv@f2+1
  5212  00DC  3042               	movlw	66
  5213  00DD  00B0               	movwf	___ftdiv@f2+2
  5214  00DE  3184  2446  3180   	fcall	___ftdiv
  5215  00E1  0020               	movlb	0	; select bank0
  5216  00E2  082E               	movf	?___ftdiv,w
  5217  00E3  00BE               	movwf	___fttol@f1
  5218  00E4  082F               	movf	?___ftdiv+1,w
  5219  00E5  00BF               	movwf	___fttol@f1+1
  5220  00E6  0830               	movf	?___ftdiv+2,w
  5221  00E7  00C0               	movwf	___fttol@f1+2
  5222  00E8  3184  24EF  3180   	fcall	___fttol
  5223  00EB  0020               	movlb	0	; select bank0
  5224  00EC  083E               	movf	?___fttol,w
  5225  00ED  00DA               	movwf	??_main
  5226  00EE  085A               	movf	??_main,w
  5227  00EF  00E1               	movwf	main@POT0Value
  5228                           
  5229                           ;main.c: 223: delay(100);
  5230  00F0  3064               	movlw	100
  5231  00F1  00A6               	movwf	delay@delaytime
  5232  00F2  3000               	movlw	0
  5233  00F3  00A7               	movwf	delay@delaytime+1
  5234  00F4  3186  263D  3180   	fcall	_delay
  5235                           
  5236                           ;main.c: 224: faderValue=ADCC_GetSingleConversion(POT1);
  5237  00F7  3005               	movlw	5
  5238  00F8  318F  27BF  3180   	fcall	_ADCC_GetSingleConversion
  5239  00FB  0020               	movlb	0	; select bank0
  5240  00FC  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5241  00FD  00EB               	movwf	main@faderValue+1
  5242  00FE  0820               	movf	?_ADCC_GetSingleConversion,w
  5243  00FF  00EA               	movwf	main@faderValue
  5244                           
  5245                           ;main.c: 225: faderValue=1023-faderValue;
  5246  0100  096A               	comf	main@faderValue,w
  5247  0101  00DA               	movwf	??_main
  5248  0102  096B               	comf	main@faderValue+1,w
  5249  0103  00DB               	movwf	??_main+1
  5250  0104  0ADA               	incf	??_main,f
  5251  0105  1903               	skipnz
  5252  0106  0ADB               	incf	??_main+1,f
  5253  0107  085A               	movf	??_main,w
  5254  0108  3EFF               	addlw	255
  5255  0109  00EA               	movwf	main@faderValue
  5256  010A  3003               	movlw	3
  5257  010B  3D5B               	addwfc	??_main+1,w
  5258  010C  00EB               	movwf	main@faderValue+1
  5259                           
  5260                           ;main.c: 226: POT1Value=faderValue/102.3;
  5261  010D  086B               	movf	main@faderValue+1,w
  5262  010E  00A9               	movwf	___awtoft@c+1
  5263  010F  086A               	movf	main@faderValue,w
  5264  0110  00A8               	movwf	___awtoft@c
  5265  0111  3187  274E  3180   	fcall	___awtoft
  5266  0114  0020               	movlb	0	; select bank0
  5267  0115  0828               	movf	?___awtoft,w
  5268  0116  00B1               	movwf	___ftdiv@f1
  5269  0117  0829               	movf	?___awtoft+1,w
  5270  0118  00B2               	movwf	___ftdiv@f1+1
  5271  0119  082A               	movf	?___awtoft+2,w
  5272  011A  00B3               	movwf	___ftdiv@f1+2
  5273  011B  309A               	movlw	154
  5274  011C  00AE               	movwf	___ftdiv@f2
  5275  011D  30CC               	movlw	204
  5276  011E  00AF               	movwf	___ftdiv@f2+1
  5277  011F  3042               	movlw	66
  5278  0120  00B0               	movwf	___ftdiv@f2+2
  5279  0121  3184  2446  3180   	fcall	___ftdiv
  5280  0124  0020               	movlb	0	; select bank0
  5281  0125  082E               	movf	?___ftdiv,w
  5282  0126  00BE               	movwf	___fttol@f1
  5283  0127  082F               	movf	?___ftdiv+1,w
  5284  0128  00BF               	movwf	___fttol@f1+1
  5285  0129  0830               	movf	?___ftdiv+2,w
  5286  012A  00C0               	movwf	___fttol@f1+2
  5287  012B  3184  24EF  3180   	fcall	___fttol
  5288  012E  0020               	movlb	0	; select bank0
  5289  012F  083E               	movf	?___fttol,w
  5290  0130  00DA               	movwf	??_main
  5291  0131  085A               	movf	??_main,w
  5292  0132  00E2               	movwf	main@POT1Value
  5293                           
  5294                           ;main.c: 227: }
  5295                           ;main.c: 231: DACDataValue=4* (iCounter%32);
  5296  0133  0863               	movf	main@iCounter,w
  5297  0134  391F               	andlw	31
  5298  0135  00DA               	movwf	??_main
  5299  0136  3001               	movlw	1
  5300  0137                     u3055:	
  5301  0137  35DA               	lslf	??_main,f
  5302  0138  3EFF               	addlw	-1
  5303  0139  1D03               	skipz
  5304  013A  2937               	goto	u3055
  5305  013B  355A               	lslf	??_main,w
  5306  013C  00DB               	movwf	??_main+1
  5307  013D  085B               	movf	??_main+1,w
  5308  013E  00E9               	movwf	main@DACDataValue
  5309                           
  5310                           ;main.c: 232: writeDAC528(4,DACDataValue);
  5311  013F  3004               	movlw	4
  5312  0140  00D5               	movwf	writeDAC528@dacNumber
  5313  0141  3000               	movlw	0
  5314  0142  00D6               	movwf	writeDAC528@dacNumber+1
  5315  0143  0869               	movf	main@DACDataValue,w
  5316  0144  00DA               	movwf	??_main
  5317  0145  085A               	movf	??_main,w
  5318  0146  00D7               	movwf	writeDAC528@dacData
  5319  0147  3187  2705  3180   	fcall	_writeDAC528
  5320                           
  5321                           ;main.c: 233: writeDAC528(5,DACDataValue);
  5322  014A  3005               	movlw	5
  5323  014B  0020               	movlb	0	; select bank0
  5324  014C  00D5               	movwf	writeDAC528@dacNumber
  5325  014D  3000               	movlw	0
  5326  014E  00D6               	movwf	writeDAC528@dacNumber+1
  5327  014F  0869               	movf	main@DACDataValue,w
  5328  0150  00DA               	movwf	??_main
  5329  0151  085A               	movf	??_main,w
  5330  0152  00D7               	movwf	writeDAC528@dacData
  5331  0153  3187  2705  3180   	fcall	_writeDAC528
  5332                           
  5333                           ;main.c: 234: writeDAC528(6,DACDataValue);
  5334  0156  3006               	movlw	6
  5335  0157  0020               	movlb	0	; select bank0
  5336  0158  00D5               	movwf	writeDAC528@dacNumber
  5337  0159  3000               	movlw	0
  5338  015A  00D6               	movwf	writeDAC528@dacNumber+1
  5339  015B  0869               	movf	main@DACDataValue,w
  5340  015C  00DA               	movwf	??_main
  5341  015D  085A               	movf	??_main,w
  5342  015E  00D7               	movwf	writeDAC528@dacData
  5343  015F  3187  2705  3180   	fcall	_writeDAC528
  5344                           
  5345                           ;main.c: 235: writeDAC528(7,DACDataValue);
  5346  0162  3007               	movlw	7
  5347  0163  0020               	movlb	0	; select bank0
  5348  0164  00D5               	movwf	writeDAC528@dacNumber
  5349  0165  3000               	movlw	0
  5350  0166  00D6               	movwf	writeDAC528@dacNumber+1
  5351  0167  0869               	movf	main@DACDataValue,w
  5352  0168  00DA               	movwf	??_main
  5353  0169  085A               	movf	??_main,w
  5354  016A  00D7               	movwf	writeDAC528@dacData
  5355  016B  3187  2705  3180   	fcall	_writeDAC528
  5356                           
  5357                           ;main.c: 289: if (prevFader8bitValue!=fader8bitValue) {
  5358  016E  0020               	movlb	0	; select bank0
  5359  016F  0865               	movf	main@prevFader8bitValue,w
  5360  0170  0668               	xorwf	main@fader8bitValue,w
  5361  0171  1903               	skipnz
  5362  0172  2977               	goto	l3495
  5363                           
  5364                           ;main.c: 290: iChangeCount++;
  5365  0173  3001               	movlw	1
  5366  0174  00DA               	movwf	??_main
  5367  0175  085A               	movf	??_main,w
  5368  0176  07E0               	addwf	main@iChangeCount,f
  5369  0177                     l3495:	
  5370                           
  5371                           ;main.c: 292: }
  5372                           ;main.c: 293: prevFader8bitValue=fader8bitValue;
  5373  0177  0868               	movf	main@fader8bitValue,w
  5374  0178  00DA               	movwf	??_main
  5375  0179  085A               	movf	??_main,w
  5376  017A  00E5               	movwf	main@prevFader8bitValue
  5377                           
  5378                           ;main.c: 296: iCounter++;
  5379  017B  3001               	movlw	1
  5380  017C  07E3               	addwf	main@iCounter,f
  5381  017D  3000               	movlw	0
  5382  017E  3DE4               	addwfc	main@iCounter+1,f
  5383                           
  5384                           ;main.c: 297: if (fader8bitValue<252)
  5385  017F  30FC               	movlw	252
  5386  0180  0268               	subwf	main@fader8bitValue,w
  5387  0181  1803               	skipnc
  5388  0182  2994               	goto	l3503
  5389                           
  5390                           ;main.c: 298: delay(1*(255-fader8bitValue));
  5391  0183  0868               	movf	main@fader8bitValue,w
  5392  0184  00DA               	movwf	??_main
  5393  0185  01DB               	clrf	??_main+1
  5394  0186  09DA               	comf	??_main,f
  5395  0187  09DB               	comf	??_main+1,f
  5396  0188  0ADA               	incf	??_main,f
  5397  0189  1903               	skipnz
  5398  018A  0ADB               	incf	??_main+1,f
  5399  018B  085A               	movf	??_main,w
  5400  018C  3EFF               	addlw	255
  5401  018D  00A6               	movwf	delay@delaytime
  5402  018E  3000               	movlw	0
  5403  018F  3D5B               	addwfc	??_main+1,w
  5404  0190  00A7               	movwf	delay@delaytime+1
  5405  0191  3186  263D  3180   	fcall	_delay
  5406  0194                     l3503:	
  5407                           
  5408                           ;main.c: 304: LED7SegDisplayValueByDigit(POT1Value,POT0Value);
  5409  0194  0020               	movlb	0	; select bank0
  5410  0195  0862               	movf	main@POT1Value,w
  5411  0196  00DA               	movwf	??_main
  5412  0197  01DB               	clrf	??_main+1
  5413  0198  085A               	movf	??_main,w
  5414  0199  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  5415  019A  085B               	movf	??_main+1,w
  5416  019B  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  5417  019C  0861               	movf	main@POT0Value,w
  5418  019D  00DC               	movwf	??_main+2
  5419  019E  01DD               	clrf	??_main+3
  5420  019F  085C               	movf	??_main+2,w
  5421  01A0  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  5422  01A1  085D               	movf	??_main+3,w
  5423  01A2  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  5424  01A3  3186  26CE  3180   	fcall	_LED7SegDisplayValueByDigit
  5425  01A6  2878               	goto	l3453
  5426  01A7                     __end_of_main:	
  5427                           
  5428                           	psect	text1
  5429  0705                     __ptext1:	
  5430 ;; *************** function _writeDAC528 *****************
  5431 ;; Defined at:
  5432 ;;		line 59 in file "VCAMIX_SPI_Master.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  dacNumber       2   53[BANK0 ] int 
  5435 ;;  dacData         1   55[BANK0 ] unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  wkDacNumber     1   57[BANK0 ] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5447 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;Total ram usage:        5 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    6
  5454 ;; This function calls:
  5455 ;;		_putByte
  5456 ;; This function is called by:
  5457 ;;		_main
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           
  5462                           ;psect for function _writeDAC528
  5463  0705                     _writeDAC528:	
  5464                           
  5465                           ;VCAMIX_SPI_Master.c: 60: uint8_t wkDacNumber=0;
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in _writeDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5469  0705  0020               	movlb	0	; select bank0
  5470  0706  01D9               	clrf	writeDAC528@wkDacNumber
  5471                           
  5472                           ;VCAMIX_SPI_Master.c: 61: wkDacNumber=cPowerOfTwo[dacNumber];
  5473  0707  0856               	movf	writeDAC528@dacNumber+1,w
  5474  0708  0085               	movwf	5
  5475  0709  0855               	movf	writeDAC528@dacNumber,w
  5476  070A  0084               	movwf	4
  5477  070B  3584               	lslf	4,f
  5478  070C  0D85               	rlf	5,f
  5479  070D  3000               	movlw	low (_cPowerOfTwo| (0+32768))
  5480  070E  0784               	addwf	4,f
  5481  070F  3090               	movlw	high (_cPowerOfTwo| (0+32768))
  5482  0710  3D85               	addwfc	5,f
  5483  0711  0800               	movf	0,w	;code access
  5484  0712  00D8               	movwf	??_writeDAC528
  5485  0713  0858               	movf	??_writeDAC528,w
  5486  0714  00D9               	movwf	writeDAC528@wkDacNumber
  5487                           
  5488                           ;VCAMIX_SPI_Master.c: 72: PORTA &= 0x7F ;
  5489  0715  307F               	movlw	127
  5490  0716  00D8               	movwf	??_writeDAC528
  5491  0717  0858               	movf	??_writeDAC528,w
  5492  0718  058C               	andwf	12,f	;volatile
  5493                           
  5494                           ;VCAMIX_SPI_Master.c: 74: putByte(wkDacNumber,0);
  5495  0719  3000               	movlw	0
  5496  071A  00CC               	movwf	putByte@clockPin
  5497  071B  00CD               	movwf	putByte@clockPin+1
  5498  071C  0859               	movf	writeDAC528@wkDacNumber,w
  5499  071D  3182  22DD  3187   	fcall	_putByte
  5500                           
  5501                           ;VCAMIX_SPI_Master.c: 76: putByte(dacData,0);
  5502  0720  3000               	movlw	0
  5503  0721  0020               	movlb	0	; select bank0
  5504  0722  00CC               	movwf	putByte@clockPin
  5505  0723  00CD               	movwf	putByte@clockPin+1
  5506  0724  0857               	movf	writeDAC528@dacData,w
  5507  0725  3182  22DD         	fcall	_putByte
  5508                           
  5509                           ;VCAMIX_SPI_Master.c: 79: PORTA |= 0x80 ;
  5510  0727  0020               	movlb	0	; select bank0
  5511  0728  178C               	bsf	12,7	;volatile
  5512  0729  0008               	return
  5513  072A                     __end_of_writeDAC528:	
  5514                           
  5515                           	psect	text2
  5516  0FD3                     __ptext2:	
  5517 ;; *************** function _initDAC528 *****************
  5518 ;; Defined at:
  5519 ;;		line 44 in file "VCAMIX_SPI_Master.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5535 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5536 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5537 ;;Total ram usage:        1 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; Hardware stack levels required when called:    6
  5540 ;; This function calls:
  5541 ;;		_putByte
  5542 ;; This function is called by:
  5543 ;;		_main
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           
  5548                           ;psect for function _initDAC528
  5549  0FD3                     _initDAC528:	
  5550                           
  5551                           ;VCAMIX_SPI_Master.c: 49: PORTA &= 0x7F ;
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in _initDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5555  0FD3  307F               	movlw	127
  5556  0FD4  0020               	movlb	0	; select bank0
  5557  0FD5  00D5               	movwf	??_initDAC528
  5558  0FD6  0855               	movf	??_initDAC528,w
  5559  0FD7  058C               	andwf	12,f	;volatile
  5560                           
  5561                           ;VCAMIX_SPI_Master.c: 51: putByte(0x00,0);
  5562  0FD8  3000               	movlw	0
  5563  0FD9  00CC               	movwf	putByte@clockPin
  5564  0FDA  00CD               	movwf	putByte@clockPin+1
  5565  0FDB  3000               	movlw	0
  5566  0FDC  3182  22DD  318F   	fcall	_putByte
  5567                           
  5568                           ;VCAMIX_SPI_Master.c: 53: putByte(0xFF,0);
  5569  0FDF  3000               	movlw	0
  5570  0FE0  0020               	movlb	0	; select bank0
  5571  0FE1  00CC               	movwf	putByte@clockPin
  5572  0FE2  00CD               	movwf	putByte@clockPin+1
  5573  0FE3  30FF               	movlw	255
  5574  0FE4  3182  22DD         	fcall	_putByte
  5575                           
  5576                           ;VCAMIX_SPI_Master.c: 56: PORTA |= 0x80 ;
  5577  0FE6  0020               	movlb	0	; select bank0
  5578  0FE7  178C               	bsf	12,7	;volatile
  5579  0FE8  0008               	return
  5580  0FE9                     __end_of_initDAC528:	
  5581                           
  5582                           	psect	text3
  5583  02DD                     __ptext3:	
  5584 ;; *************** function _putByte *****************
  5585 ;; Defined at:
  5586 ;;		line 14 in file "VCAMIX_SPI_Master.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  data            1    wreg     unsigned char 
  5589 ;;  clockPin        2   44[BANK0 ] int 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  data            1   50[BANK0 ] unsigned char 
  5592 ;;  i               1   52[BANK0 ] unsigned char 
  5593 ;;  mask            1   51[BANK0 ] unsigned char 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;Total ram usage:        9 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    5
  5610 ;; This function calls:
  5611 ;;		___awtoft
  5612 ;;		___ftmul
  5613 ;;		___fttol
  5614 ;; This function is called by:
  5615 ;;		_initDAC528
  5616 ;;		_writeDAC528
  5617 ;; This function uses a non-reentrant model
  5618 ;;
  5619                           
  5620                           
  5621                           ;psect for function _putByte
  5622  02DD                     _putByte:	
  5623                           
  5624                           ;incstack = 0
  5625                           ; Regs used in _putByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5626                           ;putByte@data stored from wreg
  5627  02DD  0020               	movlb	0	; select bank0
  5628  02DE  00D2               	movwf	putByte@data
  5629                           
  5630                           ;VCAMIX_SPI_Master.c: 15: uint8_t i = 8;
  5631  02DF  3008               	movlw	8
  5632  02E0  00CE               	movwf	??_putByte
  5633  02E1  084E               	movf	??_putByte,w
  5634  02E2  00D4               	movwf	putByte@i
  5635  02E3                     l666:	
  5636                           ;VCAMIX_SPI_Master.c: 16: uint8_t mask;
  5637                           ;VCAMIX_SPI_Master.c: 17: while(i > 0) {
  5638                           
  5639  02E3  0854               	movf	putByte@i,w
  5640  02E4  1903               	btfsc	3,2
  5641  02E5  0008               	return
  5642                           
  5643                           ;VCAMIX_SPI_Master.c: 18: mask = 0x01 << (i - 1);
  5644  02E6  3001               	movlw	1
  5645  02E7  00CE               	movwf	??_putByte
  5646  02E8  0854               	movf	putByte@i,w
  5647  02E9  3EFF               	addlw	-1
  5648  02EA  0A89               	incf	9,f
  5649  02EB  2AED               	goto	u1914
  5650  02EC                     u1915:	
  5651  02EC  35CE               	lslf	??_putByte,f
  5652  02ED                     u1914:	
  5653  02ED  0B89               	decfsz	9,f
  5654  02EE  2AEC               	goto	u1915
  5655  02EF  084E               	movf	??_putByte,w
  5656  02F0  00CF               	movwf	??_putByte+1
  5657  02F1  084F               	movf	??_putByte+1,w
  5658  02F2  00D3               	movwf	putByte@mask
  5659                           
  5660                           ;VCAMIX_SPI_Master.c: 20: PORTB &= 0xBF ;
  5661  02F3  30BF               	movlw	191
  5662  02F4  00CE               	movwf	??_putByte
  5663  02F5  084E               	movf	??_putByte,w
  5664  02F6  058D               	andwf	13,f	;volatile
  5665                           
  5666                           ;VCAMIX_SPI_Master.c: 22: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  5667  02F7  3010               	movlw	low (_clockMicroTime| (0+32768))
  5668  02F8  0084               	movwf	4
  5669  02F9  3090               	movlw	high (_clockMicroTime| (0+32768))
  5670  02FA  0085               	movwf	5
  5671  02FB  3F00               	moviw [0]fsr0
  5672  02FC  00A8               	movwf	___awtoft@c
  5673  02FD  3F01               	moviw [1]fsr0
  5674  02FE  00A9               	movwf	___awtoft@c+1
  5675  02FF  3187  274E  3182   	fcall	___awtoft
  5676  0302  0020               	movlb	0	; select bank0
  5677  0303  0828               	movf	?___awtoft,w
  5678  0304  00B1               	movwf	___ftmul@f2
  5679  0305  0829               	movf	?___awtoft+1,w
  5680  0306  00B2               	movwf	___ftmul@f2+1
  5681  0307  082A               	movf	?___awtoft+2,w
  5682  0308  00B3               	movwf	___ftmul@f2+2
  5683  0309  3000               	movlw	0
  5684  030A  00AE               	movwf	___ftmul@f1
  5685  030B  3000               	movlw	0
  5686  030C  00AF               	movwf	___ftmul@f1+1
  5687  030D  3041               	movlw	65
  5688  030E  00B0               	movwf	___ftmul@f1+2
  5689  030F  3183  2392  3182   	fcall	___ftmul
  5690  0312  0020               	movlb	0	; select bank0
  5691  0313  082E               	movf	?___ftmul,w
  5692  0314  00BE               	movwf	___fttol@f1
  5693  0315  082F               	movf	?___ftmul+1,w
  5694  0316  00BF               	movwf	___fttol@f1+1
  5695  0317  0830               	movf	?___ftmul+2,w
  5696  0318  00C0               	movwf	___fttol@f1+2
  5697  0319  3184  24EF  3182   	fcall	___fttol
  5698  031C  0020               	movlb	0	; select bank0
  5699  031D  083E               	movf	?___fttol,w
  5700  031E  00CE               	movwf	??_putByte
  5701  031F  083F               	movf	?___fttol+1,w
  5702  0320  00CF               	movwf	??_putByte+1
  5703  0321  0840               	movf	?___fttol+2,w
  5704  0322  00D0               	movwf	??_putByte+2
  5705  0323  0841               	movf	?___fttol+3,w
  5706  0324  00D1               	movwf	??_putByte+3
  5707                           
  5708                           ;VCAMIX_SPI_Master.c: 23: if (data & mask){
  5709  0325  0020               	movlb	0	; select bank0
  5710  0326  0852               	movf	putByte@data,w
  5711  0327  0553               	andwf	putByte@mask,w
  5712  0328  1903               	btfsc	3,2
  5713  0329  2B2C               	goto	l2505
  5714                           
  5715                           ;VCAMIX_SPI_Master.c: 25: PORTB |= 0x80 ;
  5716  032A  178D               	bsf	13,7	;volatile
  5717                           
  5718                           ;VCAMIX_SPI_Master.c: 26: }else{
  5719  032B  2B30               	goto	l2507
  5720  032C                     l2505:	
  5721                           
  5722                           ;VCAMIX_SPI_Master.c: 28: PORTB &= 0x7F ;
  5723  032C  307F               	movlw	127
  5724  032D  00CE               	movwf	??_putByte
  5725  032E  084E               	movf	??_putByte,w
  5726  032F  058D               	andwf	13,f	;volatile
  5727  0330                     l2507:	
  5728                           
  5729                           ;VCAMIX_SPI_Master.c: 29: }
  5730                           ;VCAMIX_SPI_Master.c: 31: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  5731  0330  3010               	movlw	low (_clockMicroTime| (0+32768))
  5732  0331  0084               	movwf	4
  5733  0332  3090               	movlw	high (_clockMicroTime| (0+32768))
  5734  0333  0085               	movwf	5
  5735  0334  3F00               	moviw [0]fsr0
  5736  0335  00A8               	movwf	___awtoft@c
  5737  0336  3F01               	moviw [1]fsr0
  5738  0337  00A9               	movwf	___awtoft@c+1
  5739  0338  3187  274E  3182   	fcall	___awtoft
  5740  033B  0020               	movlb	0	; select bank0
  5741  033C  0828               	movf	?___awtoft,w
  5742  033D  00B1               	movwf	___ftmul@f2
  5743  033E  0829               	movf	?___awtoft+1,w
  5744  033F  00B2               	movwf	___ftmul@f2+1
  5745  0340  082A               	movf	?___awtoft+2,w
  5746  0341  00B3               	movwf	___ftmul@f2+2
  5747  0342  3000               	movlw	0
  5748  0343  00AE               	movwf	___ftmul@f1
  5749  0344  3000               	movlw	0
  5750  0345  00AF               	movwf	___ftmul@f1+1
  5751  0346  3041               	movlw	65
  5752  0347  00B0               	movwf	___ftmul@f1+2
  5753  0348  3183  2392  3182   	fcall	___ftmul
  5754  034B  0020               	movlb	0	; select bank0
  5755  034C  082E               	movf	?___ftmul,w
  5756  034D  00BE               	movwf	___fttol@f1
  5757  034E  082F               	movf	?___ftmul+1,w
  5758  034F  00BF               	movwf	___fttol@f1+1
  5759  0350  0830               	movf	?___ftmul+2,w
  5760  0351  00C0               	movwf	___fttol@f1+2
  5761  0352  3184  24EF  3182   	fcall	___fttol
  5762  0355  0020               	movlb	0	; select bank0
  5763  0356  083E               	movf	?___fttol,w
  5764  0357  00CE               	movwf	??_putByte
  5765  0358  083F               	movf	?___fttol+1,w
  5766  0359  00CF               	movwf	??_putByte+1
  5767  035A  0840               	movf	?___fttol+2,w
  5768  035B  00D0               	movwf	??_putByte+2
  5769  035C  0841               	movf	?___fttol+3,w
  5770  035D  00D1               	movwf	??_putByte+3
  5771                           
  5772                           ;VCAMIX_SPI_Master.c: 33: PORTB |= 0x40 ;
  5773  035E  0020               	movlb	0	; select bank0
  5774  035F  170D               	bsf	13,6	;volatile
  5775                           
  5776                           ;VCAMIX_SPI_Master.c: 35: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  5777  0360  3010               	movlw	low (_clockMicroTime| (0+32768))
  5778  0361  0084               	movwf	4
  5779  0362  3090               	movlw	high (_clockMicroTime| (0+32768))
  5780  0363  0085               	movwf	5
  5781  0364  3F00               	moviw [0]fsr0
  5782  0365  00A8               	movwf	___awtoft@c
  5783  0366  3F01               	moviw [1]fsr0
  5784  0367  00A9               	movwf	___awtoft@c+1
  5785  0368  3187  274E  3182   	fcall	___awtoft
  5786  036B  0020               	movlb	0	; select bank0
  5787  036C  0828               	movf	?___awtoft,w
  5788  036D  00B1               	movwf	___ftmul@f2
  5789  036E  0829               	movf	?___awtoft+1,w
  5790  036F  00B2               	movwf	___ftmul@f2+1
  5791  0370  082A               	movf	?___awtoft+2,w
  5792  0371  00B3               	movwf	___ftmul@f2+2
  5793  0372  3000               	movlw	0
  5794  0373  00AE               	movwf	___ftmul@f1
  5795  0374  3000               	movlw	0
  5796  0375  00AF               	movwf	___ftmul@f1+1
  5797  0376  3041               	movlw	65
  5798  0377  00B0               	movwf	___ftmul@f1+2
  5799  0378  3183  2392  3182   	fcall	___ftmul
  5800  037B  0020               	movlb	0	; select bank0
  5801  037C  082E               	movf	?___ftmul,w
  5802  037D  00BE               	movwf	___fttol@f1
  5803  037E  082F               	movf	?___ftmul+1,w
  5804  037F  00BF               	movwf	___fttol@f1+1
  5805  0380  0830               	movf	?___ftmul+2,w
  5806  0381  00C0               	movwf	___fttol@f1+2
  5807  0382  3184  24EF  3182   	fcall	___fttol
  5808  0385  0020               	movlb	0	; select bank0
  5809  0386  083E               	movf	?___fttol,w
  5810  0387  00CE               	movwf	??_putByte
  5811  0388  083F               	movf	?___fttol+1,w
  5812  0389  00CF               	movwf	??_putByte+1
  5813  038A  0840               	movf	?___fttol+2,w
  5814  038B  00D0               	movwf	??_putByte+2
  5815  038C  0841               	movf	?___fttol+3,w
  5816  038D  00D1               	movwf	??_putByte+3
  5817                           
  5818                           ;VCAMIX_SPI_Master.c: 36: --i;
  5819  038E  3001               	movlw	1
  5820  038F  0020               	movlb	0	; select bank0
  5821  0390  02D4               	subwf	putByte@i,f
  5822  0391  2AE3               	goto	l666
  5823  0392                     __end_of_putByte:	
  5824                           
  5825                           	psect	text4
  5826  04EF                     __ptext4:	
  5827 ;; *************** function ___fttol *****************
  5828 ;; Defined at:
  5829 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  f1              3   30[BANK0 ] float 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;  lval            4   39[BANK0 ] unsigned long 
  5834 ;;  exp1            1   43[BANK0 ] unsigned char 
  5835 ;;  sign1           1   38[BANK0 ] unsigned char 
  5836 ;; Return value:  Size  Location     Type
  5837 ;;                  4   30[BANK0 ] long 
  5838 ;; Registers used:
  5839 ;;		wreg, status,2, status,0
  5840 ;; Tracked objects:
  5841 ;;		On entry : 0/0
  5842 ;;		On exit  : 0/0
  5843 ;;		Unchanged: 0/0
  5844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5845 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5846 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5847 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5848 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;Total ram usage:       14 bytes
  5850 ;; Hardware stack levels used:    1
  5851 ;; Hardware stack levels required when called:    3
  5852 ;; This function calls:
  5853 ;;		Nothing
  5854 ;; This function is called by:
  5855 ;;		_main
  5856 ;;		_putByte
  5857 ;;		_LED7SegDisplayValue
  5858 ;; This function uses a non-reentrant model
  5859 ;;
  5860                           
  5861                           
  5862                           ;psect for function ___fttol
  5863  04EF                     ___fttol:	
  5864                           
  5865                           ;incstack = 0
  5866                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5867  04EF  0020               	movlb	0	; select bank0
  5868  04F0  083E               	movf	___fttol@f1,w
  5869  04F1  00C2               	movwf	??___fttol
  5870  04F2  083F               	movf	___fttol@f1+1,w
  5871  04F3  00C3               	movwf	??___fttol+1
  5872  04F4  0840               	movf	___fttol@f1+2,w
  5873  04F5  00C4               	movwf	??___fttol+2
  5874  04F6  1003               	clrc
  5875  04F7  0D43               	rlf	??___fttol+1,w
  5876  04F8  0D44               	rlf	??___fttol+2,w
  5877  04F9  00C5               	movwf	??___fttol+3
  5878  04FA  0845               	movf	??___fttol+3,w
  5879  04FB  00CB               	movwf	___fttol@exp1
  5880  04FC  084B               	movf	___fttol@exp1,w
  5881  04FD  1D03               	btfss	3,2
  5882  04FE  2D08               	goto	l2335
  5883  04FF  3000               	movlw	0
  5884  0500  00C1               	movwf	?___fttol+3
  5885  0501  3000               	movlw	0
  5886  0502  00C0               	movwf	?___fttol+2
  5887  0503  3000               	movlw	0
  5888  0504  00BF               	movwf	?___fttol+1
  5889  0505  3000               	movlw	0
  5890  0506  00BE               	movwf	?___fttol
  5891  0507  0008               	return
  5892  0508                     l2335:	
  5893  0508  083E               	movf	___fttol@f1,w
  5894  0509  00C2               	movwf	??___fttol
  5895  050A  083F               	movf	___fttol@f1+1,w
  5896  050B  00C3               	movwf	??___fttol+1
  5897  050C  0840               	movf	___fttol@f1+2,w
  5898  050D  00C4               	movwf	??___fttol+2
  5899  050E  3017               	movlw	23
  5900  050F                     u1705:	
  5901  050F  36C4               	lsrf	??___fttol+2,f
  5902  0510  0CC3               	rrf	??___fttol+1,f
  5903  0511  0CC2               	rrf	??___fttol,f
  5904  0512  0B89               	decfsz	9,f
  5905  0513  2D0F               	goto	u1705
  5906  0514  0842               	movf	??___fttol,w
  5907  0515  00C5               	movwf	??___fttol+3
  5908  0516  0845               	movf	??___fttol+3,w
  5909  0517  00C6               	movwf	___fttol@sign1
  5910  0518  17BF               	bsf	___fttol@f1+1,7
  5911  0519  30FF               	movlw	255
  5912  051A  05BE               	andwf	___fttol@f1,f
  5913  051B  30FF               	movlw	255
  5914  051C  05BF               	andwf	___fttol@f1+1,f
  5915  051D  3000               	movlw	0
  5916  051E  05C0               	andwf	___fttol@f1+2,f
  5917  051F  083E               	movf	___fttol@f1,w
  5918  0520  00C7               	movwf	___fttol@lval
  5919  0521  083F               	movf	___fttol@f1+1,w
  5920  0522  00C8               	movwf	___fttol@lval+1
  5921  0523  0840               	movf	___fttol@f1+2,w
  5922  0524  00C9               	movwf	___fttol@lval+2
  5923  0525  01CA               	clrf	___fttol@lval+3
  5924  0526  308E               	movlw	142
  5925  0527  02CB               	subwf	___fttol@exp1,f
  5926  0528  1FCB               	btfss	___fttol@exp1,7
  5927  0529  2D46               	goto	l2355
  5928  052A  084B               	movf	___fttol@exp1,w
  5929  052B  3A80               	xorlw	128
  5930  052C  3E8F               	addlw	143
  5931  052D  1803               	skipnc
  5932  052E  2D38               	goto	l2353
  5933  052F  3000               	movlw	0
  5934  0530  00C1               	movwf	?___fttol+3
  5935  0531  3000               	movlw	0
  5936  0532  00C0               	movwf	?___fttol+2
  5937  0533  3000               	movlw	0
  5938  0534  00BF               	movwf	?___fttol+1
  5939  0535  3000               	movlw	0
  5940  0536  00BE               	movwf	?___fttol
  5941  0537  0008               	return
  5942  0538                     l2353:	
  5943  0538  3001               	movlw	1
  5944  0539                     u1735:	
  5945  0539  36CA               	lsrf	___fttol@lval+3,f
  5946  053A  0CC9               	rrf	___fttol@lval+2,f
  5947  053B  0CC8               	rrf	___fttol@lval+1,f
  5948  053C  0CC7               	rrf	___fttol@lval,f
  5949  053D  0B89               	decfsz	9,f
  5950  053E  2D39               	goto	u1735
  5951  053F  3001               	movlw	1
  5952  0540  00C2               	movwf	??___fttol
  5953  0541  0842               	movf	??___fttol,w
  5954  0542  07CB               	addwf	___fttol@exp1,f
  5955  0543  1903               	btfsc	3,2
  5956  0544  2D5F               	goto	l2363
  5957  0545  2D38               	goto	l2353
  5958  0546                     l2355:	
  5959  0546  3018               	movlw	24
  5960  0547  024B               	subwf	___fttol@exp1,w
  5961  0548  1C03               	skipc
  5962  0549  2D5C               	goto	l1011
  5963  054A  3000               	movlw	0
  5964  054B  00C1               	movwf	?___fttol+3
  5965  054C  3000               	movlw	0
  5966  054D  00C0               	movwf	?___fttol+2
  5967  054E  3000               	movlw	0
  5968  054F  00BF               	movwf	?___fttol+1
  5969  0550  3000               	movlw	0
  5970  0551  00BE               	movwf	?___fttol
  5971  0552  0008               	return
  5972  0553                     l2361:	
  5973  0553  3001               	movlw	1
  5974  0554                     u1765:	
  5975  0554  35C7               	lslf	___fttol@lval,f
  5976  0555  0DC8               	rlf	___fttol@lval+1,f
  5977  0556  0DC9               	rlf	___fttol@lval+2,f
  5978  0557  0DCA               	rlf	___fttol@lval+3,f
  5979  0558  0B89               	decfsz	9,f
  5980  0559  2D54               	goto	u1765
  5981  055A  3001               	movlw	1
  5982  055B  02CB               	subwf	___fttol@exp1,f
  5983  055C                     l1011:	
  5984  055C  084B               	movf	___fttol@exp1,w
  5985  055D  1D03               	btfss	3,2
  5986  055E  2D53               	goto	l2361
  5987  055F                     l2363:	
  5988  055F  0846               	movf	___fttol@sign1,w
  5989  0560  1903               	btfsc	3,2
  5990  0561  2D6D               	goto	l2367
  5991  0562  09C7               	comf	___fttol@lval,f
  5992  0563  09C8               	comf	___fttol@lval+1,f
  5993  0564  09C9               	comf	___fttol@lval+2,f
  5994  0565  09CA               	comf	___fttol@lval+3,f
  5995  0566  0AC7               	incf	___fttol@lval,f
  5996  0567  1903               	skipnz
  5997  0568  0AC8               	incf	___fttol@lval+1,f
  5998  0569  1903               	skipnz
  5999  056A  0AC9               	incf	___fttol@lval+2,f
  6000  056B  1903               	skipnz
  6001  056C  0ACA               	incf	___fttol@lval+3,f
  6002  056D                     l2367:	
  6003  056D  084A               	movf	___fttol@lval+3,w
  6004  056E  00C1               	movwf	?___fttol+3
  6005  056F  0849               	movf	___fttol@lval+2,w
  6006  0570  00C0               	movwf	?___fttol+2
  6007  0571  0848               	movf	___fttol@lval+1,w
  6008  0572  00BF               	movwf	?___fttol+1
  6009  0573  0847               	movf	___fttol@lval,w
  6010  0574  00BE               	movwf	?___fttol
  6011  0575  0008               	return
  6012  0576                     __end_of___fttol:	
  6013                           
  6014                           	psect	text5
  6015  0392                     __ptext5:	
  6016 ;; *************** function ___ftmul *****************
  6017 ;; Defined at:
  6018 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  f1              3   14[BANK0 ] float 
  6021 ;;  f2              3   17[BANK0 ] float 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  6024 ;;  sign            1   29[BANK0 ] unsigned char 
  6025 ;;  cntr            1   28[BANK0 ] unsigned char 
  6026 ;;  exp             1   24[BANK0 ] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  3   14[BANK0 ] float 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, pclath, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6036 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;Total ram usage:       16 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    4
  6043 ;; This function calls:
  6044 ;;		___ftpack
  6045 ;; This function is called by:
  6046 ;;		_putByte
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           
  6051                           ;psect for function ___ftmul
  6052  0392                     ___ftmul:	
  6053                           
  6054                           ;incstack = 0
  6055                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6056  0392  0020               	movlb	0	; select bank0
  6057  0393  082E               	movf	___ftmul@f1,w
  6058  0394  00B4               	movwf	??___ftmul
  6059  0395  082F               	movf	___ftmul@f1+1,w
  6060  0396  00B5               	movwf	??___ftmul+1
  6061  0397  0830               	movf	___ftmul@f1+2,w
  6062  0398  00B6               	movwf	??___ftmul+2
  6063  0399  1003               	clrc
  6064  039A  0D35               	rlf	??___ftmul+1,w
  6065  039B  0D36               	rlf	??___ftmul+2,w
  6066  039C  00B7               	movwf	??___ftmul+3
  6067  039D  0837               	movf	??___ftmul+3,w
  6068  039E  00B8               	movwf	___ftmul@exp
  6069  039F  0838               	movf	___ftmul@exp,w
  6070  03A0  1D03               	btfss	3,2
  6071  03A1  2BA9               	goto	l2285
  6072  03A2  3000               	movlw	0
  6073  03A3  00AE               	movwf	?___ftmul
  6074  03A4  3000               	movlw	0
  6075  03A5  00AF               	movwf	?___ftmul+1
  6076  03A6  3000               	movlw	0
  6077  03A7  00B0               	movwf	?___ftmul+2
  6078  03A8  0008               	return
  6079  03A9                     l2285:	
  6080  03A9  0831               	movf	___ftmul@f2,w
  6081  03AA  00B4               	movwf	??___ftmul
  6082  03AB  0832               	movf	___ftmul@f2+1,w
  6083  03AC  00B5               	movwf	??___ftmul+1
  6084  03AD  0833               	movf	___ftmul@f2+2,w
  6085  03AE  00B6               	movwf	??___ftmul+2
  6086  03AF  1003               	clrc
  6087  03B0  0D35               	rlf	??___ftmul+1,w
  6088  03B1  0D36               	rlf	??___ftmul+2,w
  6089  03B2  00B7               	movwf	??___ftmul+3
  6090  03B3  0837               	movf	??___ftmul+3,w
  6091  03B4  00BD               	movwf	___ftmul@sign
  6092  03B5  083D               	movf	___ftmul@sign,w
  6093  03B6  1D03               	btfss	3,2
  6094  03B7  2BBF               	goto	l2291
  6095  03B8  3000               	movlw	0
  6096  03B9  00AE               	movwf	?___ftmul
  6097  03BA  3000               	movlw	0
  6098  03BB  00AF               	movwf	?___ftmul+1
  6099  03BC  3000               	movlw	0
  6100  03BD  00B0               	movwf	?___ftmul+2
  6101  03BE  0008               	return
  6102  03BF                     l2291:	
  6103  03BF  083D               	movf	___ftmul@sign,w
  6104  03C0  3E7B               	addlw	123
  6105  03C1  00B4               	movwf	??___ftmul
  6106  03C2  0834               	movf	??___ftmul,w
  6107  03C3  07B8               	addwf	___ftmul@exp,f
  6108  03C4  082E               	movf	___ftmul@f1,w
  6109  03C5  00B4               	movwf	??___ftmul
  6110  03C6  082F               	movf	___ftmul@f1+1,w
  6111  03C7  00B5               	movwf	??___ftmul+1
  6112  03C8  0830               	movf	___ftmul@f1+2,w
  6113  03C9  00B6               	movwf	??___ftmul+2
  6114  03CA  3010               	movlw	16
  6115  03CB                     u1595:	
  6116  03CB  36B6               	lsrf	??___ftmul+2,f
  6117  03CC  0CB5               	rrf	??___ftmul+1,f
  6118  03CD  0CB4               	rrf	??___ftmul,f
  6119  03CE  0B89               	decfsz	9,f
  6120  03CF  2BCB               	goto	u1595
  6121  03D0  0834               	movf	??___ftmul,w
  6122  03D1  00B7               	movwf	??___ftmul+3
  6123  03D2  0837               	movf	??___ftmul+3,w
  6124  03D3  00BD               	movwf	___ftmul@sign
  6125  03D4  0831               	movf	___ftmul@f2,w
  6126  03D5  00B4               	movwf	??___ftmul
  6127  03D6  0832               	movf	___ftmul@f2+1,w
  6128  03D7  00B5               	movwf	??___ftmul+1
  6129  03D8  0833               	movf	___ftmul@f2+2,w
  6130  03D9  00B6               	movwf	??___ftmul+2
  6131  03DA  3010               	movlw	16
  6132  03DB                     u1605:	
  6133  03DB  36B6               	lsrf	??___ftmul+2,f
  6134  03DC  0CB5               	rrf	??___ftmul+1,f
  6135  03DD  0CB4               	rrf	??___ftmul,f
  6136  03DE  0B89               	decfsz	9,f
  6137  03DF  2BDB               	goto	u1605
  6138  03E0  0834               	movf	??___ftmul,w
  6139  03E1  00B7               	movwf	??___ftmul+3
  6140  03E2  0837               	movf	??___ftmul+3,w
  6141  03E3  06BD               	xorwf	___ftmul@sign,f
  6142  03E4  3080               	movlw	128
  6143  03E5  00B4               	movwf	??___ftmul
  6144  03E6  0834               	movf	??___ftmul,w
  6145  03E7  05BD               	andwf	___ftmul@sign,f
  6146  03E8  17AF               	bsf	___ftmul@f1+1,7
  6147  03E9  17B2               	bsf	___ftmul@f2+1,7
  6148  03EA  30FF               	movlw	255
  6149  03EB  05B1               	andwf	___ftmul@f2,f
  6150  03EC  30FF               	movlw	255
  6151  03ED  05B2               	andwf	___ftmul@f2+1,f
  6152  03EE  3000               	movlw	0
  6153  03EF  05B3               	andwf	___ftmul@f2+2,f
  6154  03F0  3000               	movlw	0
  6155  03F1  00B9               	movwf	___ftmul@f3_as_product
  6156  03F2  3000               	movlw	0
  6157  03F3  00BA               	movwf	___ftmul@f3_as_product+1
  6158  03F4  3000               	movlw	0
  6159  03F5  00BB               	movwf	___ftmul@f3_as_product+2
  6160  03F6  3007               	movlw	7
  6161  03F7  00B4               	movwf	??___ftmul
  6162  03F8  0834               	movf	??___ftmul,w
  6163  03F9  00BC               	movwf	___ftmul@cntr
  6164  03FA                     l2303:	
  6165  03FA  1C2E               	btfss	___ftmul@f1,0
  6166  03FB  2C02               	goto	l2307
  6167  03FC  0831               	movf	___ftmul@f2,w
  6168  03FD  07B9               	addwf	___ftmul@f3_as_product,f
  6169  03FE  0832               	movf	___ftmul@f2+1,w
  6170  03FF  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  6171  0400  0833               	movf	___ftmul@f2+2,w
  6172  0401  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  6173  0402                     l2307:	
  6174  0402  3001               	movlw	1
  6175  0403                     u1625:	
  6176  0403  36B0               	lsrf	___ftmul@f1+2,f
  6177  0404  0CAF               	rrf	___ftmul@f1+1,f
  6178  0405  0CAE               	rrf	___ftmul@f1,f
  6179  0406  0B89               	decfsz	9,f
  6180  0407  2C03               	goto	u1625
  6181  0408  3001               	movlw	1
  6182  0409                     u1635:	
  6183  0409  35B1               	lslf	___ftmul@f2,f
  6184  040A  0DB2               	rlf	___ftmul@f2+1,f
  6185  040B  0DB3               	rlf	___ftmul@f2+2,f
  6186  040C  0B89               	decfsz	9,f
  6187  040D  2C09               	goto	u1635
  6188  040E  3001               	movlw	1
  6189  040F  02BC               	subwf	___ftmul@cntr,f
  6190  0410  1D03               	btfss	3,2
  6191  0411  2BFA               	goto	l2303
  6192  0412  3009               	movlw	9
  6193  0413  00B4               	movwf	??___ftmul
  6194  0414  0834               	movf	??___ftmul,w
  6195  0415  00BC               	movwf	___ftmul@cntr
  6196  0416                     l2315:	
  6197  0416  1C2E               	btfss	___ftmul@f1,0
  6198  0417  2C1E               	goto	l2319
  6199  0418  0831               	movf	___ftmul@f2,w
  6200  0419  07B9               	addwf	___ftmul@f3_as_product,f
  6201  041A  0832               	movf	___ftmul@f2+1,w
  6202  041B  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  6203  041C  0833               	movf	___ftmul@f2+2,w
  6204  041D  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  6205  041E                     l2319:	
  6206  041E  3001               	movlw	1
  6207  041F                     u1665:	
  6208  041F  36B0               	lsrf	___ftmul@f1+2,f
  6209  0420  0CAF               	rrf	___ftmul@f1+1,f
  6210  0421  0CAE               	rrf	___ftmul@f1,f
  6211  0422  0B89               	decfsz	9,f
  6212  0423  2C1F               	goto	u1665
  6213  0424  3001               	movlw	1
  6214  0425                     u1675:	
  6215  0425  36BB               	lsrf	___ftmul@f3_as_product+2,f
  6216  0426  0CBA               	rrf	___ftmul@f3_as_product+1,f
  6217  0427  0CB9               	rrf	___ftmul@f3_as_product,f
  6218  0428  0B89               	decfsz	9,f
  6219  0429  2C25               	goto	u1675
  6220  042A  3001               	movlw	1
  6221  042B  02BC               	subwf	___ftmul@cntr,f
  6222  042C  1D03               	btfss	3,2
  6223  042D  2C16               	goto	l2315
  6224  042E  0839               	movf	___ftmul@f3_as_product,w
  6225  042F  00A0               	movwf	___ftpack@arg
  6226  0430  083A               	movf	___ftmul@f3_as_product+1,w
  6227  0431  00A1               	movwf	___ftpack@arg+1
  6228  0432  083B               	movf	___ftmul@f3_as_product+2,w
  6229  0433  00A2               	movwf	___ftpack@arg+2
  6230  0434  0838               	movf	___ftmul@exp,w
  6231  0435  00B4               	movwf	??___ftmul
  6232  0436  0834               	movf	??___ftmul,w
  6233  0437  00A3               	movwf	___ftpack@exp
  6234  0438  083D               	movf	___ftmul@sign,w
  6235  0439  00B5               	movwf	??___ftmul+1
  6236  043A  0835               	movf	??___ftmul+1,w
  6237  043B  00A4               	movwf	___ftpack@sign
  6238  043C  3185  2576         	fcall	___ftpack
  6239  043E  0020               	movlb	0	; select bank0
  6240  043F  0820               	movf	?___ftpack,w
  6241  0440  00AE               	movwf	?___ftmul
  6242  0441  0821               	movf	?___ftpack+1,w
  6243  0442  00AF               	movwf	?___ftmul+1
  6244  0443  0822               	movf	?___ftpack+2,w
  6245  0444  00B0               	movwf	?___ftmul+2
  6246  0445  0008               	return
  6247  0446                     __end_of___ftmul:	
  6248                           
  6249                           	psect	text6
  6250  074E                     __ptext6:	
  6251 ;; *************** function ___awtoft *****************
  6252 ;; Defined at:
  6253 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;  c               2    8[BANK0 ] int 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  sign            1   13[BANK0 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  3    8[BANK0 ] float 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0, pclath, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6267 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6268 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6271 ;;Total ram usage:        6 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    4
  6274 ;; This function calls:
  6275 ;;		___ftpack
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;;		_putByte
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           
  6283                           ;psect for function ___awtoft
  6284  074E                     ___awtoft:	
  6285                           
  6286                           ;incstack = 0
  6287                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6288  074E  0020               	movlb	0	; select bank0
  6289  074F  01AD               	clrf	___awtoft@sign
  6290  0750  1FA9               	btfss	___awtoft@c+1,7
  6291  0751  2F59               	goto	l2275
  6292  0752  09A8               	comf	___awtoft@c,f
  6293  0753  09A9               	comf	___awtoft@c+1,f
  6294  0754  0AA8               	incf	___awtoft@c,f
  6295  0755  1903               	skipnz
  6296  0756  0AA9               	incf	___awtoft@c+1,f
  6297  0757  01AD               	clrf	___awtoft@sign
  6298  0758  0AAD               	incf	___awtoft@sign,f
  6299  0759                     l2275:	
  6300  0759  0828               	movf	___awtoft@c,w
  6301  075A  00A0               	movwf	___ftpack@arg
  6302  075B  0829               	movf	___awtoft@c+1,w
  6303  075C  00A1               	movwf	___ftpack@arg+1
  6304  075D  01A2               	clrf	___ftpack@arg+2
  6305  075E  308E               	movlw	142
  6306  075F  00AB               	movwf	??___awtoft
  6307  0760  082B               	movf	??___awtoft,w
  6308  0761  00A3               	movwf	___ftpack@exp
  6309  0762  082D               	movf	___awtoft@sign,w
  6310  0763  00AC               	movwf	??___awtoft+1
  6311  0764  082C               	movf	??___awtoft+1,w
  6312  0765  00A4               	movwf	___ftpack@sign
  6313  0766  3185  2576         	fcall	___ftpack
  6314  0768  0020               	movlb	0	; select bank0
  6315  0769  0820               	movf	?___ftpack,w
  6316  076A  00A8               	movwf	?___awtoft
  6317  076B  0821               	movf	?___ftpack+1,w
  6318  076C  00A9               	movwf	?___awtoft+1
  6319  076D  0822               	movf	?___ftpack+2,w
  6320  076E  00AA               	movwf	?___awtoft+2
  6321  076F  0008               	return
  6322  0770                     __end_of___awtoft:	
  6323                           
  6324                           	psect	text7
  6325  05DB                     __ptext7:	
  6326 ;; *************** function _blinkyLoop *****************
  6327 ;; Defined at:
  6328 ;;		line 125 in file "main.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;  maxLoops        2   17[BANK0 ] int 
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;  loopCount       2   22[BANK0 ] int 
  6333 ;;  delayTime       2   20[BANK0 ] int 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      void 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;Total ram usage:        7 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    5
  6350 ;; This function calls:
  6351 ;;		___wmul
  6352 ;;		_delay
  6353 ;; This function is called by:
  6354 ;;		_main
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function _blinkyLoop
  6360  05DB                     _blinkyLoop:	
  6361                           
  6362                           ;main.c: 126: int loopCount=maxLoops;
  6363                           
  6364                           ;incstack = 0
  6365                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6366  05DB  0020               	movlb	0	; select bank0
  6367  05DC  0832               	movf	blinkyLoop@maxLoops+1,w
  6368  05DD  00B7               	movwf	blinkyLoop@loopCount+1
  6369  05DE  0831               	movf	blinkyLoop@maxLoops,w
  6370  05DF  00B6               	movwf	blinkyLoop@loopCount
  6371                           
  6372                           ;main.c: 127: int delayTime;
  6373                           ;main.c: 129: ODCONB &= 0xE0;
  6374  05E0  30E0               	movlw	224
  6375  05E1  00B3               	movwf	??_blinkyLoop
  6376  05E2  0833               	movf	??_blinkyLoop,w
  6377  05E3  003E               	movlb	30	; select bank30
  6378  05E4  05C5               	andwf	69,f	;volatile
  6379                           
  6380                           ;main.c: 130: ODCONC &= 0x1F;
  6381  05E5  301F               	movlw	31
  6382  05E6  0020               	movlb	0	; select bank0
  6383  05E7  00B3               	movwf	??_blinkyLoop
  6384  05E8  0833               	movf	??_blinkyLoop,w
  6385  05E9  003E               	movlb	30	; select bank30
  6386  05EA  05D0               	andwf	80,f	;volatile
  6387  05EB                     l3367:	
  6388                           ;main.c: 131: while(loopCount>0){
  6389                           
  6390  05EB  0020               	movlb	0	; select bank0
  6391  05EC  0837               	movf	blinkyLoop@loopCount+1,w
  6392  05ED  3A80               	xorlw	128
  6393  05EE  00B3               	movwf	??_blinkyLoop
  6394  05EF  3080               	movlw	128
  6395  05F0  0233               	subwf	??_blinkyLoop,w
  6396  05F1  1D03               	skipz
  6397  05F2  2DF5               	goto	u2995
  6398  05F3  3001               	movlw	1
  6399  05F4  0236               	subwf	blinkyLoop@loopCount,w
  6400  05F5                     u2995:	
  6401  05F5  1C03               	btfss	3,0
  6402  05F6  2E2D               	goto	l3369
  6403                           
  6404                           ;main.c: 132: delayTime=loopCount*400;
  6405  05F7  0020               	movlb	0	; select bank0
  6406  05F8  0837               	movf	blinkyLoop@loopCount+1,w
  6407  05F9  00A1               	movwf	___wmul@multiplier+1
  6408  05FA  0836               	movf	blinkyLoop@loopCount,w
  6409  05FB  00A0               	movwf	___wmul@multiplier
  6410  05FC  3090               	movlw	144
  6411  05FD  00A2               	movwf	___wmul@multiplicand
  6412  05FE  3001               	movlw	1
  6413  05FF  00A3               	movwf	___wmul@multiplicand+1
  6414  0600  3187  278C  3185   	fcall	___wmul
  6415  0603  0020               	movlb	0	; select bank0
  6416  0604  0821               	movf	?___wmul+1,w
  6417  0605  00B5               	movwf	blinkyLoop@delayTime+1
  6418  0606  0820               	movf	?___wmul,w
  6419  0607  00B4               	movwf	blinkyLoop@delayTime
  6420                           
  6421                           ;main.c: 135: PORTB |= 0x1F;
  6422  0608  301F               	movlw	31
  6423  0609  00B3               	movwf	??_blinkyLoop
  6424  060A  0833               	movf	??_blinkyLoop,w
  6425  060B  048D               	iorwf	13,f	;volatile
  6426                           
  6427                           ;main.c: 136: PORTC |= 0xE0;
  6428  060C  30E0               	movlw	224
  6429  060D  00B3               	movwf	??_blinkyLoop
  6430  060E  0833               	movf	??_blinkyLoop,w
  6431  060F  048E               	iorwf	14,f	;volatile
  6432                           
  6433                           ;main.c: 138: delay(delayTime);
  6434  0610  0835               	movf	blinkyLoop@delayTime+1,w
  6435  0611  00A7               	movwf	delay@delaytime+1
  6436  0612  0834               	movf	blinkyLoop@delayTime,w
  6437  0613  00A6               	movwf	delay@delaytime
  6438  0614  3186  263D  3185   	fcall	_delay
  6439                           
  6440                           ;main.c: 140: PORTB &= 0xE0;
  6441  0617  30E0               	movlw	224
  6442  0618  0020               	movlb	0	; select bank0
  6443  0619  00B3               	movwf	??_blinkyLoop
  6444  061A  0833               	movf	??_blinkyLoop,w
  6445  061B  058D               	andwf	13,f	;volatile
  6446                           
  6447                           ;main.c: 141: PORTC &= 0x1F;
  6448  061C  301F               	movlw	31
  6449  061D  00B3               	movwf	??_blinkyLoop
  6450  061E  0833               	movf	??_blinkyLoop,w
  6451  061F  058E               	andwf	14,f	;volatile
  6452                           
  6453                           ;main.c: 143: delay(delayTime);
  6454  0620  0835               	movf	blinkyLoop@delayTime+1,w
  6455  0621  00A7               	movwf	delay@delaytime+1
  6456  0622  0834               	movf	blinkyLoop@delayTime,w
  6457  0623  00A6               	movwf	delay@delaytime
  6458  0624  3186  263D  3185   	fcall	_delay
  6459                           
  6460                           ;main.c: 145: loopCount--;
  6461  0627  30FF               	movlw	255
  6462  0628  0020               	movlb	0	; select bank0
  6463  0629  07B6               	addwf	blinkyLoop@loopCount,f
  6464  062A  30FF               	movlw	255
  6465  062B  3DB7               	addwfc	blinkyLoop@loopCount+1,f
  6466  062C  2DEB               	goto	l3367
  6467  062D                     l3369:	
  6468                           
  6469                           ;main.c: 146: }
  6470                           ;main.c: 147: PORTB |= 0x1F;
  6471  062D  301F               	movlw	31
  6472  062E  0020               	movlb	0	; select bank0
  6473  062F  00B3               	movwf	??_blinkyLoop
  6474  0630  0833               	movf	??_blinkyLoop,w
  6475  0631  048D               	iorwf	13,f	;volatile
  6476                           
  6477                           ;main.c: 148: PORTC |= 0xE0;
  6478  0632  30E0               	movlw	224
  6479  0633  00B3               	movwf	??_blinkyLoop
  6480  0634  0833               	movf	??_blinkyLoop,w
  6481  0635  048E               	iorwf	14,f	;volatile
  6482                           
  6483                           ;main.c: 149: delay(5000);
  6484  0636  3088               	movlw	136
  6485  0637  00A6               	movwf	delay@delaytime
  6486  0638  3013               	movlw	19
  6487  0639  00A7               	movwf	delay@delaytime+1
  6488  063A  3186  263D         	fcall	_delay
  6489  063C  0008               	return
  6490  063D                     __end_of_blinkyLoop:	
  6491                           ;main.c: 150: return;
  6492                           
  6493                           
  6494                           	psect	text8
  6495  0446                     __ptext8:	
  6496 ;; *************** function ___ftdiv *****************
  6497 ;; Defined at:
  6498 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  f2              3   14[BANK0 ] float 
  6501 ;;  f1              3   17[BANK0 ] float 
  6502 ;; Auto vars:     Size  Location     Type
  6503 ;;  f3              3   25[BANK0 ] float 
  6504 ;;  sign            1   29[BANK0 ] unsigned char 
  6505 ;;  exp             1   28[BANK0 ] unsigned char 
  6506 ;;  cntr            1   24[BANK0 ] unsigned char 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  3   14[BANK0 ] float 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6516 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;Total ram usage:       16 bytes
  6521 ;; Hardware stack levels used:    1
  6522 ;; Hardware stack levels required when called:    4
  6523 ;; This function calls:
  6524 ;;		___ftpack
  6525 ;; This function is called by:
  6526 ;;		_main
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           
  6531                           ;psect for function ___ftdiv
  6532  0446                     ___ftdiv:	
  6533                           
  6534                           ;incstack = 0
  6535                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6536  0446  0020               	movlb	0	; select bank0
  6537  0447  0831               	movf	___ftdiv@f1,w
  6538  0448  00B4               	movwf	??___ftdiv
  6539  0449  0832               	movf	___ftdiv@f1+1,w
  6540  044A  00B5               	movwf	??___ftdiv+1
  6541  044B  0833               	movf	___ftdiv@f1+2,w
  6542  044C  00B6               	movwf	??___ftdiv+2
  6543  044D  1003               	clrc
  6544  044E  0D35               	rlf	??___ftdiv+1,w
  6545  044F  0D36               	rlf	??___ftdiv+2,w
  6546  0450  00B7               	movwf	??___ftdiv+3
  6547  0451  0837               	movf	??___ftdiv+3,w
  6548  0452  00BC               	movwf	___ftdiv@exp
  6549  0453  083C               	movf	___ftdiv@exp,w
  6550  0454  1D03               	btfss	3,2
  6551  0455  2C5D               	goto	l2787
  6552  0456  3000               	movlw	0
  6553  0457  00AE               	movwf	?___ftdiv
  6554  0458  3000               	movlw	0
  6555  0459  00AF               	movwf	?___ftdiv+1
  6556  045A  3000               	movlw	0
  6557  045B  00B0               	movwf	?___ftdiv+2
  6558  045C  0008               	return
  6559  045D                     l2787:	
  6560  045D  082E               	movf	___ftdiv@f2,w
  6561  045E  00B4               	movwf	??___ftdiv
  6562  045F  082F               	movf	___ftdiv@f2+1,w
  6563  0460  00B5               	movwf	??___ftdiv+1
  6564  0461  0830               	movf	___ftdiv@f2+2,w
  6565  0462  00B6               	movwf	??___ftdiv+2
  6566  0463  1003               	clrc
  6567  0464  0D35               	rlf	??___ftdiv+1,w
  6568  0465  0D36               	rlf	??___ftdiv+2,w
  6569  0466  00B7               	movwf	??___ftdiv+3
  6570  0467  0837               	movf	??___ftdiv+3,w
  6571  0468  00BD               	movwf	___ftdiv@sign
  6572  0469  083D               	movf	___ftdiv@sign,w
  6573  046A  1D03               	btfss	3,2
  6574  046B  2C73               	goto	l2793
  6575  046C  3000               	movlw	0
  6576  046D  00AE               	movwf	?___ftdiv
  6577  046E  3000               	movlw	0
  6578  046F  00AF               	movwf	?___ftdiv+1
  6579  0470  3000               	movlw	0
  6580  0471  00B0               	movwf	?___ftdiv+2
  6581  0472  0008               	return
  6582  0473                     l2793:	
  6583  0473  3000               	movlw	0
  6584  0474  00B9               	movwf	___ftdiv@f3
  6585  0475  3000               	movlw	0
  6586  0476  00BA               	movwf	___ftdiv@f3+1
  6587  0477  3000               	movlw	0
  6588  0478  00BB               	movwf	___ftdiv@f3+2
  6589  0479  3089               	movlw	137
  6590  047A  073D               	addwf	___ftdiv@sign,w
  6591  047B  00B4               	movwf	??___ftdiv
  6592  047C  0834               	movf	??___ftdiv,w
  6593  047D  02BC               	subwf	___ftdiv@exp,f
  6594  047E  0831               	movf	___ftdiv@f1,w
  6595  047F  00B4               	movwf	??___ftdiv
  6596  0480  0832               	movf	___ftdiv@f1+1,w
  6597  0481  00B5               	movwf	??___ftdiv+1
  6598  0482  0833               	movf	___ftdiv@f1+2,w
  6599  0483  00B6               	movwf	??___ftdiv+2
  6600  0484  3010               	movlw	16
  6601  0485                     u2195:	
  6602  0485  36B6               	lsrf	??___ftdiv+2,f
  6603  0486  0CB5               	rrf	??___ftdiv+1,f
  6604  0487  0CB4               	rrf	??___ftdiv,f
  6605  0488  0B89               	decfsz	9,f
  6606  0489  2C85               	goto	u2195
  6607  048A  0834               	movf	??___ftdiv,w
  6608  048B  00B7               	movwf	??___ftdiv+3
  6609  048C  0837               	movf	??___ftdiv+3,w
  6610  048D  00BD               	movwf	___ftdiv@sign
  6611  048E  082E               	movf	___ftdiv@f2,w
  6612  048F  00B4               	movwf	??___ftdiv
  6613  0490  082F               	movf	___ftdiv@f2+1,w
  6614  0491  00B5               	movwf	??___ftdiv+1
  6615  0492  0830               	movf	___ftdiv@f2+2,w
  6616  0493  00B6               	movwf	??___ftdiv+2
  6617  0494  3010               	movlw	16
  6618  0495                     u2205:	
  6619  0495  36B6               	lsrf	??___ftdiv+2,f
  6620  0496  0CB5               	rrf	??___ftdiv+1,f
  6621  0497  0CB4               	rrf	??___ftdiv,f
  6622  0498  0B89               	decfsz	9,f
  6623  0499  2C95               	goto	u2205
  6624  049A  0834               	movf	??___ftdiv,w
  6625  049B  00B7               	movwf	??___ftdiv+3
  6626  049C  0837               	movf	??___ftdiv+3,w
  6627  049D  06BD               	xorwf	___ftdiv@sign,f
  6628  049E  3080               	movlw	128
  6629  049F  00B4               	movwf	??___ftdiv
  6630  04A0  0834               	movf	??___ftdiv,w
  6631  04A1  05BD               	andwf	___ftdiv@sign,f
  6632  04A2  17B2               	bsf	___ftdiv@f1+1,7
  6633  04A3  30FF               	movlw	255
  6634  04A4  05B1               	andwf	___ftdiv@f1,f
  6635  04A5  30FF               	movlw	255
  6636  04A6  05B2               	andwf	___ftdiv@f1+1,f
  6637  04A7  3000               	movlw	0
  6638  04A8  05B3               	andwf	___ftdiv@f1+2,f
  6639  04A9  17AF               	bsf	___ftdiv@f2+1,7
  6640  04AA  30FF               	movlw	255
  6641  04AB  05AE               	andwf	___ftdiv@f2,f
  6642  04AC  30FF               	movlw	255
  6643  04AD  05AF               	andwf	___ftdiv@f2+1,f
  6644  04AE  3000               	movlw	0
  6645  04AF  05B0               	andwf	___ftdiv@f2+2,f
  6646  04B0  3018               	movlw	24
  6647  04B1  00B4               	movwf	??___ftdiv
  6648  04B2  0834               	movf	??___ftdiv,w
  6649  04B3  00B8               	movwf	___ftdiv@cntr
  6650  04B4                     l2807:	
  6651  04B4  3001               	movlw	1
  6652  04B5                     u2215:	
  6653  04B5  35B9               	lslf	___ftdiv@f3,f
  6654  04B6  0DBA               	rlf	___ftdiv@f3+1,f
  6655  04B7  0DBB               	rlf	___ftdiv@f3+2,f
  6656  04B8  0B89               	decfsz	9,f
  6657  04B9  2CB5               	goto	u2215
  6658  04BA  0830               	movf	___ftdiv@f2+2,w
  6659  04BB  0233               	subwf	___ftdiv@f1+2,w
  6660  04BC  1D03               	skipz
  6661  04BD  2CC4               	goto	u2225
  6662  04BE  082F               	movf	___ftdiv@f2+1,w
  6663  04BF  0232               	subwf	___ftdiv@f1+1,w
  6664  04C0  1D03               	skipz
  6665  04C1  2CC4               	goto	u2225
  6666  04C2  082E               	movf	___ftdiv@f2,w
  6667  04C3  0231               	subwf	___ftdiv@f1,w
  6668  04C4                     u2225:	
  6669  04C4  1C03               	skipc
  6670  04C5  2CCD               	goto	l2815
  6671  04C6  082E               	movf	___ftdiv@f2,w
  6672  04C7  02B1               	subwf	___ftdiv@f1,f
  6673  04C8  082F               	movf	___ftdiv@f2+1,w
  6674  04C9  3BB2               	subwfb	___ftdiv@f1+1,f
  6675  04CA  0830               	movf	___ftdiv@f2+2,w
  6676  04CB  3BB3               	subwfb	___ftdiv@f1+2,f
  6677  04CC  1439               	bsf	___ftdiv@f3,0
  6678  04CD                     l2815:	
  6679  04CD  3001               	movlw	1
  6680  04CE                     u2235:	
  6681  04CE  35B1               	lslf	___ftdiv@f1,f
  6682  04CF  0DB2               	rlf	___ftdiv@f1+1,f
  6683  04D0  0DB3               	rlf	___ftdiv@f1+2,f
  6684  04D1  0B89               	decfsz	9,f
  6685  04D2  2CCE               	goto	u2235
  6686  04D3  3001               	movlw	1
  6687  04D4  02B8               	subwf	___ftdiv@cntr,f
  6688  04D5  1D03               	btfss	3,2
  6689  04D6  2CB4               	goto	l2807
  6690  04D7  0839               	movf	___ftdiv@f3,w
  6691  04D8  00A0               	movwf	___ftpack@arg
  6692  04D9  083A               	movf	___ftdiv@f3+1,w
  6693  04DA  00A1               	movwf	___ftpack@arg+1
  6694  04DB  083B               	movf	___ftdiv@f3+2,w
  6695  04DC  00A2               	movwf	___ftpack@arg+2
  6696  04DD  083C               	movf	___ftdiv@exp,w
  6697  04DE  00B4               	movwf	??___ftdiv
  6698  04DF  0834               	movf	??___ftdiv,w
  6699  04E0  00A3               	movwf	___ftpack@exp
  6700  04E1  083D               	movf	___ftdiv@sign,w
  6701  04E2  00B5               	movwf	??___ftdiv+1
  6702  04E3  0835               	movf	??___ftdiv+1,w
  6703  04E4  00A4               	movwf	___ftpack@sign
  6704  04E5  3185  2576         	fcall	___ftpack
  6705  04E7  0020               	movlb	0	; select bank0
  6706  04E8  0820               	movf	?___ftpack,w
  6707  04E9  00AE               	movwf	?___ftdiv
  6708  04EA  0821               	movf	?___ftpack+1,w
  6709  04EB  00AF               	movwf	?___ftdiv+1
  6710  04EC  0822               	movf	?___ftpack+2,w
  6711  04ED  00B0               	movwf	?___ftdiv+2
  6712  04EE  0008               	return
  6713  04EF                     __end_of___ftdiv:	
  6714                           
  6715                           	psect	text9
  6716  0576                     __ptext9:	
  6717 ;; *************** function ___ftpack *****************
  6718 ;; Defined at:
  6719 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  arg             3    0[BANK0 ] unsigned um
  6722 ;;  exp             1    3[BANK0 ] unsigned char 
  6723 ;;  sign            1    4[BANK0 ] unsigned char 
  6724 ;; Auto vars:     Size  Location     Type
  6725 ;;		None
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  3    0[BANK0 ] float 
  6728 ;; Registers used:
  6729 ;;		wreg, status,2, status,0
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6735 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;Total ram usage:        8 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    3
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		___awtoft
  6746 ;;		___ftdiv
  6747 ;;		___ftmul
  6748 ;;		___lwtoft
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function ___ftpack
  6754  0576                     ___ftpack:	
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6758  0576  0020               	movlb	0	; select bank0
  6759  0577  0823               	movf	___ftpack@exp,w
  6760  0578  1903               	btfsc	3,2
  6761  0579  2D7F               	goto	l2233
  6762  057A  0822               	movf	___ftpack@arg+2,w
  6763  057B  0421               	iorwf	___ftpack@arg+1,w
  6764  057C  0420               	iorwf	___ftpack@arg,w
  6765  057D  1D03               	skipz
  6766  057E  2D90               	goto	l2239
  6767  057F                     l2233:	
  6768  057F  3000               	movlw	0
  6769  0580  00A0               	movwf	?___ftpack
  6770  0581  3000               	movlw	0
  6771  0582  00A1               	movwf	?___ftpack+1
  6772  0583  3000               	movlw	0
  6773  0584  00A2               	movwf	?___ftpack+2
  6774  0585  0008               	return
  6775  0586                     l2237:	
  6776  0586  3001               	movlw	1
  6777  0587  00A5               	movwf	??___ftpack
  6778  0588  0825               	movf	??___ftpack,w
  6779  0589  07A3               	addwf	___ftpack@exp,f
  6780  058A  3001               	movlw	1
  6781  058B                     u1455:	
  6782  058B  36A2               	lsrf	___ftpack@arg+2,f
  6783  058C  0CA1               	rrf	___ftpack@arg+1,f
  6784  058D  0CA0               	rrf	___ftpack@arg,f
  6785  058E  0B89               	decfsz	9,f
  6786  058F  2D8B               	goto	u1455
  6787  0590                     l2239:	
  6788  0590  30FE               	movlw	254
  6789  0591  0522               	andwf	___ftpack@arg+2,w
  6790  0592  1903               	btfsc	3,2
  6791  0593  2DA9               	goto	l920
  6792  0594  2D86               	goto	l2237
  6793  0595                     l2241:	
  6794  0595  3001               	movlw	1
  6795  0596  00A5               	movwf	??___ftpack
  6796  0597  0825               	movf	??___ftpack,w
  6797  0598  07A3               	addwf	___ftpack@exp,f
  6798  0599  3001               	movlw	1
  6799  059A  07A0               	addwf	___ftpack@arg,f
  6800  059B  3000               	movlw	0
  6801  059C  1803               	skipnc
  6802  059D  3001               	movlw	1
  6803  059E  07A1               	addwf	___ftpack@arg+1,f
  6804  059F  3000               	movlw	0
  6805  05A0  1803               	skipnc
  6806  05A1  3001               	movlw	1
  6807  05A2  07A2               	addwf	___ftpack@arg+2,f
  6808  05A3  3001               	movlw	1
  6809  05A4                     u1475:	
  6810  05A4  36A2               	lsrf	___ftpack@arg+2,f
  6811  05A5  0CA1               	rrf	___ftpack@arg+1,f
  6812  05A6  0CA0               	rrf	___ftpack@arg,f
  6813  05A7  0B89               	decfsz	9,f
  6814  05A8  2DA4               	goto	u1475
  6815  05A9                     l920:	
  6816  05A9  30FF               	movlw	255
  6817  05AA  0522               	andwf	___ftpack@arg+2,w
  6818  05AB  1903               	btfsc	3,2
  6819  05AC  2DB6               	goto	l2249
  6820  05AD  2D95               	goto	l2241
  6821  05AE                     l2247:	
  6822  05AE  3001               	movlw	1
  6823  05AF  02A3               	subwf	___ftpack@exp,f
  6824  05B0  3001               	movlw	1
  6825  05B1                     u1495:	
  6826  05B1  35A0               	lslf	___ftpack@arg,f
  6827  05B2  0DA1               	rlf	___ftpack@arg+1,f
  6828  05B3  0DA2               	rlf	___ftpack@arg+2,f
  6829  05B4  0B89               	decfsz	9,f
  6830  05B5  2DB1               	goto	u1495
  6831  05B6                     l2249:	
  6832  05B6  1BA1               	btfsc	___ftpack@arg+1,7
  6833  05B7  2DBC               	goto	l927
  6834  05B8  3002               	movlw	2
  6835  05B9  0223               	subwf	___ftpack@exp,w
  6836  05BA  1803               	skipnc
  6837  05BB  2DAE               	goto	l2247
  6838  05BC                     l927:	
  6839  05BC  1823               	btfsc	___ftpack@exp,0
  6840  05BD  2DC4               	goto	l928
  6841  05BE  30FF               	movlw	255
  6842  05BF  05A0               	andwf	___ftpack@arg,f
  6843  05C0  307F               	movlw	127
  6844  05C1  05A1               	andwf	___ftpack@arg+1,f
  6845  05C2  30FF               	movlw	255
  6846  05C3  05A2               	andwf	___ftpack@arg+2,f
  6847  05C4                     l928:	
  6848  05C4  1003               	clrc
  6849  05C5  0CA3               	rrf	___ftpack@exp,f
  6850  05C6  0823               	movf	___ftpack@exp,w
  6851  05C7  00A5               	movwf	??___ftpack
  6852  05C8  01A6               	clrf	??___ftpack+1
  6853  05C9  01A7               	clrf	??___ftpack+2
  6854  05CA  3010               	movlw	16
  6855  05CB                     u1535:	
  6856  05CB  35A5               	lslf	??___ftpack,f
  6857  05CC  0DA6               	rlf	??___ftpack+1,f
  6858  05CD  0DA7               	rlf	??___ftpack+2,f
  6859  05CE  0B89               	decfsz	9,f
  6860  05CF  2DCB               	goto	u1535
  6861  05D0  0825               	movf	??___ftpack,w
  6862  05D1  04A0               	iorwf	___ftpack@arg,f
  6863  05D2  0826               	movf	??___ftpack+1,w
  6864  05D3  04A1               	iorwf	___ftpack@arg+1,f
  6865  05D4  0827               	movf	??___ftpack+2,w
  6866  05D5  04A2               	iorwf	___ftpack@arg+2,f
  6867  05D6  0824               	movf	___ftpack@sign,w
  6868  05D7  1903               	btfsc	3,2
  6869  05D8  0008               	return
  6870  05D9  17A2               	bsf	___ftpack@arg+2,7
  6871  05DA  0008               	return
  6872  05DB                     __end_of___ftpack:	
  6873                           
  6874                           	psect	text10
  6875  0F96                     __ptext10:	
  6876 ;; *************** function _SYSTEM_Initialize *****************
  6877 ;; Defined at:
  6878 ;;		line 83 in file "mcc_generated_files/mcc.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		wreg, status,2, status,0, pclath, cstack
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;Total ram usage:        0 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    4
  6899 ;; This function calls:
  6900 ;;		_ADCC_Initialize
  6901 ;;		_I2C1_Initialize
  6902 ;;		_OSCILLATOR_Initialize
  6903 ;;		_PIN_MANAGER_Initialize
  6904 ;; This function is called by:
  6905 ;;		_main
  6906 ;; This function uses a non-reentrant model
  6907 ;;
  6908                           
  6909                           
  6910                           ;psect for function _SYSTEM_Initialize
  6911  0F96                     _SYSTEM_Initialize:	
  6912                           
  6913                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  6914                           
  6915                           ;incstack = 0
  6916                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6917  0F96  3186  2690  318F   	fcall	_PIN_MANAGER_Initialize
  6918                           
  6919                           ;mcc.c: 87: OSCILLATOR_Initialize();
  6920  0F99  318F  278D  318F   	fcall	_OSCILLATOR_Initialize
  6921                           
  6922                           ;mcc.c: 88: I2C1_Initialize();
  6923  0F9C  3187  27C3  318F   	fcall	_I2C1_Initialize
  6924                           
  6925                           ;mcc.c: 89: ADCC_Initialize();
  6926  0F9F  3187  27A8         	fcall	_ADCC_Initialize
  6927  0FA1  0008               	return
  6928  0FA2                     __end_of_SYSTEM_Initialize:	
  6929                           
  6930                           	psect	text11
  6931  0690                     __ptext11:	
  6932 ;; *************** function _PIN_MANAGER_Initialize *****************
  6933 ;; Defined at:
  6934 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;		None
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  state           1    0[BANK0 ] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  1    wreg      void 
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6951 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;Total ram usage:        1 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    3
  6955 ;; This function calls:
  6956 ;;		Nothing
  6957 ;; This function is called by:
  6958 ;;		_SYSTEM_Initialize
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           
  6963                           ;psect for function _PIN_MANAGER_Initialize
  6964  0690                     _PIN_MANAGER_Initialize:	
  6965                           
  6966                           ;pin_manager.c: 57: LATA = 0x00;
  6967                           
  6968                           ;incstack = 0
  6969                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  6970  0690  0020               	movlb	0	; select bank0
  6971  0691  0196               	clrf	22	;volatile
  6972                           
  6973                           ;pin_manager.c: 58: LATB = 0x00;
  6974  0692  0197               	clrf	23	;volatile
  6975                           
  6976                           ;pin_manager.c: 59: LATC = 0x00;
  6977  0693  0198               	clrf	24	;volatile
  6978                           
  6979                           ;pin_manager.c: 64: TRISA = 0x7F;
  6980  0694  307F               	movlw	127
  6981  0695  0091               	movwf	17	;volatile
  6982                           
  6983                           ;pin_manager.c: 65: TRISB = 0x20;
  6984  0696  3020               	movlw	32
  6985  0697  0092               	movwf	18	;volatile
  6986                           
  6987                           ;pin_manager.c: 66: TRISC = 0x1D;
  6988  0698  301D               	movlw	29
  6989  0699  0093               	movwf	19	;volatile
  6990                           
  6991                           ;pin_manager.c: 71: ANSELC = 0xE7;
  6992  069A  30E7               	movlw	231
  6993  069B  003E               	movlb	30	; select bank30
  6994  069C  00CE               	movwf	78	;volatile
  6995                           
  6996                           ;pin_manager.c: 72: ANSELB = 0xDF;
  6997  069D  30DF               	movlw	223
  6998  069E  00C3               	movwf	67	;volatile
  6999                           
  7000                           ;pin_manager.c: 73: ANSELA = 0xFF;
  7001  069F  30FF               	movlw	255
  7002  06A0  00B8               	movwf	56	;volatile
  7003                           
  7004                           ;pin_manager.c: 78: WPUE = 0x00;
  7005  06A1  01E5               	clrf	101	;volatile
  7006                           
  7007                           ;pin_manager.c: 79: WPUB = 0x00;
  7008  06A2  01C4               	clrf	68	;volatile
  7009                           
  7010                           ;pin_manager.c: 80: WPUA = 0x00;
  7011  06A3  01B9               	clrf	57	;volatile
  7012                           
  7013                           ;pin_manager.c: 81: WPUC = 0x00;
  7014  06A4  01CF               	clrf	79	;volatile
  7015                           
  7016                           ;pin_manager.c: 86: ODCONA = 0x00;
  7017  06A5  01BA               	clrf	58	;volatile
  7018                           
  7019                           ;pin_manager.c: 87: ODCONB = 0x00;
  7020  06A6  01C5               	clrf	69	;volatile
  7021                           
  7022                           ;pin_manager.c: 88: ODCONC = 0x00;
  7023  06A7  01D0               	clrf	80	;volatile
  7024                           
  7025                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  7026  06A8  3000               	movlw	0
  7027  06A9  1B8B               	btfsc	11,7	;volatile
  7028  06AA  3001               	movlw	1
  7029  06AB  0020               	movlb	0	; select bank0
  7030  06AC  00A0               	movwf	PIN_MANAGER_Initialize@state
  7031                           
  7032                           ;pin_manager.c: 96: GIE = 0;
  7033  06AD  138B               	bcf	11,7	;volatile
  7034                           
  7035                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  7036  06AE  3055               	movlw	85
  7037  06AF  003D               	movlb	29	; select bank29
  7038  06B0  008F               	movwf	15	;volsfr
  7039                           
  7040                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  7041  06B1  30AA               	movlw	170
  7042  06B2  008F               	movwf	15	;volsfr
  7043                           
  7044                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  7045  06B3  100F               	bcf	15,0	;volsfr
  7046                           
  7047                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  7048  06B4  0846               	movf	70,w	;volatile
  7049  06B5  39E0               	andlw	-32
  7050  06B6  3813               	iorlw	19
  7051  06B7  00C6               	movwf	70	;volatile
  7052                           
  7053                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  7054  06B8  0845               	movf	69,w	;volatile
  7055  06B9  39E0               	andlw	-32
  7056  06BA  3814               	iorlw	20
  7057  06BB  00C5               	movwf	69	;volatile
  7058                           
  7059                           ;pin_manager.c: 103: RC3PPS = 0x15;
  7060  06BC  3015               	movlw	21
  7061  06BD  003E               	movlb	30	; select bank30
  7062  06BE  00A3               	movwf	35	;volatile
  7063                           
  7064                           ;pin_manager.c: 104: RC4PPS = 0x14;
  7065  06BF  3014               	movlw	20
  7066  06C0  00A4               	movwf	36	;volatile
  7067                           
  7068                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  7069  06C1  3055               	movlw	85
  7070  06C2  003D               	movlb	29	; select bank29
  7071  06C3  008F               	movwf	15	;volsfr
  7072                           
  7073                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  7074  06C4  30AA               	movlw	170
  7075  06C5  008F               	movwf	15	;volsfr
  7076                           
  7077                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  7078  06C6  140F               	bsf	15,0	;volsfr
  7079                           
  7080                           ;pin_manager.c: 110: GIE = state;
  7081  06C7  0020               	movlb	0	; select bank0
  7082  06C8  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  7083  06C9  2ECC               	goto	u2930
  7084  06CA  178B               	bsf	11,7	;volatile
  7085  06CB  0008               	return
  7086  06CC                     u2930:	
  7087  06CC  138B               	bcf	11,7	;volatile
  7088  06CD  0008               	return
  7089  06CE                     __end_of_PIN_MANAGER_Initialize:	
  7090                           
  7091                           	psect	text12
  7092  0F8D                     __ptext12:	
  7093 ;; *************** function _OSCILLATOR_Initialize *****************
  7094 ;; Defined at:
  7095 ;;		line 92 in file "mcc_generated_files/mcc.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;                  1    wreg      void 
  7102 ;; Registers used:
  7103 ;;		wreg, status,2
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;Total ram usage:        0 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; Hardware stack levels required when called:    3
  7116 ;; This function calls:
  7117 ;;		Nothing
  7118 ;; This function is called by:
  7119 ;;		_SYSTEM_Initialize
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           
  7124                           ;psect for function _OSCILLATOR_Initialize
  7125  0F8D                     _OSCILLATOR_Initialize:	
  7126                           
  7127                           ;mcc.c: 95: OSCCON1 = 0x60;
  7128                           
  7129                           ;incstack = 0
  7130                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7131  0F8D  3060               	movlw	96
  7132  0F8E  0031               	movlb	17	; select bank17
  7133  0F8F  008D               	movwf	13	;volatile
  7134                           
  7135                           ;mcc.c: 97: OSCCON3 = 0x00;
  7136  0F90  018F               	clrf	15	;volatile
  7137                           
  7138                           ;mcc.c: 99: OSCEN = 0x00;
  7139  0F91  0191               	clrf	17	;volatile
  7140                           
  7141                           ;mcc.c: 101: OSCFRQ = 0x06;
  7142  0F92  3006               	movlw	6
  7143  0F93  0093               	movwf	19	;volatile
  7144                           
  7145                           ;mcc.c: 103: OSCTUNE = 0x00;
  7146  0F94  0192               	clrf	18	;volatile
  7147  0F95  0008               	return
  7148  0F96                     __end_of_OSCILLATOR_Initialize:	
  7149                           
  7150                           	psect	text13
  7151  07C3                     __ptext13:	
  7152 ;; *************** function _I2C1_Initialize *****************
  7153 ;; Defined at:
  7154 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;		None
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;		None
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      void 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2
  7163 ;; Tracked objects:
  7164 ;;		On entry : 0/0
  7165 ;;		On exit  : 0/0
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7170 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7171 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7172 ;;Total ram usage:        1 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:    3
  7175 ;; This function calls:
  7176 ;;		Nothing
  7177 ;; This function is called by:
  7178 ;;		_SYSTEM_Initialize
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _I2C1_Initialize
  7184  07C3                     _I2C1_Initialize:	
  7185                           
  7186                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  7190  07C3  30C2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7191  07C4  0020               	movlb	0	; select bank0
  7192  07C5  00A0               	movwf	??_I2C1_Initialize
  7193  07C6  0820               	movf	??_I2C1_Initialize,w
  7194  07C7  0021               	movlb	1	; select bank1
  7195  07C8  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  7196                           
  7197                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  7198  07C9  30C2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7199  07CA  0020               	movlb	0	; select bank0
  7200  07CB  00A0               	movwf	??_I2C1_Initialize
  7201  07CC  0820               	movf	??_I2C1_Initialize,w
  7202  07CD  0021               	movlb	1	; select bank1
  7203  07CE  00A0               	movwf	_i2c1_object^(0+128)
  7204                           
  7205                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  7206  07CF  14A2               	bsf	(_i2c1_object^(0+128)+2),1
  7207                           
  7208                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  7209  07D0  1022               	bcf	(_i2c1_object^(0+128)+2),0
  7210                           
  7211                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  7212  07D1  01A4               	clrf	(_i2c1_object^(0+128)+4)
  7213                           
  7214                           ;i2c1.c: 208: SSP1STAT = 0x00;
  7215  07D2  0023               	movlb	3	; select bank3
  7216  07D3  018F               	clrf	15	;volatile
  7217                           
  7218                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  7219  07D4  3028               	movlw	40
  7220  07D5  0090               	movwf	16	;volatile
  7221                           
  7222                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  7223  07D6  0192               	clrf	18	;volatile
  7224                           
  7225                           ;i2c1.c: 214: SSP1ADD = 0x13;
  7226  07D7  3013               	movlw	19
  7227  07D8  008D               	movwf	13	;volatile
  7228                           
  7229                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  7230  07D9  002E               	movlb	14	; select bank14
  7231  07DA  100F               	bcf	15,0	;volatile
  7232                           
  7233                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  7234  07DB  1419               	bsf	25,0	;volatile
  7235  07DC  0008               	return
  7236  07DD                     __end_of_I2C1_Initialize:	
  7237                           
  7238                           	psect	text14
  7239  07A8                     __ptext14:	
  7240 ;; *************** function _ADCC_Initialize *****************
  7241 ;; Defined at:
  7242 ;;		line 62 in file "mcc_generated_files/adcc.c"
  7243 ;; Parameters:    Size  Location     Type
  7244 ;;		None
  7245 ;; Auto vars:     Size  Location     Type
  7246 ;;		None
  7247 ;; Return value:  Size  Location     Type
  7248 ;;                  1    wreg      void 
  7249 ;; Registers used:
  7250 ;;		wreg, status,2
  7251 ;; Tracked objects:
  7252 ;;		On entry : 0/0
  7253 ;;		On exit  : 0/0
  7254 ;;		Unchanged: 0/0
  7255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7260 ;;Total ram usage:        0 bytes
  7261 ;; Hardware stack levels used:    1
  7262 ;; Hardware stack levels required when called:    3
  7263 ;; This function calls:
  7264 ;;		Nothing
  7265 ;; This function is called by:
  7266 ;;		_SYSTEM_Initialize
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _ADCC_Initialize
  7272  07A8                     _ADCC_Initialize:	
  7273                           
  7274                           ;adcc.c: 66: ADCON1 = 0x00;
  7275                           
  7276                           ;incstack = 0
  7277                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7278  07A8  0021               	movlb	1	; select bank1
  7279  07A9  0194               	clrf	20	;volatile
  7280                           
  7281                           ;adcc.c: 68: ADCON2 = 0x03;
  7282  07AA  3003               	movlw	3
  7283  07AB  0095               	movwf	21	;volatile
  7284                           
  7285                           ;adcc.c: 70: ADCON3 = 0x00;
  7286  07AC  0196               	clrf	22	;volatile
  7287                           
  7288                           ;adcc.c: 72: ADACT = 0x00;
  7289  07AD  0199               	clrf	25	;volatile
  7290                           
  7291                           ;adcc.c: 74: ADSTAT = 0x00;
  7292  07AE  0197               	clrf	23	;volatile
  7293                           
  7294                           ;adcc.c: 76: ADCLK = 0x13;
  7295  07AF  3013               	movlw	19
  7296  07B0  0098               	movwf	24	;volatile
  7297                           
  7298                           ;adcc.c: 78: ADREF = 0x00;
  7299  07B1  019A               	clrf	26	;volatile
  7300                           
  7301                           ;adcc.c: 80: ADCAP = 0x00;
  7302  07B2  019B               	clrf	27	;volatile
  7303                           
  7304                           ;adcc.c: 82: ADPRE = 0x00;
  7305  07B3  019C               	clrf	28	;volatile
  7306                           
  7307                           ;adcc.c: 84: ADACQ = 0x04;
  7308  07B4  3004               	movlw	4
  7309  07B5  009D               	movwf	29	;volatile
  7310                           
  7311                           ;adcc.c: 86: ADPCH = 0x00;
  7312  07B6  019E               	clrf	30	;volatile
  7313                           
  7314                           ;adcc.c: 88: ADRPT = 0x00;
  7315  07B7  0022               	movlb	2	; select bank2
  7316  07B8  018D               	clrf	13	;volatile
  7317                           
  7318                           ;adcc.c: 90: ADLTHL = 0x00;
  7319  07B9  018E               	clrf	14	;volatile
  7320                           
  7321                           ;adcc.c: 92: ADLTHH = 0x00;
  7322  07BA  018F               	clrf	15	;volatile
  7323                           
  7324                           ;adcc.c: 94: ADUTHL = 0x00;
  7325  07BB  0190               	clrf	16	;volatile
  7326                           
  7327                           ;adcc.c: 96: ADUTHH = 0x00;
  7328  07BC  0191               	clrf	17	;volatile
  7329                           
  7330                           ;adcc.c: 98: ADSTPTL = 0x00;
  7331  07BD  0192               	clrf	18	;volatile
  7332                           
  7333                           ;adcc.c: 100: ADSTPTH = 0x00;
  7334  07BE  0193               	clrf	19	;volatile
  7335                           
  7336                           ;adcc.c: 103: ADCON0 = 0x84;
  7337  07BF  3084               	movlw	132
  7338  07C0  0021               	movlb	1	; select bank1
  7339  07C1  0093               	movwf	19	;volatile
  7340  07C2  0008               	return
  7341  07C3                     __end_of_ADCC_Initialize:	
  7342                           
  7343                           	psect	text15
  7344  0FA2                     __ptext15:	
  7345 ;; *************** function _LED7SegSetup *****************
  7346 ;; Defined at:
  7347 ;;		line 31 in file "LED7Seg.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;		None
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;		None
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      void 
  7354 ;; Registers used:
  7355 ;;		None
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7365 ;;Total ram usage:        0 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:    3
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_main
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           
  7376                           ;psect for function _LED7SegSetup
  7377  0FA2                     _LED7SegSetup:	
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _LED7SegSetup: []
  7381                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
  7382  0FA2  003E               	movlb	30	; select bank30
  7383  0FA3  12CE               	bcf	78,5	;volatile
  7384                           
  7385                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
  7386  0FA4  0020               	movlb	0	; select bank0
  7387  0FA5  1293               	bcf	19,5	;volatile
  7388                           
  7389                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
  7390  0FA6  003E               	movlb	30	; select bank30
  7391  0FA7  134E               	bcf	78,6	;volatile
  7392                           
  7393                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
  7394  0FA8  0020               	movlb	0	; select bank0
  7395  0FA9  1313               	bcf	19,6	;volatile
  7396                           
  7397                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
  7398  0FAA  003E               	movlb	30	; select bank30
  7399  0FAB  13CE               	bcf	78,7	;volatile
  7400                           
  7401                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
  7402  0FAC  0020               	movlb	0	; select bank0
  7403  0FAD  1393               	bcf	19,7	;volatile
  7404  0FAE  0008               	return
  7405  0FAF                     __end_of_LED7SegSetup:	
  7406                           
  7407                           	psect	text16
  7408  06CE                     __ptext16:	
  7409 ;; *************** function _LED7SegDisplayValueByDigit *****************
  7410 ;; Defined at:
  7411 ;;		line 95 in file "LED7Seg.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;  iTensDigit      2   20[BANK0 ] unsigned int 
  7414 ;;  iUnitsDigit     2   22[BANK0 ] unsigned int 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  iTensCode       2   24[BANK0 ] unsigned int 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7426 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7429 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7430 ;;Total ram usage:        6 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    7
  7433 ;; This function calls:
  7434 ;;		_LED7SegShiftOutPulseClock
  7435 ;; This function is called by:
  7436 ;;		_main
  7437 ;;		_LED7SegDisplayValue
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           
  7442                           ;psect for function _LED7SegDisplayValueByDigit
  7443  06CE                     _LED7SegDisplayValueByDigit:	
  7444                           
  7445                           ;LED7Seg.c: 99: if(iUnitsDigit>9) iUnitsDigit=9;
  7446                           
  7447                           ;LED7Seg.c: 96: unsigned int iTensCode;
  7448                           ;LED7Seg.c: 98: if(0>iUnitsDigit) iUnitsDigit=0;
  7449                           
  7450                           ;incstack = 0
  7451                           ; Regs used in _LED7SegDisplayValueByDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7452  06CE  3000               	movlw	0
  7453  06CF  0020               	movlb	0	; select bank0
  7454  06D0  0237               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit+1,w
  7455  06D1  300A               	movlw	10
  7456  06D2  1903               	skipnz
  7457  06D3  0236               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit,w
  7458  06D4  1C03               	skipc
  7459  06D5  2EDA               	goto	l3385
  7460  06D6  3009               	movlw	9
  7461  06D7  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  7462  06D8  3000               	movlw	0
  7463  06D9  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  7464  06DA                     l3385:	
  7465                           ;LED7Seg.c: 101: if(0>iTensDigit) iTensDigit=0;
  7466                           
  7467                           
  7468                           ;LED7Seg.c: 102: if(iTensDigit>9) iTensDigit=9;
  7469  06DA  3000               	movlw	0
  7470  06DB  0235               	subwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
  7471  06DC  300A               	movlw	10
  7472  06DD  1903               	skipnz
  7473  06DE  0234               	subwf	LED7SegDisplayValueByDigit@iTensDigit,w
  7474  06DF  1C03               	skipc
  7475  06E0  2EE5               	goto	l3389
  7476  06E1  3009               	movlw	9
  7477  06E2  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  7478  06E3  3000               	movlw	0
  7479  06E4  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  7480  06E5                     l3389:	
  7481                           
  7482                           ;LED7Seg.c: 104: iTensCode=segdisp[iTensDigit];
  7483  06E5  3534               	lslf	LED7SegDisplayValueByDigit@iTensDigit,w
  7484  06E6  3EC5               	addlw	(low (_segdisp| 0))& (0+255)
  7485  06E7  0086               	movwf	6
  7486  06E8  0187               	clrf	7
  7487  06E9  3F40               	moviw [0]fsr1
  7488  06EA  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
  7489  06EB  3F41               	moviw [1]fsr1
  7490  06EC  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
  7491                           
  7492                           ;LED7Seg.c: 105: if(0==iTensDigit) iTensCode=255;
  7493  06ED  0834               	movf	LED7SegDisplayValueByDigit@iTensDigit,w
  7494  06EE  0435               	iorwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
  7495  06EF  1D03               	btfss	3,2
  7496  06F0  2EF5               	goto	l3395
  7497  06F1  30FF               	movlw	255
  7498  06F2  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
  7499  06F3  3000               	movlw	0
  7500  06F4  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
  7501  06F5                     l3395:	
  7502                           
  7503                           ;LED7Seg.c: 107: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
  7504  06F5  3536               	lslf	LED7SegDisplayValueByDigit@iUnitsDigit,w
  7505  06F6  3EC5               	addlw	(low (_segdisp| 0))& (0+255)
  7506  06F7  0086               	movwf	6
  7507  06F8  0187               	clrf	7
  7508  06F9  0801               	movf	1,w
  7509  06FA  3187  2770  3186   	fcall	_LED7SegShiftOutPulseClock
  7510                           
  7511                           ;LED7Seg.c: 108: LED7SegShiftOutPulseClock( iTensCode );
  7512  06FD  0020               	movlb	0	; select bank0
  7513  06FE  0838               	movf	LED7SegDisplayValueByDigit@iTensCode,w
  7514  06FF  3187  2770         	fcall	_LED7SegShiftOutPulseClock
  7515                           
  7516                           ;LED7Seg.c: 110: do { LATCbits.LATC5 = 1; } while(0);
  7517  0701  0020               	movlb	0	; select bank0
  7518  0702  1698               	bsf	24,5	;volatile
  7519                           
  7520                           ;LED7Seg.c: 111: do { LATCbits.LATC5 = 0; } while(0);
  7521  0703  1298               	bcf	24,5	;volatile
  7522  0704  0008               	return
  7523  0705                     __end_of_LED7SegDisplayValueByDigit:	
  7524                           
  7525                           	psect	text17
  7526  0770                     __ptext17:	
  7527 ;; *************** function _LED7SegShiftOutPulseClock *****************
  7528 ;; Defined at:
  7529 ;;		line 69 in file "LED7Seg.c"
  7530 ;; Parameters:    Size  Location     Type
  7531 ;;  val             1    wreg     unsigned char 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  val             1   18[BANK0 ] unsigned char 
  7534 ;;  i               1   19[BANK0 ] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7547 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;Total ram usage:        3 bytes
  7549 ;; Hardware stack levels used:    1
  7550 ;; Hardware stack levels required when called:    6
  7551 ;; This function calls:
  7552 ;;		_LED7SegPinWrite
  7553 ;;		_LED7SegPulseClock
  7554 ;; This function is called by:
  7555 ;;		_LED7SegDisplayValueByDigit
  7556 ;;		_LED7SegBlankDisplay
  7557 ;; This function uses a non-reentrant model
  7558 ;;
  7559                           
  7560                           
  7561                           ;psect for function _LED7SegShiftOutPulseClock
  7562  0770                     _LED7SegShiftOutPulseClock:	
  7563                           
  7564                           ;incstack = 0
  7565                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7566                           ;LED7SegShiftOutPulseClock@val stored from wreg
  7567  0770  0020               	movlb	0	; select bank0
  7568  0771  00B2               	movwf	LED7SegShiftOutPulseClock@val
  7569                           
  7570                           ;LED7Seg.c: 71: char i;
  7571                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
  7572  0772  01B3               	clrf	LED7SegShiftOutPulseClock@i
  7573  0773                     L1:	
  7574  0773  3008               	movlw	8
  7575  0774  0233               	subwf	LED7SegShiftOutPulseClock@i,w
  7576  0775  1803               	btfsc	3,0
  7577  0776  0008               	return
  7578                           
  7579                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
  7580  0777  3001               	movlw	1
  7581  0778  00B1               	movwf	??_LED7SegShiftOutPulseClock
  7582  0779  0A33               	incf	LED7SegShiftOutPulseClock@i,w
  7583  077A  2F7C               	goto	u2964
  7584  077B                     u2965:	
  7585  077B  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
  7586  077C                     u2964:	
  7587  077C  0B89               	decfsz	9,f
  7588  077D  2F7B               	goto	u2965
  7589  077E  0831               	movf	??_LED7SegShiftOutPulseClock,w
  7590  077F  0532               	andwf	LED7SegShiftOutPulseClock@val,w
  7591  0780  318F  2784  3187   	fcall	_LED7SegPinWrite
  7592                           
  7593                           ;LED7Seg.c: 77: LED7SegPulseClock();
  7594  0783  3187  27F5  3187   	fcall	_LED7SegPulseClock
  7595  0786  3001               	movlw	1
  7596  0787  0020               	movlb	0	; select bank0
  7597  0788  00B1               	movwf	??_LED7SegShiftOutPulseClock
  7598  0789  0831               	movf	??_LED7SegShiftOutPulseClock,w
  7599  078A  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
  7600  078B  2F73               	goto	L1
  7601  078C                     __end_of_LED7SegShiftOutPulseClock:	
  7602                           
  7603                           	psect	text18
  7604  07F5                     __ptext18:	
  7605 ;; *************** function _LED7SegPulseClock *****************
  7606 ;; Defined at:
  7607 ;;		line 60 in file "LED7Seg.c"
  7608 ;; Parameters:    Size  Location     Type
  7609 ;;		None
  7610 ;; Auto vars:     Size  Location     Type
  7611 ;;		None
  7612 ;; Return value:  Size  Location     Type
  7613 ;;                  1    wreg      void 
  7614 ;; Registers used:
  7615 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7616 ;; Tracked objects:
  7617 ;;		On entry : 0/0
  7618 ;;		On exit  : 0/0
  7619 ;;		Unchanged: 0/0
  7620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;Total ram usage:        0 bytes
  7626 ;; Hardware stack levels used:    1
  7627 ;; Hardware stack levels required when called:    5
  7628 ;; This function calls:
  7629 ;;		_delay
  7630 ;; This function is called by:
  7631 ;;		_LED7SegShiftOutPulseClock
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           
  7636                           ;psect for function _LED7SegPulseClock
  7637  07F5                     _LED7SegPulseClock:	
  7638                           
  7639                           ;incstack = 0
  7640                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7641                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
  7642  07F5  0020               	movlb	0	; select bank0
  7643  07F6  1718               	bsf	24,6	;volatile
  7644                           
  7645                           ;LED7Seg.c: 64: delay(1);
  7646  07F7  3001               	movlw	1
  7647  07F8  00A6               	movwf	delay@delaytime
  7648  07F9  3000               	movlw	0
  7649  07FA  00A7               	movwf	delay@delaytime+1
  7650  07FB  3186  263D         	fcall	_delay
  7651                           
  7652                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
  7653  07FD  0020               	movlb	0	; select bank0
  7654  07FE  1318               	bcf	24,6	;volatile
  7655  07FF  0008               	return
  7656  0800                     __end_of_LED7SegPulseClock:	
  7657                           
  7658                           	psect	text19
  7659  063D                     __ptext19:	
  7660 ;; *************** function _delay *****************
  7661 ;; Defined at:
  7662 ;;		line 117 in file "main.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  delaytime       2    6[BANK0 ] int 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  counter         4   13[BANK0 ] long 
  7667 ;;  adjustedDela    4    9[BANK0 ] long 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;Total ram usage:       11 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:    4
  7684 ;; This function calls:
  7685 ;;		___wmul
  7686 ;; This function is called by:
  7687 ;;		_blinkyLoop
  7688 ;;		_main
  7689 ;;		_LED7SegPulseClock
  7690 ;;		_LED7SegLoop
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function _delay
  7696  063D                     _delay:	
  7697                           
  7698                           ;main.c: 118: long counter = 0;
  7699                           
  7700                           ;incstack = 0
  7701                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7702  063D  3000               	movlw	0
  7703  063E  0020               	movlb	0	; select bank0
  7704  063F  00B0               	movwf	delay@counter+3
  7705  0640  3000               	movlw	0
  7706  0641  00AF               	movwf	delay@counter+2
  7707  0642  3000               	movlw	0
  7708  0643  00AE               	movwf	delay@counter+1
  7709  0644  3000               	movlw	0
  7710  0645  00AD               	movwf	delay@counter
  7711                           
  7712                           ;main.c: 119: long adjustedDelaytime=delaytime*cMstrClkAdjust;
  7713  0646  0827               	movf	delay@delaytime+1,w
  7714  0647  00A1               	movwf	___wmul@multiplier+1
  7715  0648  0826               	movf	delay@delaytime,w
  7716  0649  00A0               	movwf	___wmul@multiplier
  7717  064A  3022               	movlw	low (_cMstrClkAdjust| (0+32768))
  7718  064B  0084               	movwf	4
  7719  064C  3090               	movlw	high (_cMstrClkAdjust| (0+32768))
  7720  064D  0085               	movwf	5
  7721  064E  3F00               	moviw [0]fsr0
  7722  064F  00A2               	movwf	___wmul@multiplicand
  7723  0650  3F01               	moviw [1]fsr0
  7724  0651  00A3               	movwf	___wmul@multiplicand+1
  7725  0652  3187  278C  3186   	fcall	___wmul
  7726  0655  0020               	movlb	0	; select bank0
  7727  0656  0820               	movf	?___wmul,w
  7728  0657  00A9               	movwf	delay@adjustedDelaytime
  7729  0658  0821               	movf	?___wmul+1,w
  7730  0659  00AA               	movwf	delay@adjustedDelaytime+1
  7731  065A  0D89               	rlf	9,f
  7732  065B  3B89               	subwfb	9,f
  7733  065C  0989               	comf	9,f
  7734  065D  00AB               	movwf	delay@adjustedDelaytime+2
  7735  065E  00AC               	movwf	delay@adjustedDelaytime+3
  7736                           
  7737                           ;main.c: 120: if (0<delaytime)
  7738  065F  0827               	movf	delay@delaytime+1,w
  7739  0660  3A80               	xorlw	128
  7740  0661  00A8               	movwf	??_delay
  7741  0662  3080               	movlw	128
  7742  0663  0228               	subwf	??_delay,w
  7743  0664  1D03               	skipz
  7744  0665  2E68               	goto	u2905
  7745  0666  3001               	movlw	1
  7746  0667  0226               	subwf	delay@delaytime,w
  7747  0668                     u2905:	
  7748  0668  1C03               	skipc
  7749  0669  0008               	return
  7750                           
  7751                           ;main.c: 121: for (counter = 0; counter<adjustedDelaytime; counter++);
  7752  066A  3000               	movlw	0
  7753  066B  0020               	movlb	0	; select bank0
  7754  066C  00B0               	movwf	delay@counter+3
  7755  066D  3000               	movlw	0
  7756  066E  00AF               	movwf	delay@counter+2
  7757  066F  3000               	movlw	0
  7758  0670  00AE               	movwf	delay@counter+1
  7759  0671  3000               	movlw	0
  7760  0672  00AD               	movwf	delay@counter
  7761  0673                     l448:	
  7762  0673  0830               	movf	delay@counter+3,w
  7763  0674  3A80               	xorlw	128
  7764  0675  00A8               	movwf	??_delay
  7765  0676  082C               	movf	delay@adjustedDelaytime+3,w
  7766  0677  3A80               	xorlw	128
  7767  0678  0228               	subwf	??_delay,w
  7768  0679  1D03               	skipz
  7769  067A  2E85               	goto	u2913
  7770  067B  082B               	movf	delay@adjustedDelaytime+2,w
  7771  067C  022F               	subwf	delay@counter+2,w
  7772  067D  1D03               	skipz
  7773  067E  2E85               	goto	u2913
  7774  067F  082A               	movf	delay@adjustedDelaytime+1,w
  7775  0680  022E               	subwf	delay@counter+1,w
  7776  0681  1D03               	skipz
  7777  0682  2E85               	goto	u2913
  7778  0683  0829               	movf	delay@adjustedDelaytime,w
  7779  0684  022D               	subwf	delay@counter,w
  7780  0685                     u2913:	
  7781  0685  1803               	btfsc	3,0
  7782  0686  0008               	return
  7783  0687  3001               	movlw	1
  7784  0688  07AD               	addwf	delay@counter,f
  7785  0689  3000               	movlw	0
  7786  068A  3DAE               	addwfc	delay@counter+1,f
  7787  068B  3000               	movlw	0
  7788  068C  3DAF               	addwfc	delay@counter+2,f
  7789  068D  3000               	movlw	0
  7790  068E  3DB0               	addwfc	delay@counter+3,f
  7791  068F  2E73               	goto	l448
  7792  0690                     __end_of_delay:	
  7793                           
  7794                           	psect	text20
  7795  078C                     __ptext20:	
  7796 ;; *************** function ___wmul *****************
  7797 ;; Defined at:
  7798 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7801 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  product         2    4[BANK0 ] unsigned int 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  2    0[BANK0 ] unsigned int 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;Total ram usage:        6 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    3
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_delay
  7824 ;;		_blinkyLoop
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function ___wmul
  7830  078C                     ___wmul:	
  7831                           
  7832                           ;incstack = 0
  7833                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7834  078C  0020               	movlb	0	; select bank0
  7835  078D  01A4               	clrf	___wmul@product
  7836  078E  01A5               	clrf	___wmul@product+1
  7837  078F                     l3231:	
  7838  078F  1C20               	btfss	___wmul@multiplier,0
  7839  0790  2F95               	goto	l759
  7840  0791  0822               	movf	___wmul@multiplicand,w
  7841  0792  07A4               	addwf	___wmul@product,f
  7842  0793  0823               	movf	___wmul@multiplicand+1,w
  7843  0794  3DA5               	addwfc	___wmul@product+1,f
  7844  0795                     l759:	
  7845  0795  3001               	movlw	1
  7846  0796                     u2875:	
  7847  0796  35A2               	lslf	___wmul@multiplicand,f
  7848  0797  0DA3               	rlf	___wmul@multiplicand+1,f
  7849  0798  0B89               	decfsz	9,f
  7850  0799  2F96               	goto	u2875
  7851  079A  3001               	movlw	1
  7852  079B                     u2885:	
  7853  079B  36A1               	lsrf	___wmul@multiplier+1,f
  7854  079C  0CA0               	rrf	___wmul@multiplier,f
  7855  079D  0B89               	decfsz	9,f
  7856  079E  2F9B               	goto	u2885
  7857  079F  0820               	movf	___wmul@multiplier,w
  7858  07A0  0421               	iorwf	___wmul@multiplier+1,w
  7859  07A1  1D03               	btfss	3,2
  7860  07A2  2F8F               	goto	l3231
  7861  07A3  0825               	movf	___wmul@product+1,w
  7862  07A4  00A1               	movwf	?___wmul+1
  7863  07A5  0824               	movf	___wmul@product,w
  7864  07A6  00A0               	movwf	?___wmul
  7865  07A7  0008               	return
  7866  07A8                     __end_of___wmul:	
  7867                           
  7868                           	psect	text21
  7869  0F84                     __ptext21:	
  7870 ;; *************** function _LED7SegPinWrite *****************
  7871 ;; Defined at:
  7872 ;;		line 48 in file "LED7Seg.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  val             1    wreg     unsigned char 
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  val             1    0[BANK0 ] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      void 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;Total ram usage:        1 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:    3
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_LED7SegShiftOutPulseClock
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           
  7901                           ;psect for function _LED7SegPinWrite
  7902  0F84                     _LED7SegPinWrite:	
  7903                           
  7904                           ;incstack = 0
  7905                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
  7906                           ;LED7SegPinWrite@val stored from wreg
  7907  0F84  0020               	movlb	0	; select bank0
  7908  0F85  00A0               	movwf	LED7SegPinWrite@val
  7909                           
  7910                           ;LED7Seg.c: 50: if (val){
  7911  0F86  0820               	movf	LED7SegPinWrite@val,w
  7912  0F87  1903               	btfsc	3,2
  7913  0F88  2F8B               	goto	l602
  7914                           
  7915                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
  7916  0F89  1798               	bsf	24,7	;volatile
  7917                           
  7918                           ;LED7Seg.c: 53: } else {
  7919  0F8A  0008               	return
  7920  0F8B                     l602:	
  7921                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
  7922                           
  7923  0F8B  1398               	bcf	24,7	;volatile
  7924  0F8C  0008               	return
  7925  0F8D                     __end_of_LED7SegPinWrite:	
  7926                           
  7927                           	psect	text22
  7928  0FBF                     __ptext22:	
  7929 ;; *************** function _ADCC_GetSingleConversion *****************
  7930 ;; Defined at:
  7931 ;;		line 132 in file "mcc_generated_files/adcc.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  channel         1    wreg     enum E14259
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  channel         1    3[BANK0 ] enum E14259
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  2    0[BANK0 ] unsigned int 
  7938 ;; Registers used:
  7939 ;;		wreg
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7945 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;Total ram usage:        4 bytes
  7950 ;; Hardware stack levels used:    1
  7951 ;; Hardware stack levels required when called:    3
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_main
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           
  7960                           ;psect for function _ADCC_GetSingleConversion
  7961  0FBF                     _ADCC_GetSingleConversion:	
  7962                           
  7963                           ;incstack = 0
  7964                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  7965                           ;ADCC_GetSingleConversion@channel stored from wreg
  7966  0FBF  0020               	movlb	0	; select bank0
  7967  0FC0  00A3               	movwf	ADCC_GetSingleConversion@channel
  7968                           
  7969                           ;adcc.c: 135: ADPCH = channel;
  7970  0FC1  0823               	movf	ADCC_GetSingleConversion@channel,w
  7971  0FC2  0021               	movlb	1	; select bank1
  7972  0FC3  009E               	movwf	30	;volatile
  7973                           
  7974                           ;adcc.c: 138: ADCON0bits.ADON = 1;
  7975  0FC4  1793               	bsf	19,7	;volatile
  7976                           
  7977                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
  7978  0FC5  1313               	bcf	19,6	;volatile
  7979                           
  7980                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
  7981  0FC6  1413               	bsf	19,0	;volatile
  7982                           
  7983                           ;adcc.c: 147: __nop();
  7984  0FC7  0000               	nop
  7985  0FC8                     l163:	
  7986                           ;adcc.c: 151: {
  7987                           
  7988                           ;adcc.c: 150: while (ADCON0bits.ADGO)
  7989                           
  7990  0FC8  0021               	movlb	1	; select bank1
  7991  0FC9  1813               	btfsc	19,0	;volatile
  7992  0FCA  2FC8               	goto	l163
  7993                           
  7994                           ;adcc.c: 152: }
  7995                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7996  0FCB  080D               	movf	13,w	;volatile
  7997  0FCC  0020               	movlb	0	; select bank0
  7998  0FCD  00A1               	movwf	?_ADCC_GetSingleConversion+1
  7999  0FCE  0021               	movlb	1	; select bank1
  8000  0FCF  080C               	movf	12,w	;volatile
  8001  0FD0  0020               	movlb	0	; select bank0
  8002  0FD1  00A0               	movwf	?_ADCC_GetSingleConversion
  8003  0FD2  0008               	return
  8004  0FD3                     __end_of_ADCC_GetSingleConversion:	
  8005                           
  8006                           	psect	intentry
  8007  0004                     __pintentry:	
  8008 ;; *************** function _INTERRUPT_InterruptManager *****************
  8009 ;; Defined at:
  8010 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;		None
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;		None
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  1    wreg      void 
  8017 ;; Registers used:
  8018 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8028 ;;Total ram usage:        1 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    2
  8031 ;; This function calls:
  8032 ;;		_I2C1_BusCollisionISR
  8033 ;;		_I2C1_ISR
  8034 ;; This function is called by:
  8035 ;;		Interrupt level 1
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039  0004                     _INTERRUPT_InterruptManager:	
  8040                           
  8041                           ;incstack = 0
  8042  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8043                           
  8044                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8045  0005  3180               	pagesel	$
  8046  0006  0020               	movlb	0	; select bank0
  8047  0007  087F               	movf	127,w
  8048  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  8049                           
  8050                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
  8051  0009  1F0B               	btfss	11,6	;volatile
  8052  000A  2813               	goto	i1l394
  8053  000B  002E               	movlb	14	; select bank14
  8054  000C  1899               	btfsc	25,1	;volatile
  8055  000D  1C8F               	btfss	15,1	;volatile
  8056  000E  2813               	goto	i1l394
  8057                           
  8058                           ;interrupt_manager.c: 55: {
  8059                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
  8060  000F  3180  2003  3180   	fcall	_I2C1_BusCollisionISR
  8061                           
  8062                           ;interrupt_manager.c: 57: }
  8063  0012  281B               	goto	i1l398
  8064  0013                     i1l394:	
  8065                           
  8066                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
  8067  0013  1F0B               	btfss	11,6	;volatile
  8068  0014  281B               	goto	i1l398
  8069  0015  002E               	movlb	14	; select bank14
  8070  0016  1819               	btfsc	25,0	;volatile
  8071  0017  1C0F               	btfss	15,0	;volatile
  8072  0018  281B               	goto	i1l398
  8073                           
  8074                           ;interrupt_manager.c: 59: {
  8075                           ;interrupt_manager.c: 60: I2C1_ISR();
  8076  0019  3181  21A7         	fcall	_I2C1_ISR
  8077  001B                     i1l398:	
  8078                           ;interrupt_manager.c: 62: else
  8079                           ;interrupt_manager.c: 63: {
  8080                           
  8081                           ;interrupt_manager.c: 61: }
  8082                           
  8083  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  8084  001C  0020               	movlb	0	; select bank0
  8085  001D  00FF               	movwf	127
  8086  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8087  001F  0009               	retfie
  8088  0020                     __end_of_INTERRUPT_InterruptManager:	
  8089                           
  8090                           	psect	text24
  8091  01A7                     __ptext24:	
  8092 ;; *************** function _I2C1_ISR *****************
  8093 ;; Defined at:
  8094 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;		None
  8097 ;; Auto vars:     Size  Location     Type
  8098 ;;		None
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  1    wreg      void 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8111 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8112 ;;Total ram usage:        4 bytes
  8113 ;; Hardware stack levels used:    1
  8114 ;; Hardware stack levels required when called:    1
  8115 ;; This function calls:
  8116 ;;		_I2C1_FunctionComplete
  8117 ;;		_I2C1_Stop
  8118 ;; This function is called by:
  8119 ;;		_INTERRUPT_InterruptManager
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           
  8124                           ;psect for function _I2C1_ISR
  8125  01A7                     _I2C1_ISR:	
  8126                           
  8127                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  8128                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  8129                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  8130                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  8131                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
  8132                           
  8133                           ;incstack = 0
  8134                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8135  01A7  002E               	movlb	14	; select bank14
  8136  01A8  100F               	bcf	15,0	;volatile
  8137                           
  8138                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  8139  01A9  0023               	movlb	3	; select bank3
  8140  01AA  1F90               	btfss	16,7	;volatile
  8141  01AB  2AD2               	goto	i1l2665
  8142                           
  8143                           ;i2c1.c: 246: {
  8144                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  8145  01AC  1390               	bcf	16,7	;volatile
  8146                           
  8147                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  8148  01AD  01F4               	clrf	_i2c1_state
  8149                           
  8150                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  8151  01AE  0871               	movf	_p_i2c1_current,w
  8152  01AF  3E02               	addlw	2
  8153  01B0  0086               	movwf	6
  8154  01B1  0187               	clrf	7
  8155  01B2  0801               	movf	1,w
  8156  01B3  0086               	movwf	6
  8157  01B4  0187               	clrf	7
  8158  01B5  0181               	clrf	1
  8159  01B6  0A81               	incf	1,f
  8160                           
  8161                           ;i2c1.c: 253: p_i2c1_current = (0);
  8162  01B7  01F1               	clrf	_p_i2c1_current
  8163                           
  8164                           ;i2c1.c: 255: return;
  8165  01B8  0008               	return
  8166  01B9                     i1l292:	
  8167                           ;i2c1.c: 260: {
  8168                           ;i2c1.c: 261: case S_MASTER_IDLE:
  8169                           
  8170                           ;i2c1.c: 256: }
  8171                           ;i2c1.c: 259: switch(i2c1_state)
  8172                           
  8173                           
  8174                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  8175  01B9  0021               	movlb	1	; select bank1
  8176  01BA  18A2               	btfsc	(_i2c1_object^(0+128)+2),1
  8177  01BB  0008               	return
  8178                           
  8179                           ;i2c1.c: 264: {
  8180                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  8181  01BC  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  8182  01BD  00F9               	movwf	??_I2C1_ISR
  8183  01BE  0879               	movf	??_I2C1_ISR,w
  8184  01BF  00F1               	movwf	_p_i2c1_current
  8185                           
  8186                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  8187  01C0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  8188  01C1  0086               	movwf	6
  8189  01C2  0187               	clrf	7
  8190  01C3  0801               	movf	1,w
  8191  01C4  00F9               	movwf	??_I2C1_ISR
  8192  01C5  0879               	movf	??_I2C1_ISR,w
  8193  01C6  00F3               	movwf	_i2c1_trb_count
  8194                           
  8195                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  8196  01C7  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  8197  01C8  0086               	movwf	6
  8198  01C9  0187               	clrf	7
  8199  01CA  3F41               	moviw [1]fsr1
  8200  01CB  00F2               	movwf	_p_i2c1_trb_current
  8201                           
  8202                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  8203  01CC  3003               	movlw	3
  8204  01CD  00F9               	movwf	??_I2C1_ISR
  8205  01CE  0879               	movf	??_I2C1_ISR,w
  8206  01CF  07A1               	addwf	(low ((_i2c1_object| 0+1)))^(0+128),f
  8207                           
  8208                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  8209  01D0  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  8210  01D1  3AC5               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  8211  01D2  1D03               	skipz
  8212  01D3  29D8               	goto	i1l2553
  8213                           
  8214                           ;i2c1.c: 274: {
  8215                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  8216  01D4  30C2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8217  01D5  00F9               	movwf	??_I2C1_ISR
  8218  01D6  0879               	movf	??_I2C1_ISR,w
  8219  01D7  00A1               	movwf	(low ((_i2c1_object| 0+1)))^(0+128)
  8220  01D8                     i1l2553:	
  8221                           
  8222                           ;i2c1.c: 277: }
  8223                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  8224  01D8  1022               	bcf	(_i2c1_object^(0+128)+2),0
  8225                           
  8226                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  8227  01D9  0821               	movf	(low ((_i2c1_object| 0+1)))^(0+128),w
  8228  01DA  0620               	xorwf	_i2c1_object^(0+128),w
  8229  01DB  1903               	btfsc	3,2
  8230                           
  8231                           ;i2c1.c: 285: {
  8232                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  8233  01DC  14A2               	bsf	(_i2c1_object^(0+128)+2),1
  8234                           
  8235                           ;i2c1.c: 288: }
  8236                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  8237  01DD  0023               	movlb	3	; select bank3
  8238  01DE  1411               	bsf	17,0	;volatile
  8239                           
  8240                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  8241  01DF  3002               	movlw	2
  8242  01E0  00F9               	movwf	??_I2C1_ISR
  8243  01E1  0879               	movf	??_I2C1_ISR,w
  8244  01E2  00F4               	movwf	_i2c1_state
  8245                           
  8246                           ;i2c1.c: 295: }
  8247                           ;i2c1.c: 297: break;
  8248  01E3  0008               	return
  8249  01E4                     i1l297:	
  8250                           ;i2c1.c: 299: case S_MASTER_RESTART:
  8251                           
  8252                           
  8253                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  8254  01E4  0023               	movlb	3	; select bank3
  8255  01E5  1491               	bsf	17,1	;volatile
  8256                           
  8257                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  8258  01E6  3002               	movlw	2
  8259  01E7  00F9               	movwf	??_I2C1_ISR
  8260  01E8  0879               	movf	??_I2C1_ISR,w
  8261  01E9  00F4               	movwf	_i2c1_state
  8262                           
  8263                           ;i2c1.c: 309: break;
  8264  01EA  0008               	return
  8265  01EB                     i1l298:	
  8266                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  8267                           
  8268                           
  8269                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  8270  01EB  0023               	movlb	3	; select bank3
  8271  01EC  1F11               	btfss	17,6	;volatile
  8272  01ED  29F7               	goto	i1l2565
  8273                           
  8274                           ;i2c1.c: 314: {
  8275                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  8276  01EE  3001               	movlw	1
  8277  01EF  00F9               	movwf	??_I2C1_ISR
  8278  01F0  0879               	movf	??_I2C1_ISR,w
  8279  01F1  0021               	movlb	1	; select bank1
  8280  01F2  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  8281                           
  8282                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8283  01F3  3004               	movlw	4
  8284  01F4  318F  27E9         	fcall	_I2C1_Stop
  8285                           
  8286                           ;i2c1.c: 317: }
  8287  01F6  0008               	return
  8288  01F7                     i1l2565:	
  8289                           
  8290                           ;i2c1.c: 318: else
  8291                           ;i2c1.c: 319: {
  8292                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  8293  01F7  0876               	movf	I2C1_ISR@i2c_address+1,w
  8294  01F8  00FA               	movwf	??_I2C1_ISR+1
  8295  01F9  0875               	movf	I2C1_ISR@i2c_address,w
  8296  01FA  00F9               	movwf	??_I2C1_ISR
  8297  01FB  36FA               	lsrf	??_I2C1_ISR+1,f
  8298  01FC  0CF9               	rrf	??_I2C1_ISR,f
  8299  01FD  0879               	movf	??_I2C1_ISR,w
  8300  01FE  0023               	movlb	3	; select bank3
  8301  01FF  008C               	movwf	12	;volatile
  8302                           
  8303                           ;i2c1.c: 324: if(i2c_address & 0x01)
  8304  0200  1C75               	btfss	I2C1_ISR@i2c_address,0
  8305  0201  2A07               	goto	i1l2571
  8306                           
  8307                           ;i2c1.c: 325: {
  8308                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  8309  0202  300B               	movlw	11
  8310  0203  00F9               	movwf	??_I2C1_ISR
  8311  0204  0879               	movf	??_I2C1_ISR,w
  8312  0205  00F4               	movwf	_i2c1_state
  8313                           
  8314                           ;i2c1.c: 329: }
  8315  0206  0008               	return
  8316  0207                     i1l2571:	
  8317                           
  8318                           ;i2c1.c: 330: else
  8319                           ;i2c1.c: 331: {
  8320                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  8321  0207  3003               	movlw	3
  8322  0208  00F9               	movwf	??_I2C1_ISR
  8323  0209  0879               	movf	??_I2C1_ISR,w
  8324  020A  00F4               	movwf	_i2c1_state
  8325                           
  8326                           ;i2c1.c: 334: }
  8327                           ;i2c1.c: 335: }
  8328                           ;i2c1.c: 337: break;
  8329  020B  0008               	return
  8330  020C                     i1l303:	
  8331                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  8332                           
  8333                           
  8334                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  8335  020C  0023               	movlb	3	; select bank3
  8336  020D  1F11               	btfss	17,6	;volatile
  8337  020E  2A18               	goto	i1l304
  8338                           
  8339                           ;i2c1.c: 342: {
  8340                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  8341  020F  3001               	movlw	1
  8342  0210  00F9               	movwf	??_I2C1_ISR
  8343  0211  0879               	movf	??_I2C1_ISR,w
  8344  0212  0021               	movlb	1	; select bank1
  8345  0213  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  8346                           
  8347                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8348  0214  3004               	movlw	4
  8349  0215  318F  27E9         	fcall	_I2C1_Stop
  8350                           
  8351                           ;i2c1.c: 345: }
  8352  0217  0008               	return
  8353  0218                     i1l304:	
  8354                           
  8355                           ;i2c1.c: 346: else
  8356                           ;i2c1.c: 347: {
  8357                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  8358  0218  1491               	bsf	17,1	;volatile
  8359                           
  8360                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  8361  0219  0876               	movf	I2C1_ISR@i2c_address+1,w
  8362  021A  00FA               	movwf	??_I2C1_ISR+1
  8363  021B  0875               	movf	I2C1_ISR@i2c_address,w
  8364  021C  00F9               	movwf	??_I2C1_ISR
  8365  021D  087A               	movf	??_I2C1_ISR+1,w
  8366  021E  00F9               	movwf	??_I2C1_ISR
  8367  021F  01FA               	clrf	??_I2C1_ISR+1
  8368  0220  3006               	movlw	6
  8369  0221  0579               	andwf	??_I2C1_ISR,w
  8370  0222  00FB               	movwf	??_I2C1_ISR+2
  8371  0223  3000               	movlw	0
  8372  0224  057A               	andwf	??_I2C1_ISR+1,w
  8373  0225  00FC               	movwf	??_I2C1_ISR+3
  8374  0226  30F0               	movlw	240
  8375  0227  047B               	iorwf	??_I2C1_ISR+2,w
  8376  0228  00F5               	movwf	I2C1_ISR@i2c_address
  8377  0229  3000               	movlw	0
  8378  022A  047C               	iorwf	??_I2C1_ISR+3,w
  8379  022B  00F6               	movwf	I2C1_ISR@i2c_address+1
  8380                           
  8381                           ;i2c1.c: 357: i2c_address |= 0x0001;
  8382  022C  1475               	bsf	I2C1_ISR@i2c_address,0
  8383                           
  8384                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  8385  022D  0020               	movlb	0	; select bank0
  8386  022E  01EE               	clrf	I2C1_ISR@i2c_10bit_address_restart
  8387  022F  0AEE               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  8388                           
  8389                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  8390  0230  3002               	movlw	2
  8391  0231  00F9               	movwf	??_I2C1_ISR
  8392  0232  0879               	movf	??_I2C1_ISR,w
  8393  0233  00F4               	movwf	_i2c1_state
  8394                           
  8395                           ;i2c1.c: 364: }
  8396                           ;i2c1.c: 366: break;
  8397  0234  0008               	return
  8398  0235                     i1l2585:	
  8399                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  8400                           
  8401                           
  8402                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  8403  0235  0020               	movlb	0	; select bank0
  8404  0236  036E               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  8405  0237  1903               	btfsc	3,2
  8406  0238  2A4A               	goto	i1l2605
  8407                           
  8408                           ;i2c1.c: 382: {
  8409                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  8410  0239  0872               	movf	_p_i2c1_trb_current,w
  8411  023A  0086               	movwf	6
  8412  023B  0187               	clrf	7
  8413  023C  3F40               	moviw [0]fsr1
  8414  023D  00F5               	movwf	I2C1_ISR@i2c_address
  8415  023E  3F41               	moviw [1]fsr1
  8416  023F  00F6               	movwf	I2C1_ISR@i2c_address+1
  8417                           
  8418                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  8419  0240  0872               	movf	_p_i2c1_trb_current,w
  8420  0241  0086               	movwf	6
  8421  0242  0187               	clrf	7
  8422  0243  3F43               	moviw [3]fsr1
  8423  0244  00F0               	movwf	I2C1_ISR@pi2c_buf_ptr
  8424                           
  8425                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  8426  0245  0872               	movf	_p_i2c1_trb_current,w
  8427  0246  0086               	movwf	6
  8428  0247  0187               	clrf	7
  8429  0248  3F42               	moviw [2]fsr1
  8430  0249  00EF               	movwf	I2C1_ISR@i2c_bytes_left
  8431  024A                     i1l2605:	
  8432                           ;i2c1.c: 407: }
  8433                           ;i2c1.c: 408: }
  8434                           
  8435                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  8436                           
  8437                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  8438                           
  8439                           ;i2c1.c: 400: else
  8440                           ;i2c1.c: 401: {
  8441                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  8442                           
  8443                           ;i2c1.c: 399: }
  8444                           
  8445                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  8446                           
  8447                           ;i2c1.c: 393: {
  8448                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  8449                           
  8450                           ;i2c1.c: 391: {
  8451                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  8452                           
  8453                           ;i2c1.c: 387: }
  8454                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  8455                           
  8456                           
  8457                           ;i2c1.c: 409: else
  8458                           ;i2c1.c: 410: {
  8459                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  8460  024A  0875               	movf	I2C1_ISR@i2c_address,w
  8461  024B  0023               	movlb	3	; select bank3
  8462  024C  008C               	movwf	12	;volatile
  8463                           
  8464                           ;i2c1.c: 413: if(i2c_address & 0x01)
  8465  024D  1C75               	btfss	I2C1_ISR@i2c_address,0
  8466  024E  2A54               	goto	i1l2611
  8467                           
  8468                           ;i2c1.c: 414: {
  8469                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  8470  024F  3005               	movlw	5
  8471  0250  00F9               	movwf	??_I2C1_ISR
  8472  0251  0879               	movf	??_I2C1_ISR,w
  8473  0252  00F4               	movwf	_i2c1_state
  8474                           
  8475                           ;i2c1.c: 417: }
  8476  0253  0008               	return
  8477  0254                     i1l2611:	
  8478                           
  8479                           ;i2c1.c: 418: else
  8480                           ;i2c1.c: 419: {
  8481                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  8482  0254  3003               	movlw	3
  8483  0255  00F9               	movwf	??_I2C1_ISR
  8484  0256  0879               	movf	??_I2C1_ISR,w
  8485  0257  00F4               	movwf	_i2c1_state
  8486                           
  8487                           ;i2c1.c: 422: }
  8488                           ;i2c1.c: 423: }
  8489                           ;i2c1.c: 424: break;
  8490  0258  0008               	return
  8491  0259                     i1l314:	
  8492                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  8493                           
  8494                           
  8495                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  8496  0259  0023               	movlb	3	; select bank3
  8497  025A  1F11               	btfss	17,6	;volatile
  8498  025B  2A67               	goto	i1l2619
  8499                           
  8500                           ;i2c1.c: 430: {
  8501                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  8502  025C  3001               	movlw	1
  8503  025D  00F9               	movwf	??_I2C1_ISR
  8504  025E  0879               	movf	??_I2C1_ISR,w
  8505  025F  0021               	movlb	1	; select bank1
  8506  0260  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  8507                           
  8508                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  8509  0261  0023               	movlb	3	; select bank3
  8510  0262  1311               	bcf	17,6	;volatile
  8511                           
  8512                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  8513  0263  3005               	movlw	5
  8514  0264  318F  27E9         	fcall	_I2C1_Stop
  8515                           
  8516                           ;i2c1.c: 440: }
  8517  0266  0008               	return
  8518  0267                     i1l2619:	
  8519                           
  8520                           ;i2c1.c: 441: else
  8521                           ;i2c1.c: 442: {
  8522                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  8523  0267  3001               	movlw	1
  8524  0268  0020               	movlb	0	; select bank0
  8525  0269  02EF               	subwf	I2C1_ISR@i2c_bytes_left,f
  8526  026A  0A6F               	incf	I2C1_ISR@i2c_bytes_left,w
  8527  026B  1D03               	btfss	3,2
  8528  026C  2A80               	goto	i1l2627
  8529                           
  8530                           ;i2c1.c: 445: {
  8531                           ;i2c1.c: 449: p_i2c1_trb_current++;
  8532  026D  3004               	movlw	4
  8533  026E  00F9               	movwf	??_I2C1_ISR
  8534  026F  0879               	movf	??_I2C1_ISR,w
  8535  0270  07F2               	addwf	_p_i2c1_trb_current,f
  8536                           
  8537                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  8538  0271  3001               	movlw	1
  8539  0272  02F3               	subwf	_i2c1_trb_count,f
  8540  0273  1D03               	btfss	3,2
  8541  0274  2A79               	goto	i1l318
  8542                           
  8543                           ;i2c1.c: 453: {
  8544                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  8545  0275  3000               	movlw	0
  8546  0276  318F  27E9         	fcall	_I2C1_Stop
  8547                           
  8548                           ;i2c1.c: 455: }
  8549  0278  0008               	return
  8550  0279                     i1l318:	
  8551                           
  8552                           ;i2c1.c: 456: else
  8553                           ;i2c1.c: 457: {
  8554                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  8555  0279  0023               	movlb	3	; select bank3
  8556  027A  1491               	bsf	17,1	;volatile
  8557                           
  8558                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  8559  027B  3002               	movlw	2
  8560  027C  00F9               	movwf	??_I2C1_ISR
  8561  027D  0879               	movf	??_I2C1_ISR,w
  8562  027E  00F4               	movwf	_i2c1_state
  8563                           
  8564                           ;i2c1.c: 469: }
  8565                           ;i2c1.c: 470: }
  8566  027F  0008               	return
  8567  0280                     i1l2627:	
  8568                           
  8569                           ;i2c1.c: 471: else
  8570                           ;i2c1.c: 472: {
  8571                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  8572  0280  0870               	movf	I2C1_ISR@pi2c_buf_ptr,w
  8573  0281  0086               	movwf	6
  8574  0282  0187               	clrf	7
  8575  0283  0801               	movf	1,w
  8576  0284  0023               	movlb	3	; select bank3
  8577  0285  008C               	movwf	12	;volatile
  8578  0286  3001               	movlw	1
  8579  0287  00F9               	movwf	??_I2C1_ISR
  8580  0288  0879               	movf	??_I2C1_ISR,w
  8581  0289  07F0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  8582                           
  8583                           ;i2c1.c: 475: }
  8584                           ;i2c1.c: 476: }
  8585                           ;i2c1.c: 477: break;
  8586  028A  0008               	return
  8587  028B                     i1l321:	
  8588                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  8589                           
  8590                           
  8591                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  8592  028B  0023               	movlb	3	; select bank3
  8593  028C  1F11               	btfss	17,6	;volatile
  8594  028D  2A99               	goto	i1l322
  8595                           
  8596                           ;i2c1.c: 483: {
  8597                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  8598  028E  3001               	movlw	1
  8599  028F  00F9               	movwf	??_I2C1_ISR
  8600  0290  0879               	movf	??_I2C1_ISR,w
  8601  0291  0021               	movlb	1	; select bank1
  8602  0292  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  8603                           
  8604                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8605  0293  3004               	movlw	4
  8606  0294  318F  27E9         	fcall	_I2C1_Stop
  8607                           
  8608                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  8609  0296  0023               	movlb	3	; select bank3
  8610  0297  1311               	bcf	17,6	;volatile
  8611                           
  8612                           ;i2c1.c: 493: }
  8613  0298  0008               	return
  8614  0299                     i1l322:	
  8615                           
  8616                           ;i2c1.c: 494: else
  8617                           ;i2c1.c: 495: {
  8618                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  8619  0299  1591               	bsf	17,3	;volatile
  8620                           
  8621                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  8622  029A  3008               	movlw	8
  8623  029B  00F9               	movwf	??_I2C1_ISR
  8624  029C  0879               	movf	??_I2C1_ISR,w
  8625  029D  00F4               	movwf	_i2c1_state
  8626                           
  8627                           ;i2c1.c: 498: }
  8628                           ;i2c1.c: 499: break;
  8629  029E  0008               	return
  8630  029F                     i1l2639:	
  8631                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  8632                           
  8633                           
  8634                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  8635  029F  3008               	movlw	8
  8636  02A0  00F9               	movwf	??_I2C1_ISR
  8637  02A1  0879               	movf	??_I2C1_ISR,w
  8638  02A2  00F4               	movwf	_i2c1_state
  8639                           
  8640                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  8641  02A3  0023               	movlb	3	; select bank3
  8642  02A4  1591               	bsf	17,3	;volatile
  8643                           
  8644                           ;i2c1.c: 511: break;
  8645  02A5  0008               	return
  8646  02A6                     i1l2643:	
  8647                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  8648                           
  8649                           
  8650                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  8651  02A6  0023               	movlb	3	; select bank3
  8652  02A7  080C               	movf	12,w	;volatile
  8653  02A8  00F9               	movwf	??_I2C1_ISR
  8654  02A9  0870               	movf	I2C1_ISR@pi2c_buf_ptr,w
  8655  02AA  0086               	movwf	6
  8656  02AB  0187               	clrf	7
  8657  02AC  0879               	movf	??_I2C1_ISR,w
  8658  02AD  0081               	movwf	1
  8659  02AE  3001               	movlw	1
  8660  02AF  00F9               	movwf	??_I2C1_ISR
  8661  02B0  0879               	movf	??_I2C1_ISR,w
  8662  02B1  07F0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  8663                           
  8664                           ;i2c1.c: 519: if(--i2c_bytes_left)
  8665  02B2  3001               	movlw	1
  8666  02B3  0020               	movlb	0	; select bank0
  8667  02B4  02EF               	subwf	I2C1_ISR@i2c_bytes_left,f
  8668  02B5  1903               	btfsc	3,2
  8669  02B6  2ABE               	goto	i1l326
  8670                           
  8671                           ;i2c1.c: 520: {
  8672                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  8673  02B7  0023               	movlb	3	; select bank3
  8674  02B8  1291               	bcf	17,5	;volatile
  8675                           
  8676                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  8677  02B9  3006               	movlw	6
  8678  02BA  00F9               	movwf	??_I2C1_ISR
  8679  02BB  0879               	movf	??_I2C1_ISR,w
  8680  02BC  00F4               	movwf	_i2c1_state
  8681                           
  8682                           ;i2c1.c: 530: }
  8683  02BD  2AC2               	goto	i1l2655
  8684  02BE                     i1l326:	
  8685                           
  8686                           ;i2c1.c: 531: else
  8687                           ;i2c1.c: 532: {
  8688                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  8689  02BE  0023               	movlb	3	; select bank3
  8690  02BF  1691               	bsf	17,5	;volatile
  8691                           
  8692                           ;i2c1.c: 538: I2C1_FunctionComplete();
  8693  02C0  318F  27AF         	fcall	_I2C1_FunctionComplete
  8694  02C2                     i1l2655:	
  8695                           
  8696                           ;i2c1.c: 539: }
  8697                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  8698  02C2  0023               	movlb	3	; select bank3
  8699  02C3  1611               	bsf	17,4	;volatile
  8700                           
  8701                           ;i2c1.c: 543: break;
  8702  02C4  0008               	return
  8703  02C5                     i1l2657:	
  8704                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  8705                           
  8706                           
  8707                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  8708                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  8709  02C5  3000               	movlw	0
  8710  02C6  318F  27E9         	fcall	_I2C1_Stop
  8711                           
  8712                           ;i2c1.c: 550: break;
  8713  02C8  0008               	return
  8714  02C9                     i1l2659:	
  8715                           ;i2c1.c: 552: default:
  8716                           
  8717                           
  8718                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  8719  02C9  3001               	movlw	1
  8720  02CA  00F9               	movwf	??_I2C1_ISR
  8721  02CB  0879               	movf	??_I2C1_ISR,w
  8722  02CC  0021               	movlb	1	; select bank1
  8723  02CD  07A4               	addwf	(_i2c1_object^(0+128)+4),f
  8724                           
  8725                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  8726  02CE  3006               	movlw	6
  8727  02CF  318F  27E9         	fcall	_I2C1_Stop
  8728                           
  8729                           ;i2c1.c: 560: }
  8730                           
  8731                           ;i2c1.c: 558: break;
  8732  02D1  0008               	return
  8733  02D2                     i1l2665:	
  8734  02D2  0874               	movf	_i2c1_state,w
  8735                           
  8736                           ; Switch size 1, requested type "space"
  8737                           ; Number of cases is 11, Range of values is 0 to 11
  8738                           ; switch strategies available:
  8739                           ; Name         Instructions Cycles
  8740                           ; direct_byte           30     6 (fixed)
  8741                           ; simple_byte           34    18 (average)
  8742                           ; jumptable            260     6 (fixed)
  8743                           ;	Chosen strategy is direct_byte
  8744  02D3  0084               	movwf	4
  8745  02D4  300C               	movlw	12
  8746  02D5  0204               	subwf	4,w
  8747  02D6  1803               	skipnc
  8748  02D7  2AC9               	goto	i1l2659
  8749  02D8  3187               	movlp	high i1S3575
  8750  02D9  3504               	lslf	4,w
  8751  02DA  3EDD               	addlw	low i1S3575
  8752  02DB  0082               	movwf	2
  8753  02DC  0008               	return
  8754  02DD                     __end_of_I2C1_ISR:	
  8755                           
  8756                           	psect	swtext1
  8757  07DD                     __pswtext1:	
  8758  07DD                     i1S3575:	
  8759  07DD  3181  29B9         	ljmp	i1l292
  8760  07DF  3181  29E4         	ljmp	i1l297
  8761  07E1  3182  2A35         	ljmp	i1l2585
  8762  07E3  3182  2A59         	ljmp	i1l314
  8763  07E5  3182  2AC5         	ljmp	i1l2657
  8764  07E7  3182  2A8B         	ljmp	i1l321
  8765  07E9  3182  2A9F         	ljmp	i1l2639
  8766  07EB  3182  2AC5         	ljmp	i1l2657
  8767  07ED  3182  2AA6         	ljmp	i1l2643
  8768  07EF  3182  2AC9         	ljmp	i1l2659
  8769  07F1  3181  29EB         	ljmp	i1l298
  8770  07F3  3182  2A0C         	ljmp	i1l303
  8771                           
  8772                           	psect	text25
  8773  0FE9                     __ptext25:	
  8774 ;; *************** function _I2C1_Stop *****************
  8775 ;; Defined at:
  8776 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  8777 ;; Parameters:    Size  Location     Type
  8778 ;;  completion_c    1    wreg     enum E14260
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  completion_c    1    1[COMMON] enum E14260
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8791 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8792 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8793 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8794 ;;Total ram usage:        2 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_I2C1_ISR
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function _I2C1_Stop
  8805  0FE9                     _I2C1_Stop:	
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  8809                           ;I2C1_Stop@completion_code stored from wreg
  8810  0FE9  00F8               	movwf	I2C1_Stop@completion_code
  8811                           
  8812                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  8813  0FEA  0023               	movlb	3	; select bank3
  8814  0FEB  1511               	bsf	17,2	;volatile
  8815                           
  8816                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  8817  0FEC  0871               	movf	_p_i2c1_current,w
  8818  0FED  3E02               	addlw	2
  8819  0FEE  0086               	movwf	6
  8820  0FEF  0187               	clrf	7
  8821  0FF0  0801               	movf	1,w
  8822  0FF1  1903               	btfsc	3,2
  8823  0FF2  2FFE               	goto	i1l2451
  8824                           
  8825                           ;i2c1.c: 588: {
  8826                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  8827  0FF3  0878               	movf	I2C1_Stop@completion_code,w
  8828  0FF4  00F7               	movwf	??_I2C1_Stop
  8829  0FF5  0871               	movf	_p_i2c1_current,w
  8830  0FF6  3E02               	addlw	2
  8831  0FF7  0086               	movwf	6
  8832  0FF8  0187               	clrf	7
  8833  0FF9  0801               	movf	1,w
  8834  0FFA  0086               	movwf	6
  8835  0FFB  0187               	clrf	7
  8836  0FFC  0877               	movf	??_I2C1_Stop,w
  8837  0FFD  0081               	movwf	1
  8838  0FFE                     i1l2451:	
  8839                           
  8840                           ;i2c1.c: 591: }
  8841                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  8842  0FFE  01F4               	clrf	_i2c1_state
  8843  0FFF  0008               	return
  8844  1000                     __end_of_I2C1_Stop:	
  8845                           
  8846                           	psect	text26
  8847  0FAF                     __ptext26:	
  8848 ;; *************** function _I2C1_FunctionComplete *****************
  8849 ;; Defined at:
  8850 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg, status,2, status,0
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;Total ram usage:        1 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; This function calls:
  8871 ;;		Nothing
  8872 ;; This function is called by:
  8873 ;;		_I2C1_ISR
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           
  8878                           ;psect for function _I2C1_FunctionComplete
  8879  0FAF                     _I2C1_FunctionComplete:	
  8880                           
  8881                           ;i2c1.c: 567: p_i2c1_trb_current++;
  8882                           
  8883                           ;incstack = 0
  8884                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  8885  0FAF  3004               	movlw	4
  8886  0FB0  00F7               	movwf	??_I2C1_FunctionComplete
  8887  0FB1  0877               	movf	??_I2C1_FunctionComplete,w
  8888  0FB2  07F2               	addwf	_p_i2c1_trb_current,f
  8889                           
  8890                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  8891  0FB3  3001               	movlw	1
  8892  0FB4  02F3               	subwf	_i2c1_trb_count,f
  8893  0FB5  1D03               	btfss	3,2
  8894  0FB6  2FBC               	goto	i1l333
  8895                           
  8896                           ;i2c1.c: 571: {
  8897                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  8898  0FB7  3004               	movlw	4
  8899  0FB8  00F7               	movwf	??_I2C1_FunctionComplete
  8900  0FB9  0877               	movf	??_I2C1_FunctionComplete,w
  8901  0FBA  00F4               	movwf	_i2c1_state
  8902                           
  8903                           ;i2c1.c: 573: }
  8904  0FBB  0008               	return
  8905  0FBC                     i1l333:	
  8906                           
  8907                           ;i2c1.c: 574: else
  8908                           ;i2c1.c: 575: {
  8909                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  8910  0FBC  01F4               	clrf	_i2c1_state
  8911  0FBD  0AF4               	incf	_i2c1_state,f
  8912  0FBE  0008               	return
  8913  0FBF                     __end_of_I2C1_FunctionComplete:	
  8914                           
  8915                           	psect	text27
  8916  0003                     __ptext27:	
  8917 ;; *************** function _I2C1_BusCollisionISR *****************
  8918 ;; Defined at:
  8919 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;		None
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		None
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;Total ram usage:        0 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; This function calls:
  8940 ;;		Nothing
  8941 ;; This function is called by:
  8942 ;;		_INTERRUPT_InterruptManager
  8943 ;; This function uses a non-reentrant model
  8944 ;;
  8945                           
  8946                           
  8947                           ;psect for function _I2C1_BusCollisionISR
  8948  0003                     _I2C1_BusCollisionISR:	
  8949                           
  8950                           ;incstack = 0
  8951                           ; Regs used in _I2C1_BusCollisionISR: []
  8952  0003  0008               	return
  8953  0004                     __end_of_I2C1_BusCollisionISR:	
  8954  007E                     btemp	set	126	;btemp
  8955  007E                     int$flags	set	126
  8956  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    36
    Data        36
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     76      80
    BANK1            80      0      73
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S374$pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S397$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S397$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_writeDAC528
    _writeDAC528->_putByte
    _initDAC528->_putByte
    _putByte->___fttol
    ___fttol->___ftdiv
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _blinkyLoop->_delay
    ___ftdiv->___awtoft
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED7SegDisplayValueByDigit->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   21549
                                             58 BANK0     18    18      0
           _ADCC_GetSingleConversion
         _LED7SegDisplayValueByDigit
                       _LED7SegSetup
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                         _blinkyLoop
                              _delay
                         _initDAC528
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _writeDAC528                                          5     2      3    5760
                                             53 BANK0      5     2      3
                            _putByte
 ---------------------------------------------------------------------------------
 (1) _initDAC528                                           1     1      0    5268
                                             53 BANK0      1     1      0
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _putByte                                              9     7      2    5268
                                             44 BANK0      9     7      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     623
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2315
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2027
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    1872
                                             17 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2163
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1671
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegDisplayValueByDigit                           6     2      4    1872
                                             20 BANK0      6     2      4
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (2) _LED7SegShiftOutPulseClock                            3     3      0    1408
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegPulseClock                                    0     0      0    1247
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1247
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LED7SegDisplayValueByDigit
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
   _LED7SegSetup
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _blinkyLoop
     ___wmul
     _delay
       ___wmul
   _delay
     ___wmul
   _initDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _writeDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      49       7       91.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A7      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A7      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 19 16:50:46 2018

                                    _b 00A8                                      _c 00AD  
                                    _d 00A5                                      _e 00AB  
                                    pc 0002                            __CFG_CP$OFF 0000  
           __size_of_LED7SegPulseClock 000B             MYI2C_Write2LEDBytes@F14471 00D9  
                  ___wmul@multiplicand 0022                                    l163 0FC8  
                                  l602 0F8B                                    l448 0673  
                                  l920 05A9                                    l666 02E3  
                                  l759 0795                                    l927 05BC  
                                  l928 05C4                                    _GIE 005F  
                         __CFG_CPD$OFF 0000                           __CFG_BORV$LO 0000  
                                  wreg 0009                           __CFG_LVP$OFF 0000  
                         __CFG_ZCD$OFF 0000                           ___ftdiv@cntr 0038  
                     __end_of_I2C1_ISR 02DD                           ___ftdiv@sign 003D  
                                 l1011 055C                                   l2303 03FA  
                                 l2241 0595                                   l2233 057F  
                                 l2315 0416                                   l2307 0402  
                                 l2237 0586                                   l3231 078F  
                                 l2247 05AE                                   l2239 0590  
                                 l2319 041E                                   l2335 0508  
                                 l2249 05B6                                   l2361 0553  
                                 l2353 0538                                   l2505 032C  
                                 l2275 0759                                   l2291 03BF  
                                 l2363 055F                                   l2355 0546  
                                 l2507 0330                                   l2285 03A9  
                                 l2367 056D                                   l3503 0194  
                                 l3453 0078                                   l2815 04CD  
                                 l2807 04B4                                   l3367 05EB  
                                 l3385 06DA                                   l3369 062D  
                                 l3395 06F5                                   l3459 008F  
                                 l3389 06E5                                   l3495 0177  
                                 l2793 0473                                   l2787 045D  
                                 u2205 0495                                   _LATA 0016  
                                 _LATB 0017                                   u2215 04B5  
                                 _LATC 0018                                   u2225 04C4  
                                 u2235 04CE                                   u1605 03DB  
                                 u3045 008B                                   u1535 05CB  
                                 u1455 058B                                   u3055 0137  
                                 u1625 0403                                   u1705 050F  
                                 u1475 05A4                                   u2195 0485  
                                 u1635 0409                                   u1495 05B1  
                                 u1735 0539                                   u1665 041F  
                                 u1914 02ED                                   u1675 0425  
                                 u1595 03CB                                   u1915 02EC  
                                 u1765 0554                                   u2913 0685  
                                 u2905 0668                                   u2930 06CC  
                                 u2875 0796                                   u2964 077C  
                                 u2885 079B                                   u2965 077B  
                                 u2995 05F5                                   _WPUA 0F39  
                                 _WPUB 0F44                                   _WPUC 0F4F  
                                 _WPUE 0F65                           __CFG_WRT$OFF 0000  
                        __CFG_FCMEN$ON 0000                                   _main 0044  
                         ___ftpack@arg 0020                           ___ftpack@exp 0023  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 _twoK 1016                                   btemp 007E  
                         main@iCounter 0063   LED7SegDisplayValueByDigit@iTensDigit 0034  
                        __CFG_BOREN$ON 0000                __end_of_LED7SegPinWrite 0F8D  
                                 start 0020                            _writeDAC528 0705  
                        __CFG_CSWEN$ON 0000                          __CFG_MCLRE$ON 0000  
                         ___ftmul@cntr 003C                           ___ftmul@sign 003D  
                         ___fttol@exp1 004B                           ___fttol@lval 0047  
                           _i2c1_state 0074         __size_of_OSCILLATOR_Initialize 0009  
        __end_of_OSCILLATOR_Initialize 0F96                                  _ADACQ 009D  
                                _ADACT 0099                                  _ADCAP 009B  
                                ?_main 0077                                  _ADCLK 0098  
                                _ADCNT 010C                                  _ADPCH 009E  
                                _ADREF 009A                      __end_of_I2C1_Stop 1000  
                                _ADPRE 009C                          __CFG_WDTE$OFF 0000  
                                _ADRPT 010D                        __end_of___ftdiv 04EF  
                      __end_of___ftmul 0446                        __end_of___fttol 0576  
                       __CFG_DEBUG$OFF 0000                                  i1l303 020C  
                                i1l304 0218                                  i1l321 028B  
                                i1l322 0299                                  i1l314 0259  
                                i1l333 0FBC                                  i1l326 02BE  
                                i1l318 0279                                  i1l292 01B9  
                                i1l297 01E4                                  i1l298 01EB  
                                i1l394 0013                                  i1l398 001B  
                                _OSCEN 0891                                  _PORTA 000C  
                                _PORTB 000D                                  _PORTC 000E  
                                _TRISA 0011                                  _TRISB 0012  
                                _TRISC 0013                        __end_of_datapin 101C  
         __end_of_I2C1_BusCollisionISR 0004                      ??_I2C1_Initialize 0020  
                        ___awtoft@sign 002D                                  _delay 063D  
                        ___ftpack@sign 0024                                  _speed 1018  
                      __end_of_putByte 0392                                  status 0003  
                                wtemp0 007E                             _iLEDs0_LSB 006C  
                           _iLEDs0_MSB 006D                             _iLEDs1_LSB 00B0  
                           _iLEDs1_MSB 00B1                   __end_of_LED7SegSetup 0FAF  
                      __initialization 0022                           __end_of_main 01A7  
                         __end_of_twoK 1018            ?_INTERRUPT_InterruptManager 0077  
                  _lineSettleMicroTime 1012                            _i2c1_object 00A0  
                               ??_main 005A                          ___fttol@sign1 0046  
          ??_LED7SegShiftOutPulseClock 0031                        putByte@clockPin 004C  
LED7SegDisplayValueByDigit@iUnitsDigit 0036                                 ?_delay 0026  
                               _ADACCH 0091                                 _ADACCL 0090  
                               _ADCON0 0093                                 _ADCON1 0094  
                               _ADCON2 0095                                 _ADCON3 0096  
                               _ADERRH 0117                                 _ADERRL 0116  
                               i1S3575 07DD                                 _ADLTHH 010F  
                               _ADLTHL 010E                                 _ADRESH 008D  
                               _ADRESL 008C                                 _ADSTAT 0097  
                               _ADUTHH 0111                                 _ADUTHL 0110  
                     __end_of___awtoft 0770                                 _ANSELA 0F38  
                               _ANSELB 0F43                                 _ANSELC 0F4E  
                     __end_of___ftpack 05DB                     __CFG_RSTOSC$HFINT1 0000  
                               _RC3PPS 0F23                                 _RC4PPS 0F24  
                               _ODCONA 0F3A                                 _ODCONB 0F45  
                               _ODCONC 0F50                                 i1l2451 0FFE  
                               i1l2611 0254                                 i1l2605 024A  
                               i1l2553 01D8                                 i1l2643 02A6  
                               i1l2627 0280                                 i1l2619 0267  
                               i1l2571 0207                                 i1l2565 01F7  
                               i1l2655 02C2                                 i1l2639 029F  
                               i1l2657 02C5                                 i1l2585 0235  
                               i1l2665 02D2                                 i1l2659 02C9  
                       __CFG_WDTCCS$SC 0000                                 _OSCFRQ 0893  
                     ?_LED7SegPinWrite 0077                         __CFG_PWRTE$OFF 0000  
                     __end_of_clockpin 101E                         _p_i2c1_current 0071  
                               ___wmul 078C                         __CFG_STVREN$ON 0000  
                            ??___ftdiv 0034                              ??___ftmul 0034  
                            ??___fttol 0042                       __end_of_latchpin 1020  
                            ?_I2C1_ISR 0077                  ___ftmul@f3_as_product 0039  
                      _ADCC_Initialize 07A8                              ??_putByte 004E  
    __size_of_ADCC_GetSingleConversion 0014              ?_ADCC_GetSingleConversion 0020  
                    _SYSTEM_Initialize 0F96              _LED7SegShiftOutPulseClock 0770  
              __end_of__initialization 0040                     ?_SYSTEM_Initialize 0077  
                           ___ftdiv@f1 0031                             ___ftdiv@f2 002E  
                           ___ftdiv@f3 0039                         _i2c1_trb_count 0073  
                       _byteFaderValue 00B2                             ___awtoft@c 0028  
                           ___ftmul@f1 002E                             ___ftmul@f2 0031  
                _I2C1_FunctionComplete 0FAF                   _I2C1_BusCollisionISR 0003  
                           ___fttol@f1 003E                         __pcstackCOMMON 0077  
                         __pidataBANK1 072A                    ??_SYSTEM_Initialize 0021  
             main@I2C_ADDRESS_FADELED0 005E                          __end_of_delay 0690  
                       main@faderValue 006A                          __end_of_speed 101A  
                           ??_I2C1_ISR 0079                     main@fader8bitValue 0068  
                              ??_delay 0028              __end_of_SYSTEM_Initialize 0FA2  
                           __pbssBANK0 006C                             __pbssBANK1 00A0  
                __size_of_LED7SegSetup 000D             LED7SegShiftOutPulseClock@i 0033  
                         ?_writeDAC528 0055                  ?_I2C1_BusCollisionISR 0077  
                       _SSP1DATPPSbits 0EC6                             __pmaintext 0044  
                              ?___wmul 0020                        __CFG_PPS1WAY$ON 0000  
              __end_of_ADCC_Initialize 07C3                             __pintentry 0004  
                      _I2C1_Initialize 07C3                                _ADFLTRH 0115  
                              _ADFLTRL 0114                             _blinkyLoop 05DB  
                              _ADPREVH 008F                                _ADPREVL 008E  
                            ?___awtoft 0028                              ?___ftpack 0020  
                              _ADSTPTH 0113                                _ADSTPTL 0112  
                       _SSP1CLKPPSbits 0EC5                                _OSCCON1 088D  
                              _OSCCON3 088F                              _I2C1_Stop 0FE9  
                              _OSCTUNE 0892                           _LED7SegSetup 0FA2  
                              _SSP1ADD 018D                                _PPSLOCK 0E8F  
                              _SSP1BUF 018C                             _initDAC528 0FD3  
                       main@readStatus 005F                    __end_of_cPowerOfTwo 1010  
               ?_I2C1_FunctionComplete 0077                     _p_i2c1_trb_current 0072  
                 __CFG_SCANE$available 0000                                ___ftdiv 0446  
                      __size_of___wmul 001C                                ___ftmul 0392  
                              ___fttol 04EF                     writeDAC528@dacData 0057  
                           ??___awtoft 002B                             ??___ftpack 0025  
                              _datapin 101A                                __ptext1 0705  
                              __ptext2 0FD3                                __ptext3 02DD  
                              __ptext4 04EF                                __ptext5 0392  
                              __ptext6 074E                                __ptext7 05DB  
                              __ptext8 0446                                __ptext9 0576  
                _OSCILLATOR_Initialize 0F8D                                _segdisp 00C5  
             ??_PIN_MANAGER_Initialize 0020                             ?_I2C1_Stop 0077  
                              _putByte 02DD             __size_of_SYSTEM_Initialize 000C  
                 I2C1_ISR@pi2c_buf_ptr 0070                                clrloop0 0F79  
                 end_of_initialization 0040           ??_LED7SegDisplayValueByDigit 0038  
                              init_ram 0F7E                                initloop 0F7F  
               ??_I2C1_BusCollisionISR 0077                __end_of_I2C1_Initialize 07DD  
                    __end_of_toggleDly 1016                       ?_ADCC_Initialize 0077  
     __end_of_ADCC_GetSingleConversion 0FD3                            ?_blinkyLoop 0031  
                __CFG_WDTCPS$WDTCPS_31 0000                      __size_of_I2C1_ISR 0136  
  __size_of_LED7SegDisplayValueByDigit 0037                              _TRISCbits 0013  
                          _cPowerOfTwo 1000                       __CFG_FEXTOSC$OFF 0000  
                          putByte@data 0052                        main@iResetValue 1020  
                          ?_initDAC528 0077                            putByte@mask 0053  
    I2C1_ISR@i2c_10bit_address_restart 006E                            ___ftdiv@exp 003C  
                          ___ftmul@exp 0038                   __size_of_writeDAC528 0025  
               delay@adjustedDelaytime 0029               __size_of_LED7SegPinWrite 0009  
                       __end_of___wmul 07A8                I2C1_MasterWrite@trBlock 00BE  
             I2C1_Stop@completion_code 0078                 ?_OSCILLATOR_Initialize 0077  
                       _clockMicroTime 1010            __end_of_lineSettleMicroTime 1014  
                  start_initialization 0022                            ??_I2C1_Stop 0077  
      __size_of_PIN_MANAGER_Initialize 003E                    __size_of_blinkyLoop 0062  
                     ?_I2C1_Initialize 0077                       __CFG_LPBOREN$OFF 0000  
                             ??___wmul 0024                            __pdataBANK1 00C5  
               __end_of_clockMicroTime 1012                    __size_of_initDAC528 0016  
                    __size_of___awtoft 0022               _ADCC_GetSingleConversion 0FBF  
                    __size_of___ftpack 0065                __end_ofmain@iResetValue 1022  
                          __pbssCOMMON 0070                              ___latbits 0002  
                        __pcstackBANK0 0020                          _i2c1_tr_queue 00C2  
                  blinkyLoop@delayTime 0034     __end_of_LED7SegDisplayValueByDigit 0705  
           _LED7SegDisplayValueByDigit 06CE                   writeDAC528@dacNumber 0055  
              ??_I2C1_FunctionComplete 0077                 _PIN_MANAGER_Initialize 0690  
      ADCC_GetSingleConversion@channel 0023                               ?___ftdiv 002E  
                             ?___ftmul 002E                               ?___fttol 003E  
                             _I2C1_ISR 01A7           ??_INTERRUPT_InterruptManager 007D  
                            __pswtext1 07DD                     LED7SegPinWrite@val 0020  
               main@prevFader8bitValue 0065                      ??_LED7SegPinWrite 0020  
                  blinkyLoop@loopCount 0036                               ?_putByte 004C  
                         _wkFaderValue 00AF                         __size_of_delay 0053  
                         delay@counter 002D                 I2C1_MasterRead@trBlock 00BA  
                       ___wmul@product 0024                       main@iChangeCount 0060  
                             _LATCbits 0018                              clear_ram0 0F78  
                             _PIE3bits 0719    __size_of_INTERRUPT_InterruptManager 001C  
                             _PIR3bits 070F    LED7SegDisplayValueByDigit@iTensCode 0038  
                             _SSP1CON1 0190                               _SSP1CON3 0192  
                             _SSP1STAT 018F                           ??_blinkyLoop 0033  
                            _toggleDly 1014                             _ADCON0bits 0093  
                           _ADCON1bits 0094                             _ADCON2bits 0095  
                           _ADCON3bits 0096                      ___wmul@multiplier 0020  
                         ??_initDAC528 0055                     __end_of_blinkyLoop 063D  
                           _ADSTATbits 0097          __size_of_I2C1_BusCollisionISR 0001  
               I2C1_ISR@i2c_bytes_left 006F                ??_OSCILLATOR_Initialize 0020  
                       delay@delaytime 0026                       __size_of___ftdiv 00A9  
                     __size_of___ftmul 00B4                       __size_of___fttol 0087  
                             ___awtoft 074E                               ___ftpack 0576  
                   __end_of_initDAC528 0FE9                      _LED7SegPulseClock 07F5  
                           _ANSELCbits 0F4E                     ?_LED7SegPulseClock 0077  
             __size_of_ADCC_Initialize 001B                    I2C1_ISR@i2c_address 0075  
                             __ptext10 0F96                               __ptext11 0690  
                             __ptext20 078C                               __ptext12 0F8D  
                             __ptext21 0F84                               __ptext13 07C3  
                             __ptext22 0FBF                               __ptext14 07A8  
                             __ptext15 0FA2                               __ptext24 01A7  
                             __ptext16 06CE                               __ptext25 0FE9  
                             __ptext17 0770                               __ptext26 0FAF  
                             __ptext18 07F5                               __ptext27 0003  
                             __ptext19 063D                     blinkyLoop@maxLoops 0031  
                         _SSP1CON1bits 0190                           _SSP1CON2bits 0191  
                             _clockpin 101C                       __size_of_putByte 00B5  
                  ??_LED7SegPulseClock 0031                               _latchpin 101E  
                        __size_of_main 0163                          ??_writeDAC528 0058  
                 __CFG_WDTCWS$WDTCWS_7 0000                 writeDAC528@wkDacNumber 0059  
           ??_ADCC_GetSingleConversion 0023                               int$flags 007E  
   __end_of_INTERRUPT_InterruptManager 0020             _INTERRUPT_InterruptManager 0004  
            __end_of_LED7SegPulseClock 0800     __size_of_LED7SegShiftOutPulseClock 001C  
           ?_LED7SegShiftOutPulseClock 0077            PIN_MANAGER_Initialize@state 0020  
         LED7SegShiftOutPulseClock@val 0032                         _cMstrClkAdjust 1022  
                           _INTCONbits 000B                          ?_LED7SegSetup 0077  
                       __pstringtext10 1020                         __pstringtext11 1022  
                             intlevel1 0000            ?_LED7SegDisplayValueByDigit 0034  
              ?_PIN_MANAGER_Initialize 0077                      __CFG_CLKOUTEN$OFF 0000  
       __size_of_I2C1_FunctionComplete 0010          __end_of_I2C1_FunctionComplete 0FBF  
                          _PPSLOCKbits 0E8F                               putByte@i 0054  
                      _LED7SegPinWrite 0F84                    __end_of_writeDAC528 072A  
               __end_of_cMstrClkAdjust 1024               __size_of_I2C1_Initialize 001A  
                        __pstringtext1 1000                          __pstringtext2 1010  
                        __pstringtext3 1012                          __pstringtext4 1014  
                        __pstringtext5 1016                          __pstringtext6 1018  
                        __pstringtext7 101A                          __pstringtext8 101C  
                        __pstringtext9 101E      __end_of_LED7SegShiftOutPulseClock 078C  
                        main@POT0Value 0061                          main@POT1Value 0062  
                       ??_LED7SegSetup 0020                       main@iLoopCounter 0066  
       __end_of_PIN_MANAGER_Initialize 06CE                      ??_ADCC_Initialize 0020  
                     main@DACDataValue 0069                     __size_of_I2C1_Stop 0017  
