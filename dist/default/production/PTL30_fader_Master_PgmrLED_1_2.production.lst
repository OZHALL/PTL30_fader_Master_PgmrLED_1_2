

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 26 06:47:10 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	cinit,global,class=CODE,merge=1,delta=2
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    26                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    27                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	inittext,global,class=CODE,delta=2
    31                           	psect	clrtext,global,class=CODE,delta=2
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2
    69                           	psect	swtext1,local,class=CONST,delta=2
    70                           	psect	text34,local,class=CODE,merge=1,delta=2
    71                           	psect	text35,local,class=CODE,merge=1,delta=2
    72                           	psect	text36,local,class=CODE,merge=1,delta=2
    73                           	dabs	1,0x620,48
    74                           	dabs	1,0x5A0,80
    75                           	dabs	1,0x2370,0,_aPatchMemory
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 1.45
    79                           ; Generated 16/11/2017 GMT
    80                           ; 
    81                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F18855 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  001C                     	;# 
   135  001C                     	;# 
   136  001D                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  008C                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008E                     	;# 
   145  008F                     	;# 
   146  0090                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0093                     	;# 
   150  0094                     	;# 
   151  0095                     	;# 
   152  0096                     	;# 
   153  0097                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0110                     	;# 
   167  0110                     	;# 
   168  0111                     	;# 
   169  0112                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0114                     	;# 
   174  0115                     	;# 
   175  0116                     	;# 
   176  0116                     	;# 
   177  0117                     	;# 
   178  0119                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  011A                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011C                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011D                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011E                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  018E                     	;# 
   206  018F                     	;# 
   207  0190                     	;# 
   208  0191                     	;# 
   209  0192                     	;# 
   210  0196                     	;# 
   211  0197                     	;# 
   212  0198                     	;# 
   213  0199                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019C                     	;# 
   217  020C                     	;# 
   218  020C                     	;# 
   219  020D                     	;# 
   220  020E                     	;# 
   221  020F                     	;# 
   222  020F                     	;# 
   223  0210                     	;# 
   224  0210                     	;# 
   225  0211                     	;# 
   226  0211                     	;# 
   227  0212                     	;# 
   228  0212                     	;# 
   229  0213                     	;# 
   230  0214                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0218                     	;# 
   238  0218                     	;# 
   239  0219                     	;# 
   240  021A                     	;# 
   241  021B                     	;# 
   242  021B                     	;# 
   243  021C                     	;# 
   244  021C                     	;# 
   245  021D                     	;# 
   246  021D                     	;# 
   247  021E                     	;# 
   248  021F                     	;# 
   249  028C                     	;# 
   250  028C                     	;# 
   251  028D                     	;# 
   252  028D                     	;# 
   253  028E                     	;# 
   254  028F                     	;# 
   255  0290                     	;# 
   256  0290                     	;# 
   257  0291                     	;# 
   258  0292                     	;# 
   259  0292                     	;# 
   260  0293                     	;# 
   261  0293                     	;# 
   262  0294                     	;# 
   263  0295                     	;# 
   264  0296                     	;# 
   265  0296                     	;# 
   266  0297                     	;# 
   267  0298                     	;# 
   268  0298                     	;# 
   269  0299                     	;# 
   270  0299                     	;# 
   271  029A                     	;# 
   272  029B                     	;# 
   273  029C                     	;# 
   274  029C                     	;# 
   275  029D                     	;# 
   276  030C                     	;# 
   277  030C                     	;# 
   278  030D                     	;# 
   279  030E                     	;# 
   280  030F                     	;# 
   281  0310                     	;# 
   282  0310                     	;# 
   283  0311                     	;# 
   284  0312                     	;# 
   285  0313                     	;# 
   286  0314                     	;# 
   287  0314                     	;# 
   288  0315                     	;# 
   289  0316                     	;# 
   290  0317                     	;# 
   291  0318                     	;# 
   292  0318                     	;# 
   293  0319                     	;# 
   294  031A                     	;# 
   295  031B                     	;# 
   296  031C                     	;# 
   297  031C                     	;# 
   298  031D                     	;# 
   299  031E                     	;# 
   300  031F                     	;# 
   301  038C                     	;# 
   302  038D                     	;# 
   303  038E                     	;# 
   304  0390                     	;# 
   305  0391                     	;# 
   306  0392                     	;# 
   307  040C                     	;# 
   308  040D                     	;# 
   309  040E                     	;# 
   310  040F                     	;# 
   311  0410                     	;# 
   312  0411                     	;# 
   313  0416                     	;# 
   314  0416                     	;# 
   315  0417                     	;# 
   316  0418                     	;# 
   317  0418                     	;# 
   318  0419                     	;# 
   319  041A                     	;# 
   320  041A                     	;# 
   321  041B                     	;# 
   322  041C                     	;# 
   323  041C                     	;# 
   324  041D                     	;# 
   325  041E                     	;# 
   326  041F                     	;# 
   327  048C                     	;# 
   328  048C                     	;# 
   329  048D                     	;# 
   330  048E                     	;# 
   331  048F                     	;# 
   332  048F                     	;# 
   333  0490                     	;# 
   334  0491                     	;# 
   335  0492                     	;# 
   336  0492                     	;# 
   337  0493                     	;# 
   338  0494                     	;# 
   339  0495                     	;# 
   340  0495                     	;# 
   341  0496                     	;# 
   342  0497                     	;# 
   343  0498                     	;# 
   344  0499                     	;# 
   345  049A                     	;# 
   346  049B                     	;# 
   347  049C                     	;# 
   348  049D                     	;# 
   349  050C                     	;# 
   350  050C                     	;# 
   351  050D                     	;# 
   352  050E                     	;# 
   353  050F                     	;# 
   354  050F                     	;# 
   355  0510                     	;# 
   356  0511                     	;# 
   357  0512                     	;# 
   358  0512                     	;# 
   359  0513                     	;# 
   360  0514                     	;# 
   361  0515                     	;# 
   362  0515                     	;# 
   363  0516                     	;# 
   364  0517                     	;# 
   365  0518                     	;# 
   366  0519                     	;# 
   367  051A                     	;# 
   368  051B                     	;# 
   369  051C                     	;# 
   370  051D                     	;# 
   371  058C                     	;# 
   372  058C                     	;# 
   373  058D                     	;# 
   374  058E                     	;# 
   375  058F                     	;# 
   376  058F                     	;# 
   377  0590                     	;# 
   378  0591                     	;# 
   379  0592                     	;# 
   380  0593                     	;# 
   381  060C                     	;# 
   382  060D                     	;# 
   383  060E                     	;# 
   384  060F                     	;# 
   385  0610                     	;# 
   386  0611                     	;# 
   387  0612                     	;# 
   388  0613                     	;# 
   389  0614                     	;# 
   390  0616                     	;# 
   391  0617                     	;# 
   392  0618                     	;# 
   393  0619                     	;# 
   394  061A                     	;# 
   395  061B                     	;# 
   396  061C                     	;# 
   397  061D                     	;# 
   398  061E                     	;# 
   399  068C                     	;# 
   400  068D                     	;# 
   401  068E                     	;# 
   402  068F                     	;# 
   403  0690                     	;# 
   404  0691                     	;# 
   405  0692                     	;# 
   406  0693                     	;# 
   407  0694                     	;# 
   408  070C                     	;# 
   409  070D                     	;# 
   410  070E                     	;# 
   411  070F                     	;# 
   412  0710                     	;# 
   413  0711                     	;# 
   414  0712                     	;# 
   415  0713                     	;# 
   416  0714                     	;# 
   417  0716                     	;# 
   418  0717                     	;# 
   419  0718                     	;# 
   420  0719                     	;# 
   421  071A                     	;# 
   422  071B                     	;# 
   423  071C                     	;# 
   424  071D                     	;# 
   425  071E                     	;# 
   426  0796                     	;# 
   427  0797                     	;# 
   428  0798                     	;# 
   429  0799                     	;# 
   430  079A                     	;# 
   431  079B                     	;# 
   432  080C                     	;# 
   433  080D                     	;# 
   434  080E                     	;# 
   435  080F                     	;# 
   436  0810                     	;# 
   437  0811                     	;# 
   438  0812                     	;# 
   439  0813                     	;# 
   440  0814                     	;# 
   441  081A                     	;# 
   442  081B                     	;# 
   443  081C                     	;# 
   444  081D                     	;# 
   445  081E                     	;# 
   446  081F                     	;# 
   447  088C                     	;# 
   448  088D                     	;# 
   449  088E                     	;# 
   450  088F                     	;# 
   451  0890                     	;# 
   452  0891                     	;# 
   453  0892                     	;# 
   454  0893                     	;# 
   455  0895                     	;# 
   456  0896                     	;# 
   457  0897                     	;# 
   458  0898                     	;# 
   459  0899                     	;# 
   460  089A                     	;# 
   461  089B                     	;# 
   462  090C                     	;# 
   463  090E                     	;# 
   464  090F                     	;# 
   465  091F                     	;# 
   466  091F                     	;# 
   467  098F                     	;# 
   468  098F                     	;# 
   469  0990                     	;# 
   470  0991                     	;# 
   471  0992                     	;# 
   472  0993                     	;# 
   473  0994                     	;# 
   474  0995                     	;# 
   475  0996                     	;# 
   476  0997                     	;# 
   477  0E0F                     	;# 
   478  0E10                     	;# 
   479  0E11                     	;# 
   480  0E12                     	;# 
   481  0E13                     	;# 
   482  0E14                     	;# 
   483  0E15                     	;# 
   484  0E16                     	;# 
   485  0E17                     	;# 
   486  0E18                     	;# 
   487  0E19                     	;# 
   488  0E1A                     	;# 
   489  0E1B                     	;# 
   490  0E1C                     	;# 
   491  0E1D                     	;# 
   492  0E1E                     	;# 
   493  0E1F                     	;# 
   494  0E20                     	;# 
   495  0E21                     	;# 
   496  0E22                     	;# 
   497  0E23                     	;# 
   498  0E24                     	;# 
   499  0E25                     	;# 
   500  0E26                     	;# 
   501  0E27                     	;# 
   502  0E28                     	;# 
   503  0E29                     	;# 
   504  0E2A                     	;# 
   505  0E2B                     	;# 
   506  0E2C                     	;# 
   507  0E2D                     	;# 
   508  0E2E                     	;# 
   509  0E2F                     	;# 
   510  0E30                     	;# 
   511  0E31                     	;# 
   512  0E32                     	;# 
   513  0E33                     	;# 
   514  0E34                     	;# 
   515  0E35                     	;# 
   516  0E36                     	;# 
   517  0E37                     	;# 
   518  0E8F                     	;# 
   519  0E90                     	;# 
   520  0E91                     	;# 
   521  0E92                     	;# 
   522  0E93                     	;# 
   523  0E94                     	;# 
   524  0E95                     	;# 
   525  0E96                     	;# 
   526  0E97                     	;# 
   527  0E9C                     	;# 
   528  0E9D                     	;# 
   529  0E9E                     	;# 
   530  0EA1                     	;# 
   531  0EA2                     	;# 
   532  0EA3                     	;# 
   533  0EA4                     	;# 
   534  0EA5                     	;# 
   535  0EA9                     	;# 
   536  0EAA                     	;# 
   537  0EAB                     	;# 
   538  0EAC                     	;# 
   539  0EB1                     	;# 
   540  0EB2                     	;# 
   541  0EB3                     	;# 
   542  0EB8                     	;# 
   543  0EB9                     	;# 
   544  0EBA                     	;# 
   545  0EBB                     	;# 
   546  0EBC                     	;# 
   547  0EBD                     	;# 
   548  0EBE                     	;# 
   549  0EC3                     	;# 
   550  0EC5                     	;# 
   551  0EC6                     	;# 
   552  0EC7                     	;# 
   553  0EC8                     	;# 
   554  0EC9                     	;# 
   555  0ECA                     	;# 
   556  0ECB                     	;# 
   557  0ECC                     	;# 
   558  0F10                     	;# 
   559  0F11                     	;# 
   560  0F12                     	;# 
   561  0F13                     	;# 
   562  0F14                     	;# 
   563  0F15                     	;# 
   564  0F16                     	;# 
   565  0F17                     	;# 
   566  0F18                     	;# 
   567  0F19                     	;# 
   568  0F1A                     	;# 
   569  0F1B                     	;# 
   570  0F1C                     	;# 
   571  0F1D                     	;# 
   572  0F1E                     	;# 
   573  0F1F                     	;# 
   574  0F20                     	;# 
   575  0F21                     	;# 
   576  0F22                     	;# 
   577  0F23                     	;# 
   578  0F24                     	;# 
   579  0F25                     	;# 
   580  0F26                     	;# 
   581  0F27                     	;# 
   582  0F38                     	;# 
   583  0F39                     	;# 
   584  0F3A                     	;# 
   585  0F3B                     	;# 
   586  0F3C                     	;# 
   587  0F3D                     	;# 
   588  0F3E                     	;# 
   589  0F3F                     	;# 
   590  0F40                     	;# 
   591  0F41                     	;# 
   592  0F43                     	;# 
   593  0F44                     	;# 
   594  0F45                     	;# 
   595  0F46                     	;# 
   596  0F47                     	;# 
   597  0F48                     	;# 
   598  0F49                     	;# 
   599  0F4A                     	;# 
   600  0F4B                     	;# 
   601  0F4C                     	;# 
   602  0F4E                     	;# 
   603  0F4F                     	;# 
   604  0F50                     	;# 
   605  0F51                     	;# 
   606  0F52                     	;# 
   607  0F53                     	;# 
   608  0F54                     	;# 
   609  0F55                     	;# 
   610  0F56                     	;# 
   611  0F57                     	;# 
   612  0F65                     	;# 
   613  0F68                     	;# 
   614  0F69                     	;# 
   615  0F6A                     	;# 
   616  0F6B                     	;# 
   617  0FE4                     	;# 
   618  0FE5                     	;# 
   619  0FE6                     	;# 
   620  0FE7                     	;# 
   621  0FE8                     	;# 
   622  0FE9                     	;# 
   623  0FEA                     	;# 
   624  0FEB                     	;# 
   625  0FED                     	;# 
   626  0FEE                     	;# 
   627  0FEF                     	;# 
   628  0000                     	;# 
   629  0001                     	;# 
   630  0002                     	;# 
   631  0003                     	;# 
   632  0004                     	;# 
   633  0005                     	;# 
   634  0006                     	;# 
   635  0007                     	;# 
   636  0008                     	;# 
   637  0009                     	;# 
   638  000A                     	;# 
   639  000B                     	;# 
   640  000C                     	;# 
   641  000D                     	;# 
   642  000E                     	;# 
   643  0010                     	;# 
   644  0011                     	;# 
   645  0012                     	;# 
   646  0013                     	;# 
   647  0016                     	;# 
   648  0017                     	;# 
   649  0018                     	;# 
   650  001C                     	;# 
   651  001C                     	;# 
   652  001D                     	;# 
   653  001D                     	;# 
   654  001E                     	;# 
   655  001F                     	;# 
   656  008C                     	;# 
   657  008C                     	;# 
   658  008D                     	;# 
   659  008E                     	;# 
   660  008E                     	;# 
   661  008F                     	;# 
   662  0090                     	;# 
   663  0090                     	;# 
   664  0091                     	;# 
   665  0093                     	;# 
   666  0094                     	;# 
   667  0095                     	;# 
   668  0096                     	;# 
   669  0097                     	;# 
   670  0098                     	;# 
   671  0099                     	;# 
   672  009A                     	;# 
   673  009B                     	;# 
   674  009C                     	;# 
   675  009D                     	;# 
   676  009E                     	;# 
   677  010C                     	;# 
   678  010D                     	;# 
   679  010E                     	;# 
   680  010E                     	;# 
   681  010F                     	;# 
   682  0110                     	;# 
   683  0110                     	;# 
   684  0111                     	;# 
   685  0112                     	;# 
   686  0112                     	;# 
   687  0113                     	;# 
   688  0114                     	;# 
   689  0114                     	;# 
   690  0115                     	;# 
   691  0116                     	;# 
   692  0116                     	;# 
   693  0117                     	;# 
   694  0119                     	;# 
   695  0119                     	;# 
   696  0119                     	;# 
   697  011A                     	;# 
   698  011A                     	;# 
   699  011A                     	;# 
   700  011B                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011C                     	;# 
   706  011C                     	;# 
   707  011C                     	;# 
   708  011D                     	;# 
   709  011D                     	;# 
   710  011D                     	;# 
   711  011E                     	;# 
   712  011E                     	;# 
   713  011E                     	;# 
   714  011F                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  018C                     	;# 
   720  018D                     	;# 
   721  018E                     	;# 
   722  018F                     	;# 
   723  0190                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0196                     	;# 
   727  0197                     	;# 
   728  0198                     	;# 
   729  0199                     	;# 
   730  019A                     	;# 
   731  019B                     	;# 
   732  019C                     	;# 
   733  020C                     	;# 
   734  020C                     	;# 
   735  020D                     	;# 
   736  020E                     	;# 
   737  020F                     	;# 
   738  020F                     	;# 
   739  0210                     	;# 
   740  0210                     	;# 
   741  0211                     	;# 
   742  0211                     	;# 
   743  0212                     	;# 
   744  0212                     	;# 
   745  0213                     	;# 
   746  0214                     	;# 
   747  0215                     	;# 
   748  0215                     	;# 
   749  0216                     	;# 
   750  0216                     	;# 
   751  0217                     	;# 
   752  0217                     	;# 
   753  0218                     	;# 
   754  0218                     	;# 
   755  0219                     	;# 
   756  021A                     	;# 
   757  021B                     	;# 
   758  021B                     	;# 
   759  021C                     	;# 
   760  021C                     	;# 
   761  021D                     	;# 
   762  021D                     	;# 
   763  021E                     	;# 
   764  021F                     	;# 
   765  028C                     	;# 
   766  028C                     	;# 
   767  028D                     	;# 
   768  028D                     	;# 
   769  028E                     	;# 
   770  028F                     	;# 
   771  0290                     	;# 
   772  0290                     	;# 
   773  0291                     	;# 
   774  0292                     	;# 
   775  0292                     	;# 
   776  0293                     	;# 
   777  0293                     	;# 
   778  0294                     	;# 
   779  0295                     	;# 
   780  0296                     	;# 
   781  0296                     	;# 
   782  0297                     	;# 
   783  0298                     	;# 
   784  0298                     	;# 
   785  0299                     	;# 
   786  0299                     	;# 
   787  029A                     	;# 
   788  029B                     	;# 
   789  029C                     	;# 
   790  029C                     	;# 
   791  029D                     	;# 
   792  030C                     	;# 
   793  030C                     	;# 
   794  030D                     	;# 
   795  030E                     	;# 
   796  030F                     	;# 
   797  0310                     	;# 
   798  0310                     	;# 
   799  0311                     	;# 
   800  0312                     	;# 
   801  0313                     	;# 
   802  0314                     	;# 
   803  0314                     	;# 
   804  0315                     	;# 
   805  0316                     	;# 
   806  0317                     	;# 
   807  0318                     	;# 
   808  0318                     	;# 
   809  0319                     	;# 
   810  031A                     	;# 
   811  031B                     	;# 
   812  031C                     	;# 
   813  031C                     	;# 
   814  031D                     	;# 
   815  031E                     	;# 
   816  031F                     	;# 
   817  038C                     	;# 
   818  038D                     	;# 
   819  038E                     	;# 
   820  0390                     	;# 
   821  0391                     	;# 
   822  0392                     	;# 
   823  040C                     	;# 
   824  040D                     	;# 
   825  040E                     	;# 
   826  040F                     	;# 
   827  0410                     	;# 
   828  0411                     	;# 
   829  0416                     	;# 
   830  0416                     	;# 
   831  0417                     	;# 
   832  0418                     	;# 
   833  0418                     	;# 
   834  0419                     	;# 
   835  041A                     	;# 
   836  041A                     	;# 
   837  041B                     	;# 
   838  041C                     	;# 
   839  041C                     	;# 
   840  041D                     	;# 
   841  041E                     	;# 
   842  041F                     	;# 
   843  048C                     	;# 
   844  048C                     	;# 
   845  048D                     	;# 
   846  048E                     	;# 
   847  048F                     	;# 
   848  048F                     	;# 
   849  0490                     	;# 
   850  0491                     	;# 
   851  0492                     	;# 
   852  0492                     	;# 
   853  0493                     	;# 
   854  0494                     	;# 
   855  0495                     	;# 
   856  0495                     	;# 
   857  0496                     	;# 
   858  0497                     	;# 
   859  0498                     	;# 
   860  0499                     	;# 
   861  049A                     	;# 
   862  049B                     	;# 
   863  049C                     	;# 
   864  049D                     	;# 
   865  050C                     	;# 
   866  050C                     	;# 
   867  050D                     	;# 
   868  050E                     	;# 
   869  050F                     	;# 
   870  050F                     	;# 
   871  0510                     	;# 
   872  0511                     	;# 
   873  0512                     	;# 
   874  0512                     	;# 
   875  0513                     	;# 
   876  0514                     	;# 
   877  0515                     	;# 
   878  0515                     	;# 
   879  0516                     	;# 
   880  0517                     	;# 
   881  0518                     	;# 
   882  0519                     	;# 
   883  051A                     	;# 
   884  051B                     	;# 
   885  051C                     	;# 
   886  051D                     	;# 
   887  058C                     	;# 
   888  058C                     	;# 
   889  058D                     	;# 
   890  058E                     	;# 
   891  058F                     	;# 
   892  058F                     	;# 
   893  0590                     	;# 
   894  0591                     	;# 
   895  0592                     	;# 
   896  0593                     	;# 
   897  060C                     	;# 
   898  060D                     	;# 
   899  060E                     	;# 
   900  060F                     	;# 
   901  0610                     	;# 
   902  0611                     	;# 
   903  0612                     	;# 
   904  0613                     	;# 
   905  0614                     	;# 
   906  0616                     	;# 
   907  0617                     	;# 
   908  0618                     	;# 
   909  0619                     	;# 
   910  061A                     	;# 
   911  061B                     	;# 
   912  061C                     	;# 
   913  061D                     	;# 
   914  061E                     	;# 
   915  068C                     	;# 
   916  068D                     	;# 
   917  068E                     	;# 
   918  068F                     	;# 
   919  0690                     	;# 
   920  0691                     	;# 
   921  0692                     	;# 
   922  0693                     	;# 
   923  0694                     	;# 
   924  070C                     	;# 
   925  070D                     	;# 
   926  070E                     	;# 
   927  070F                     	;# 
   928  0710                     	;# 
   929  0711                     	;# 
   930  0712                     	;# 
   931  0713                     	;# 
   932  0714                     	;# 
   933  0716                     	;# 
   934  0717                     	;# 
   935  0718                     	;# 
   936  0719                     	;# 
   937  071A                     	;# 
   938  071B                     	;# 
   939  071C                     	;# 
   940  071D                     	;# 
   941  071E                     	;# 
   942  0796                     	;# 
   943  0797                     	;# 
   944  0798                     	;# 
   945  0799                     	;# 
   946  079A                     	;# 
   947  079B                     	;# 
   948  080C                     	;# 
   949  080D                     	;# 
   950  080E                     	;# 
   951  080F                     	;# 
   952  0810                     	;# 
   953  0811                     	;# 
   954  0812                     	;# 
   955  0813                     	;# 
   956  0814                     	;# 
   957  081A                     	;# 
   958  081B                     	;# 
   959  081C                     	;# 
   960  081D                     	;# 
   961  081E                     	;# 
   962  081F                     	;# 
   963  088C                     	;# 
   964  088D                     	;# 
   965  088E                     	;# 
   966  088F                     	;# 
   967  0890                     	;# 
   968  0891                     	;# 
   969  0892                     	;# 
   970  0893                     	;# 
   971  0895                     	;# 
   972  0896                     	;# 
   973  0897                     	;# 
   974  0898                     	;# 
   975  0899                     	;# 
   976  089A                     	;# 
   977  089B                     	;# 
   978  090C                     	;# 
   979  090E                     	;# 
   980  090F                     	;# 
   981  091F                     	;# 
   982  091F                     	;# 
   983  098F                     	;# 
   984  098F                     	;# 
   985  0990                     	;# 
   986  0991                     	;# 
   987  0992                     	;# 
   988  0993                     	;# 
   989  0994                     	;# 
   990  0995                     	;# 
   991  0996                     	;# 
   992  0997                     	;# 
   993  0E0F                     	;# 
   994  0E10                     	;# 
   995  0E11                     	;# 
   996  0E12                     	;# 
   997  0E13                     	;# 
   998  0E14                     	;# 
   999  0E15                     	;# 
  1000  0E16                     	;# 
  1001  0E17                     	;# 
  1002  0E18                     	;# 
  1003  0E19                     	;# 
  1004  0E1A                     	;# 
  1005  0E1B                     	;# 
  1006  0E1C                     	;# 
  1007  0E1D                     	;# 
  1008  0E1E                     	;# 
  1009  0E1F                     	;# 
  1010  0E20                     	;# 
  1011  0E21                     	;# 
  1012  0E22                     	;# 
  1013  0E23                     	;# 
  1014  0E24                     	;# 
  1015  0E25                     	;# 
  1016  0E26                     	;# 
  1017  0E27                     	;# 
  1018  0E28                     	;# 
  1019  0E29                     	;# 
  1020  0E2A                     	;# 
  1021  0E2B                     	;# 
  1022  0E2C                     	;# 
  1023  0E2D                     	;# 
  1024  0E2E                     	;# 
  1025  0E2F                     	;# 
  1026  0E30                     	;# 
  1027  0E31                     	;# 
  1028  0E32                     	;# 
  1029  0E33                     	;# 
  1030  0E34                     	;# 
  1031  0E35                     	;# 
  1032  0E36                     	;# 
  1033  0E37                     	;# 
  1034  0E8F                     	;# 
  1035  0E90                     	;# 
  1036  0E91                     	;# 
  1037  0E92                     	;# 
  1038  0E93                     	;# 
  1039  0E94                     	;# 
  1040  0E95                     	;# 
  1041  0E96                     	;# 
  1042  0E97                     	;# 
  1043  0E9C                     	;# 
  1044  0E9D                     	;# 
  1045  0E9E                     	;# 
  1046  0EA1                     	;# 
  1047  0EA2                     	;# 
  1048  0EA3                     	;# 
  1049  0EA4                     	;# 
  1050  0EA5                     	;# 
  1051  0EA9                     	;# 
  1052  0EAA                     	;# 
  1053  0EAB                     	;# 
  1054  0EAC                     	;# 
  1055  0EB1                     	;# 
  1056  0EB2                     	;# 
  1057  0EB3                     	;# 
  1058  0EB8                     	;# 
  1059  0EB9                     	;# 
  1060  0EBA                     	;# 
  1061  0EBB                     	;# 
  1062  0EBC                     	;# 
  1063  0EBD                     	;# 
  1064  0EBE                     	;# 
  1065  0EC3                     	;# 
  1066  0EC5                     	;# 
  1067  0EC6                     	;# 
  1068  0EC7                     	;# 
  1069  0EC8                     	;# 
  1070  0EC9                     	;# 
  1071  0ECA                     	;# 
  1072  0ECB                     	;# 
  1073  0ECC                     	;# 
  1074  0F10                     	;# 
  1075  0F11                     	;# 
  1076  0F12                     	;# 
  1077  0F13                     	;# 
  1078  0F14                     	;# 
  1079  0F15                     	;# 
  1080  0F16                     	;# 
  1081  0F17                     	;# 
  1082  0F18                     	;# 
  1083  0F19                     	;# 
  1084  0F1A                     	;# 
  1085  0F1B                     	;# 
  1086  0F1C                     	;# 
  1087  0F1D                     	;# 
  1088  0F1E                     	;# 
  1089  0F1F                     	;# 
  1090  0F20                     	;# 
  1091  0F21                     	;# 
  1092  0F22                     	;# 
  1093  0F23                     	;# 
  1094  0F24                     	;# 
  1095  0F25                     	;# 
  1096  0F26                     	;# 
  1097  0F27                     	;# 
  1098  0F38                     	;# 
  1099  0F39                     	;# 
  1100  0F3A                     	;# 
  1101  0F3B                     	;# 
  1102  0F3C                     	;# 
  1103  0F3D                     	;# 
  1104  0F3E                     	;# 
  1105  0F3F                     	;# 
  1106  0F40                     	;# 
  1107  0F41                     	;# 
  1108  0F43                     	;# 
  1109  0F44                     	;# 
  1110  0F45                     	;# 
  1111  0F46                     	;# 
  1112  0F47                     	;# 
  1113  0F48                     	;# 
  1114  0F49                     	;# 
  1115  0F4A                     	;# 
  1116  0F4B                     	;# 
  1117  0F4C                     	;# 
  1118  0F4E                     	;# 
  1119  0F4F                     	;# 
  1120  0F50                     	;# 
  1121  0F51                     	;# 
  1122  0F52                     	;# 
  1123  0F53                     	;# 
  1124  0F54                     	;# 
  1125  0F55                     	;# 
  1126  0F56                     	;# 
  1127  0F57                     	;# 
  1128  0F65                     	;# 
  1129  0F68                     	;# 
  1130  0F69                     	;# 
  1131  0F6A                     	;# 
  1132  0F6B                     	;# 
  1133  0FE4                     	;# 
  1134  0FE5                     	;# 
  1135  0FE6                     	;# 
  1136  0FE7                     	;# 
  1137  0FE8                     	;# 
  1138  0FE9                     	;# 
  1139  0FEA                     	;# 
  1140  0FEB                     	;# 
  1141  0FED                     	;# 
  1142  0FEE                     	;# 
  1143  0FEF                     	;# 
  1144  0000                     	;# 
  1145  0001                     	;# 
  1146  0002                     	;# 
  1147  0003                     	;# 
  1148  0004                     	;# 
  1149  0005                     	;# 
  1150  0006                     	;# 
  1151  0007                     	;# 
  1152  0008                     	;# 
  1153  0009                     	;# 
  1154  000A                     	;# 
  1155  000B                     	;# 
  1156  000C                     	;# 
  1157  000D                     	;# 
  1158  000E                     	;# 
  1159  0010                     	;# 
  1160  0011                     	;# 
  1161  0012                     	;# 
  1162  0013                     	;# 
  1163  0016                     	;# 
  1164  0017                     	;# 
  1165  0018                     	;# 
  1166  001C                     	;# 
  1167  001C                     	;# 
  1168  001D                     	;# 
  1169  001D                     	;# 
  1170  001E                     	;# 
  1171  001F                     	;# 
  1172  008C                     	;# 
  1173  008C                     	;# 
  1174  008D                     	;# 
  1175  008E                     	;# 
  1176  008E                     	;# 
  1177  008F                     	;# 
  1178  0090                     	;# 
  1179  0090                     	;# 
  1180  0091                     	;# 
  1181  0093                     	;# 
  1182  0094                     	;# 
  1183  0095                     	;# 
  1184  0096                     	;# 
  1185  0097                     	;# 
  1186  0098                     	;# 
  1187  0099                     	;# 
  1188  009A                     	;# 
  1189  009B                     	;# 
  1190  009C                     	;# 
  1191  009D                     	;# 
  1192  009E                     	;# 
  1193  010C                     	;# 
  1194  010D                     	;# 
  1195  010E                     	;# 
  1196  010E                     	;# 
  1197  010F                     	;# 
  1198  0110                     	;# 
  1199  0110                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0112                     	;# 
  1203  0113                     	;# 
  1204  0114                     	;# 
  1205  0114                     	;# 
  1206  0115                     	;# 
  1207  0116                     	;# 
  1208  0116                     	;# 
  1209  0117                     	;# 
  1210  0119                     	;# 
  1211  0119                     	;# 
  1212  0119                     	;# 
  1213  011A                     	;# 
  1214  011A                     	;# 
  1215  011A                     	;# 
  1216  011B                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011C                     	;# 
  1222  011C                     	;# 
  1223  011C                     	;# 
  1224  011D                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011E                     	;# 
  1228  011E                     	;# 
  1229  011E                     	;# 
  1230  011F                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  018C                     	;# 
  1236  018D                     	;# 
  1237  018E                     	;# 
  1238  018F                     	;# 
  1239  0190                     	;# 
  1240  0191                     	;# 
  1241  0192                     	;# 
  1242  0196                     	;# 
  1243  0197                     	;# 
  1244  0198                     	;# 
  1245  0199                     	;# 
  1246  019A                     	;# 
  1247  019B                     	;# 
  1248  019C                     	;# 
  1249  020C                     	;# 
  1250  020C                     	;# 
  1251  020D                     	;# 
  1252  020E                     	;# 
  1253  020F                     	;# 
  1254  020F                     	;# 
  1255  0210                     	;# 
  1256  0210                     	;# 
  1257  0211                     	;# 
  1258  0211                     	;# 
  1259  0212                     	;# 
  1260  0212                     	;# 
  1261  0213                     	;# 
  1262  0214                     	;# 
  1263  0215                     	;# 
  1264  0215                     	;# 
  1265  0216                     	;# 
  1266  0216                     	;# 
  1267  0217                     	;# 
  1268  0217                     	;# 
  1269  0218                     	;# 
  1270  0218                     	;# 
  1271  0219                     	;# 
  1272  021A                     	;# 
  1273  021B                     	;# 
  1274  021B                     	;# 
  1275  021C                     	;# 
  1276  021C                     	;# 
  1277  021D                     	;# 
  1278  021D                     	;# 
  1279  021E                     	;# 
  1280  021F                     	;# 
  1281  028C                     	;# 
  1282  028C                     	;# 
  1283  028D                     	;# 
  1284  028D                     	;# 
  1285  028E                     	;# 
  1286  028F                     	;# 
  1287  0290                     	;# 
  1288  0290                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0292                     	;# 
  1292  0293                     	;# 
  1293  0293                     	;# 
  1294  0294                     	;# 
  1295  0295                     	;# 
  1296  0296                     	;# 
  1297  0296                     	;# 
  1298  0297                     	;# 
  1299  0298                     	;# 
  1300  0298                     	;# 
  1301  0299                     	;# 
  1302  0299                     	;# 
  1303  029A                     	;# 
  1304  029B                     	;# 
  1305  029C                     	;# 
  1306  029C                     	;# 
  1307  029D                     	;# 
  1308  030C                     	;# 
  1309  030C                     	;# 
  1310  030D                     	;# 
  1311  030E                     	;# 
  1312  030F                     	;# 
  1313  0310                     	;# 
  1314  0310                     	;# 
  1315  0311                     	;# 
  1316  0312                     	;# 
  1317  0313                     	;# 
  1318  0314                     	;# 
  1319  0314                     	;# 
  1320  0315                     	;# 
  1321  0316                     	;# 
  1322  0317                     	;# 
  1323  0318                     	;# 
  1324  0318                     	;# 
  1325  0319                     	;# 
  1326  031A                     	;# 
  1327  031B                     	;# 
  1328  031C                     	;# 
  1329  031C                     	;# 
  1330  031D                     	;# 
  1331  031E                     	;# 
  1332  031F                     	;# 
  1333  038C                     	;# 
  1334  038D                     	;# 
  1335  038E                     	;# 
  1336  0390                     	;# 
  1337  0391                     	;# 
  1338  0392                     	;# 
  1339  040C                     	;# 
  1340  040D                     	;# 
  1341  040E                     	;# 
  1342  040F                     	;# 
  1343  0410                     	;# 
  1344  0411                     	;# 
  1345  0416                     	;# 
  1346  0416                     	;# 
  1347  0417                     	;# 
  1348  0418                     	;# 
  1349  0418                     	;# 
  1350  0419                     	;# 
  1351  041A                     	;# 
  1352  041A                     	;# 
  1353  041B                     	;# 
  1354  041C                     	;# 
  1355  041C                     	;# 
  1356  041D                     	;# 
  1357  041E                     	;# 
  1358  041F                     	;# 
  1359  048C                     	;# 
  1360  048C                     	;# 
  1361  048D                     	;# 
  1362  048E                     	;# 
  1363  048F                     	;# 
  1364  048F                     	;# 
  1365  0490                     	;# 
  1366  0491                     	;# 
  1367  0492                     	;# 
  1368  0492                     	;# 
  1369  0493                     	;# 
  1370  0494                     	;# 
  1371  0495                     	;# 
  1372  0495                     	;# 
  1373  0496                     	;# 
  1374  0497                     	;# 
  1375  0498                     	;# 
  1376  0499                     	;# 
  1377  049A                     	;# 
  1378  049B                     	;# 
  1379  049C                     	;# 
  1380  049D                     	;# 
  1381  050C                     	;# 
  1382  050C                     	;# 
  1383  050D                     	;# 
  1384  050E                     	;# 
  1385  050F                     	;# 
  1386  050F                     	;# 
  1387  0510                     	;# 
  1388  0511                     	;# 
  1389  0512                     	;# 
  1390  0512                     	;# 
  1391  0513                     	;# 
  1392  0514                     	;# 
  1393  0515                     	;# 
  1394  0515                     	;# 
  1395  0516                     	;# 
  1396  0517                     	;# 
  1397  0518                     	;# 
  1398  0519                     	;# 
  1399  051A                     	;# 
  1400  051B                     	;# 
  1401  051C                     	;# 
  1402  051D                     	;# 
  1403  058C                     	;# 
  1404  058C                     	;# 
  1405  058D                     	;# 
  1406  058E                     	;# 
  1407  058F                     	;# 
  1408  058F                     	;# 
  1409  0590                     	;# 
  1410  0591                     	;# 
  1411  0592                     	;# 
  1412  0593                     	;# 
  1413  060C                     	;# 
  1414  060D                     	;# 
  1415  060E                     	;# 
  1416  060F                     	;# 
  1417  0610                     	;# 
  1418  0611                     	;# 
  1419  0612                     	;# 
  1420  0613                     	;# 
  1421  0614                     	;# 
  1422  0616                     	;# 
  1423  0617                     	;# 
  1424  0618                     	;# 
  1425  0619                     	;# 
  1426  061A                     	;# 
  1427  061B                     	;# 
  1428  061C                     	;# 
  1429  061D                     	;# 
  1430  061E                     	;# 
  1431  068C                     	;# 
  1432  068D                     	;# 
  1433  068E                     	;# 
  1434  068F                     	;# 
  1435  0690                     	;# 
  1436  0691                     	;# 
  1437  0692                     	;# 
  1438  0693                     	;# 
  1439  0694                     	;# 
  1440  070C                     	;# 
  1441  070D                     	;# 
  1442  070E                     	;# 
  1443  070F                     	;# 
  1444  0710                     	;# 
  1445  0711                     	;# 
  1446  0712                     	;# 
  1447  0713                     	;# 
  1448  0714                     	;# 
  1449  0716                     	;# 
  1450  0717                     	;# 
  1451  0718                     	;# 
  1452  0719                     	;# 
  1453  071A                     	;# 
  1454  071B                     	;# 
  1455  071C                     	;# 
  1456  071D                     	;# 
  1457  071E                     	;# 
  1458  0796                     	;# 
  1459  0797                     	;# 
  1460  0798                     	;# 
  1461  0799                     	;# 
  1462  079A                     	;# 
  1463  079B                     	;# 
  1464  080C                     	;# 
  1465  080D                     	;# 
  1466  080E                     	;# 
  1467  080F                     	;# 
  1468  0810                     	;# 
  1469  0811                     	;# 
  1470  0812                     	;# 
  1471  0813                     	;# 
  1472  0814                     	;# 
  1473  081A                     	;# 
  1474  081B                     	;# 
  1475  081C                     	;# 
  1476  081D                     	;# 
  1477  081E                     	;# 
  1478  081F                     	;# 
  1479  088C                     	;# 
  1480  088D                     	;# 
  1481  088E                     	;# 
  1482  088F                     	;# 
  1483  0890                     	;# 
  1484  0891                     	;# 
  1485  0892                     	;# 
  1486  0893                     	;# 
  1487  0895                     	;# 
  1488  0896                     	;# 
  1489  0897                     	;# 
  1490  0898                     	;# 
  1491  0899                     	;# 
  1492  089A                     	;# 
  1493  089B                     	;# 
  1494  090C                     	;# 
  1495  090E                     	;# 
  1496  090F                     	;# 
  1497  091F                     	;# 
  1498  091F                     	;# 
  1499  098F                     	;# 
  1500  098F                     	;# 
  1501  0990                     	;# 
  1502  0991                     	;# 
  1503  0992                     	;# 
  1504  0993                     	;# 
  1505  0994                     	;# 
  1506  0995                     	;# 
  1507  0996                     	;# 
  1508  0997                     	;# 
  1509  0E0F                     	;# 
  1510  0E10                     	;# 
  1511  0E11                     	;# 
  1512  0E12                     	;# 
  1513  0E13                     	;# 
  1514  0E14                     	;# 
  1515  0E15                     	;# 
  1516  0E16                     	;# 
  1517  0E17                     	;# 
  1518  0E18                     	;# 
  1519  0E19                     	;# 
  1520  0E1A                     	;# 
  1521  0E1B                     	;# 
  1522  0E1C                     	;# 
  1523  0E1D                     	;# 
  1524  0E1E                     	;# 
  1525  0E1F                     	;# 
  1526  0E20                     	;# 
  1527  0E21                     	;# 
  1528  0E22                     	;# 
  1529  0E23                     	;# 
  1530  0E24                     	;# 
  1531  0E25                     	;# 
  1532  0E26                     	;# 
  1533  0E27                     	;# 
  1534  0E28                     	;# 
  1535  0E29                     	;# 
  1536  0E2A                     	;# 
  1537  0E2B                     	;# 
  1538  0E2C                     	;# 
  1539  0E2D                     	;# 
  1540  0E2E                     	;# 
  1541  0E2F                     	;# 
  1542  0E30                     	;# 
  1543  0E31                     	;# 
  1544  0E32                     	;# 
  1545  0E33                     	;# 
  1546  0E34                     	;# 
  1547  0E35                     	;# 
  1548  0E36                     	;# 
  1549  0E37                     	;# 
  1550  0E8F                     	;# 
  1551  0E90                     	;# 
  1552  0E91                     	;# 
  1553  0E92                     	;# 
  1554  0E93                     	;# 
  1555  0E94                     	;# 
  1556  0E95                     	;# 
  1557  0E96                     	;# 
  1558  0E97                     	;# 
  1559  0E9C                     	;# 
  1560  0E9D                     	;# 
  1561  0E9E                     	;# 
  1562  0EA1                     	;# 
  1563  0EA2                     	;# 
  1564  0EA3                     	;# 
  1565  0EA4                     	;# 
  1566  0EA5                     	;# 
  1567  0EA9                     	;# 
  1568  0EAA                     	;# 
  1569  0EAB                     	;# 
  1570  0EAC                     	;# 
  1571  0EB1                     	;# 
  1572  0EB2                     	;# 
  1573  0EB3                     	;# 
  1574  0EB8                     	;# 
  1575  0EB9                     	;# 
  1576  0EBA                     	;# 
  1577  0EBB                     	;# 
  1578  0EBC                     	;# 
  1579  0EBD                     	;# 
  1580  0EBE                     	;# 
  1581  0EC3                     	;# 
  1582  0EC5                     	;# 
  1583  0EC6                     	;# 
  1584  0EC7                     	;# 
  1585  0EC8                     	;# 
  1586  0EC9                     	;# 
  1587  0ECA                     	;# 
  1588  0ECB                     	;# 
  1589  0ECC                     	;# 
  1590  0F10                     	;# 
  1591  0F11                     	;# 
  1592  0F12                     	;# 
  1593  0F13                     	;# 
  1594  0F14                     	;# 
  1595  0F15                     	;# 
  1596  0F16                     	;# 
  1597  0F17                     	;# 
  1598  0F18                     	;# 
  1599  0F19                     	;# 
  1600  0F1A                     	;# 
  1601  0F1B                     	;# 
  1602  0F1C                     	;# 
  1603  0F1D                     	;# 
  1604  0F1E                     	;# 
  1605  0F1F                     	;# 
  1606  0F20                     	;# 
  1607  0F21                     	;# 
  1608  0F22                     	;# 
  1609  0F23                     	;# 
  1610  0F24                     	;# 
  1611  0F25                     	;# 
  1612  0F26                     	;# 
  1613  0F27                     	;# 
  1614  0F38                     	;# 
  1615  0F39                     	;# 
  1616  0F3A                     	;# 
  1617  0F3B                     	;# 
  1618  0F3C                     	;# 
  1619  0F3D                     	;# 
  1620  0F3E                     	;# 
  1621  0F3F                     	;# 
  1622  0F40                     	;# 
  1623  0F41                     	;# 
  1624  0F43                     	;# 
  1625  0F44                     	;# 
  1626  0F45                     	;# 
  1627  0F46                     	;# 
  1628  0F47                     	;# 
  1629  0F48                     	;# 
  1630  0F49                     	;# 
  1631  0F4A                     	;# 
  1632  0F4B                     	;# 
  1633  0F4C                     	;# 
  1634  0F4E                     	;# 
  1635  0F4F                     	;# 
  1636  0F50                     	;# 
  1637  0F51                     	;# 
  1638  0F52                     	;# 
  1639  0F53                     	;# 
  1640  0F54                     	;# 
  1641  0F55                     	;# 
  1642  0F56                     	;# 
  1643  0F57                     	;# 
  1644  0F65                     	;# 
  1645  0F68                     	;# 
  1646  0F69                     	;# 
  1647  0F6A                     	;# 
  1648  0F6B                     	;# 
  1649  0FE4                     	;# 
  1650  0FE5                     	;# 
  1651  0FE6                     	;# 
  1652  0FE7                     	;# 
  1653  0FE8                     	;# 
  1654  0FE9                     	;# 
  1655  0FEA                     	;# 
  1656  0FEB                     	;# 
  1657  0FED                     	;# 
  1658  0FEE                     	;# 
  1659  0FEF                     	;# 
  1660  0000                     	;# 
  1661  0001                     	;# 
  1662  0002                     	;# 
  1663  0003                     	;# 
  1664  0004                     	;# 
  1665  0005                     	;# 
  1666  0006                     	;# 
  1667  0007                     	;# 
  1668  0008                     	;# 
  1669  0009                     	;# 
  1670  000A                     	;# 
  1671  000B                     	;# 
  1672  000C                     	;# 
  1673  000D                     	;# 
  1674  000E                     	;# 
  1675  0010                     	;# 
  1676  0011                     	;# 
  1677  0012                     	;# 
  1678  0013                     	;# 
  1679  0016                     	;# 
  1680  0017                     	;# 
  1681  0018                     	;# 
  1682  001C                     	;# 
  1683  001C                     	;# 
  1684  001D                     	;# 
  1685  001D                     	;# 
  1686  001E                     	;# 
  1687  001F                     	;# 
  1688  008C                     	;# 
  1689  008C                     	;# 
  1690  008D                     	;# 
  1691  008E                     	;# 
  1692  008E                     	;# 
  1693  008F                     	;# 
  1694  0090                     	;# 
  1695  0090                     	;# 
  1696  0091                     	;# 
  1697  0093                     	;# 
  1698  0094                     	;# 
  1699  0095                     	;# 
  1700  0096                     	;# 
  1701  0097                     	;# 
  1702  0098                     	;# 
  1703  0099                     	;# 
  1704  009A                     	;# 
  1705  009B                     	;# 
  1706  009C                     	;# 
  1707  009D                     	;# 
  1708  009E                     	;# 
  1709  010C                     	;# 
  1710  010D                     	;# 
  1711  010E                     	;# 
  1712  010E                     	;# 
  1713  010F                     	;# 
  1714  0110                     	;# 
  1715  0110                     	;# 
  1716  0111                     	;# 
  1717  0112                     	;# 
  1718  0112                     	;# 
  1719  0113                     	;# 
  1720  0114                     	;# 
  1721  0114                     	;# 
  1722  0115                     	;# 
  1723  0116                     	;# 
  1724  0116                     	;# 
  1725  0117                     	;# 
  1726  0119                     	;# 
  1727  0119                     	;# 
  1728  0119                     	;# 
  1729  011A                     	;# 
  1730  011A                     	;# 
  1731  011A                     	;# 
  1732  011B                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011C                     	;# 
  1738  011C                     	;# 
  1739  011C                     	;# 
  1740  011D                     	;# 
  1741  011D                     	;# 
  1742  011D                     	;# 
  1743  011E                     	;# 
  1744  011E                     	;# 
  1745  011E                     	;# 
  1746  011F                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  018C                     	;# 
  1752  018D                     	;# 
  1753  018E                     	;# 
  1754  018F                     	;# 
  1755  0190                     	;# 
  1756  0191                     	;# 
  1757  0192                     	;# 
  1758  0196                     	;# 
  1759  0197                     	;# 
  1760  0198                     	;# 
  1761  0199                     	;# 
  1762  019A                     	;# 
  1763  019B                     	;# 
  1764  019C                     	;# 
  1765  020C                     	;# 
  1766  020C                     	;# 
  1767  020D                     	;# 
  1768  020E                     	;# 
  1769  020F                     	;# 
  1770  020F                     	;# 
  1771  0210                     	;# 
  1772  0210                     	;# 
  1773  0211                     	;# 
  1774  0211                     	;# 
  1775  0212                     	;# 
  1776  0212                     	;# 
  1777  0213                     	;# 
  1778  0214                     	;# 
  1779  0215                     	;# 
  1780  0215                     	;# 
  1781  0216                     	;# 
  1782  0216                     	;# 
  1783  0217                     	;# 
  1784  0217                     	;# 
  1785  0218                     	;# 
  1786  0218                     	;# 
  1787  0219                     	;# 
  1788  021A                     	;# 
  1789  021B                     	;# 
  1790  021B                     	;# 
  1791  021C                     	;# 
  1792  021C                     	;# 
  1793  021D                     	;# 
  1794  021D                     	;# 
  1795  021E                     	;# 
  1796  021F                     	;# 
  1797  028C                     	;# 
  1798  028C                     	;# 
  1799  028D                     	;# 
  1800  028D                     	;# 
  1801  028E                     	;# 
  1802  028F                     	;# 
  1803  0290                     	;# 
  1804  0290                     	;# 
  1805  0291                     	;# 
  1806  0292                     	;# 
  1807  0292                     	;# 
  1808  0293                     	;# 
  1809  0293                     	;# 
  1810  0294                     	;# 
  1811  0295                     	;# 
  1812  0296                     	;# 
  1813  0296                     	;# 
  1814  0297                     	;# 
  1815  0298                     	;# 
  1816  0298                     	;# 
  1817  0299                     	;# 
  1818  0299                     	;# 
  1819  029A                     	;# 
  1820  029B                     	;# 
  1821  029C                     	;# 
  1822  029C                     	;# 
  1823  029D                     	;# 
  1824  030C                     	;# 
  1825  030C                     	;# 
  1826  030D                     	;# 
  1827  030E                     	;# 
  1828  030F                     	;# 
  1829  0310                     	;# 
  1830  0310                     	;# 
  1831  0311                     	;# 
  1832  0312                     	;# 
  1833  0313                     	;# 
  1834  0314                     	;# 
  1835  0314                     	;# 
  1836  0315                     	;# 
  1837  0316                     	;# 
  1838  0317                     	;# 
  1839  0318                     	;# 
  1840  0318                     	;# 
  1841  0319                     	;# 
  1842  031A                     	;# 
  1843  031B                     	;# 
  1844  031C                     	;# 
  1845  031C                     	;# 
  1846  031D                     	;# 
  1847  031E                     	;# 
  1848  031F                     	;# 
  1849  038C                     	;# 
  1850  038D                     	;# 
  1851  038E                     	;# 
  1852  0390                     	;# 
  1853  0391                     	;# 
  1854  0392                     	;# 
  1855  040C                     	;# 
  1856  040D                     	;# 
  1857  040E                     	;# 
  1858  040F                     	;# 
  1859  0410                     	;# 
  1860  0411                     	;# 
  1861  0416                     	;# 
  1862  0416                     	;# 
  1863  0417                     	;# 
  1864  0418                     	;# 
  1865  0418                     	;# 
  1866  0419                     	;# 
  1867  041A                     	;# 
  1868  041A                     	;# 
  1869  041B                     	;# 
  1870  041C                     	;# 
  1871  041C                     	;# 
  1872  041D                     	;# 
  1873  041E                     	;# 
  1874  041F                     	;# 
  1875  048C                     	;# 
  1876  048C                     	;# 
  1877  048D                     	;# 
  1878  048E                     	;# 
  1879  048F                     	;# 
  1880  048F                     	;# 
  1881  0490                     	;# 
  1882  0491                     	;# 
  1883  0492                     	;# 
  1884  0492                     	;# 
  1885  0493                     	;# 
  1886  0494                     	;# 
  1887  0495                     	;# 
  1888  0495                     	;# 
  1889  0496                     	;# 
  1890  0497                     	;# 
  1891  0498                     	;# 
  1892  0499                     	;# 
  1893  049A                     	;# 
  1894  049B                     	;# 
  1895  049C                     	;# 
  1896  049D                     	;# 
  1897  050C                     	;# 
  1898  050C                     	;# 
  1899  050D                     	;# 
  1900  050E                     	;# 
  1901  050F                     	;# 
  1902  050F                     	;# 
  1903  0510                     	;# 
  1904  0511                     	;# 
  1905  0512                     	;# 
  1906  0512                     	;# 
  1907  0513                     	;# 
  1908  0514                     	;# 
  1909  0515                     	;# 
  1910  0515                     	;# 
  1911  0516                     	;# 
  1912  0517                     	;# 
  1913  0518                     	;# 
  1914  0519                     	;# 
  1915  051A                     	;# 
  1916  051B                     	;# 
  1917  051C                     	;# 
  1918  051D                     	;# 
  1919  058C                     	;# 
  1920  058C                     	;# 
  1921  058D                     	;# 
  1922  058E                     	;# 
  1923  058F                     	;# 
  1924  058F                     	;# 
  1925  0590                     	;# 
  1926  0591                     	;# 
  1927  0592                     	;# 
  1928  0593                     	;# 
  1929  060C                     	;# 
  1930  060D                     	;# 
  1931  060E                     	;# 
  1932  060F                     	;# 
  1933  0610                     	;# 
  1934  0611                     	;# 
  1935  0612                     	;# 
  1936  0613                     	;# 
  1937  0614                     	;# 
  1938  0616                     	;# 
  1939  0617                     	;# 
  1940  0618                     	;# 
  1941  0619                     	;# 
  1942  061A                     	;# 
  1943  061B                     	;# 
  1944  061C                     	;# 
  1945  061D                     	;# 
  1946  061E                     	;# 
  1947  068C                     	;# 
  1948  068D                     	;# 
  1949  068E                     	;# 
  1950  068F                     	;# 
  1951  0690                     	;# 
  1952  0691                     	;# 
  1953  0692                     	;# 
  1954  0693                     	;# 
  1955  0694                     	;# 
  1956  070C                     	;# 
  1957  070D                     	;# 
  1958  070E                     	;# 
  1959  070F                     	;# 
  1960  0710                     	;# 
  1961  0711                     	;# 
  1962  0712                     	;# 
  1963  0713                     	;# 
  1964  0714                     	;# 
  1965  0716                     	;# 
  1966  0717                     	;# 
  1967  0718                     	;# 
  1968  0719                     	;# 
  1969  071A                     	;# 
  1970  071B                     	;# 
  1971  071C                     	;# 
  1972  071D                     	;# 
  1973  071E                     	;# 
  1974  0796                     	;# 
  1975  0797                     	;# 
  1976  0798                     	;# 
  1977  0799                     	;# 
  1978  079A                     	;# 
  1979  079B                     	;# 
  1980  080C                     	;# 
  1981  080D                     	;# 
  1982  080E                     	;# 
  1983  080F                     	;# 
  1984  0810                     	;# 
  1985  0811                     	;# 
  1986  0812                     	;# 
  1987  0813                     	;# 
  1988  0814                     	;# 
  1989  081A                     	;# 
  1990  081B                     	;# 
  1991  081C                     	;# 
  1992  081D                     	;# 
  1993  081E                     	;# 
  1994  081F                     	;# 
  1995  088C                     	;# 
  1996  088D                     	;# 
  1997  088E                     	;# 
  1998  088F                     	;# 
  1999  0890                     	;# 
  2000  0891                     	;# 
  2001  0892                     	;# 
  2002  0893                     	;# 
  2003  0895                     	;# 
  2004  0896                     	;# 
  2005  0897                     	;# 
  2006  0898                     	;# 
  2007  0899                     	;# 
  2008  089A                     	;# 
  2009  089B                     	;# 
  2010  090C                     	;# 
  2011  090E                     	;# 
  2012  090F                     	;# 
  2013  091F                     	;# 
  2014  091F                     	;# 
  2015  098F                     	;# 
  2016  098F                     	;# 
  2017  0990                     	;# 
  2018  0991                     	;# 
  2019  0992                     	;# 
  2020  0993                     	;# 
  2021  0994                     	;# 
  2022  0995                     	;# 
  2023  0996                     	;# 
  2024  0997                     	;# 
  2025  0E0F                     	;# 
  2026  0E10                     	;# 
  2027  0E11                     	;# 
  2028  0E12                     	;# 
  2029  0E13                     	;# 
  2030  0E14                     	;# 
  2031  0E15                     	;# 
  2032  0E16                     	;# 
  2033  0E17                     	;# 
  2034  0E18                     	;# 
  2035  0E19                     	;# 
  2036  0E1A                     	;# 
  2037  0E1B                     	;# 
  2038  0E1C                     	;# 
  2039  0E1D                     	;# 
  2040  0E1E                     	;# 
  2041  0E1F                     	;# 
  2042  0E20                     	;# 
  2043  0E21                     	;# 
  2044  0E22                     	;# 
  2045  0E23                     	;# 
  2046  0E24                     	;# 
  2047  0E25                     	;# 
  2048  0E26                     	;# 
  2049  0E27                     	;# 
  2050  0E28                     	;# 
  2051  0E29                     	;# 
  2052  0E2A                     	;# 
  2053  0E2B                     	;# 
  2054  0E2C                     	;# 
  2055  0E2D                     	;# 
  2056  0E2E                     	;# 
  2057  0E2F                     	;# 
  2058  0E30                     	;# 
  2059  0E31                     	;# 
  2060  0E32                     	;# 
  2061  0E33                     	;# 
  2062  0E34                     	;# 
  2063  0E35                     	;# 
  2064  0E36                     	;# 
  2065  0E37                     	;# 
  2066  0E8F                     	;# 
  2067  0E90                     	;# 
  2068  0E91                     	;# 
  2069  0E92                     	;# 
  2070  0E93                     	;# 
  2071  0E94                     	;# 
  2072  0E95                     	;# 
  2073  0E96                     	;# 
  2074  0E97                     	;# 
  2075  0E9C                     	;# 
  2076  0E9D                     	;# 
  2077  0E9E                     	;# 
  2078  0EA1                     	;# 
  2079  0EA2                     	;# 
  2080  0EA3                     	;# 
  2081  0EA4                     	;# 
  2082  0EA5                     	;# 
  2083  0EA9                     	;# 
  2084  0EAA                     	;# 
  2085  0EAB                     	;# 
  2086  0EAC                     	;# 
  2087  0EB1                     	;# 
  2088  0EB2                     	;# 
  2089  0EB3                     	;# 
  2090  0EB8                     	;# 
  2091  0EB9                     	;# 
  2092  0EBA                     	;# 
  2093  0EBB                     	;# 
  2094  0EBC                     	;# 
  2095  0EBD                     	;# 
  2096  0EBE                     	;# 
  2097  0EC3                     	;# 
  2098  0EC5                     	;# 
  2099  0EC6                     	;# 
  2100  0EC7                     	;# 
  2101  0EC8                     	;# 
  2102  0EC9                     	;# 
  2103  0ECA                     	;# 
  2104  0ECB                     	;# 
  2105  0ECC                     	;# 
  2106  0F10                     	;# 
  2107  0F11                     	;# 
  2108  0F12                     	;# 
  2109  0F13                     	;# 
  2110  0F14                     	;# 
  2111  0F15                     	;# 
  2112  0F16                     	;# 
  2113  0F17                     	;# 
  2114  0F18                     	;# 
  2115  0F19                     	;# 
  2116  0F1A                     	;# 
  2117  0F1B                     	;# 
  2118  0F1C                     	;# 
  2119  0F1D                     	;# 
  2120  0F1E                     	;# 
  2121  0F1F                     	;# 
  2122  0F20                     	;# 
  2123  0F21                     	;# 
  2124  0F22                     	;# 
  2125  0F23                     	;# 
  2126  0F24                     	;# 
  2127  0F25                     	;# 
  2128  0F26                     	;# 
  2129  0F27                     	;# 
  2130  0F38                     	;# 
  2131  0F39                     	;# 
  2132  0F3A                     	;# 
  2133  0F3B                     	;# 
  2134  0F3C                     	;# 
  2135  0F3D                     	;# 
  2136  0F3E                     	;# 
  2137  0F3F                     	;# 
  2138  0F40                     	;# 
  2139  0F41                     	;# 
  2140  0F43                     	;# 
  2141  0F44                     	;# 
  2142  0F45                     	;# 
  2143  0F46                     	;# 
  2144  0F47                     	;# 
  2145  0F48                     	;# 
  2146  0F49                     	;# 
  2147  0F4A                     	;# 
  2148  0F4B                     	;# 
  2149  0F4C                     	;# 
  2150  0F4E                     	;# 
  2151  0F4F                     	;# 
  2152  0F50                     	;# 
  2153  0F51                     	;# 
  2154  0F52                     	;# 
  2155  0F53                     	;# 
  2156  0F54                     	;# 
  2157  0F55                     	;# 
  2158  0F56                     	;# 
  2159  0F57                     	;# 
  2160  0F65                     	;# 
  2161  0F68                     	;# 
  2162  0F69                     	;# 
  2163  0F6A                     	;# 
  2164  0F6B                     	;# 
  2165  0FE4                     	;# 
  2166  0FE5                     	;# 
  2167  0FE6                     	;# 
  2168  0FE7                     	;# 
  2169  0FE8                     	;# 
  2170  0FE9                     	;# 
  2171  0FEA                     	;# 
  2172  0FEB                     	;# 
  2173  0FED                     	;# 
  2174  0FEE                     	;# 
  2175  0FEF                     	;# 
  2176  0000                     	;# 
  2177  0001                     	;# 
  2178  0002                     	;# 
  2179  0003                     	;# 
  2180  0004                     	;# 
  2181  0005                     	;# 
  2182  0006                     	;# 
  2183  0007                     	;# 
  2184  0008                     	;# 
  2185  0009                     	;# 
  2186  000A                     	;# 
  2187  000B                     	;# 
  2188  000C                     	;# 
  2189  000D                     	;# 
  2190  000E                     	;# 
  2191  0010                     	;# 
  2192  0011                     	;# 
  2193  0012                     	;# 
  2194  0013                     	;# 
  2195  0016                     	;# 
  2196  0017                     	;# 
  2197  0018                     	;# 
  2198  001C                     	;# 
  2199  001C                     	;# 
  2200  001D                     	;# 
  2201  001D                     	;# 
  2202  001E                     	;# 
  2203  001F                     	;# 
  2204  008C                     	;# 
  2205  008C                     	;# 
  2206  008D                     	;# 
  2207  008E                     	;# 
  2208  008E                     	;# 
  2209  008F                     	;# 
  2210  0090                     	;# 
  2211  0090                     	;# 
  2212  0091                     	;# 
  2213  0093                     	;# 
  2214  0094                     	;# 
  2215  0095                     	;# 
  2216  0096                     	;# 
  2217  0097                     	;# 
  2218  0098                     	;# 
  2219  0099                     	;# 
  2220  009A                     	;# 
  2221  009B                     	;# 
  2222  009C                     	;# 
  2223  009D                     	;# 
  2224  009E                     	;# 
  2225  010C                     	;# 
  2226  010D                     	;# 
  2227  010E                     	;# 
  2228  010E                     	;# 
  2229  010F                     	;# 
  2230  0110                     	;# 
  2231  0110                     	;# 
  2232  0111                     	;# 
  2233  0112                     	;# 
  2234  0112                     	;# 
  2235  0113                     	;# 
  2236  0114                     	;# 
  2237  0114                     	;# 
  2238  0115                     	;# 
  2239  0116                     	;# 
  2240  0116                     	;# 
  2241  0117                     	;# 
  2242  0119                     	;# 
  2243  0119                     	;# 
  2244  0119                     	;# 
  2245  011A                     	;# 
  2246  011A                     	;# 
  2247  011A                     	;# 
  2248  011B                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011B                     	;# 
  2253  011C                     	;# 
  2254  011C                     	;# 
  2255  011C                     	;# 
  2256  011D                     	;# 
  2257  011D                     	;# 
  2258  011D                     	;# 
  2259  011E                     	;# 
  2260  011E                     	;# 
  2261  011E                     	;# 
  2262  011F                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  011F                     	;# 
  2267  018C                     	;# 
  2268  018D                     	;# 
  2269  018E                     	;# 
  2270  018F                     	;# 
  2271  0190                     	;# 
  2272  0191                     	;# 
  2273  0192                     	;# 
  2274  0196                     	;# 
  2275  0197                     	;# 
  2276  0198                     	;# 
  2277  0199                     	;# 
  2278  019A                     	;# 
  2279  019B                     	;# 
  2280  019C                     	;# 
  2281  020C                     	;# 
  2282  020C                     	;# 
  2283  020D                     	;# 
  2284  020E                     	;# 
  2285  020F                     	;# 
  2286  020F                     	;# 
  2287  0210                     	;# 
  2288  0210                     	;# 
  2289  0211                     	;# 
  2290  0211                     	;# 
  2291  0212                     	;# 
  2292  0212                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0216                     	;# 
  2298  0216                     	;# 
  2299  0217                     	;# 
  2300  0217                     	;# 
  2301  0218                     	;# 
  2302  0218                     	;# 
  2303  0219                     	;# 
  2304  021A                     	;# 
  2305  021B                     	;# 
  2306  021B                     	;# 
  2307  021C                     	;# 
  2308  021C                     	;# 
  2309  021D                     	;# 
  2310  021D                     	;# 
  2311  021E                     	;# 
  2312  021F                     	;# 
  2313  028C                     	;# 
  2314  028C                     	;# 
  2315  028D                     	;# 
  2316  028D                     	;# 
  2317  028E                     	;# 
  2318  028F                     	;# 
  2319  0290                     	;# 
  2320  0290                     	;# 
  2321  0291                     	;# 
  2322  0292                     	;# 
  2323  0292                     	;# 
  2324  0293                     	;# 
  2325  0293                     	;# 
  2326  0294                     	;# 
  2327  0295                     	;# 
  2328  0296                     	;# 
  2329  0296                     	;# 
  2330  0297                     	;# 
  2331  0298                     	;# 
  2332  0298                     	;# 
  2333  0299                     	;# 
  2334  0299                     	;# 
  2335  029A                     	;# 
  2336  029B                     	;# 
  2337  029C                     	;# 
  2338  029C                     	;# 
  2339  029D                     	;# 
  2340  030C                     	;# 
  2341  030C                     	;# 
  2342  030D                     	;# 
  2343  030E                     	;# 
  2344  030F                     	;# 
  2345  0310                     	;# 
  2346  0310                     	;# 
  2347  0311                     	;# 
  2348  0312                     	;# 
  2349  0313                     	;# 
  2350  0314                     	;# 
  2351  0314                     	;# 
  2352  0315                     	;# 
  2353  0316                     	;# 
  2354  0317                     	;# 
  2355  0318                     	;# 
  2356  0318                     	;# 
  2357  0319                     	;# 
  2358  031A                     	;# 
  2359  031B                     	;# 
  2360  031C                     	;# 
  2361  031C                     	;# 
  2362  031D                     	;# 
  2363  031E                     	;# 
  2364  031F                     	;# 
  2365  038C                     	;# 
  2366  038D                     	;# 
  2367  038E                     	;# 
  2368  0390                     	;# 
  2369  0391                     	;# 
  2370  0392                     	;# 
  2371  040C                     	;# 
  2372  040D                     	;# 
  2373  040E                     	;# 
  2374  040F                     	;# 
  2375  0410                     	;# 
  2376  0411                     	;# 
  2377  0416                     	;# 
  2378  0416                     	;# 
  2379  0417                     	;# 
  2380  0418                     	;# 
  2381  0418                     	;# 
  2382  0419                     	;# 
  2383  041A                     	;# 
  2384  041A                     	;# 
  2385  041B                     	;# 
  2386  041C                     	;# 
  2387  041C                     	;# 
  2388  041D                     	;# 
  2389  041E                     	;# 
  2390  041F                     	;# 
  2391  048C                     	;# 
  2392  048C                     	;# 
  2393  048D                     	;# 
  2394  048E                     	;# 
  2395  048F                     	;# 
  2396  048F                     	;# 
  2397  0490                     	;# 
  2398  0491                     	;# 
  2399  0492                     	;# 
  2400  0492                     	;# 
  2401  0493                     	;# 
  2402  0494                     	;# 
  2403  0495                     	;# 
  2404  0495                     	;# 
  2405  0496                     	;# 
  2406  0497                     	;# 
  2407  0498                     	;# 
  2408  0499                     	;# 
  2409  049A                     	;# 
  2410  049B                     	;# 
  2411  049C                     	;# 
  2412  049D                     	;# 
  2413  050C                     	;# 
  2414  050C                     	;# 
  2415  050D                     	;# 
  2416  050E                     	;# 
  2417  050F                     	;# 
  2418  050F                     	;# 
  2419  0510                     	;# 
  2420  0511                     	;# 
  2421  0512                     	;# 
  2422  0512                     	;# 
  2423  0513                     	;# 
  2424  0514                     	;# 
  2425  0515                     	;# 
  2426  0515                     	;# 
  2427  0516                     	;# 
  2428  0517                     	;# 
  2429  0518                     	;# 
  2430  0519                     	;# 
  2431  051A                     	;# 
  2432  051B                     	;# 
  2433  051C                     	;# 
  2434  051D                     	;# 
  2435  058C                     	;# 
  2436  058C                     	;# 
  2437  058D                     	;# 
  2438  058E                     	;# 
  2439  058F                     	;# 
  2440  058F                     	;# 
  2441  0590                     	;# 
  2442  0591                     	;# 
  2443  0592                     	;# 
  2444  0593                     	;# 
  2445  060C                     	;# 
  2446  060D                     	;# 
  2447  060E                     	;# 
  2448  060F                     	;# 
  2449  0610                     	;# 
  2450  0611                     	;# 
  2451  0612                     	;# 
  2452  0613                     	;# 
  2453  0614                     	;# 
  2454  0616                     	;# 
  2455  0617                     	;# 
  2456  0618                     	;# 
  2457  0619                     	;# 
  2458  061A                     	;# 
  2459  061B                     	;# 
  2460  061C                     	;# 
  2461  061D                     	;# 
  2462  061E                     	;# 
  2463  068C                     	;# 
  2464  068D                     	;# 
  2465  068E                     	;# 
  2466  068F                     	;# 
  2467  0690                     	;# 
  2468  0691                     	;# 
  2469  0692                     	;# 
  2470  0693                     	;# 
  2471  0694                     	;# 
  2472  070C                     	;# 
  2473  070D                     	;# 
  2474  070E                     	;# 
  2475  070F                     	;# 
  2476  0710                     	;# 
  2477  0711                     	;# 
  2478  0712                     	;# 
  2479  0713                     	;# 
  2480  0714                     	;# 
  2481  0716                     	;# 
  2482  0717                     	;# 
  2483  0718                     	;# 
  2484  0719                     	;# 
  2485  071A                     	;# 
  2486  071B                     	;# 
  2487  071C                     	;# 
  2488  071D                     	;# 
  2489  071E                     	;# 
  2490  0796                     	;# 
  2491  0797                     	;# 
  2492  0798                     	;# 
  2493  0799                     	;# 
  2494  079A                     	;# 
  2495  079B                     	;# 
  2496  080C                     	;# 
  2497  080D                     	;# 
  2498  080E                     	;# 
  2499  080F                     	;# 
  2500  0810                     	;# 
  2501  0811                     	;# 
  2502  0812                     	;# 
  2503  0813                     	;# 
  2504  0814                     	;# 
  2505  081A                     	;# 
  2506  081B                     	;# 
  2507  081C                     	;# 
  2508  081D                     	;# 
  2509  081E                     	;# 
  2510  081F                     	;# 
  2511  088C                     	;# 
  2512  088D                     	;# 
  2513  088E                     	;# 
  2514  088F                     	;# 
  2515  0890                     	;# 
  2516  0891                     	;# 
  2517  0892                     	;# 
  2518  0893                     	;# 
  2519  0895                     	;# 
  2520  0896                     	;# 
  2521  0897                     	;# 
  2522  0898                     	;# 
  2523  0899                     	;# 
  2524  089A                     	;# 
  2525  089B                     	;# 
  2526  090C                     	;# 
  2527  090E                     	;# 
  2528  090F                     	;# 
  2529  091F                     	;# 
  2530  091F                     	;# 
  2531  098F                     	;# 
  2532  098F                     	;# 
  2533  0990                     	;# 
  2534  0991                     	;# 
  2535  0992                     	;# 
  2536  0993                     	;# 
  2537  0994                     	;# 
  2538  0995                     	;# 
  2539  0996                     	;# 
  2540  0997                     	;# 
  2541  0E0F                     	;# 
  2542  0E10                     	;# 
  2543  0E11                     	;# 
  2544  0E12                     	;# 
  2545  0E13                     	;# 
  2546  0E14                     	;# 
  2547  0E15                     	;# 
  2548  0E16                     	;# 
  2549  0E17                     	;# 
  2550  0E18                     	;# 
  2551  0E19                     	;# 
  2552  0E1A                     	;# 
  2553  0E1B                     	;# 
  2554  0E1C                     	;# 
  2555  0E1D                     	;# 
  2556  0E1E                     	;# 
  2557  0E1F                     	;# 
  2558  0E20                     	;# 
  2559  0E21                     	;# 
  2560  0E22                     	;# 
  2561  0E23                     	;# 
  2562  0E24                     	;# 
  2563  0E25                     	;# 
  2564  0E26                     	;# 
  2565  0E27                     	;# 
  2566  0E28                     	;# 
  2567  0E29                     	;# 
  2568  0E2A                     	;# 
  2569  0E2B                     	;# 
  2570  0E2C                     	;# 
  2571  0E2D                     	;# 
  2572  0E2E                     	;# 
  2573  0E2F                     	;# 
  2574  0E30                     	;# 
  2575  0E31                     	;# 
  2576  0E32                     	;# 
  2577  0E33                     	;# 
  2578  0E34                     	;# 
  2579  0E35                     	;# 
  2580  0E36                     	;# 
  2581  0E37                     	;# 
  2582  0E8F                     	;# 
  2583  0E90                     	;# 
  2584  0E91                     	;# 
  2585  0E92                     	;# 
  2586  0E93                     	;# 
  2587  0E94                     	;# 
  2588  0E95                     	;# 
  2589  0E96                     	;# 
  2590  0E97                     	;# 
  2591  0E9C                     	;# 
  2592  0E9D                     	;# 
  2593  0E9E                     	;# 
  2594  0EA1                     	;# 
  2595  0EA2                     	;# 
  2596  0EA3                     	;# 
  2597  0EA4                     	;# 
  2598  0EA5                     	;# 
  2599  0EA9                     	;# 
  2600  0EAA                     	;# 
  2601  0EAB                     	;# 
  2602  0EAC                     	;# 
  2603  0EB1                     	;# 
  2604  0EB2                     	;# 
  2605  0EB3                     	;# 
  2606  0EB8                     	;# 
  2607  0EB9                     	;# 
  2608  0EBA                     	;# 
  2609  0EBB                     	;# 
  2610  0EBC                     	;# 
  2611  0EBD                     	;# 
  2612  0EBE                     	;# 
  2613  0EC3                     	;# 
  2614  0EC5                     	;# 
  2615  0EC6                     	;# 
  2616  0EC7                     	;# 
  2617  0EC8                     	;# 
  2618  0EC9                     	;# 
  2619  0ECA                     	;# 
  2620  0ECB                     	;# 
  2621  0ECC                     	;# 
  2622  0F10                     	;# 
  2623  0F11                     	;# 
  2624  0F12                     	;# 
  2625  0F13                     	;# 
  2626  0F14                     	;# 
  2627  0F15                     	;# 
  2628  0F16                     	;# 
  2629  0F17                     	;# 
  2630  0F18                     	;# 
  2631  0F19                     	;# 
  2632  0F1A                     	;# 
  2633  0F1B                     	;# 
  2634  0F1C                     	;# 
  2635  0F1D                     	;# 
  2636  0F1E                     	;# 
  2637  0F1F                     	;# 
  2638  0F20                     	;# 
  2639  0F21                     	;# 
  2640  0F22                     	;# 
  2641  0F23                     	;# 
  2642  0F24                     	;# 
  2643  0F25                     	;# 
  2644  0F26                     	;# 
  2645  0F27                     	;# 
  2646  0F38                     	;# 
  2647  0F39                     	;# 
  2648  0F3A                     	;# 
  2649  0F3B                     	;# 
  2650  0F3C                     	;# 
  2651  0F3D                     	;# 
  2652  0F3E                     	;# 
  2653  0F3F                     	;# 
  2654  0F40                     	;# 
  2655  0F41                     	;# 
  2656  0F43                     	;# 
  2657  0F44                     	;# 
  2658  0F45                     	;# 
  2659  0F46                     	;# 
  2660  0F47                     	;# 
  2661  0F48                     	;# 
  2662  0F49                     	;# 
  2663  0F4A                     	;# 
  2664  0F4B                     	;# 
  2665  0F4C                     	;# 
  2666  0F4E                     	;# 
  2667  0F4F                     	;# 
  2668  0F50                     	;# 
  2669  0F51                     	;# 
  2670  0F52                     	;# 
  2671  0F53                     	;# 
  2672  0F54                     	;# 
  2673  0F55                     	;# 
  2674  0F56                     	;# 
  2675  0F57                     	;# 
  2676  0F65                     	;# 
  2677  0F68                     	;# 
  2678  0F69                     	;# 
  2679  0F6A                     	;# 
  2680  0F6B                     	;# 
  2681  0FE4                     	;# 
  2682  0FE5                     	;# 
  2683  0FE6                     	;# 
  2684  0FE7                     	;# 
  2685  0FE8                     	;# 
  2686  0FE9                     	;# 
  2687  0FEA                     	;# 
  2688  0FEB                     	;# 
  2689  0FED                     	;# 
  2690  0FEE                     	;# 
  2691  0FEF                     	;# 
  2692  0000                     	;# 
  2693  0001                     	;# 
  2694  0002                     	;# 
  2695  0003                     	;# 
  2696  0004                     	;# 
  2697  0005                     	;# 
  2698  0006                     	;# 
  2699  0007                     	;# 
  2700  0008                     	;# 
  2701  0009                     	;# 
  2702  000A                     	;# 
  2703  000B                     	;# 
  2704  000C                     	;# 
  2705  000D                     	;# 
  2706  000E                     	;# 
  2707  0010                     	;# 
  2708  0011                     	;# 
  2709  0012                     	;# 
  2710  0013                     	;# 
  2711  0016                     	;# 
  2712  0017                     	;# 
  2713  0018                     	;# 
  2714  001C                     	;# 
  2715  001C                     	;# 
  2716  001D                     	;# 
  2717  001D                     	;# 
  2718  001E                     	;# 
  2719  001F                     	;# 
  2720  008C                     	;# 
  2721  008C                     	;# 
  2722  008D                     	;# 
  2723  008E                     	;# 
  2724  008E                     	;# 
  2725  008F                     	;# 
  2726  0090                     	;# 
  2727  0090                     	;# 
  2728  0091                     	;# 
  2729  0093                     	;# 
  2730  0094                     	;# 
  2731  0095                     	;# 
  2732  0096                     	;# 
  2733  0097                     	;# 
  2734  0098                     	;# 
  2735  0099                     	;# 
  2736  009A                     	;# 
  2737  009B                     	;# 
  2738  009C                     	;# 
  2739  009D                     	;# 
  2740  009E                     	;# 
  2741  010C                     	;# 
  2742  010D                     	;# 
  2743  010E                     	;# 
  2744  010E                     	;# 
  2745  010F                     	;# 
  2746  0110                     	;# 
  2747  0110                     	;# 
  2748  0111                     	;# 
  2749  0112                     	;# 
  2750  0112                     	;# 
  2751  0113                     	;# 
  2752  0114                     	;# 
  2753  0114                     	;# 
  2754  0115                     	;# 
  2755  0116                     	;# 
  2756  0116                     	;# 
  2757  0117                     	;# 
  2758  0119                     	;# 
  2759  0119                     	;# 
  2760  0119                     	;# 
  2761  011A                     	;# 
  2762  011A                     	;# 
  2763  011A                     	;# 
  2764  011B                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011C                     	;# 
  2770  011C                     	;# 
  2771  011C                     	;# 
  2772  011D                     	;# 
  2773  011D                     	;# 
  2774  011D                     	;# 
  2775  011E                     	;# 
  2776  011E                     	;# 
  2777  011E                     	;# 
  2778  011F                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  018C                     	;# 
  2784  018D                     	;# 
  2785  018E                     	;# 
  2786  018F                     	;# 
  2787  0190                     	;# 
  2788  0191                     	;# 
  2789  0192                     	;# 
  2790  0196                     	;# 
  2791  0197                     	;# 
  2792  0198                     	;# 
  2793  0199                     	;# 
  2794  019A                     	;# 
  2795  019B                     	;# 
  2796  019C                     	;# 
  2797  020C                     	;# 
  2798  020C                     	;# 
  2799  020D                     	;# 
  2800  020E                     	;# 
  2801  020F                     	;# 
  2802  020F                     	;# 
  2803  0210                     	;# 
  2804  0210                     	;# 
  2805  0211                     	;# 
  2806  0211                     	;# 
  2807  0212                     	;# 
  2808  0212                     	;# 
  2809  0213                     	;# 
  2810  0214                     	;# 
  2811  0215                     	;# 
  2812  0215                     	;# 
  2813  0216                     	;# 
  2814  0216                     	;# 
  2815  0217                     	;# 
  2816  0217                     	;# 
  2817  0218                     	;# 
  2818  0218                     	;# 
  2819  0219                     	;# 
  2820  021A                     	;# 
  2821  021B                     	;# 
  2822  021B                     	;# 
  2823  021C                     	;# 
  2824  021C                     	;# 
  2825  021D                     	;# 
  2826  021D                     	;# 
  2827  021E                     	;# 
  2828  021F                     	;# 
  2829  028C                     	;# 
  2830  028C                     	;# 
  2831  028D                     	;# 
  2832  028D                     	;# 
  2833  028E                     	;# 
  2834  028F                     	;# 
  2835  0290                     	;# 
  2836  0290                     	;# 
  2837  0291                     	;# 
  2838  0292                     	;# 
  2839  0292                     	;# 
  2840  0293                     	;# 
  2841  0293                     	;# 
  2842  0294                     	;# 
  2843  0295                     	;# 
  2844  0296                     	;# 
  2845  0296                     	;# 
  2846  0297                     	;# 
  2847  0298                     	;# 
  2848  0298                     	;# 
  2849  0299                     	;# 
  2850  0299                     	;# 
  2851  029A                     	;# 
  2852  029B                     	;# 
  2853  029C                     	;# 
  2854  029C                     	;# 
  2855  029D                     	;# 
  2856  030C                     	;# 
  2857  030C                     	;# 
  2858  030D                     	;# 
  2859  030E                     	;# 
  2860  030F                     	;# 
  2861  0310                     	;# 
  2862  0310                     	;# 
  2863  0311                     	;# 
  2864  0312                     	;# 
  2865  0313                     	;# 
  2866  0314                     	;# 
  2867  0314                     	;# 
  2868  0315                     	;# 
  2869  0316                     	;# 
  2870  0317                     	;# 
  2871  0318                     	;# 
  2872  0318                     	;# 
  2873  0319                     	;# 
  2874  031A                     	;# 
  2875  031B                     	;# 
  2876  031C                     	;# 
  2877  031C                     	;# 
  2878  031D                     	;# 
  2879  031E                     	;# 
  2880  031F                     	;# 
  2881  038C                     	;# 
  2882  038D                     	;# 
  2883  038E                     	;# 
  2884  0390                     	;# 
  2885  0391                     	;# 
  2886  0392                     	;# 
  2887  040C                     	;# 
  2888  040D                     	;# 
  2889  040E                     	;# 
  2890  040F                     	;# 
  2891  0410                     	;# 
  2892  0411                     	;# 
  2893  0416                     	;# 
  2894  0416                     	;# 
  2895  0417                     	;# 
  2896  0418                     	;# 
  2897  0418                     	;# 
  2898  0419                     	;# 
  2899  041A                     	;# 
  2900  041A                     	;# 
  2901  041B                     	;# 
  2902  041C                     	;# 
  2903  041C                     	;# 
  2904  041D                     	;# 
  2905  041E                     	;# 
  2906  041F                     	;# 
  2907  048C                     	;# 
  2908  048C                     	;# 
  2909  048D                     	;# 
  2910  048E                     	;# 
  2911  048F                     	;# 
  2912  048F                     	;# 
  2913  0490                     	;# 
  2914  0491                     	;# 
  2915  0492                     	;# 
  2916  0492                     	;# 
  2917  0493                     	;# 
  2918  0494                     	;# 
  2919  0495                     	;# 
  2920  0495                     	;# 
  2921  0496                     	;# 
  2922  0497                     	;# 
  2923  0498                     	;# 
  2924  0499                     	;# 
  2925  049A                     	;# 
  2926  049B                     	;# 
  2927  049C                     	;# 
  2928  049D                     	;# 
  2929  050C                     	;# 
  2930  050C                     	;# 
  2931  050D                     	;# 
  2932  050E                     	;# 
  2933  050F                     	;# 
  2934  050F                     	;# 
  2935  0510                     	;# 
  2936  0511                     	;# 
  2937  0512                     	;# 
  2938  0512                     	;# 
  2939  0513                     	;# 
  2940  0514                     	;# 
  2941  0515                     	;# 
  2942  0515                     	;# 
  2943  0516                     	;# 
  2944  0517                     	;# 
  2945  0518                     	;# 
  2946  0519                     	;# 
  2947  051A                     	;# 
  2948  051B                     	;# 
  2949  051C                     	;# 
  2950  051D                     	;# 
  2951  058C                     	;# 
  2952  058C                     	;# 
  2953  058D                     	;# 
  2954  058E                     	;# 
  2955  058F                     	;# 
  2956  058F                     	;# 
  2957  0590                     	;# 
  2958  0591                     	;# 
  2959  0592                     	;# 
  2960  0593                     	;# 
  2961  060C                     	;# 
  2962  060D                     	;# 
  2963  060E                     	;# 
  2964  060F                     	;# 
  2965  0610                     	;# 
  2966  0611                     	;# 
  2967  0612                     	;# 
  2968  0613                     	;# 
  2969  0614                     	;# 
  2970  0616                     	;# 
  2971  0617                     	;# 
  2972  0618                     	;# 
  2973  0619                     	;# 
  2974  061A                     	;# 
  2975  061B                     	;# 
  2976  061C                     	;# 
  2977  061D                     	;# 
  2978  061E                     	;# 
  2979  068C                     	;# 
  2980  068D                     	;# 
  2981  068E                     	;# 
  2982  068F                     	;# 
  2983  0690                     	;# 
  2984  0691                     	;# 
  2985  0692                     	;# 
  2986  0693                     	;# 
  2987  0694                     	;# 
  2988  070C                     	;# 
  2989  070D                     	;# 
  2990  070E                     	;# 
  2991  070F                     	;# 
  2992  0710                     	;# 
  2993  0711                     	;# 
  2994  0712                     	;# 
  2995  0713                     	;# 
  2996  0714                     	;# 
  2997  0716                     	;# 
  2998  0717                     	;# 
  2999  0718                     	;# 
  3000  0719                     	;# 
  3001  071A                     	;# 
  3002  071B                     	;# 
  3003  071C                     	;# 
  3004  071D                     	;# 
  3005  071E                     	;# 
  3006  0796                     	;# 
  3007  0797                     	;# 
  3008  0798                     	;# 
  3009  0799                     	;# 
  3010  079A                     	;# 
  3011  079B                     	;# 
  3012  080C                     	;# 
  3013  080D                     	;# 
  3014  080E                     	;# 
  3015  080F                     	;# 
  3016  0810                     	;# 
  3017  0811                     	;# 
  3018  0812                     	;# 
  3019  0813                     	;# 
  3020  0814                     	;# 
  3021  081A                     	;# 
  3022  081B                     	;# 
  3023  081C                     	;# 
  3024  081D                     	;# 
  3025  081E                     	;# 
  3026  081F                     	;# 
  3027  088C                     	;# 
  3028  088D                     	;# 
  3029  088E                     	;# 
  3030  088F                     	;# 
  3031  0890                     	;# 
  3032  0891                     	;# 
  3033  0892                     	;# 
  3034  0893                     	;# 
  3035  0895                     	;# 
  3036  0896                     	;# 
  3037  0897                     	;# 
  3038  0898                     	;# 
  3039  0899                     	;# 
  3040  089A                     	;# 
  3041  089B                     	;# 
  3042  090C                     	;# 
  3043  090E                     	;# 
  3044  090F                     	;# 
  3045  091F                     	;# 
  3046  091F                     	;# 
  3047  098F                     	;# 
  3048  098F                     	;# 
  3049  0990                     	;# 
  3050  0991                     	;# 
  3051  0992                     	;# 
  3052  0993                     	;# 
  3053  0994                     	;# 
  3054  0995                     	;# 
  3055  0996                     	;# 
  3056  0997                     	;# 
  3057  0E0F                     	;# 
  3058  0E10                     	;# 
  3059  0E11                     	;# 
  3060  0E12                     	;# 
  3061  0E13                     	;# 
  3062  0E14                     	;# 
  3063  0E15                     	;# 
  3064  0E16                     	;# 
  3065  0E17                     	;# 
  3066  0E18                     	;# 
  3067  0E19                     	;# 
  3068  0E1A                     	;# 
  3069  0E1B                     	;# 
  3070  0E1C                     	;# 
  3071  0E1D                     	;# 
  3072  0E1E                     	;# 
  3073  0E1F                     	;# 
  3074  0E20                     	;# 
  3075  0E21                     	;# 
  3076  0E22                     	;# 
  3077  0E23                     	;# 
  3078  0E24                     	;# 
  3079  0E25                     	;# 
  3080  0E26                     	;# 
  3081  0E27                     	;# 
  3082  0E28                     	;# 
  3083  0E29                     	;# 
  3084  0E2A                     	;# 
  3085  0E2B                     	;# 
  3086  0E2C                     	;# 
  3087  0E2D                     	;# 
  3088  0E2E                     	;# 
  3089  0E2F                     	;# 
  3090  0E30                     	;# 
  3091  0E31                     	;# 
  3092  0E32                     	;# 
  3093  0E33                     	;# 
  3094  0E34                     	;# 
  3095  0E35                     	;# 
  3096  0E36                     	;# 
  3097  0E37                     	;# 
  3098  0E8F                     	;# 
  3099  0E90                     	;# 
  3100  0E91                     	;# 
  3101  0E92                     	;# 
  3102  0E93                     	;# 
  3103  0E94                     	;# 
  3104  0E95                     	;# 
  3105  0E96                     	;# 
  3106  0E97                     	;# 
  3107  0E9C                     	;# 
  3108  0E9D                     	;# 
  3109  0E9E                     	;# 
  3110  0EA1                     	;# 
  3111  0EA2                     	;# 
  3112  0EA3                     	;# 
  3113  0EA4                     	;# 
  3114  0EA5                     	;# 
  3115  0EA9                     	;# 
  3116  0EAA                     	;# 
  3117  0EAB                     	;# 
  3118  0EAC                     	;# 
  3119  0EB1                     	;# 
  3120  0EB2                     	;# 
  3121  0EB3                     	;# 
  3122  0EB8                     	;# 
  3123  0EB9                     	;# 
  3124  0EBA                     	;# 
  3125  0EBB                     	;# 
  3126  0EBC                     	;# 
  3127  0EBD                     	;# 
  3128  0EBE                     	;# 
  3129  0EC3                     	;# 
  3130  0EC5                     	;# 
  3131  0EC6                     	;# 
  3132  0EC7                     	;# 
  3133  0EC8                     	;# 
  3134  0EC9                     	;# 
  3135  0ECA                     	;# 
  3136  0ECB                     	;# 
  3137  0ECC                     	;# 
  3138  0F10                     	;# 
  3139  0F11                     	;# 
  3140  0F12                     	;# 
  3141  0F13                     	;# 
  3142  0F14                     	;# 
  3143  0F15                     	;# 
  3144  0F16                     	;# 
  3145  0F17                     	;# 
  3146  0F18                     	;# 
  3147  0F19                     	;# 
  3148  0F1A                     	;# 
  3149  0F1B                     	;# 
  3150  0F1C                     	;# 
  3151  0F1D                     	;# 
  3152  0F1E                     	;# 
  3153  0F1F                     	;# 
  3154  0F20                     	;# 
  3155  0F21                     	;# 
  3156  0F22                     	;# 
  3157  0F23                     	;# 
  3158  0F24                     	;# 
  3159  0F25                     	;# 
  3160  0F26                     	;# 
  3161  0F27                     	;# 
  3162  0F38                     	;# 
  3163  0F39                     	;# 
  3164  0F3A                     	;# 
  3165  0F3B                     	;# 
  3166  0F3C                     	;# 
  3167  0F3D                     	;# 
  3168  0F3E                     	;# 
  3169  0F3F                     	;# 
  3170  0F40                     	;# 
  3171  0F41                     	;# 
  3172  0F43                     	;# 
  3173  0F44                     	;# 
  3174  0F45                     	;# 
  3175  0F46                     	;# 
  3176  0F47                     	;# 
  3177  0F48                     	;# 
  3178  0F49                     	;# 
  3179  0F4A                     	;# 
  3180  0F4B                     	;# 
  3181  0F4C                     	;# 
  3182  0F4E                     	;# 
  3183  0F4F                     	;# 
  3184  0F50                     	;# 
  3185  0F51                     	;# 
  3186  0F52                     	;# 
  3187  0F53                     	;# 
  3188  0F54                     	;# 
  3189  0F55                     	;# 
  3190  0F56                     	;# 
  3191  0F57                     	;# 
  3192  0F65                     	;# 
  3193  0F68                     	;# 
  3194  0F69                     	;# 
  3195  0F6A                     	;# 
  3196  0F6B                     	;# 
  3197  0FE4                     	;# 
  3198  0FE5                     	;# 
  3199  0FE6                     	;# 
  3200  0FE7                     	;# 
  3201  0FE8                     	;# 
  3202  0FE9                     	;# 
  3203  0FEA                     	;# 
  3204  0FEB                     	;# 
  3205  0FED                     	;# 
  3206  0FEE                     	;# 
  3207  0FEF                     	;# 
  3208  0000                     	;# 
  3209  0001                     	;# 
  3210  0002                     	;# 
  3211  0003                     	;# 
  3212  0004                     	;# 
  3213  0005                     	;# 
  3214  0006                     	;# 
  3215  0007                     	;# 
  3216  0008                     	;# 
  3217  0009                     	;# 
  3218  000A                     	;# 
  3219  000B                     	;# 
  3220  000C                     	;# 
  3221  000D                     	;# 
  3222  000E                     	;# 
  3223  0010                     	;# 
  3224  0011                     	;# 
  3225  0012                     	;# 
  3226  0013                     	;# 
  3227  0016                     	;# 
  3228  0017                     	;# 
  3229  0018                     	;# 
  3230  001C                     	;# 
  3231  001C                     	;# 
  3232  001D                     	;# 
  3233  001D                     	;# 
  3234  001E                     	;# 
  3235  001F                     	;# 
  3236  008C                     	;# 
  3237  008C                     	;# 
  3238  008D                     	;# 
  3239  008E                     	;# 
  3240  008E                     	;# 
  3241  008F                     	;# 
  3242  0090                     	;# 
  3243  0090                     	;# 
  3244  0091                     	;# 
  3245  0093                     	;# 
  3246  0094                     	;# 
  3247  0095                     	;# 
  3248  0096                     	;# 
  3249  0097                     	;# 
  3250  0098                     	;# 
  3251  0099                     	;# 
  3252  009A                     	;# 
  3253  009B                     	;# 
  3254  009C                     	;# 
  3255  009D                     	;# 
  3256  009E                     	;# 
  3257  010C                     	;# 
  3258  010D                     	;# 
  3259  010E                     	;# 
  3260  010E                     	;# 
  3261  010F                     	;# 
  3262  0110                     	;# 
  3263  0110                     	;# 
  3264  0111                     	;# 
  3265  0112                     	;# 
  3266  0112                     	;# 
  3267  0113                     	;# 
  3268  0114                     	;# 
  3269  0114                     	;# 
  3270  0115                     	;# 
  3271  0116                     	;# 
  3272  0116                     	;# 
  3273  0117                     	;# 
  3274  0119                     	;# 
  3275  0119                     	;# 
  3276  0119                     	;# 
  3277  011A                     	;# 
  3278  011A                     	;# 
  3279  011A                     	;# 
  3280  011B                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011C                     	;# 
  3286  011C                     	;# 
  3287  011C                     	;# 
  3288  011D                     	;# 
  3289  011D                     	;# 
  3290  011D                     	;# 
  3291  011E                     	;# 
  3292  011E                     	;# 
  3293  011E                     	;# 
  3294  011F                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  018C                     	;# 
  3300  018D                     	;# 
  3301  018E                     	;# 
  3302  018F                     	;# 
  3303  0190                     	;# 
  3304  0191                     	;# 
  3305  0192                     	;# 
  3306  0196                     	;# 
  3307  0197                     	;# 
  3308  0198                     	;# 
  3309  0199                     	;# 
  3310  019A                     	;# 
  3311  019B                     	;# 
  3312  019C                     	;# 
  3313  020C                     	;# 
  3314  020C                     	;# 
  3315  020D                     	;# 
  3316  020E                     	;# 
  3317  020F                     	;# 
  3318  020F                     	;# 
  3319  0210                     	;# 
  3320  0210                     	;# 
  3321  0211                     	;# 
  3322  0211                     	;# 
  3323  0212                     	;# 
  3324  0212                     	;# 
  3325  0213                     	;# 
  3326  0214                     	;# 
  3327  0215                     	;# 
  3328  0215                     	;# 
  3329  0216                     	;# 
  3330  0216                     	;# 
  3331  0217                     	;# 
  3332  0217                     	;# 
  3333  0218                     	;# 
  3334  0218                     	;# 
  3335  0219                     	;# 
  3336  021A                     	;# 
  3337  021B                     	;# 
  3338  021B                     	;# 
  3339  021C                     	;# 
  3340  021C                     	;# 
  3341  021D                     	;# 
  3342  021D                     	;# 
  3343  021E                     	;# 
  3344  021F                     	;# 
  3345  028C                     	;# 
  3346  028C                     	;# 
  3347  028D                     	;# 
  3348  028D                     	;# 
  3349  028E                     	;# 
  3350  028F                     	;# 
  3351  0290                     	;# 
  3352  0290                     	;# 
  3353  0291                     	;# 
  3354  0292                     	;# 
  3355  0292                     	;# 
  3356  0293                     	;# 
  3357  0293                     	;# 
  3358  0294                     	;# 
  3359  0295                     	;# 
  3360  0296                     	;# 
  3361  0296                     	;# 
  3362  0297                     	;# 
  3363  0298                     	;# 
  3364  0298                     	;# 
  3365  0299                     	;# 
  3366  0299                     	;# 
  3367  029A                     	;# 
  3368  029B                     	;# 
  3369  029C                     	;# 
  3370  029C                     	;# 
  3371  029D                     	;# 
  3372  030C                     	;# 
  3373  030C                     	;# 
  3374  030D                     	;# 
  3375  030E                     	;# 
  3376  030F                     	;# 
  3377  0310                     	;# 
  3378  0310                     	;# 
  3379  0311                     	;# 
  3380  0312                     	;# 
  3381  0313                     	;# 
  3382  0314                     	;# 
  3383  0314                     	;# 
  3384  0315                     	;# 
  3385  0316                     	;# 
  3386  0317                     	;# 
  3387  0318                     	;# 
  3388  0318                     	;# 
  3389  0319                     	;# 
  3390  031A                     	;# 
  3391  031B                     	;# 
  3392  031C                     	;# 
  3393  031C                     	;# 
  3394  031D                     	;# 
  3395  031E                     	;# 
  3396  031F                     	;# 
  3397  038C                     	;# 
  3398  038D                     	;# 
  3399  038E                     	;# 
  3400  0390                     	;# 
  3401  0391                     	;# 
  3402  0392                     	;# 
  3403  040C                     	;# 
  3404  040D                     	;# 
  3405  040E                     	;# 
  3406  040F                     	;# 
  3407  0410                     	;# 
  3408  0411                     	;# 
  3409  0416                     	;# 
  3410  0416                     	;# 
  3411  0417                     	;# 
  3412  0418                     	;# 
  3413  0418                     	;# 
  3414  0419                     	;# 
  3415  041A                     	;# 
  3416  041A                     	;# 
  3417  041B                     	;# 
  3418  041C                     	;# 
  3419  041C                     	;# 
  3420  041D                     	;# 
  3421  041E                     	;# 
  3422  041F                     	;# 
  3423  048C                     	;# 
  3424  048C                     	;# 
  3425  048D                     	;# 
  3426  048E                     	;# 
  3427  048F                     	;# 
  3428  048F                     	;# 
  3429  0490                     	;# 
  3430  0491                     	;# 
  3431  0492                     	;# 
  3432  0492                     	;# 
  3433  0493                     	;# 
  3434  0494                     	;# 
  3435  0495                     	;# 
  3436  0495                     	;# 
  3437  0496                     	;# 
  3438  0497                     	;# 
  3439  0498                     	;# 
  3440  0499                     	;# 
  3441  049A                     	;# 
  3442  049B                     	;# 
  3443  049C                     	;# 
  3444  049D                     	;# 
  3445  050C                     	;# 
  3446  050C                     	;# 
  3447  050D                     	;# 
  3448  050E                     	;# 
  3449  050F                     	;# 
  3450  050F                     	;# 
  3451  0510                     	;# 
  3452  0511                     	;# 
  3453  0512                     	;# 
  3454  0512                     	;# 
  3455  0513                     	;# 
  3456  0514                     	;# 
  3457  0515                     	;# 
  3458  0515                     	;# 
  3459  0516                     	;# 
  3460  0517                     	;# 
  3461  0518                     	;# 
  3462  0519                     	;# 
  3463  051A                     	;# 
  3464  051B                     	;# 
  3465  051C                     	;# 
  3466  051D                     	;# 
  3467  058C                     	;# 
  3468  058C                     	;# 
  3469  058D                     	;# 
  3470  058E                     	;# 
  3471  058F                     	;# 
  3472  058F                     	;# 
  3473  0590                     	;# 
  3474  0591                     	;# 
  3475  0592                     	;# 
  3476  0593                     	;# 
  3477  060C                     	;# 
  3478  060D                     	;# 
  3479  060E                     	;# 
  3480  060F                     	;# 
  3481  0610                     	;# 
  3482  0611                     	;# 
  3483  0612                     	;# 
  3484  0613                     	;# 
  3485  0614                     	;# 
  3486  0616                     	;# 
  3487  0617                     	;# 
  3488  0618                     	;# 
  3489  0619                     	;# 
  3490  061A                     	;# 
  3491  061B                     	;# 
  3492  061C                     	;# 
  3493  061D                     	;# 
  3494  061E                     	;# 
  3495  068C                     	;# 
  3496  068D                     	;# 
  3497  068E                     	;# 
  3498  068F                     	;# 
  3499  0690                     	;# 
  3500  0691                     	;# 
  3501  0692                     	;# 
  3502  0693                     	;# 
  3503  0694                     	;# 
  3504  070C                     	;# 
  3505  070D                     	;# 
  3506  070E                     	;# 
  3507  070F                     	;# 
  3508  0710                     	;# 
  3509  0711                     	;# 
  3510  0712                     	;# 
  3511  0713                     	;# 
  3512  0714                     	;# 
  3513  0716                     	;# 
  3514  0717                     	;# 
  3515  0718                     	;# 
  3516  0719                     	;# 
  3517  071A                     	;# 
  3518  071B                     	;# 
  3519  071C                     	;# 
  3520  071D                     	;# 
  3521  071E                     	;# 
  3522  0796                     	;# 
  3523  0797                     	;# 
  3524  0798                     	;# 
  3525  0799                     	;# 
  3526  079A                     	;# 
  3527  079B                     	;# 
  3528  080C                     	;# 
  3529  080D                     	;# 
  3530  080E                     	;# 
  3531  080F                     	;# 
  3532  0810                     	;# 
  3533  0811                     	;# 
  3534  0812                     	;# 
  3535  0813                     	;# 
  3536  0814                     	;# 
  3537  081A                     	;# 
  3538  081B                     	;# 
  3539  081C                     	;# 
  3540  081D                     	;# 
  3541  081E                     	;# 
  3542  081F                     	;# 
  3543  088C                     	;# 
  3544  088D                     	;# 
  3545  088E                     	;# 
  3546  088F                     	;# 
  3547  0890                     	;# 
  3548  0891                     	;# 
  3549  0892                     	;# 
  3550  0893                     	;# 
  3551  0895                     	;# 
  3552  0896                     	;# 
  3553  0897                     	;# 
  3554  0898                     	;# 
  3555  0899                     	;# 
  3556  089A                     	;# 
  3557  089B                     	;# 
  3558  090C                     	;# 
  3559  090E                     	;# 
  3560  090F                     	;# 
  3561  091F                     	;# 
  3562  091F                     	;# 
  3563  098F                     	;# 
  3564  098F                     	;# 
  3565  0990                     	;# 
  3566  0991                     	;# 
  3567  0992                     	;# 
  3568  0993                     	;# 
  3569  0994                     	;# 
  3570  0995                     	;# 
  3571  0996                     	;# 
  3572  0997                     	;# 
  3573  0E0F                     	;# 
  3574  0E10                     	;# 
  3575  0E11                     	;# 
  3576  0E12                     	;# 
  3577  0E13                     	;# 
  3578  0E14                     	;# 
  3579  0E15                     	;# 
  3580  0E16                     	;# 
  3581  0E17                     	;# 
  3582  0E18                     	;# 
  3583  0E19                     	;# 
  3584  0E1A                     	;# 
  3585  0E1B                     	;# 
  3586  0E1C                     	;# 
  3587  0E1D                     	;# 
  3588  0E1E                     	;# 
  3589  0E1F                     	;# 
  3590  0E20                     	;# 
  3591  0E21                     	;# 
  3592  0E22                     	;# 
  3593  0E23                     	;# 
  3594  0E24                     	;# 
  3595  0E25                     	;# 
  3596  0E26                     	;# 
  3597  0E27                     	;# 
  3598  0E28                     	;# 
  3599  0E29                     	;# 
  3600  0E2A                     	;# 
  3601  0E2B                     	;# 
  3602  0E2C                     	;# 
  3603  0E2D                     	;# 
  3604  0E2E                     	;# 
  3605  0E2F                     	;# 
  3606  0E30                     	;# 
  3607  0E31                     	;# 
  3608  0E32                     	;# 
  3609  0E33                     	;# 
  3610  0E34                     	;# 
  3611  0E35                     	;# 
  3612  0E36                     	;# 
  3613  0E37                     	;# 
  3614  0E8F                     	;# 
  3615  0E90                     	;# 
  3616  0E91                     	;# 
  3617  0E92                     	;# 
  3618  0E93                     	;# 
  3619  0E94                     	;# 
  3620  0E95                     	;# 
  3621  0E96                     	;# 
  3622  0E97                     	;# 
  3623  0E9C                     	;# 
  3624  0E9D                     	;# 
  3625  0E9E                     	;# 
  3626  0EA1                     	;# 
  3627  0EA2                     	;# 
  3628  0EA3                     	;# 
  3629  0EA4                     	;# 
  3630  0EA5                     	;# 
  3631  0EA9                     	;# 
  3632  0EAA                     	;# 
  3633  0EAB                     	;# 
  3634  0EAC                     	;# 
  3635  0EB1                     	;# 
  3636  0EB2                     	;# 
  3637  0EB3                     	;# 
  3638  0EB8                     	;# 
  3639  0EB9                     	;# 
  3640  0EBA                     	;# 
  3641  0EBB                     	;# 
  3642  0EBC                     	;# 
  3643  0EBD                     	;# 
  3644  0EBE                     	;# 
  3645  0EC3                     	;# 
  3646  0EC5                     	;# 
  3647  0EC6                     	;# 
  3648  0EC7                     	;# 
  3649  0EC8                     	;# 
  3650  0EC9                     	;# 
  3651  0ECA                     	;# 
  3652  0ECB                     	;# 
  3653  0ECC                     	;# 
  3654  0F10                     	;# 
  3655  0F11                     	;# 
  3656  0F12                     	;# 
  3657  0F13                     	;# 
  3658  0F14                     	;# 
  3659  0F15                     	;# 
  3660  0F16                     	;# 
  3661  0F17                     	;# 
  3662  0F18                     	;# 
  3663  0F19                     	;# 
  3664  0F1A                     	;# 
  3665  0F1B                     	;# 
  3666  0F1C                     	;# 
  3667  0F1D                     	;# 
  3668  0F1E                     	;# 
  3669  0F1F                     	;# 
  3670  0F20                     	;# 
  3671  0F21                     	;# 
  3672  0F22                     	;# 
  3673  0F23                     	;# 
  3674  0F24                     	;# 
  3675  0F25                     	;# 
  3676  0F26                     	;# 
  3677  0F27                     	;# 
  3678  0F38                     	;# 
  3679  0F39                     	;# 
  3680  0F3A                     	;# 
  3681  0F3B                     	;# 
  3682  0F3C                     	;# 
  3683  0F3D                     	;# 
  3684  0F3E                     	;# 
  3685  0F3F                     	;# 
  3686  0F40                     	;# 
  3687  0F41                     	;# 
  3688  0F43                     	;# 
  3689  0F44                     	;# 
  3690  0F45                     	;# 
  3691  0F46                     	;# 
  3692  0F47                     	;# 
  3693  0F48                     	;# 
  3694  0F49                     	;# 
  3695  0F4A                     	;# 
  3696  0F4B                     	;# 
  3697  0F4C                     	;# 
  3698  0F4E                     	;# 
  3699  0F4F                     	;# 
  3700  0F50                     	;# 
  3701  0F51                     	;# 
  3702  0F52                     	;# 
  3703  0F53                     	;# 
  3704  0F54                     	;# 
  3705  0F55                     	;# 
  3706  0F56                     	;# 
  3707  0F57                     	;# 
  3708  0F65                     	;# 
  3709  0F68                     	;# 
  3710  0F69                     	;# 
  3711  0F6A                     	;# 
  3712  0F6B                     	;# 
  3713  0FE4                     	;# 
  3714  0FE5                     	;# 
  3715  0FE6                     	;# 
  3716  0FE7                     	;# 
  3717  0FE8                     	;# 
  3718  0FE9                     	;# 
  3719  0FEA                     	;# 
  3720  0FEB                     	;# 
  3721  0FED                     	;# 
  3722  0FEE                     	;# 
  3723  0FEF                     	;# 
  3724  0000                     	;# 
  3725  0001                     	;# 
  3726  0002                     	;# 
  3727  0003                     	;# 
  3728  0004                     	;# 
  3729  0005                     	;# 
  3730  0006                     	;# 
  3731  0007                     	;# 
  3732  0008                     	;# 
  3733  0009                     	;# 
  3734  000A                     	;# 
  3735  000B                     	;# 
  3736  000C                     	;# 
  3737  000D                     	;# 
  3738  000E                     	;# 
  3739  0010                     	;# 
  3740  0011                     	;# 
  3741  0012                     	;# 
  3742  0013                     	;# 
  3743  0016                     	;# 
  3744  0017                     	;# 
  3745  0018                     	;# 
  3746  001C                     	;# 
  3747  001C                     	;# 
  3748  001D                     	;# 
  3749  001D                     	;# 
  3750  001E                     	;# 
  3751  001F                     	;# 
  3752  008C                     	;# 
  3753  008C                     	;# 
  3754  008D                     	;# 
  3755  008E                     	;# 
  3756  008E                     	;# 
  3757  008F                     	;# 
  3758  0090                     	;# 
  3759  0090                     	;# 
  3760  0091                     	;# 
  3761  0093                     	;# 
  3762  0094                     	;# 
  3763  0095                     	;# 
  3764  0096                     	;# 
  3765  0097                     	;# 
  3766  0098                     	;# 
  3767  0099                     	;# 
  3768  009A                     	;# 
  3769  009B                     	;# 
  3770  009C                     	;# 
  3771  009D                     	;# 
  3772  009E                     	;# 
  3773  010C                     	;# 
  3774  010D                     	;# 
  3775  010E                     	;# 
  3776  010E                     	;# 
  3777  010F                     	;# 
  3778  0110                     	;# 
  3779  0110                     	;# 
  3780  0111                     	;# 
  3781  0112                     	;# 
  3782  0112                     	;# 
  3783  0113                     	;# 
  3784  0114                     	;# 
  3785  0114                     	;# 
  3786  0115                     	;# 
  3787  0116                     	;# 
  3788  0116                     	;# 
  3789  0117                     	;# 
  3790  0119                     	;# 
  3791  0119                     	;# 
  3792  0119                     	;# 
  3793  011A                     	;# 
  3794  011A                     	;# 
  3795  011A                     	;# 
  3796  011B                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011B                     	;# 
  3801  011C                     	;# 
  3802  011C                     	;# 
  3803  011C                     	;# 
  3804  011D                     	;# 
  3805  011D                     	;# 
  3806  011D                     	;# 
  3807  011E                     	;# 
  3808  011E                     	;# 
  3809  011E                     	;# 
  3810  011F                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  011F                     	;# 
  3815  018C                     	;# 
  3816  018D                     	;# 
  3817  018E                     	;# 
  3818  018F                     	;# 
  3819  0190                     	;# 
  3820  0191                     	;# 
  3821  0192                     	;# 
  3822  0196                     	;# 
  3823  0197                     	;# 
  3824  0198                     	;# 
  3825  0199                     	;# 
  3826  019A                     	;# 
  3827  019B                     	;# 
  3828  019C                     	;# 
  3829  020C                     	;# 
  3830  020C                     	;# 
  3831  020D                     	;# 
  3832  020E                     	;# 
  3833  020F                     	;# 
  3834  020F                     	;# 
  3835  0210                     	;# 
  3836  0210                     	;# 
  3837  0211                     	;# 
  3838  0211                     	;# 
  3839  0212                     	;# 
  3840  0212                     	;# 
  3841  0213                     	;# 
  3842  0214                     	;# 
  3843  0215                     	;# 
  3844  0215                     	;# 
  3845  0216                     	;# 
  3846  0216                     	;# 
  3847  0217                     	;# 
  3848  0217                     	;# 
  3849  0218                     	;# 
  3850  0218                     	;# 
  3851  0219                     	;# 
  3852  021A                     	;# 
  3853  021B                     	;# 
  3854  021B                     	;# 
  3855  021C                     	;# 
  3856  021C                     	;# 
  3857  021D                     	;# 
  3858  021D                     	;# 
  3859  021E                     	;# 
  3860  021F                     	;# 
  3861  028C                     	;# 
  3862  028C                     	;# 
  3863  028D                     	;# 
  3864  028D                     	;# 
  3865  028E                     	;# 
  3866  028F                     	;# 
  3867  0290                     	;# 
  3868  0290                     	;# 
  3869  0291                     	;# 
  3870  0292                     	;# 
  3871  0292                     	;# 
  3872  0293                     	;# 
  3873  0293                     	;# 
  3874  0294                     	;# 
  3875  0295                     	;# 
  3876  0296                     	;# 
  3877  0296                     	;# 
  3878  0297                     	;# 
  3879  0298                     	;# 
  3880  0298                     	;# 
  3881  0299                     	;# 
  3882  0299                     	;# 
  3883  029A                     	;# 
  3884  029B                     	;# 
  3885  029C                     	;# 
  3886  029C                     	;# 
  3887  029D                     	;# 
  3888  030C                     	;# 
  3889  030C                     	;# 
  3890  030D                     	;# 
  3891  030E                     	;# 
  3892  030F                     	;# 
  3893  0310                     	;# 
  3894  0310                     	;# 
  3895  0311                     	;# 
  3896  0312                     	;# 
  3897  0313                     	;# 
  3898  0314                     	;# 
  3899  0314                     	;# 
  3900  0315                     	;# 
  3901  0316                     	;# 
  3902  0317                     	;# 
  3903  0318                     	;# 
  3904  0318                     	;# 
  3905  0319                     	;# 
  3906  031A                     	;# 
  3907  031B                     	;# 
  3908  031C                     	;# 
  3909  031C                     	;# 
  3910  031D                     	;# 
  3911  031E                     	;# 
  3912  031F                     	;# 
  3913  038C                     	;# 
  3914  038D                     	;# 
  3915  038E                     	;# 
  3916  0390                     	;# 
  3917  0391                     	;# 
  3918  0392                     	;# 
  3919  040C                     	;# 
  3920  040D                     	;# 
  3921  040E                     	;# 
  3922  040F                     	;# 
  3923  0410                     	;# 
  3924  0411                     	;# 
  3925  0416                     	;# 
  3926  0416                     	;# 
  3927  0417                     	;# 
  3928  0418                     	;# 
  3929  0418                     	;# 
  3930  0419                     	;# 
  3931  041A                     	;# 
  3932  041A                     	;# 
  3933  041B                     	;# 
  3934  041C                     	;# 
  3935  041C                     	;# 
  3936  041D                     	;# 
  3937  041E                     	;# 
  3938  041F                     	;# 
  3939  048C                     	;# 
  3940  048C                     	;# 
  3941  048D                     	;# 
  3942  048E                     	;# 
  3943  048F                     	;# 
  3944  048F                     	;# 
  3945  0490                     	;# 
  3946  0491                     	;# 
  3947  0492                     	;# 
  3948  0492                     	;# 
  3949  0493                     	;# 
  3950  0494                     	;# 
  3951  0495                     	;# 
  3952  0495                     	;# 
  3953  0496                     	;# 
  3954  0497                     	;# 
  3955  0498                     	;# 
  3956  0499                     	;# 
  3957  049A                     	;# 
  3958  049B                     	;# 
  3959  049C                     	;# 
  3960  049D                     	;# 
  3961  050C                     	;# 
  3962  050C                     	;# 
  3963  050D                     	;# 
  3964  050E                     	;# 
  3965  050F                     	;# 
  3966  050F                     	;# 
  3967  0510                     	;# 
  3968  0511                     	;# 
  3969  0512                     	;# 
  3970  0512                     	;# 
  3971  0513                     	;# 
  3972  0514                     	;# 
  3973  0515                     	;# 
  3974  0515                     	;# 
  3975  0516                     	;# 
  3976  0517                     	;# 
  3977  0518                     	;# 
  3978  0519                     	;# 
  3979  051A                     	;# 
  3980  051B                     	;# 
  3981  051C                     	;# 
  3982  051D                     	;# 
  3983  058C                     	;# 
  3984  058C                     	;# 
  3985  058D                     	;# 
  3986  058E                     	;# 
  3987  058F                     	;# 
  3988  058F                     	;# 
  3989  0590                     	;# 
  3990  0591                     	;# 
  3991  0592                     	;# 
  3992  0593                     	;# 
  3993  060C                     	;# 
  3994  060D                     	;# 
  3995  060E                     	;# 
  3996  060F                     	;# 
  3997  0610                     	;# 
  3998  0611                     	;# 
  3999  0612                     	;# 
  4000  0613                     	;# 
  4001  0614                     	;# 
  4002  0616                     	;# 
  4003  0617                     	;# 
  4004  0618                     	;# 
  4005  0619                     	;# 
  4006  061A                     	;# 
  4007  061B                     	;# 
  4008  061C                     	;# 
  4009  061D                     	;# 
  4010  061E                     	;# 
  4011  068C                     	;# 
  4012  068D                     	;# 
  4013  068E                     	;# 
  4014  068F                     	;# 
  4015  0690                     	;# 
  4016  0691                     	;# 
  4017  0692                     	;# 
  4018  0693                     	;# 
  4019  0694                     	;# 
  4020  070C                     	;# 
  4021  070D                     	;# 
  4022  070E                     	;# 
  4023  070F                     	;# 
  4024  0710                     	;# 
  4025  0711                     	;# 
  4026  0712                     	;# 
  4027  0713                     	;# 
  4028  0714                     	;# 
  4029  0716                     	;# 
  4030  0717                     	;# 
  4031  0718                     	;# 
  4032  0719                     	;# 
  4033  071A                     	;# 
  4034  071B                     	;# 
  4035  071C                     	;# 
  4036  071D                     	;# 
  4037  071E                     	;# 
  4038  0796                     	;# 
  4039  0797                     	;# 
  4040  0798                     	;# 
  4041  0799                     	;# 
  4042  079A                     	;# 
  4043  079B                     	;# 
  4044  080C                     	;# 
  4045  080D                     	;# 
  4046  080E                     	;# 
  4047  080F                     	;# 
  4048  0810                     	;# 
  4049  0811                     	;# 
  4050  0812                     	;# 
  4051  0813                     	;# 
  4052  0814                     	;# 
  4053  081A                     	;# 
  4054  081B                     	;# 
  4055  081C                     	;# 
  4056  081D                     	;# 
  4057  081E                     	;# 
  4058  081F                     	;# 
  4059  088C                     	;# 
  4060  088D                     	;# 
  4061  088E                     	;# 
  4062  088F                     	;# 
  4063  0890                     	;# 
  4064  0891                     	;# 
  4065  0892                     	;# 
  4066  0893                     	;# 
  4067  0895                     	;# 
  4068  0896                     	;# 
  4069  0897                     	;# 
  4070  0898                     	;# 
  4071  0899                     	;# 
  4072  089A                     	;# 
  4073  089B                     	;# 
  4074  090C                     	;# 
  4075  090E                     	;# 
  4076  090F                     	;# 
  4077  091F                     	;# 
  4078  091F                     	;# 
  4079  098F                     	;# 
  4080  098F                     	;# 
  4081  0990                     	;# 
  4082  0991                     	;# 
  4083  0992                     	;# 
  4084  0993                     	;# 
  4085  0994                     	;# 
  4086  0995                     	;# 
  4087  0996                     	;# 
  4088  0997                     	;# 
  4089  0E0F                     	;# 
  4090  0E10                     	;# 
  4091  0E11                     	;# 
  4092  0E12                     	;# 
  4093  0E13                     	;# 
  4094  0E14                     	;# 
  4095  0E15                     	;# 
  4096  0E16                     	;# 
  4097  0E17                     	;# 
  4098  0E18                     	;# 
  4099  0E19                     	;# 
  4100  0E1A                     	;# 
  4101  0E1B                     	;# 
  4102  0E1C                     	;# 
  4103  0E1D                     	;# 
  4104  0E1E                     	;# 
  4105  0E1F                     	;# 
  4106  0E20                     	;# 
  4107  0E21                     	;# 
  4108  0E22                     	;# 
  4109  0E23                     	;# 
  4110  0E24                     	;# 
  4111  0E25                     	;# 
  4112  0E26                     	;# 
  4113  0E27                     	;# 
  4114  0E28                     	;# 
  4115  0E29                     	;# 
  4116  0E2A                     	;# 
  4117  0E2B                     	;# 
  4118  0E2C                     	;# 
  4119  0E2D                     	;# 
  4120  0E2E                     	;# 
  4121  0E2F                     	;# 
  4122  0E30                     	;# 
  4123  0E31                     	;# 
  4124  0E32                     	;# 
  4125  0E33                     	;# 
  4126  0E34                     	;# 
  4127  0E35                     	;# 
  4128  0E36                     	;# 
  4129  0E37                     	;# 
  4130  0E8F                     	;# 
  4131  0E90                     	;# 
  4132  0E91                     	;# 
  4133  0E92                     	;# 
  4134  0E93                     	;# 
  4135  0E94                     	;# 
  4136  0E95                     	;# 
  4137  0E96                     	;# 
  4138  0E97                     	;# 
  4139  0E9C                     	;# 
  4140  0E9D                     	;# 
  4141  0E9E                     	;# 
  4142  0EA1                     	;# 
  4143  0EA2                     	;# 
  4144  0EA3                     	;# 
  4145  0EA4                     	;# 
  4146  0EA5                     	;# 
  4147  0EA9                     	;# 
  4148  0EAA                     	;# 
  4149  0EAB                     	;# 
  4150  0EAC                     	;# 
  4151  0EB1                     	;# 
  4152  0EB2                     	;# 
  4153  0EB3                     	;# 
  4154  0EB8                     	;# 
  4155  0EB9                     	;# 
  4156  0EBA                     	;# 
  4157  0EBB                     	;# 
  4158  0EBC                     	;# 
  4159  0EBD                     	;# 
  4160  0EBE                     	;# 
  4161  0EC3                     	;# 
  4162  0EC5                     	;# 
  4163  0EC6                     	;# 
  4164  0EC7                     	;# 
  4165  0EC8                     	;# 
  4166  0EC9                     	;# 
  4167  0ECA                     	;# 
  4168  0ECB                     	;# 
  4169  0ECC                     	;# 
  4170  0F10                     	;# 
  4171  0F11                     	;# 
  4172  0F12                     	;# 
  4173  0F13                     	;# 
  4174  0F14                     	;# 
  4175  0F15                     	;# 
  4176  0F16                     	;# 
  4177  0F17                     	;# 
  4178  0F18                     	;# 
  4179  0F19                     	;# 
  4180  0F1A                     	;# 
  4181  0F1B                     	;# 
  4182  0F1C                     	;# 
  4183  0F1D                     	;# 
  4184  0F1E                     	;# 
  4185  0F1F                     	;# 
  4186  0F20                     	;# 
  4187  0F21                     	;# 
  4188  0F22                     	;# 
  4189  0F23                     	;# 
  4190  0F24                     	;# 
  4191  0F25                     	;# 
  4192  0F26                     	;# 
  4193  0F27                     	;# 
  4194  0F38                     	;# 
  4195  0F39                     	;# 
  4196  0F3A                     	;# 
  4197  0F3B                     	;# 
  4198  0F3C                     	;# 
  4199  0F3D                     	;# 
  4200  0F3E                     	;# 
  4201  0F3F                     	;# 
  4202  0F40                     	;# 
  4203  0F41                     	;# 
  4204  0F43                     	;# 
  4205  0F44                     	;# 
  4206  0F45                     	;# 
  4207  0F46                     	;# 
  4208  0F47                     	;# 
  4209  0F48                     	;# 
  4210  0F49                     	;# 
  4211  0F4A                     	;# 
  4212  0F4B                     	;# 
  4213  0F4C                     	;# 
  4214  0F4E                     	;# 
  4215  0F4F                     	;# 
  4216  0F50                     	;# 
  4217  0F51                     	;# 
  4218  0F52                     	;# 
  4219  0F53                     	;# 
  4220  0F54                     	;# 
  4221  0F55                     	;# 
  4222  0F56                     	;# 
  4223  0F57                     	;# 
  4224  0F65                     	;# 
  4225  0F68                     	;# 
  4226  0F69                     	;# 
  4227  0F6A                     	;# 
  4228  0F6B                     	;# 
  4229  0FE4                     	;# 
  4230  0FE5                     	;# 
  4231  0FE6                     	;# 
  4232  0FE7                     	;# 
  4233  0FE8                     	;# 
  4234  0FE9                     	;# 
  4235  0FEA                     	;# 
  4236  0FEB                     	;# 
  4237  0FED                     	;# 
  4238  0FEE                     	;# 
  4239  0FEF                     	;# 
  4240  0000                     	;# 
  4241  0001                     	;# 
  4242  0002                     	;# 
  4243  0003                     	;# 
  4244  0004                     	;# 
  4245  0005                     	;# 
  4246  0006                     	;# 
  4247  0007                     	;# 
  4248  0008                     	;# 
  4249  0009                     	;# 
  4250  000A                     	;# 
  4251  000B                     	;# 
  4252  000C                     	;# 
  4253  000D                     	;# 
  4254  000E                     	;# 
  4255  0010                     	;# 
  4256  0011                     	;# 
  4257  0012                     	;# 
  4258  0013                     	;# 
  4259  0016                     	;# 
  4260  0017                     	;# 
  4261  0018                     	;# 
  4262  001C                     	;# 
  4263  001C                     	;# 
  4264  001D                     	;# 
  4265  001D                     	;# 
  4266  001E                     	;# 
  4267  001F                     	;# 
  4268  008C                     	;# 
  4269  008C                     	;# 
  4270  008D                     	;# 
  4271  008E                     	;# 
  4272  008E                     	;# 
  4273  008F                     	;# 
  4274  0090                     	;# 
  4275  0090                     	;# 
  4276  0091                     	;# 
  4277  0093                     	;# 
  4278  0094                     	;# 
  4279  0095                     	;# 
  4280  0096                     	;# 
  4281  0097                     	;# 
  4282  0098                     	;# 
  4283  0099                     	;# 
  4284  009A                     	;# 
  4285  009B                     	;# 
  4286  009C                     	;# 
  4287  009D                     	;# 
  4288  009E                     	;# 
  4289  010C                     	;# 
  4290  010D                     	;# 
  4291  010E                     	;# 
  4292  010E                     	;# 
  4293  010F                     	;# 
  4294  0110                     	;# 
  4295  0110                     	;# 
  4296  0111                     	;# 
  4297  0112                     	;# 
  4298  0112                     	;# 
  4299  0113                     	;# 
  4300  0114                     	;# 
  4301  0114                     	;# 
  4302  0115                     	;# 
  4303  0116                     	;# 
  4304  0116                     	;# 
  4305  0117                     	;# 
  4306  0119                     	;# 
  4307  0119                     	;# 
  4308  0119                     	;# 
  4309  011A                     	;# 
  4310  011A                     	;# 
  4311  011A                     	;# 
  4312  011B                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011C                     	;# 
  4318  011C                     	;# 
  4319  011C                     	;# 
  4320  011D                     	;# 
  4321  011D                     	;# 
  4322  011D                     	;# 
  4323  011E                     	;# 
  4324  011E                     	;# 
  4325  011E                     	;# 
  4326  011F                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  018C                     	;# 
  4332  018D                     	;# 
  4333  018E                     	;# 
  4334  018F                     	;# 
  4335  0190                     	;# 
  4336  0191                     	;# 
  4337  0192                     	;# 
  4338  0196                     	;# 
  4339  0197                     	;# 
  4340  0198                     	;# 
  4341  0199                     	;# 
  4342  019A                     	;# 
  4343  019B                     	;# 
  4344  019C                     	;# 
  4345  020C                     	;# 
  4346  020C                     	;# 
  4347  020D                     	;# 
  4348  020E                     	;# 
  4349  020F                     	;# 
  4350  020F                     	;# 
  4351  0210                     	;# 
  4352  0210                     	;# 
  4353  0211                     	;# 
  4354  0211                     	;# 
  4355  0212                     	;# 
  4356  0212                     	;# 
  4357  0213                     	;# 
  4358  0214                     	;# 
  4359  0215                     	;# 
  4360  0215                     	;# 
  4361  0216                     	;# 
  4362  0216                     	;# 
  4363  0217                     	;# 
  4364  0217                     	;# 
  4365  0218                     	;# 
  4366  0218                     	;# 
  4367  0219                     	;# 
  4368  021A                     	;# 
  4369  021B                     	;# 
  4370  021B                     	;# 
  4371  021C                     	;# 
  4372  021C                     	;# 
  4373  021D                     	;# 
  4374  021D                     	;# 
  4375  021E                     	;# 
  4376  021F                     	;# 
  4377  028C                     	;# 
  4378  028C                     	;# 
  4379  028D                     	;# 
  4380  028D                     	;# 
  4381  028E                     	;# 
  4382  028F                     	;# 
  4383  0290                     	;# 
  4384  0290                     	;# 
  4385  0291                     	;# 
  4386  0292                     	;# 
  4387  0292                     	;# 
  4388  0293                     	;# 
  4389  0293                     	;# 
  4390  0294                     	;# 
  4391  0295                     	;# 
  4392  0296                     	;# 
  4393  0296                     	;# 
  4394  0297                     	;# 
  4395  0298                     	;# 
  4396  0298                     	;# 
  4397  0299                     	;# 
  4398  0299                     	;# 
  4399  029A                     	;# 
  4400  029B                     	;# 
  4401  029C                     	;# 
  4402  029C                     	;# 
  4403  029D                     	;# 
  4404  030C                     	;# 
  4405  030C                     	;# 
  4406  030D                     	;# 
  4407  030E                     	;# 
  4408  030F                     	;# 
  4409  0310                     	;# 
  4410  0310                     	;# 
  4411  0311                     	;# 
  4412  0312                     	;# 
  4413  0313                     	;# 
  4414  0314                     	;# 
  4415  0314                     	;# 
  4416  0315                     	;# 
  4417  0316                     	;# 
  4418  0317                     	;# 
  4419  0318                     	;# 
  4420  0318                     	;# 
  4421  0319                     	;# 
  4422  031A                     	;# 
  4423  031B                     	;# 
  4424  031C                     	;# 
  4425  031C                     	;# 
  4426  031D                     	;# 
  4427  031E                     	;# 
  4428  031F                     	;# 
  4429  038C                     	;# 
  4430  038D                     	;# 
  4431  038E                     	;# 
  4432  0390                     	;# 
  4433  0391                     	;# 
  4434  0392                     	;# 
  4435  040C                     	;# 
  4436  040D                     	;# 
  4437  040E                     	;# 
  4438  040F                     	;# 
  4439  0410                     	;# 
  4440  0411                     	;# 
  4441  0416                     	;# 
  4442  0416                     	;# 
  4443  0417                     	;# 
  4444  0418                     	;# 
  4445  0418                     	;# 
  4446  0419                     	;# 
  4447  041A                     	;# 
  4448  041A                     	;# 
  4449  041B                     	;# 
  4450  041C                     	;# 
  4451  041C                     	;# 
  4452  041D                     	;# 
  4453  041E                     	;# 
  4454  041F                     	;# 
  4455  048C                     	;# 
  4456  048C                     	;# 
  4457  048D                     	;# 
  4458  048E                     	;# 
  4459  048F                     	;# 
  4460  048F                     	;# 
  4461  0490                     	;# 
  4462  0491                     	;# 
  4463  0492                     	;# 
  4464  0492                     	;# 
  4465  0493                     	;# 
  4466  0494                     	;# 
  4467  0495                     	;# 
  4468  0495                     	;# 
  4469  0496                     	;# 
  4470  0497                     	;# 
  4471  0498                     	;# 
  4472  0499                     	;# 
  4473  049A                     	;# 
  4474  049B                     	;# 
  4475  049C                     	;# 
  4476  049D                     	;# 
  4477  050C                     	;# 
  4478  050C                     	;# 
  4479  050D                     	;# 
  4480  050E                     	;# 
  4481  050F                     	;# 
  4482  050F                     	;# 
  4483  0510                     	;# 
  4484  0511                     	;# 
  4485  0512                     	;# 
  4486  0512                     	;# 
  4487  0513                     	;# 
  4488  0514                     	;# 
  4489  0515                     	;# 
  4490  0515                     	;# 
  4491  0516                     	;# 
  4492  0517                     	;# 
  4493  0518                     	;# 
  4494  0519                     	;# 
  4495  051A                     	;# 
  4496  051B                     	;# 
  4497  051C                     	;# 
  4498  051D                     	;# 
  4499  058C                     	;# 
  4500  058C                     	;# 
  4501  058D                     	;# 
  4502  058E                     	;# 
  4503  058F                     	;# 
  4504  058F                     	;# 
  4505  0590                     	;# 
  4506  0591                     	;# 
  4507  0592                     	;# 
  4508  0593                     	;# 
  4509  060C                     	;# 
  4510  060D                     	;# 
  4511  060E                     	;# 
  4512  060F                     	;# 
  4513  0610                     	;# 
  4514  0611                     	;# 
  4515  0612                     	;# 
  4516  0613                     	;# 
  4517  0614                     	;# 
  4518  0616                     	;# 
  4519  0617                     	;# 
  4520  0618                     	;# 
  4521  0619                     	;# 
  4522  061A                     	;# 
  4523  061B                     	;# 
  4524  061C                     	;# 
  4525  061D                     	;# 
  4526  061E                     	;# 
  4527  068C                     	;# 
  4528  068D                     	;# 
  4529  068E                     	;# 
  4530  068F                     	;# 
  4531  0690                     	;# 
  4532  0691                     	;# 
  4533  0692                     	;# 
  4534  0693                     	;# 
  4535  0694                     	;# 
  4536  070C                     	;# 
  4537  070D                     	;# 
  4538  070E                     	;# 
  4539  070F                     	;# 
  4540  0710                     	;# 
  4541  0711                     	;# 
  4542  0712                     	;# 
  4543  0713                     	;# 
  4544  0714                     	;# 
  4545  0716                     	;# 
  4546  0717                     	;# 
  4547  0718                     	;# 
  4548  0719                     	;# 
  4549  071A                     	;# 
  4550  071B                     	;# 
  4551  071C                     	;# 
  4552  071D                     	;# 
  4553  071E                     	;# 
  4554  0796                     	;# 
  4555  0797                     	;# 
  4556  0798                     	;# 
  4557  0799                     	;# 
  4558  079A                     	;# 
  4559  079B                     	;# 
  4560  080C                     	;# 
  4561  080D                     	;# 
  4562  080E                     	;# 
  4563  080F                     	;# 
  4564  0810                     	;# 
  4565  0811                     	;# 
  4566  0812                     	;# 
  4567  0813                     	;# 
  4568  0814                     	;# 
  4569  081A                     	;# 
  4570  081B                     	;# 
  4571  081C                     	;# 
  4572  081D                     	;# 
  4573  081E                     	;# 
  4574  081F                     	;# 
  4575  088C                     	;# 
  4576  088D                     	;# 
  4577  088E                     	;# 
  4578  088F                     	;# 
  4579  0890                     	;# 
  4580  0891                     	;# 
  4581  0892                     	;# 
  4582  0893                     	;# 
  4583  0895                     	;# 
  4584  0896                     	;# 
  4585  0897                     	;# 
  4586  0898                     	;# 
  4587  0899                     	;# 
  4588  089A                     	;# 
  4589  089B                     	;# 
  4590  090C                     	;# 
  4591  090E                     	;# 
  4592  090F                     	;# 
  4593  091F                     	;# 
  4594  091F                     	;# 
  4595  098F                     	;# 
  4596  098F                     	;# 
  4597  0990                     	;# 
  4598  0991                     	;# 
  4599  0992                     	;# 
  4600  0993                     	;# 
  4601  0994                     	;# 
  4602  0995                     	;# 
  4603  0996                     	;# 
  4604  0997                     	;# 
  4605  0E0F                     	;# 
  4606  0E10                     	;# 
  4607  0E11                     	;# 
  4608  0E12                     	;# 
  4609  0E13                     	;# 
  4610  0E14                     	;# 
  4611  0E15                     	;# 
  4612  0E16                     	;# 
  4613  0E17                     	;# 
  4614  0E18                     	;# 
  4615  0E19                     	;# 
  4616  0E1A                     	;# 
  4617  0E1B                     	;# 
  4618  0E1C                     	;# 
  4619  0E1D                     	;# 
  4620  0E1E                     	;# 
  4621  0E1F                     	;# 
  4622  0E20                     	;# 
  4623  0E21                     	;# 
  4624  0E22                     	;# 
  4625  0E23                     	;# 
  4626  0E24                     	;# 
  4627  0E25                     	;# 
  4628  0E26                     	;# 
  4629  0E27                     	;# 
  4630  0E28                     	;# 
  4631  0E29                     	;# 
  4632  0E2A                     	;# 
  4633  0E2B                     	;# 
  4634  0E2C                     	;# 
  4635  0E2D                     	;# 
  4636  0E2E                     	;# 
  4637  0E2F                     	;# 
  4638  0E30                     	;# 
  4639  0E31                     	;# 
  4640  0E32                     	;# 
  4641  0E33                     	;# 
  4642  0E34                     	;# 
  4643  0E35                     	;# 
  4644  0E36                     	;# 
  4645  0E37                     	;# 
  4646  0E8F                     	;# 
  4647  0E90                     	;# 
  4648  0E91                     	;# 
  4649  0E92                     	;# 
  4650  0E93                     	;# 
  4651  0E94                     	;# 
  4652  0E95                     	;# 
  4653  0E96                     	;# 
  4654  0E97                     	;# 
  4655  0E9C                     	;# 
  4656  0E9D                     	;# 
  4657  0E9E                     	;# 
  4658  0EA1                     	;# 
  4659  0EA2                     	;# 
  4660  0EA3                     	;# 
  4661  0EA4                     	;# 
  4662  0EA5                     	;# 
  4663  0EA9                     	;# 
  4664  0EAA                     	;# 
  4665  0EAB                     	;# 
  4666  0EAC                     	;# 
  4667  0EB1                     	;# 
  4668  0EB2                     	;# 
  4669  0EB3                     	;# 
  4670  0EB8                     	;# 
  4671  0EB9                     	;# 
  4672  0EBA                     	;# 
  4673  0EBB                     	;# 
  4674  0EBC                     	;# 
  4675  0EBD                     	;# 
  4676  0EBE                     	;# 
  4677  0EC3                     	;# 
  4678  0EC5                     	;# 
  4679  0EC6                     	;# 
  4680  0EC7                     	;# 
  4681  0EC8                     	;# 
  4682  0EC9                     	;# 
  4683  0ECA                     	;# 
  4684  0ECB                     	;# 
  4685  0ECC                     	;# 
  4686  0F10                     	;# 
  4687  0F11                     	;# 
  4688  0F12                     	;# 
  4689  0F13                     	;# 
  4690  0F14                     	;# 
  4691  0F15                     	;# 
  4692  0F16                     	;# 
  4693  0F17                     	;# 
  4694  0F18                     	;# 
  4695  0F19                     	;# 
  4696  0F1A                     	;# 
  4697  0F1B                     	;# 
  4698  0F1C                     	;# 
  4699  0F1D                     	;# 
  4700  0F1E                     	;# 
  4701  0F1F                     	;# 
  4702  0F20                     	;# 
  4703  0F21                     	;# 
  4704  0F22                     	;# 
  4705  0F23                     	;# 
  4706  0F24                     	;# 
  4707  0F25                     	;# 
  4708  0F26                     	;# 
  4709  0F27                     	;# 
  4710  0F38                     	;# 
  4711  0F39                     	;# 
  4712  0F3A                     	;# 
  4713  0F3B                     	;# 
  4714  0F3C                     	;# 
  4715  0F3D                     	;# 
  4716  0F3E                     	;# 
  4717  0F3F                     	;# 
  4718  0F40                     	;# 
  4719  0F41                     	;# 
  4720  0F43                     	;# 
  4721  0F44                     	;# 
  4722  0F45                     	;# 
  4723  0F46                     	;# 
  4724  0F47                     	;# 
  4725  0F48                     	;# 
  4726  0F49                     	;# 
  4727  0F4A                     	;# 
  4728  0F4B                     	;# 
  4729  0F4C                     	;# 
  4730  0F4E                     	;# 
  4731  0F4F                     	;# 
  4732  0F50                     	;# 
  4733  0F51                     	;# 
  4734  0F52                     	;# 
  4735  0F53                     	;# 
  4736  0F54                     	;# 
  4737  0F55                     	;# 
  4738  0F56                     	;# 
  4739  0F57                     	;# 
  4740  0F65                     	;# 
  4741  0F68                     	;# 
  4742  0F69                     	;# 
  4743  0F6A                     	;# 
  4744  0F6B                     	;# 
  4745  0FE4                     	;# 
  4746  0FE5                     	;# 
  4747  0FE6                     	;# 
  4748  0FE7                     	;# 
  4749  0FE8                     	;# 
  4750  0FE9                     	;# 
  4751  0FEA                     	;# 
  4752  0FEB                     	;# 
  4753  0FED                     	;# 
  4754  0FEE                     	;# 
  4755  0FEF                     	;_aPatchMemory
  4756                           
  4757                           	psect	idataBANK2
  4758  0B8E                     __pidataBANK2:	
  4759                           
  4760                           ;initializer for _segdisp
  4761  0B8E  3403               	retlw	3
  4762  0B8F  3400               	retlw	0
  4763  0B90  349F               	retlw	159
  4764  0B91  3400               	retlw	0
  4765  0B92  3425               	retlw	37
  4766  0B93  3400               	retlw	0
  4767  0B94  340D               	retlw	13
  4768  0B95  3400               	retlw	0
  4769  0B96  3499               	retlw	153
  4770  0B97  3400               	retlw	0
  4771  0B98  3449               	retlw	73
  4772  0B99  3400               	retlw	0
  4773  0B9A  3441               	retlw	65
  4774  0B9B  3400               	retlw	0
  4775  0B9C  341B               	retlw	27
  4776  0B9D  3400               	retlw	0
  4777  0B9E  3401               	retlw	1
  4778  0B9F  3400               	retlw	0
  4779  0BA0  3409               	retlw	9
  4780  0BA1  3400               	retlw	0
  4781                           
  4782                           ;initializer for MYI2C_Write2LEDBytes@F14517
  4783  0BA2  34A0               	retlw	160
  4784  0BA3  34A1               	retlw	161
  4785  0BA4  34A2               	retlw	162
  4786  0BA5  34A3               	retlw	163
  4787  0BA6  34A4               	retlw	164
  4788  0BA7  34A5               	retlw	165
  4789  0BA8  34A6               	retlw	166
  4790  0BA9  34A7               	retlw	167
  4791  0BAA  34A8               	retlw	168
  4792  0BAB  34A9               	retlw	169
  4793  0BAC  34AA               	retlw	170
  4794  0BAD  34AB               	retlw	171
  4795  0BAE  34AC               	retlw	172
  4796  0BAF  34AD               	retlw	173
  4797  0BB0  34AE               	retlw	174
  4798  0BB1  34AF               	retlw	175
  4799                           
  4800                           	psect	stringtext1
  4801  1000                     __pstringtext1:	
  4802  1000                     _cPowerOfTwo:	
  4803  1000  3401               	retlw	1
  4804  1001  3400               	retlw	0
  4805  1002  3402               	retlw	2
  4806  1003  3400               	retlw	0
  4807  1004  3404               	retlw	4
  4808  1005  3400               	retlw	0
  4809  1006  3408               	retlw	8
  4810  1007  3400               	retlw	0
  4811  1008  3410               	retlw	16
  4812  1009  3400               	retlw	0
  4813  100A  3420               	retlw	32
  4814  100B  3400               	retlw	0
  4815  100C  3440               	retlw	64
  4816  100D  3400               	retlw	0
  4817  100E  3480               	retlw	128
  4818  100F  3400               	retlw	0
  4819  1010                     __end_of_cPowerOfTwo:	
  4820                           
  4821                           	psect	stringtext2
  4822  1010                     __pstringtext2:	
  4823  1010                     _ciBatchSize:	
  4824  1010  3410               	retlw	16
  4825  1011  3400               	retlw	0
  4826  1012                     __end_of_ciBatchSize:	
  4827                           
  4828                           	psect	stringtext3
  4829  1012                     __pstringtext3:	
  4830  1012                     _ciI2C_EEPROM_DEVICE_ADDRESS:	
  4831  1012  3450               	retlw	80
  4832  1013  3400               	retlw	0
  4833  1014                     __end_of_ciI2C_EEPROM_DEVICE_ADDRESS:	
  4834                           
  4835                           	psect	stringtext4
  4836  1014                     __pstringtext4:	
  4837  1014                     _maxBanks:	
  4838  1014  3401               	retlw	1
  4839  1015  3400               	retlw	0
  4840  1016                     __end_of_maxBanks:	
  4841                           
  4842                           	psect	stringtext5
  4843  1016                     __pstringtext5:	
  4844  1016                     _maxPatches:	
  4845  1016  3464               	retlw	100
  4846  1017  3400               	retlw	0
  4847  1018                     __end_of_maxPatches:	
  4848                           
  4849                           	psect	stringtext6
  4850  1018                     __pstringtext6:	
  4851  1018                     _MvcMaxValue:	
  4852  1018  34FF               	retlw	255
  4853  1019  3403               	retlw	3
  4854  101A                     __end_of_MvcMaxValue:	
  4855                           
  4856                           	psect	stringtext7
  4857  101A                     __pstringtext7:	
  4858  101A                     _MvcMinValue:	
  4859  101A  3400               	retlw	0
  4860  101B  3400               	retlw	0
  4861  101C                     __end_of_MvcMinValue:	
  4862                           
  4863                           	psect	stringtext8
  4864  101C                     __pstringtext8:	
  4865  101C                     _clockMicroTime:	
  4866  101C  34C8               	retlw	200
  4867  101D  3400               	retlw	0
  4868  101E                     __end_of_clockMicroTime:	
  4869                           
  4870                           	psect	stringtext9
  4871  101E                     __pstringtext9:	
  4872  101E                     _lineSettleMicroTime:	
  4873  101E  3490               	retlw	144
  4874  101F  3401               	retlw	1
  4875  1020                     __end_of_lineSettleMicroTime:	
  4876                           
  4877                           	psect	stringtext10
  4878  1020                     __pstringtext10:	
  4879  1020                     _toggleDly:	
  4880  1020  340A               	retlw	10
  4881  1021  3400               	retlw	0
  4882  1022                     __end_of_toggleDly:	
  4883                           
  4884                           	psect	stringtext11
  4885  1022                     __pstringtext11:	
  4886  1022                     _twoK:	
  4887  1022  3410               	retlw	16
  4888  1023  3427               	retlw	39
  4889  1024                     __end_of_twoK:	
  4890                           
  4891                           	psect	stringtext12
  4892  1024                     __pstringtext12:	
  4893  1024                     _speed:	
  4894  1024  3432               	retlw	50
  4895  1025  3400               	retlw	0
  4896  1026                     __end_of_speed:	
  4897                           
  4898                           	psect	stringtext13
  4899  1026                     __pstringtext13:	
  4900  1026                     _datapin:	
  4901  1026  3412               	retlw	18
  4902  1027  3400               	retlw	0
  4903  1028                     __end_of_datapin:	
  4904                           
  4905                           	psect	stringtext14
  4906  1028                     __pstringtext14:	
  4907  1028                     _clockpin:	
  4908  1028  3411               	retlw	17
  4909  1029  3400               	retlw	0
  4910  102A                     __end_of_clockpin:	
  4911                           
  4912                           	psect	stringtext15
  4913  102A                     __pstringtext15:	
  4914  102A                     _latchpin:	
  4915  102A  3410               	retlw	16
  4916  102B  3400               	retlw	0
  4917  102C                     __end_of_latchpin:	
  4918                           
  4919                           	psect	stringtext16
  4920  102C                     __pstringtext16:	
  4921  102C                     main@iResetValue:	
  4922  102C  3464               	retlw	100
  4923  102D  3400               	retlw	0
  4924  102E                     __end_ofmain@iResetValue:	
  4925                           
  4926                           	psect	stringtext17
  4927  102E                     __pstringtext17:	
  4928  102E                     _cMstrClkAdjust:	
  4929  102E  3420               	retlw	32
  4930  102F  3400               	retlw	0
  4931  1030                     __end_of_cMstrClkAdjust:	
  4932                           
  4933                           	psect	stringtext18
  4934  1030                     __pstringtext18:	
  4935  1030                     _i2c_addr_dualADSR1:	
  4936  1030  3469               	retlw	105
  4937  1031                     __end_of_i2c_addr_dualADSR1:	
  4938                           
  4939                           	psect	stringtext19
  4940  1031                     __pstringtext19:	
  4941  1031                     _i2c_addr_dualADSR0:	
  4942  1031  3468               	retlw	104
  4943  1032                     __end_of_i2c_addr_dualADSR0:	
  4944  000C                     _PORTA	set	12
  4945  0018                     _LATCbits	set	24
  4946  0013                     _TRISCbits	set	19
  4947  000D                     _PORTBbits	set	13
  4948  000E                     _PORTC	set	14
  4949  000D                     _PORTB	set	13
  4950  000B                     _INTCONbits	set	11
  4951  0013                     _TRISC	set	19
  4952  0012                     _TRISB	set	18
  4953  0011                     _TRISA	set	17
  4954  0018                     _LATC	set	24
  4955  0017                     _LATB	set	23
  4956  0016                     _LATA	set	22
  4957  005F                     _GIE	set	95
  4958  0094                     _ADCON1bits	set	148
  4959  008E                     _ADPREVL	set	142
  4960  008F                     _ADPREVH	set	143
  4961  0097                     _ADSTATbits	set	151
  4962  0090                     _ADACCL	set	144
  4963  0091                     _ADACCH	set	145
  4964  0095                     _ADCON2bits	set	149
  4965  0096                     _ADCON3bits	set	150
  4966  008C                     _ADRESL	set	140
  4967  008D                     _ADRESH	set	141
  4968  0093                     _ADCON0bits	set	147
  4969  0093                     _ADCON0	set	147
  4970  009E                     _ADPCH	set	158
  4971  009D                     _ADACQ	set	157
  4972  009C                     _ADPRE	set	156
  4973  009B                     _ADCAP	set	155
  4974  009A                     _ADREF	set	154
  4975  0098                     _ADCLK	set	152
  4976  0097                     _ADSTAT	set	151
  4977  0099                     _ADACT	set	153
  4978  0096                     _ADCON3	set	150
  4979  0095                     _ADCON2	set	149
  4980  0094                     _ADCON1	set	148
  4981  0116                     _ADERRL	set	278
  4982  0117                     _ADERRH	set	279
  4983  0114                     _ADFLTRL	set	276
  4984  0115                     _ADFLTRH	set	277
  4985  010C                     _ADCNT	set	268
  4986  0113                     _ADSTPTH	set	275
  4987  0112                     _ADSTPTL	set	274
  4988  0111                     _ADUTHH	set	273
  4989  0110                     _ADUTHL	set	272
  4990  010F                     _ADLTHH	set	271
  4991  010E                     _ADLTHL	set	270
  4992  010D                     _ADRPT	set	269
  4993  018C                     _SSP1BUF	set	396
  4994  0191                     _SSP1CON2bits	set	401
  4995  0190                     _SSP1CON1bits	set	400
  4996  018D                     _SSP1ADD	set	397
  4997  0192                     _SSP1CON3	set	402
  4998  0190                     _SSP1CON1	set	400
  4999  018F                     _SSP1STAT	set	399
  5000  0719                     _PIE3bits	set	1817
  5001  070F                     _PIR3bits	set	1807
  5002  0892                     _OSCTUNE	set	2194
  5003  0893                     _OSCFRQ	set	2195
  5004  0891                     _OSCEN	set	2193
  5005  088F                     _OSCCON3	set	2191
  5006  088D                     _OSCCON1	set	2189
  5007  0EC5                     _SSP1CLKPPSbits	set	3781
  5008  0EC6                     _SSP1DATPPSbits	set	3782
  5009  0E8F                     _PPSLOCKbits	set	3727
  5010  0E8F                     _PPSLOCK	set	3727
  5011  0F4E                     _ANSELCbits	set	3918
  5012  0F24                     _RC4PPS	set	3876
  5013  0F23                     _RC3PPS	set	3875
  5014  0F50                     _ODCONC	set	3920
  5015  0F45                     _ODCONB	set	3909
  5016  0F3A                     _ODCONA	set	3898
  5017  0F4F                     _WPUC	set	3919
  5018  0F39                     _WPUA	set	3897
  5019  0F44                     _WPUB	set	3908
  5020  0F65                     _WPUE	set	3941
  5021  0F38                     _ANSELA	set	3896
  5022  0F43                     _ANSELB	set	3907
  5023  0F4E                     _ANSELC	set	3918
  5024                           
  5025                           ; #config settings
  5026  0000                     
  5027                           	psect	cinit
  5028  0022                     start_initialization:	
  5029  0022                     __initialization:		;BIGRAM
  5030                           
  5031                           ; Initialize objects allocated to BANK2
  5032  0022  308E               	movlw	low __pidataBANK2
  5033  0023  0084               	movwf	4
  5034  0024  308B               	movlw	(high __pidataBANK2)| (0+128)
  5035  0025  0085               	movwf	5
  5036  0026  3020               	movlw	low __pdataBANK2
  5037  0027  0086               	movwf	6
  5038  0028  3001               	movlw	high __pdataBANK2
  5039  0029  0087               	movwf	7
  5040  002A  3000               	movlw	0
  5041  002B  00FF               	movwf	btemp+1
  5042  002C  3024               	movlw	36
  5043  002D  318A  2275  3180   	fcall	init_ram
  5044                           
  5045                           ; Clear objects allocated to BIGRAM
  5046  0030  3070               	movlw	low (0+9072)
  5047  0031  0084               	movwf	4
  5048  0032  3023               	movlw	high (0+9072)
  5049  0033  0085               	movwf	5
  5050  0034  3080               	movlw	128
  5051  0035  00FE               	movwf	btemp
  5052  0036  3000               	movlw	0
  5053  0037  00FF               	movwf	btemp+1
  5054  0038  318A  2269  3180   	fcall	clear_ram0
  5055                           
  5056                           ; Clear objects allocated to COMMON
  5057  003B  01F0               	clrf	__pbssCOMMON& (0+127)
  5058  003C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  5059  003D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  5060  003E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  5061  003F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  5062  0040  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  5063  0041  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  5064                           
  5065                           ; Clear objects allocated to BANK0
  5066  0042  01E8               	clrf	__pbssBANK0& (0+127)
  5067  0043  01E9               	clrf	(__pbssBANK0+1)& (0+127)
  5068  0044  01EA               	clrf	(__pbssBANK0+2)& (0+127)
  5069  0045  01EB               	clrf	(__pbssBANK0+3)& (0+127)
  5070  0046  01EC               	clrf	(__pbssBANK0+4)& (0+127)
  5071  0047  01ED               	clrf	(__pbssBANK0+5)& (0+127)
  5072  0048  01EE               	clrf	(__pbssBANK0+6)& (0+127)
  5073  0049  01EF               	clrf	(__pbssBANK0+7)& (0+127)
  5074                           
  5075                           ; Clear objects allocated to BANK1
  5076  004A  30A0               	movlw	low __pbssBANK1
  5077  004B  0084               	movwf	4
  5078  004C  3000               	movlw	high __pbssBANK1
  5079  004D  0085               	movwf	5
  5080  004E  3035               	movlw	53
  5081  004F  00FE               	movwf	btemp
  5082  0050  3000               	movlw	0
  5083  0051  00FF               	movwf	btemp+1
  5084  0052  318A  2269  3180   	fcall	clear_ram0
  5085                           
  5086                           ; Clear objects allocated to BANK2
  5087  0055  3044               	movlw	low __pbssBANK2
  5088  0056  0084               	movwf	4
  5089  0057  3001               	movlw	high __pbssBANK2
  5090  0058  0085               	movwf	5
  5091  0059  3014               	movlw	20
  5092  005A  00FE               	movwf	btemp
  5093  005B  3000               	movlw	0
  5094  005C  00FF               	movwf	btemp+1
  5095  005D  318A  2269         	fcall	clear_ram0
  5096  005F                     end_of_initialization:	
  5097                           ;End of C runtime variable initialization code
  5098                           
  5099  005F                     __end_of__initialization:	
  5100  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5101  0060  0020               	movlb	0
  5102  0061  3180  2863         	ljmp	_main	;jump to C main() function
  5103                           
  5104                           	psect	bssCOMMON
  5105  0070                     __pbssCOMMON:	
  5106  0070                     I2C1_ISR@i2c_bytes_left:	
  5107  0070                     	ds	1
  5108  0071                     I2C1_ISR@pi2c_buf_ptr:	
  5109  0071                     	ds	1
  5110  0072                     _p_i2c1_current:	
  5111  0072                     	ds	1
  5112  0073                     _p_i2c1_trb_current:	
  5113  0073                     	ds	1
  5114  0074                     _i2c1_trb_count:	
  5115  0074                     	ds	1
  5116  0075                     I2C1_ISR@i2c_address:	
  5117  0075                     	ds	2
  5118                           
  5119                           	psect	bssBANK0
  5120  0068                     __pbssBANK0:	
  5121  0068                     _i2c1_object:	
  5122  0068                     	ds	5
  5123  006D                     _MY_CONSTS:	
  5124  006D                     	ds	1
  5125  006E                     I2C1_ISR@i2c_10bit_address_restart:	
  5126  006E                     	ds	1
  5127  006F                     _i2c1_state:	
  5128  006F                     	ds	1
  5129                           
  5130                           	psect	bssBANK1
  5131  00A0                     __pbssBANK1:	
  5132  00A0                     _prevByteMixFaderValue:	
  5133  00A0                     	ds	4
  5134  00A4                     _byteMixFaderValue:	
  5135  00A4                     	ds	4
  5136  00A8                     _wkFloat:	
  5137  00A8                     	ds	3
  5138  00AB                     _d:	
  5139  00AB                     	ds	3
  5140  00AE                     _b:	
  5141  00AE                     	ds	3
  5142  00B1                     _e:	
  5143  00B1                     	ds	2
  5144  00B3                     _c:	
  5145  00B3                     	ds	2
  5146  00B5                     _mvcPatchNumber:	
  5147  00B5                     	ds	2
  5148  00B7                     _wkByte:	
  5149  00B7                     	ds	1
  5150  00B8                     _wkMIDICC:	
  5151  00B8                     	ds	1
  5152  00B9                     _wkFaderValue:	
  5153  00B9                     	ds	1
  5154  00BA                     _iLEDs1_LSB:	
  5155  00BA                     	ds	1
  5156  00BB                     _iLEDs1_MSB:	
  5157  00BB                     	ds	1
  5158  00BC                     _iLEDs0_LSB:	
  5159  00BC                     	ds	1
  5160  00BD                     _iLEDs0_MSB:	
  5161  00BD                     	ds	1
  5162  00BE                     _iI2CFaderValue:	
  5163  00BE                     	ds	8
  5164  00C6                     _mvcChannels:	
  5165  00C6                     	ds	4
  5166  00CA                     I2C1_MasterRead@trBlock:	
  5167  00CA                     	ds	4
  5168  00CE                     I2C1_MasterWrite@trBlock:	
  5169  00CE                     	ds	4
  5170  00D2                     _i2c1_tr_queue:	
  5171  00D2                     	ds	3
  5172                           
  5173                           	psect	bssBANK2
  5174  0144                     __pbssBANK2:	
  5175  0144                     _PanelInChannels:	
  5176  0144                     	ds	4
  5177  0148                     _dualADSRdata1:	
  5178  0148                     	ds	8
  5179  0150                     _dualADSRdata0:	
  5180  0150                     	ds	8
  5181                           
  5182                           	psect	dataBANK2
  5183  0120                     __pdataBANK2:	
  5184  0120                     _segdisp:	
  5185  0120                     	ds	20
  5186  0134                     MYI2C_Write2LEDBytes@F14517:	
  5187  0134                     	ds	16
  5188                           
  5189                           	psect	inittext
  5190  0A75                     init_ram:	
  5191  0A75  00FE               	movwf	126
  5192  0A76                     initloop:	
  5193  0A76  0012               	moviw fsr0++
  5194  0A77  001E               	movwi fsr1++
  5195  0A78  3001               	movlw	1
  5196  0A79  02FE               	subwf	126,f
  5197  0A7A  3000               	movlw	0
  5198  0A7B  3BFF               	subwfb	127,f
  5199  0A7C  087F               	movf	127,w
  5200  0A7D  047E               	iorwf	126,w
  5201  0A7E  1903               	btfsc	3,2
  5202  0A7F  3400               	retlw	0
  5203  0A80  2A76               	goto	initloop
  5204                           
  5205                           	psect	clrtext
  5206  0A69                     clear_ram0:	
  5207                           ;	Called with FSR0 containing the base address, and
  5208                           ;	btemp/btemp+1 has the size to clear
  5209                           
  5210  0A69  0064               	clrwdt	;clear the watchdog before getting into this loop
  5211  0A6A                     clrloop0:	
  5212  0A6A  0180               	clrf	0	;clear RAM location pointed to by FSR
  5213  0A6B  3101               	addfsr 0,1
  5214  0A6C  3001               	movlw	1
  5215  0A6D  02FE               	subwf	126,f
  5216  0A6E  3000               	movlw	0
  5217  0A6F  3BFF               	subwfb	127,f
  5218  0A70  087F               	movf	127,w
  5219  0A71  047E               	iorwf	126,w
  5220  0A72  1903               	btfsc	3,2
  5221  0A73  3400               	retlw	0	;all done for this memory range, return
  5222  0A74  2A6A               	goto	clrloop0	;have we reached the end yet?
  5223                           
  5224                           	psect	cstackBANK1
  5225  00D5                     __pcstackBANK1:	
  5226  00D5                     main@iCounter:	
  5227                           
  5228                           ; 2 bytes @ 0x0
  5229  00D5                     	ds	2
  5230  00D7                     main@iChangeCount:	
  5231                           
  5232                           ; 1 bytes @ 0x2
  5233  00D7                     	ds	1
  5234  00D8                     main@prevFader8bitValue:	
  5235                           
  5236                           ; 1 bytes @ 0x3
  5237  00D8                     	ds	1
  5238  00D9                     main@iLoopCounter:	
  5239                           
  5240                           ; 2 bytes @ 0x4
  5241  00D9                     	ds	2
  5242  00DB                     main@POT0Value:	
  5243                           
  5244                           ; 1 bytes @ 0x6
  5245  00DB                     	ds	1
  5246  00DC                     main@POT1Value:	
  5247                           
  5248                           ; 1 bytes @ 0x7
  5249  00DC                     	ds	1
  5250  00DD                     main@LoadDebounceCount:	
  5251                           
  5252                           ; 2 bytes @ 0x8
  5253  00DD                     	ds	2
  5254  00DF                     main@SaveDebounceCount:	
  5255                           
  5256                           ; 2 bytes @ 0xA
  5257  00DF                     	ds	2
  5258  00E1                     main@readStatus:	
  5259                           
  5260                           ; 1 bytes @ 0xC
  5261  00E1                     	ds	1
  5262  00E2                     main@x:	
  5263                           
  5264                           ; 2 bytes @ 0xD
  5265  00E2                     	ds	2
  5266  00E4                     main@x_945:	
  5267                           
  5268                           ; 2 bytes @ 0xF
  5269  00E4                     	ds	2
  5270  00E6                     main@fader8bitValue:	
  5271                           
  5272                           ; 1 bytes @ 0x11
  5273  00E6                     	ds	1
  5274  00E7                     main@fx:	
  5275                           
  5276                           ; 2 bytes @ 0x12
  5277  00E7                     	ds	2
  5278  00E9                     main@faderValue:	
  5279                           
  5280                           ; 2 bytes @ 0x14
  5281  00E9                     	ds	2
  5282  00EB                     main@fx_935:	
  5283                           
  5284                           ; 2 bytes @ 0x16
  5285  00EB                     	ds	2
  5286                           
  5287                           	psect	cstackCOMMON
  5288  0077                     __pcstackCOMMON:	
  5289  0077                     ?_OSCILLATOR_Initialize:	
  5290  0077                     ?_I2C1_Initialize:	
  5291                           ; 1 bytes @ 0x0
  5292                           
  5293  0077                     ?_ADCC_Initialize:	
  5294                           ; 1 bytes @ 0x0
  5295                           
  5296  0077                     ?_I2C1_Stop:	
  5297                           ; 1 bytes @ 0x0
  5298                           
  5299  0077                     ??_I2C1_Stop:	
  5300                           ; 1 bytes @ 0x0
  5301                           
  5302  0077                     ?_I2C1_FunctionComplete:	
  5303                           ; 1 bytes @ 0x0
  5304                           
  5305  0077                     ??_I2C1_FunctionComplete:	
  5306                           ; 1 bytes @ 0x0
  5307                           
  5308  0077                     ?_initDAC528:	
  5309                           ; 1 bytes @ 0x0
  5310                           
  5311  0077                     ?_LED7SegSetup:	
  5312                           ; 1 bytes @ 0x0
  5313                           
  5314  0077                     ?_MYI2C_ReadFaders:	
  5315                           ; 1 bytes @ 0x0
  5316                           
  5317  0077                     ?_PIN_MANAGER_Initialize:	
  5318                           ; 1 bytes @ 0x0
  5319                           
  5320  0077                     ?_SYSTEM_Initialize:	
  5321                           ; 1 bytes @ 0x0
  5322                           
  5323  0077                     ?_I2C1_ISR:	
  5324                           ; 1 bytes @ 0x0
  5325                           
  5326  0077                     ?_I2C1_BusCollisionISR:	
  5327                           ; 1 bytes @ 0x0
  5328                           
  5329  0077                     ??_I2C1_BusCollisionISR:	
  5330                           ; 1 bytes @ 0x0
  5331                           
  5332  0077                     ?_INTERRUPT_InterruptManager:	
  5333                           ; 1 bytes @ 0x0
  5334                           
  5335  0077                     ?_main:	
  5336                           ; 1 bytes @ 0x0
  5337                           
  5338  0077                     ?_LED7SegPinWrite:	
  5339                           ; 1 bytes @ 0x0
  5340                           
  5341  0077                     ?_LED7SegPulseClock:	
  5342                           ; 1 bytes @ 0x0
  5343                           
  5344  0077                     ?_LED7SegShiftOutPulseClock:	
  5345                           ; 1 bytes @ 0x0
  5346                           
  5347                           
  5348                           ; 1 bytes @ 0x0
  5349  0077                     	ds	1
  5350  0078                     I2C1_Stop@completion_code:	
  5351                           
  5352                           ; 1 bytes @ 0x1
  5353  0078                     	ds	1
  5354  0079                     ??_I2C1_ISR:	
  5355                           
  5356                           ; 1 bytes @ 0x2
  5357  0079                     	ds	4
  5358  007D                     ??_INTERRUPT_InterruptManager:	
  5359                           
  5360                           ; 1 bytes @ 0x6
  5361  007D                     	ds	1
  5362                           
  5363                           	psect	cstackBANK0
  5364  0020                     __pcstackBANK0:	
  5365  0020                     ??_OSCILLATOR_Initialize:	
  5366  0020                     ??_I2C1_Initialize:	
  5367                           ; 1 bytes @ 0x0
  5368                           
  5369  0020                     ??_ADCC_Initialize:	
  5370                           ; 1 bytes @ 0x0
  5371                           
  5372  0020                     ?_I2C1_MasterWriteTRBBuild:	
  5373                           ; 1 bytes @ 0x0
  5374                           
  5375  0020                     ?_I2C1_MasterTRBInsert:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378  0020                     ?_I2C1_MasterReadTRBBuild:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381  0020                     ??_LED7SegSetup:	
  5382                           ; 1 bytes @ 0x0
  5383                           
  5384  0020                     ??_PIN_MANAGER_Initialize:	
  5385                           ; 1 bytes @ 0x0
  5386                           
  5387  0020                     ??_LED7SegPinWrite:	
  5388                           ; 1 bytes @ 0x0
  5389                           
  5390  0020                     ?_marshallPatchMemory:	
  5391                           ; 1 bytes @ 0x0
  5392                           
  5393  0020                     ?_ADCC_GetSingleConversion:	
  5394                           ; 1 bytes @ 0x0
  5395                           
  5396  0020                     ?___wmul:	
  5397                           ; 2 bytes @ 0x0
  5398                           
  5399  0020                     ?___awdiv:	
  5400                           ; 2 bytes @ 0x0
  5401                           
  5402  0020                     ?___ftpack:	
  5403                           ; 2 bytes @ 0x0
  5404                           
  5405  0020                     PIN_MANAGER_Initialize@state:	
  5406                           ; 3 bytes @ 0x0
  5407                           
  5408  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  5409                           ; 1 bytes @ 0x0
  5410                           
  5411  0020                     I2C1_MasterReadTRBBuild@pdata:	
  5412                           ; 1 bytes @ 0x0
  5413                           
  5414  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  5415                           ; 1 bytes @ 0x0
  5416                           
  5417  0020                     LED7SegPinWrite@val:	
  5418                           ; 1 bytes @ 0x0
  5419                           
  5420  0020                     marshallPatchMemory@dualADSRdata0:	
  5421                           ; 1 bytes @ 0x0
  5422                           
  5423  0020                     ___wmul@multiplier:	
  5424                           ; 1 bytes @ 0x0
  5425                           
  5426  0020                     ___awdiv@divisor:	
  5427                           ; 2 bytes @ 0x0
  5428                           
  5429  0020                     ___ftpack@arg:	
  5430                           ; 2 bytes @ 0x0
  5431                           
  5432                           
  5433                           ; 3 bytes @ 0x0
  5434  0020                     	ds	1
  5435  0021                     ??_SYSTEM_Initialize:	
  5436  0021                     I2C1_MasterTRBInsert@pflag:	
  5437                           ; 1 bytes @ 0x1
  5438                           
  5439  0021                     I2C1_MasterReadTRBBuild@length:	
  5440                           ; 1 bytes @ 0x1
  5441                           
  5442  0021                     I2C1_MasterWriteTRBBuild@length:	
  5443                           ; 1 bytes @ 0x1
  5444                           
  5445  0021                     marshallPatchMemory@dualADSRdata1:	
  5446                           ; 1 bytes @ 0x1
  5447                           
  5448                           
  5449                           ; 1 bytes @ 0x1
  5450  0021                     	ds	1
  5451  0022                     ??_I2C1_MasterTRBInsert:	
  5452  0022                     ??_marshallPatchMemory:	
  5453                           ; 1 bytes @ 0x2
  5454                           
  5455  0022                     I2C1_MasterReadTRBBuild@address:	
  5456                           ; 1 bytes @ 0x2
  5457                           
  5458  0022                     I2C1_MasterWriteTRBBuild@address:	
  5459                           ; 2 bytes @ 0x2
  5460                           
  5461  0022                     ___wmul@multiplicand:	
  5462                           ; 2 bytes @ 0x2
  5463                           
  5464  0022                     ___awdiv@dividend:	
  5465                           ; 2 bytes @ 0x2
  5466                           
  5467                           
  5468                           ; 2 bytes @ 0x2
  5469  0022                     	ds	1
  5470  0023                     ??_ADCC_GetSingleConversion:	
  5471  0023                     ADCC_GetSingleConversion@channel:	
  5472                           ; 1 bytes @ 0x3
  5473                           
  5474  0023                     I2C1_MasterTRBInsert@count:	
  5475                           ; 1 bytes @ 0x3
  5476                           
  5477  0023                     ___ftpack@exp:	
  5478                           ; 1 bytes @ 0x3
  5479                           
  5480                           
  5481                           ; 1 bytes @ 0x3
  5482  0023                     	ds	1
  5483  0024                     ??_I2C1_MasterWriteTRBBuild:	
  5484  0024                     ??_I2C1_MasterReadTRBBuild:	
  5485                           ; 1 bytes @ 0x4
  5486                           
  5487  0024                     ??___wmul:	
  5488                           ; 1 bytes @ 0x4
  5489                           
  5490  0024                     ??___awdiv:	
  5491                           ; 1 bytes @ 0x4
  5492                           
  5493  0024                     ___ftpack@sign:	
  5494                           ; 1 bytes @ 0x4
  5495                           
  5496  0024                     ___wmul@product:	
  5497                           ; 1 bytes @ 0x4
  5498                           
  5499                           
  5500                           ; 2 bytes @ 0x4
  5501  0024                     	ds	1
  5502  0025                     ??___ftpack:	
  5503  0025                     ___awdiv@counter:	
  5504                           ; 1 bytes @ 0x5
  5505                           
  5506                           
  5507                           ; 1 bytes @ 0x5
  5508  0025                     	ds	1
  5509  0026                     ?_delay:	
  5510  0026                     I2C1_MasterReadTRBBuild@ptrb:	
  5511                           ; 1 bytes @ 0x6
  5512                           
  5513  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  5514                           ; 1 bytes @ 0x6
  5515                           
  5516  0026                     ___awdiv@sign:	
  5517                           ; 1 bytes @ 0x6
  5518                           
  5519  0026                     delay@delaytime:	
  5520                           ; 1 bytes @ 0x6
  5521                           
  5522                           
  5523                           ; 2 bytes @ 0x6
  5524  0026                     	ds	1
  5525  0027                     ??_MYI2C_ReadFaders:	
  5526  0027                     ?_I2C1_MasterWrite:	
  5527                           ; 1 bytes @ 0x7
  5528                           
  5529  0027                     I2C1_MasterWrite@length:	
  5530                           ; 1 bytes @ 0x7
  5531                           
  5532  0027                     ___awdiv@quotient:	
  5533                           ; 1 bytes @ 0x7
  5534                           
  5535                           
  5536                           ; 2 bytes @ 0x7
  5537  0027                     	ds	1
  5538  0028                     ??_delay:	
  5539  0028                     ?___awtoft:	
  5540                           ; 1 bytes @ 0x8
  5541                           
  5542  0028                     marshallPatchMemory@mvcChannels:	
  5543                           ; 3 bytes @ 0x8
  5544                           
  5545  0028                     I2C1_MasterWrite@address:	
  5546                           ; 1 bytes @ 0x8
  5547                           
  5548  0028                     ___awtoft@c:	
  5549                           ; 2 bytes @ 0x8
  5550                           
  5551                           
  5552                           ; 2 bytes @ 0x8
  5553  0028                     	ds	1
  5554  0029                     marshallPatchMemory@i:	
  5555  0029                     delay@adjustedDelaytime:	
  5556                           ; 2 bytes @ 0x9
  5557                           
  5558                           
  5559                           ; 4 bytes @ 0x9
  5560  0029                     	ds	1
  5561  002A                     I2C1_MasterWrite@pflag:	
  5562                           
  5563                           ; 1 bytes @ 0xA
  5564  002A                     	ds	1
  5565  002B                     ??_I2C1_MasterWrite:	
  5566  002B                     ??___awtoft:	
  5567                           ; 1 bytes @ 0xB
  5568                           
  5569  002B                     MYI2C_ReadFaders@dataAddress:	
  5570                           ; 1 bytes @ 0xB
  5571                           
  5572  002B                     marshallPatchMemory@i_1164:	
  5573                           ; 2 bytes @ 0xB
  5574                           
  5575                           
  5576                           ; 2 bytes @ 0xB
  5577  002B                     	ds	2
  5578  002D                     I2C1_MasterWrite@pdata:	
  5579  002D                     ___awtoft@sign:	
  5580                           ; 1 bytes @ 0xD
  5581                           
  5582  002D                     MYI2C_ReadFaders@timeOut:	
  5583                           ; 1 bytes @ 0xD
  5584                           
  5585  002D                     marshallPatchMemory@i_1165:	
  5586                           ; 2 bytes @ 0xD
  5587                           
  5588  002D                     delay@counter:	
  5589                           ; 2 bytes @ 0xD
  5590                           
  5591                           
  5592                           ; 4 bytes @ 0xD
  5593  002D                     	ds	1
  5594  002E                     ?_MYI2C_Write16EEPROMBytes:	
  5595  002E                     ?___ftdiv:	
  5596                           ; 1 bytes @ 0xE
  5597                           
  5598  002E                     ?___ftmul:	
  5599                           ; 3 bytes @ 0xE
  5600                           
  5601  002E                     MYI2C_Write16EEPROMBytes@writeAddress:	
  5602                           ; 3 bytes @ 0xE
  5603                           
  5604  002E                     ___ftdiv@f2:	
  5605                           ; 2 bytes @ 0xE
  5606                           
  5607  002E                     ___ftmul@f1:	
  5608                           ; 3 bytes @ 0xE
  5609                           
  5610                           
  5611                           ; 3 bytes @ 0xE
  5612  002E                     	ds	1
  5613  002F                     MYI2C_ReadFaders@slaveDeviceAddress:	
  5614  002F                     marshallPatchMemory@iPatchMemoryNDX:	
  5615                           ; 1 bytes @ 0xF
  5616                           
  5617                           
  5618                           ; 2 bytes @ 0xF
  5619  002F                     	ds	1
  5620  0030                     MYI2C_ReadFaders@pointerByte:	
  5621  0030                     MYI2C_Write16EEPROMBytes@pData:	
  5622                           ; 1 bytes @ 0x10
  5623                           
  5624                           
  5625                           ; 2 bytes @ 0x10
  5626  0030                     	ds	1
  5627  0031                     ?_blinkyLoop:	
  5628  0031                     ??_LED7SegPulseClock:	
  5629                           ; 1 bytes @ 0x11
  5630                           
  5631  0031                     ??_LED7SegShiftOutPulseClock:	
  5632                           ; 1 bytes @ 0x11
  5633                           
  5634  0031                     blinkyLoop@maxLoops:	
  5635                           ; 1 bytes @ 0x11
  5636                           
  5637  0031                     ___ftdiv@f1:	
  5638                           ; 2 bytes @ 0x11
  5639                           
  5640  0031                     ___ftmul@f2:	
  5641                           ; 3 bytes @ 0x11
  5642                           
  5643  0031                     MYI2C_ReadFaders@readTRB:	
  5644                           ; 3 bytes @ 0x11
  5645                           
  5646                           
  5647                           ; 8 bytes @ 0x11
  5648  0031                     	ds	1
  5649  0032                     ??_MYI2C_Write16EEPROMBytes:	
  5650  0032                     LED7SegShiftOutPulseClock@val:	
  5651                           ; 1 bytes @ 0x12
  5652                           
  5653                           
  5654                           ; 1 bytes @ 0x12
  5655  0032                     	ds	1
  5656  0033                     ??_blinkyLoop:	
  5657  0033                     LED7SegShiftOutPulseClock@i:	
  5658                           ; 1 bytes @ 0x13
  5659                           
  5660                           
  5661                           ; 1 bytes @ 0x13
  5662  0033                     	ds	1
  5663  0034                     ?_LED7SegDisplayValueByDigit:	
  5664  0034                     ??___ftdiv:	
  5665                           ; 1 bytes @ 0x14
  5666                           
  5667  0034                     ??___ftmul:	
  5668                           ; 1 bytes @ 0x14
  5669                           
  5670  0034                     blinkyLoop@delayTime:	
  5671                           ; 1 bytes @ 0x14
  5672                           
  5673  0034                     LED7SegDisplayValueByDigit@iTensDigit:	
  5674                           ; 2 bytes @ 0x14
  5675                           
  5676                           
  5677                           ; 2 bytes @ 0x14
  5678  0034                     	ds	2
  5679  0036                     blinkyLoop@loopCount:	
  5680  0036                     LED7SegDisplayValueByDigit@iUnitsDigit:	
  5681                           ; 2 bytes @ 0x16
  5682                           
  5683  0036                     MYI2C_Write16EEPROMBytes@writeBuffer:	
  5684                           ; 2 bytes @ 0x16
  5685                           
  5686                           
  5687                           ; 17 bytes @ 0x16
  5688  0036                     	ds	2
  5689  0038                     ??_LED7SegDisplayValueByDigit:	
  5690  0038                     ___ftdiv@cntr:	
  5691                           ; 1 bytes @ 0x18
  5692                           
  5693  0038                     ___ftmul@exp:	
  5694                           ; 1 bytes @ 0x18
  5695                           
  5696  0038                     LED7SegDisplayValueByDigit@iTensCode:	
  5697                           ; 1 bytes @ 0x18
  5698                           
  5699                           
  5700                           ; 2 bytes @ 0x18
  5701  0038                     	ds	1
  5702  0039                     MYI2C_ReadFaders@status:	
  5703  0039                     ___ftdiv@f3:	
  5704                           ; 1 bytes @ 0x19
  5705                           
  5706  0039                     ___ftmul@f3_as_product:	
  5707                           ; 3 bytes @ 0x19
  5708                           
  5709                           
  5710                           ; 3 bytes @ 0x19
  5711  0039                     	ds	3
  5712  003C                     ___ftdiv@exp:	
  5713  003C                     ___ftmul@cntr:	
  5714                           ; 1 bytes @ 0x1C
  5715                           
  5716                           
  5717                           ; 1 bytes @ 0x1C
  5718  003C                     	ds	1
  5719  003D                     ___ftdiv@sign:	
  5720  003D                     ___ftmul@sign:	
  5721                           ; 1 bytes @ 0x1D
  5722                           
  5723                           
  5724                           ; 1 bytes @ 0x1D
  5725  003D                     	ds	1
  5726  003E                     ?___fttol:	
  5727  003E                     ___fttol@f1:	
  5728                           ; 4 bytes @ 0x1E
  5729                           
  5730                           
  5731                           ; 3 bytes @ 0x1E
  5732  003E                     	ds	4
  5733  0042                     ??___fttol:	
  5734                           
  5735                           ; 1 bytes @ 0x22
  5736  0042                     	ds	4
  5737  0046                     ___fttol@sign1:	
  5738                           
  5739                           ; 1 bytes @ 0x26
  5740  0046                     	ds	1
  5741  0047                     MYI2C_Write16EEPROMBytes@dataAddress:	
  5742  0047                     ___fttol@lval:	
  5743                           ; 2 bytes @ 0x27
  5744                           
  5745                           
  5746                           ; 4 bytes @ 0x27
  5747  0047                     	ds	2
  5748  0049                     MYI2C_Write16EEPROMBytes@iPatchAddressLow:	
  5749                           
  5750                           ; 1 bytes @ 0x29
  5751  0049                     	ds	1
  5752  004A                     MYI2C_Write16EEPROMBytes@nCount:	
  5753                           
  5754                           ; 2 bytes @ 0x2A
  5755  004A                     	ds	1
  5756  004B                     ___fttol@exp1:	
  5757                           
  5758                           ; 1 bytes @ 0x2B
  5759  004B                     	ds	1
  5760  004C                     ?_putByte:	
  5761  004C                     putByte@clockPin:	
  5762                           ; 1 bytes @ 0x2C
  5763                           
  5764  004C                     MYI2C_Write16EEPROMBytes@timeOut:	
  5765                           ; 2 bytes @ 0x2C
  5766                           
  5767                           
  5768                           ; 2 bytes @ 0x2C
  5769  004C                     	ds	2
  5770  004E                     ??_putByte:	
  5771  004E                     MYI2C_Write16EEPROMBytes@pointerByte:	
  5772                           ; 1 bytes @ 0x2E
  5773                           
  5774                           
  5775                           ; 1 bytes @ 0x2E
  5776  004E                     	ds	1
  5777  004F                     MYI2C_Write16EEPROMBytes@slaveDeviceAddress:	
  5778                           
  5779                           ; 1 bytes @ 0x2F
  5780  004F                     	ds	1
  5781  0050                     MYI2C_Write16EEPROMBytes@iPatchAddressHigh:	
  5782                           
  5783                           ; 1 bytes @ 0x30
  5784  0050                     	ds	1
  5785  0051                     MYI2C_Write16EEPROMBytes@counter:	
  5786                           
  5787                           ; 2 bytes @ 0x31
  5788  0051                     	ds	1
  5789  0052                     putByte@data:	
  5790                           
  5791                           ; 1 bytes @ 0x32
  5792  0052                     	ds	1
  5793  0053                     putByte@mask:	
  5794  0053                     MYI2C_Write16EEPROMBytes@i:	
  5795                           ; 1 bytes @ 0x33
  5796                           
  5797                           
  5798                           ; 2 bytes @ 0x33
  5799  0053                     	ds	1
  5800  0054                     putByte@i:	
  5801                           
  5802                           ; 1 bytes @ 0x34
  5803  0054                     	ds	1
  5804  0055                     ??_initDAC528:	
  5805  0055                     ?_writeDAC528:	
  5806                           ; 1 bytes @ 0x35
  5807                           
  5808  0055                     MYI2C_Write16EEPROMBytes@status:	
  5809                           ; 1 bytes @ 0x35
  5810                           
  5811  0055                     writeDAC528@dacNumber:	
  5812                           ; 1 bytes @ 0x35
  5813                           
  5814                           
  5815                           ; 2 bytes @ 0x35
  5816  0055                     	ds	1
  5817  0056                     ?_savePatch:	
  5818  0056                     savePatch@PatchNumber:	
  5819                           ; 1 bytes @ 0x36
  5820                           
  5821                           
  5822                           ; 2 bytes @ 0x36
  5823  0056                     	ds	1
  5824  0057                     writeDAC528@dacData:	
  5825                           
  5826                           ; 1 bytes @ 0x37
  5827  0057                     	ds	1
  5828  0058                     ??_writeDAC528:	
  5829  0058                     ??_savePatch:	
  5830                           ; 1 bytes @ 0x38
  5831                           
  5832                           
  5833                           ; 1 bytes @ 0x38
  5834  0058                     	ds	1
  5835  0059                     writeDAC528@wkDacNumber:	
  5836                           
  5837                           ; 1 bytes @ 0x39
  5838  0059                     	ds	1
  5839  005A                     savePatch@iPatchAddressHigh:	
  5840                           
  5841                           ; 1 bytes @ 0x3A
  5842  005A                     	ds	1
  5843  005B                     savePatch@iPatchAddressLow:	
  5844                           
  5845                           ; 1 bytes @ 0x3B
  5846  005B                     	ds	1
  5847  005C                     savePatch@pData:	
  5848                           
  5849                           ; 2 bytes @ 0x3C
  5850  005C                     	ds	2
  5851  005E                     savePatch@idx:	
  5852                           
  5853                           ; 2 bytes @ 0x3E
  5854  005E                     	ds	2
  5855  0060                     savePatch@batchNum:	
  5856                           
  5857                           ; 2 bytes @ 0x40
  5858  0060                     	ds	2
  5859  0062                     savePatch@iPatchAddress:	
  5860                           
  5861                           ; 2 bytes @ 0x42
  5862  0062                     	ds	2
  5863  0064                     ??_main:	
  5864                           
  5865                           ; 1 bytes @ 0x44
  5866  0064                     	ds	4
  5867                           
  5868                           	psect	maintext
  5869  0063                     __pmaintext:	
  5870 ;;
  5871 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5872 ;;
  5873 ;; *************** function _main *****************
  5874 ;; Defined at:
  5875 ;;		line 217 in file "main.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  x               2   15[BANK1 ] int 
  5880 ;;  x               2   13[BANK1 ] int 
  5881 ;;  fx              2   22[BANK1 ] int 
  5882 ;;  fx              2   18[BANK1 ] int 
  5883 ;;  dFader8bitVa    3    0        int 
  5884 ;;  faderValue      2   20[BANK1 ] int 
  5885 ;;  SaveDebounce    2   10[BANK1 ] int 
  5886 ;;  LoadDebounce    2    8[BANK1 ] int 
  5887 ;;  iLoopCounter    2    4[BANK1 ] unsigned int 
  5888 ;;  iCounter        2    0[BANK1 ] unsigned int 
  5889 ;;  iLSByte         2    0        unsigned int 
  5890 ;;  iMSByte         2    0        unsigned int 
  5891 ;;  fader8bitVal    1   17[BANK1 ] unsigned char 
  5892 ;;  readStatus      1   12[BANK1 ] enum E14267
  5893 ;;  POT1Value       1    7[BANK1 ] unsigned char 
  5894 ;;  POT0Value       1    6[BANK1 ] unsigned char 
  5895 ;;  prevFader8bi    1    3[BANK1 ] unsigned char 
  5896 ;;  iChangeCount    1    2[BANK1 ] unsigned char 
  5897 ;;  DACDataValue    1    0        unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      void 
  5900 ;; Registers used:
  5901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : B1F/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Totals:         0       4      24       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;Total ram usage:       28 bytes
  5912 ;; Hardware stack levels required when called:    8
  5913 ;; This function calls:
  5914 ;;		_ADCC_GetSingleConversion
  5915 ;;		_LED7SegDisplayValueByDigit
  5916 ;;		_LED7SegSetup
  5917 ;;		_MYI2C_ReadFaders
  5918 ;;		_SYSTEM_Initialize
  5919 ;;		___awdiv
  5920 ;;		___awtoft
  5921 ;;		___ftdiv
  5922 ;;		___fttol
  5923 ;;		___wmul
  5924 ;;		_blinkyLoop
  5925 ;;		_delay
  5926 ;;		_initDAC528
  5927 ;;		_savePatch
  5928 ;;		_writeDAC528
  5929 ;; This function is called by:
  5930 ;;		Startup code after reset
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           
  5935                           ;psect for function _main
  5936  0063                     _main:	
  5937                           
  5938                           ;main.c: 219: uint16_t iCounter=0;
  5939                           
  5940                           ;incstack = 0
  5941                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5942  0063  0021               	movlb	1	; select bank1
  5943  0064  01D5               	clrf	main@iCounter^(0+128)
  5944  0065  01D6               	clrf	(main@iCounter+1)^(0+128)
  5945                           
  5946                           ;main.c: 220: uint16_t iMSByte;
  5947                           ;main.c: 221: uint16_t iLSByte;
  5948                           ;main.c: 222: const uint16_t iResetValue=100;
  5949                           ;main.c: 223: uint16_t iLoopCounter=0;
  5950  0066  01D9               	clrf	main@iLoopCounter^(0+128)
  5951  0067  01DA               	clrf	(main@iLoopCounter+1)^(0+128)
  5952                           
  5953                           ;main.c: 224: uint8_t iChangeCount=0;
  5954  0068  01D7               	clrf	main@iChangeCount^(0+128)
  5955                           
  5956                           ;main.c: 225: int faderValue;
  5957                           ;main.c: 226: uint8_t fader8bitValue;
  5958                           ;main.c: 227: uint8_t prevFader8bitValue;
  5959                           ;main.c: 228: uint8_t POT0Value;
  5960                           ;main.c: 229: uint8_t POT1Value;
  5961                           ;main.c: 230: uint8_t DACDataValue;
  5962                           ;main.c: 231: double dFader8bitValue;
  5963                           ;main.c: 232: int LoadDebounceCount=0;
  5964  0069  01DD               	clrf	main@LoadDebounceCount^(0+128)
  5965  006A  01DE               	clrf	(main@LoadDebounceCount+1)^(0+128)
  5966                           
  5967                           ;main.c: 233: int SaveDebounceCount=0;
  5968  006B  01DF               	clrf	main@SaveDebounceCount^(0+128)
  5969  006C  01E0               	clrf	(main@SaveDebounceCount+1)^(0+128)
  5970                           
  5971                           ;main.c: 235: I2C1_MESSAGE_STATUS readStatus=0;
  5972  006D  01E1               	clrf	main@readStatus^(0+128)
  5973                           
  5974                           ;main.c: 238: SYSTEM_Initialize();
  5975  006E  318A  225D  3180   	fcall	_SYSTEM_Initialize
  5976                           
  5977                           ;main.c: 239: initDAC528();
  5978  0071  318A  22B4  3180   	fcall	_initDAC528
  5979                           
  5980                           ;main.c: 240: LED7SegSetup();
  5981  0074  318A  2281  3180   	fcall	_LED7SegSetup
  5982                           
  5983                           ;main.c: 245: (INTCONbits.GIE = 1);
  5984  0077  178B               	bsf	11,7	;volatile
  5985                           
  5986                           ;main.c: 248: (INTCONbits.PEIE = 1);
  5987  0078  170B               	bsf	11,6	;volatile
  5988                           
  5989                           ;main.c: 257: for(int fx=0;fx<4;fx++){
  5990  0079  0021               	movlb	1	; select bank1
  5991  007A  01E7               	clrf	main@fx^(0+128)
  5992  007B  01E8               	clrf	(main@fx+1)^(0+128)
  5993  007C  0868               	movf	(main@fx+1)^(0+128),w
  5994  007D  3A80               	xorlw	128
  5995  007E  0020               	movlb	0	; select bank0
  5996  007F  00E4               	movwf	??_main
  5997  0080  3080               	movlw	128
  5998  0081  0264               	subwf	??_main,w
  5999  0082  1D03               	skipz
  6000  0083  2887               	goto	u4305
  6001  0084  3004               	movlw	4
  6002  0085  0021               	movlb	1	; select bank1
  6003  0086  0267               	subwf	main@fx^(0+128),w
  6004  0087                     u4305:	
  6005  0087  1803               	btfsc	3,0
  6006  0088  28D2               	goto	l4473
  6007  0089                     l4463:	
  6008                           
  6009                           ;main.c: 258: faderValue=ADCC_GetSingleConversion(fx);
  6010  0089  0021               	movlb	1	; select bank1
  6011  008A  0867               	movf	main@fx^(0+128),w
  6012  008B  318A  22A0  3180   	fcall	_ADCC_GetSingleConversion
  6013  008E  0020               	movlb	0	; select bank0
  6014  008F  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6015  0090  0021               	movlb	1	; select bank1
  6016  0091  00EA               	movwf	(main@faderValue+1)^(0+128)
  6017  0092  0020               	movlb	0	; select bank0
  6018  0093  0820               	movf	?_ADCC_GetSingleConversion,w
  6019  0094  0021               	movlb	1	; select bank1
  6020  0095  00E9               	movwf	main@faderValue^(0+128)
  6021                           
  6022                           ;main.c: 259: byteMixFaderValue[fx]=255-(faderValue>>2);
  6023  0096  086A               	movf	(main@faderValue+1)^(0+128),w
  6024  0097  0020               	movlb	0	; select bank0
  6025  0098  00E5               	movwf	??_main+1
  6026  0099  0021               	movlb	1	; select bank1
  6027  009A  0869               	movf	main@faderValue^(0+128),w
  6028  009B  0020               	movlb	0	; select bank0
  6029  009C  00E4               	movwf	??_main
  6030  009D  0D65               	rlf	??_main+1,w
  6031  009E  0CE5               	rrf	??_main+1,f
  6032  009F  0CE4               	rrf	??_main,f
  6033  00A0  0D65               	rlf	??_main+1,w
  6034  00A1  0CE5               	rrf	??_main+1,f
  6035  00A2  0CE4               	rrf	??_main,f
  6036  00A3  0864               	movf	??_main,w
  6037  00A4  3AFF               	xorlw	255
  6038  00A5  3E01               	addlw	1
  6039  00A6  3EFF               	addlw	255
  6040  00A7  00E6               	movwf	??_main+2
  6041  00A8  0021               	movlb	1	; select bank1
  6042  00A9  0867               	movf	main@fx^(0+128),w
  6043  00AA  3EA4               	addlw	(low (_byteMixFaderValue| 0))& (0+255)
  6044  00AB  0086               	movwf	6
  6045  00AC  0187               	clrf	7
  6046  00AD  0020               	movlb	0	; select bank0
  6047  00AE  0866               	movf	??_main+2,w
  6048  00AF  0081               	movwf	1
  6049                           
  6050                           ;main.c: 260: prevByteMixFaderValue[fx]= byteMixFaderValue[fx];
  6051  00B0  0021               	movlb	1	; select bank1
  6052  00B1  0867               	movf	main@fx^(0+128),w
  6053  00B2  3EA4               	addlw	(low (_byteMixFaderValue| 0))& (0+255)
  6054  00B3  0086               	movwf	6
  6055  00B4  0187               	clrf	7
  6056  00B5  0801               	movf	1,w
  6057  00B6  0020               	movlb	0	; select bank0
  6058  00B7  00E4               	movwf	??_main
  6059  00B8  0021               	movlb	1	; select bank1
  6060  00B9  0867               	movf	main@fx^(0+128),w
  6061  00BA  3EA0               	addlw	(low (_prevByteMixFaderValue| 0))& (0+255)
  6062  00BB  0086               	movwf	6
  6063  00BC  0187               	clrf	7
  6064  00BD  0020               	movlb	0	; select bank0
  6065  00BE  0864               	movf	??_main,w
  6066  00BF  0081               	movwf	1
  6067  00C0  3001               	movlw	1
  6068  00C1  0021               	movlb	1	; select bank1
  6069  00C2  07E7               	addwf	main@fx^(0+128),f
  6070  00C3  3000               	movlw	0
  6071  00C4  3DE8               	addwfc	(main@fx+1)^(0+128),f
  6072  00C5  0868               	movf	(main@fx+1)^(0+128),w
  6073  00C6  3A80               	xorlw	128
  6074  00C7  0020               	movlb	0	; select bank0
  6075  00C8  00E4               	movwf	??_main
  6076  00C9  3080               	movlw	128
  6077  00CA  0264               	subwf	??_main,w
  6078  00CB  1D03               	skipz
  6079  00CC  28D0               	goto	u4315
  6080  00CD  3004               	movlw	4
  6081  00CE  0021               	movlb	1	; select bank1
  6082  00CF  0267               	subwf	main@fx^(0+128),w
  6083  00D0                     u4315:	
  6084  00D0  1C03               	skipc
  6085  00D1  2889               	goto	l4463
  6086  00D2                     l4473:	
  6087                           
  6088                           ;main.c: 261: }
  6089                           ;main.c: 262: blinkyLoop(10);
  6090  00D2  300A               	movlw	10
  6091  00D3  0020               	movlb	0	; select bank0
  6092  00D4  00B1               	movwf	blinkyLoop@maxLoops
  6093  00D5  3000               	movlw	0
  6094  00D6  00B2               	movwf	blinkyLoop@maxLoops+1
  6095  00D7  318D  258A  3180   	fcall	_blinkyLoop
  6096                           
  6097                           ;main.c: 267: PORTB |= 0x0F;
  6098  00DA  300F               	movlw	15
  6099  00DB  0020               	movlb	0	; select bank0
  6100  00DC  00E4               	movwf	??_main
  6101  00DD  0864               	movf	??_main,w
  6102  00DE  048D               	iorwf	13,f	;volatile
  6103                           
  6104                           ;main.c: 268: PORTC |= 0xE0;
  6105  00DF  30E0               	movlw	224
  6106  00E0  00E4               	movwf	??_main
  6107  00E1  0864               	movf	??_main,w
  6108  00E2  048E               	iorwf	14,f	;volatile
  6109                           
  6110                           ;main.c: 269: ODCONB &= 0xF0;
  6111  00E3  30F0               	movlw	240
  6112  00E4  00E4               	movwf	??_main
  6113  00E5  0864               	movf	??_main,w
  6114  00E6  003E               	movlb	30	; select bank30
  6115  00E7  05C5               	andwf	69,f	;volatile
  6116                           
  6117                           ;main.c: 270: ODCONC &= 0x1F;
  6118  00E8  301F               	movlw	31
  6119  00E9  0020               	movlb	0	; select bank0
  6120  00EA  00E4               	movwf	??_main
  6121  00EB  0864               	movf	??_main,w
  6122  00EC  003E               	movlb	30	; select bank30
  6123  00ED  05D0               	andwf	80,f	;volatile
  6124  00EE                     l4483:	
  6125                           ;main.c: 272: while (1) {
  6126                           
  6127                           
  6128                           ;main.c: 273: iLoopCounter++;
  6129  00EE  3001               	movlw	1
  6130  00EF  0021               	movlb	1	; select bank1
  6131  00F0  07D9               	addwf	main@iLoopCounter^(0+128),f
  6132  00F1  3000               	movlw	0
  6133  00F2  3DDA               	addwfc	(main@iLoopCounter+1)^(0+128),f
  6134                           
  6135                           ;main.c: 274: if (iResetValue<=iLoopCounter) iLoopCounter=0;
  6136  00F3  302C               	movlw	low (main@iResetValue| (0+32768))
  6137  00F4  0084               	movwf	4
  6138  00F5  3090               	movlw	high (main@iResetValue| (0+32768))
  6139  00F6  0085               	movwf	5
  6140  00F7  3F00               	moviw [0]fsr0
  6141  00F8  0020               	movlb	0	; select bank0
  6142  00F9  00E4               	movwf	??_main
  6143  00FA  3F01               	moviw [1]fsr0
  6144  00FB  00E5               	movwf	??_main+1
  6145  00FC  0865               	movf	??_main+1,w
  6146  00FD  0021               	movlb	1	; select bank1
  6147  00FE  025A               	subwf	(main@iLoopCounter+1)^(0+128),w
  6148  00FF  1D03               	skipz
  6149  0100  2905               	goto	u4325
  6150  0101  0020               	movlb	0	; select bank0
  6151  0102  0864               	movf	??_main,w
  6152  0103  0021               	movlb	1	; select bank1
  6153  0104  0259               	subwf	main@iLoopCounter^(0+128),w
  6154  0105                     u4325:	
  6155  0105  1C03               	skipc
  6156  0106  2909               	goto	l505
  6157  0107  01D9               	clrf	main@iLoopCounter^(0+128)
  6158  0108  01DA               	clrf	(main@iLoopCounter+1)^(0+128)
  6159  0109                     l505:	
  6160                           
  6161                           ;main.c: 277: {
  6162                           ;main.c: 279: for(int fx=0;fx<cMixFaderCount;fx++){
  6163  0109  01EB               	clrf	main@fx_935^(0+128)
  6164  010A  01EC               	clrf	(main@fx_935+1)^(0+128)
  6165  010B  086C               	movf	(main@fx_935+1)^(0+128),w
  6166  010C  3A80               	xorlw	128
  6167  010D  0020               	movlb	0	; select bank0
  6168  010E  00E4               	movwf	??_main
  6169  010F  3080               	movlw	128
  6170  0110  0264               	subwf	??_main,w
  6171  0111  1D03               	skipz
  6172  0112  2916               	goto	u4335
  6173  0113  3004               	movlw	4
  6174  0114  0021               	movlb	1	; select bank1
  6175  0115  026B               	subwf	main@fx_935^(0+128),w
  6176  0116                     u4335:	
  6177  0116  1803               	btfsc	3,0
  6178  0117  2996               	goto	l4509
  6179  0118                     l4493:	
  6180                           
  6181                           ;main.c: 280: faderValue=ADCC_GetSingleConversion(fx);
  6182  0118  0021               	movlb	1	; select bank1
  6183  0119  086B               	movf	main@fx_935^(0+128),w
  6184  011A  318A  22A0  3180   	fcall	_ADCC_GetSingleConversion
  6185  011D  0020               	movlb	0	; select bank0
  6186  011E  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6187  011F  0021               	movlb	1	; select bank1
  6188  0120  00EA               	movwf	(main@faderValue+1)^(0+128)
  6189  0121  0020               	movlb	0	; select bank0
  6190  0122  0820               	movf	?_ADCC_GetSingleConversion,w
  6191  0123  0021               	movlb	1	; select bank1
  6192  0124  00E9               	movwf	main@faderValue^(0+128)
  6193                           
  6194                           ;main.c: 281: byteMixFaderValue[fx]=255-(faderValue>>2);
  6195  0125  086A               	movf	(main@faderValue+1)^(0+128),w
  6196  0126  0020               	movlb	0	; select bank0
  6197  0127  00E5               	movwf	??_main+1
  6198  0128  0021               	movlb	1	; select bank1
  6199  0129  0869               	movf	main@faderValue^(0+128),w
  6200  012A  0020               	movlb	0	; select bank0
  6201  012B  00E4               	movwf	??_main
  6202  012C  0D65               	rlf	??_main+1,w
  6203  012D  0CE5               	rrf	??_main+1,f
  6204  012E  0CE4               	rrf	??_main,f
  6205  012F  0D65               	rlf	??_main+1,w
  6206  0130  0CE5               	rrf	??_main+1,f
  6207  0131  0CE4               	rrf	??_main,f
  6208  0132  0864               	movf	??_main,w
  6209  0133  3AFF               	xorlw	255
  6210  0134  3E01               	addlw	1
  6211  0135  3EFF               	addlw	255
  6212  0136  00E6               	movwf	??_main+2
  6213  0137  0021               	movlb	1	; select bank1
  6214  0138  086B               	movf	main@fx_935^(0+128),w
  6215  0139  3EA4               	addlw	(low (_byteMixFaderValue| 0))& (0+255)
  6216  013A  0086               	movwf	6
  6217  013B  0187               	clrf	7
  6218  013C  0020               	movlb	0	; select bank0
  6219  013D  0866               	movf	??_main+2,w
  6220  013E  0081               	movwf	1
  6221                           
  6222                           ;main.c: 282: fader8bitValue=(byteMixFaderValue[fx]+prevByteMixFaderValue[fx])/2;
  6223  013F  3002               	movlw	2
  6224  0140  00A0               	movwf	___awdiv@divisor
  6225  0141  3000               	movlw	0
  6226  0142  00A1               	movwf	___awdiv@divisor+1
  6227  0143  0021               	movlb	1	; select bank1
  6228  0144  086B               	movf	main@fx_935^(0+128),w
  6229  0145  3EA0               	addlw	(low (_prevByteMixFaderValue| 0))& (0+255)
  6230  0146  0086               	movwf	6
  6231  0147  0187               	clrf	7
  6232  0148  086B               	movf	main@fx_935^(0+128),w
  6233  0149  3EA4               	addlw	(low (_byteMixFaderValue| 0))& (0+255)
  6234  014A  0084               	movwf	4
  6235  014B  0185               	clrf	5
  6236  014C  0800               	movf	0,w
  6237  014D  0701               	addwf	1,w
  6238  014E  0020               	movlb	0	; select bank0
  6239  014F  00A2               	movwf	___awdiv@dividend
  6240  0150  01A3               	clrf	___awdiv@dividend+1
  6241  0151  0DA3               	rlf	___awdiv@dividend+1,f
  6242  0152  318C  24E5  3180   	fcall	___awdiv
  6243  0155  0020               	movlb	0	; select bank0
  6244  0156  0820               	movf	?___awdiv,w
  6245  0157  00E4               	movwf	??_main
  6246  0158  0864               	movf	??_main,w
  6247  0159  0021               	movlb	1	; select bank1
  6248  015A  00E6               	movwf	main@fader8bitValue^(0+128)
  6249                           
  6250                           ;main.c: 283: writeDAC528(fx+4,fader8bitValue);
  6251  015B  086B               	movf	main@fx_935^(0+128),w
  6252  015C  3E04               	addlw	4
  6253  015D  0020               	movlb	0	; select bank0
  6254  015E  00D5               	movwf	writeDAC528@dacNumber
  6255  015F  3000               	movlw	0
  6256  0160  0021               	movlb	1	; select bank1
  6257  0161  3D6C               	addwfc	(main@fx_935+1)^(0+128),w
  6258  0162  0020               	movlb	0	; select bank0
  6259  0163  00D6               	movwf	writeDAC528@dacNumber+1
  6260  0164  0021               	movlb	1	; select bank1
  6261  0165  0866               	movf	main@fader8bitValue^(0+128),w
  6262  0166  0020               	movlb	0	; select bank0
  6263  0167  00E4               	movwf	??_main
  6264  0168  0864               	movf	??_main,w
  6265  0169  00D7               	movwf	writeDAC528@dacData
  6266  016A  318B  23B2  3180   	fcall	_writeDAC528
  6267                           
  6268                           ;main.c: 284: prevByteMixFaderValue[fx]= byteMixFaderValue[fx];
  6269  016D  0021               	movlb	1	; select bank1
  6270  016E  086B               	movf	main@fx_935^(0+128),w
  6271  016F  3EA4               	addlw	(low (_byteMixFaderValue| 0))& (0+255)
  6272  0170  0086               	movwf	6
  6273  0171  0187               	clrf	7
  6274  0172  0801               	movf	1,w
  6275  0173  0020               	movlb	0	; select bank0
  6276  0174  00E4               	movwf	??_main
  6277  0175  0021               	movlb	1	; select bank1
  6278  0176  086B               	movf	main@fx_935^(0+128),w
  6279  0177  3EA0               	addlw	(low (_prevByteMixFaderValue| 0))& (0+255)
  6280  0178  0086               	movwf	6
  6281  0179  0187               	clrf	7
  6282  017A  0020               	movlb	0	; select bank0
  6283  017B  0864               	movf	??_main,w
  6284  017C  0081               	movwf	1
  6285                           
  6286                           ;main.c: 285: delay(10);
  6287  017D  300A               	movlw	10
  6288  017E  00A6               	movwf	delay@delaytime
  6289  017F  3000               	movlw	0
  6290  0180  00A7               	movwf	delay@delaytime+1
  6291  0181  318D  2537  3180   	fcall	_delay
  6292  0184  3001               	movlw	1
  6293  0185  0021               	movlb	1	; select bank1
  6294  0186  07EB               	addwf	main@fx_935^(0+128),f
  6295  0187  3000               	movlw	0
  6296  0188  3DEC               	addwfc	(main@fx_935+1)^(0+128),f
  6297  0189  086C               	movf	(main@fx_935+1)^(0+128),w
  6298  018A  3A80               	xorlw	128
  6299  018B  0020               	movlb	0	; select bank0
  6300  018C  00E4               	movwf	??_main
  6301  018D  3080               	movlw	128
  6302  018E  0264               	subwf	??_main,w
  6303  018F  1D03               	skipz
  6304  0190  2994               	goto	u4345
  6305  0191  3004               	movlw	4
  6306  0192  0021               	movlb	1	; select bank1
  6307  0193  026B               	subwf	main@fx_935^(0+128),w
  6308  0194                     u4345:	
  6309  0194  1C03               	skipc
  6310  0195  2918               	goto	l4493
  6311  0196                     l4509:	
  6312                           
  6313                           ;main.c: 286: }
  6314                           ;main.c: 289: delay(10);
  6315  0196  300A               	movlw	10
  6316  0197  0020               	movlb	0	; select bank0
  6317  0198  00A6               	movwf	delay@delaytime
  6318  0199  3000               	movlw	0
  6319  019A  00A7               	movwf	delay@delaytime+1
  6320  019B  318D  2537  3180   	fcall	_delay
  6321                           
  6322                           ;main.c: 290: faderValue=ADCC_GetSingleConversion(POT0);
  6323  019E  3004               	movlw	4
  6324  019F  318A  22A0  3180   	fcall	_ADCC_GetSingleConversion
  6325  01A2  0020               	movlb	0	; select bank0
  6326  01A3  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6327  01A4  0021               	movlb	1	; select bank1
  6328  01A5  00EA               	movwf	(main@faderValue+1)^(0+128)
  6329  01A6  0020               	movlb	0	; select bank0
  6330  01A7  0820               	movf	?_ADCC_GetSingleConversion,w
  6331  01A8  0021               	movlb	1	; select bank1
  6332  01A9  00E9               	movwf	main@faderValue^(0+128)
  6333                           
  6334                           ;main.c: 291: faderValue=1023-faderValue;
  6335  01AA  0969               	comf	main@faderValue^(0+128),w
  6336  01AB  0020               	movlb	0	; select bank0
  6337  01AC  00E4               	movwf	??_main
  6338  01AD  0021               	movlb	1	; select bank1
  6339  01AE  096A               	comf	(main@faderValue+1)^(0+128),w
  6340  01AF  0020               	movlb	0	; select bank0
  6341  01B0  00E5               	movwf	??_main+1
  6342  01B1  0AE4               	incf	??_main,f
  6343  01B2  1903               	skipnz
  6344  01B3  0AE5               	incf	??_main+1,f
  6345  01B4  0864               	movf	??_main,w
  6346  01B5  3EFF               	addlw	255
  6347  01B6  0021               	movlb	1	; select bank1
  6348  01B7  00E9               	movwf	main@faderValue^(0+128)
  6349  01B8  3003               	movlw	3
  6350  01B9  0020               	movlb	0	; select bank0
  6351  01BA  3D65               	addwfc	??_main+1,w
  6352  01BB  0021               	movlb	1	; select bank1
  6353  01BC  00EA               	movwf	(main@faderValue+1)^(0+128)
  6354                           
  6355                           ;main.c: 293: POT0Value=faderValue/102.3;
  6356  01BD  086A               	movf	(main@faderValue+1)^(0+128),w
  6357  01BE  0020               	movlb	0	; select bank0
  6358  01BF  00A9               	movwf	___awtoft@c+1
  6359  01C0  0021               	movlb	1	; select bank1
  6360  01C1  0869               	movf	main@faderValue^(0+128),w
  6361  01C2  0020               	movlb	0	; select bank0
  6362  01C3  00A8               	movwf	___awtoft@c
  6363  01C4  318B  236C  3180   	fcall	___awtoft
  6364  01C7  0020               	movlb	0	; select bank0
  6365  01C8  0828               	movf	?___awtoft,w
  6366  01C9  00B1               	movwf	___ftdiv@f1
  6367  01CA  0829               	movf	?___awtoft+1,w
  6368  01CB  00B2               	movwf	___ftdiv@f1+1
  6369  01CC  082A               	movf	?___awtoft+2,w
  6370  01CD  00B3               	movwf	___ftdiv@f1+2
  6371  01CE  309A               	movlw	154
  6372  01CF  00AE               	movwf	___ftdiv@f2
  6373  01D0  30CC               	movlw	204
  6374  01D1  00AF               	movwf	___ftdiv@f2+1
  6375  01D2  3042               	movlw	66
  6376  01D3  00B0               	movwf	___ftdiv@f2+2
  6377  01D4  318F  2757  3180   	fcall	___ftdiv
  6378  01D7  0020               	movlb	0	; select bank0
  6379  01D8  082E               	movf	?___ftdiv,w
  6380  01D9  00BE               	movwf	___fttol@f1
  6381  01DA  082F               	movf	?___ftdiv+1,w
  6382  01DB  00BF               	movwf	___fttol@f1+1
  6383  01DC  0830               	movf	?___ftdiv+2,w
  6384  01DD  00C0               	movwf	___fttol@f1+2
  6385  01DE  318E  2645  3180   	fcall	___fttol
  6386  01E1  0020               	movlb	0	; select bank0
  6387  01E2  083E               	movf	?___fttol,w
  6388  01E3  00E4               	movwf	??_main
  6389  01E4  0864               	movf	??_main,w
  6390  01E5  0021               	movlb	1	; select bank1
  6391  01E6  00DB               	movwf	main@POT0Value^(0+128)
  6392                           
  6393                           ;main.c: 294: delay(10);
  6394  01E7  300A               	movlw	10
  6395  01E8  0020               	movlb	0	; select bank0
  6396  01E9  00A6               	movwf	delay@delaytime
  6397  01EA  3000               	movlw	0
  6398  01EB  00A7               	movwf	delay@delaytime+1
  6399  01EC  318D  2537  3180   	fcall	_delay
  6400                           
  6401                           ;main.c: 295: faderValue=ADCC_GetSingleConversion(POT1);
  6402  01EF  3005               	movlw	5
  6403  01F0  318A  22A0  3180   	fcall	_ADCC_GetSingleConversion
  6404  01F3  0020               	movlb	0	; select bank0
  6405  01F4  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6406  01F5  0021               	movlb	1	; select bank1
  6407  01F6  00EA               	movwf	(main@faderValue+1)^(0+128)
  6408  01F7  0020               	movlb	0	; select bank0
  6409  01F8  0820               	movf	?_ADCC_GetSingleConversion,w
  6410  01F9  0021               	movlb	1	; select bank1
  6411  01FA  00E9               	movwf	main@faderValue^(0+128)
  6412                           
  6413                           ;main.c: 296: faderValue=1023-faderValue;
  6414  01FB  0969               	comf	main@faderValue^(0+128),w
  6415  01FC  0020               	movlb	0	; select bank0
  6416  01FD  00E4               	movwf	??_main
  6417  01FE  0021               	movlb	1	; select bank1
  6418  01FF  096A               	comf	(main@faderValue+1)^(0+128),w
  6419  0200  0020               	movlb	0	; select bank0
  6420  0201  00E5               	movwf	??_main+1
  6421  0202  0AE4               	incf	??_main,f
  6422  0203  1903               	skipnz
  6423  0204  0AE5               	incf	??_main+1,f
  6424  0205  0864               	movf	??_main,w
  6425  0206  3EFF               	addlw	255
  6426  0207  0021               	movlb	1	; select bank1
  6427  0208  00E9               	movwf	main@faderValue^(0+128)
  6428  0209  3003               	movlw	3
  6429  020A  0020               	movlb	0	; select bank0
  6430  020B  3D65               	addwfc	??_main+1,w
  6431  020C  0021               	movlb	1	; select bank1
  6432  020D  00EA               	movwf	(main@faderValue+1)^(0+128)
  6433                           
  6434                           ;main.c: 297: POT1Value=faderValue/102.3;
  6435  020E  086A               	movf	(main@faderValue+1)^(0+128),w
  6436  020F  0020               	movlb	0	; select bank0
  6437  0210  00A9               	movwf	___awtoft@c+1
  6438  0211  0021               	movlb	1	; select bank1
  6439  0212  0869               	movf	main@faderValue^(0+128),w
  6440  0213  0020               	movlb	0	; select bank0
  6441  0214  00A8               	movwf	___awtoft@c
  6442  0215  318B  236C  3180   	fcall	___awtoft
  6443  0218  0020               	movlb	0	; select bank0
  6444  0219  0828               	movf	?___awtoft,w
  6445  021A  00B1               	movwf	___ftdiv@f1
  6446  021B  0829               	movf	?___awtoft+1,w
  6447  021C  00B2               	movwf	___ftdiv@f1+1
  6448  021D  082A               	movf	?___awtoft+2,w
  6449  021E  00B3               	movwf	___ftdiv@f1+2
  6450  021F  309A               	movlw	154
  6451  0220  00AE               	movwf	___ftdiv@f2
  6452  0221  30CC               	movlw	204
  6453  0222  00AF               	movwf	___ftdiv@f2+1
  6454  0223  3042               	movlw	66
  6455  0224  00B0               	movwf	___ftdiv@f2+2
  6456  0225  318F  2757  3180   	fcall	___ftdiv
  6457  0228  0020               	movlb	0	; select bank0
  6458  0229  082E               	movf	?___ftdiv,w
  6459  022A  00BE               	movwf	___fttol@f1
  6460  022B  082F               	movf	?___ftdiv+1,w
  6461  022C  00BF               	movwf	___fttol@f1+1
  6462  022D  0830               	movf	?___ftdiv+2,w
  6463  022E  00C0               	movwf	___fttol@f1+2
  6464  022F  318E  2645  3180   	fcall	___fttol
  6465  0232  0020               	movlb	0	; select bank0
  6466  0233  083E               	movf	?___fttol,w
  6467  0234  00E4               	movwf	??_main
  6468  0235  0864               	movf	??_main,w
  6469  0236  0021               	movlb	1	; select bank1
  6470  0237  00DC               	movwf	main@POT1Value^(0+128)
  6471                           
  6472                           ;main.c: 298: }
  6473                           ;main.c: 361: if (prevFader8bitValue!=fader8bitValue) {
  6474  0238  0858               	movf	main@prevFader8bitValue^(0+128),w
  6475  0239  0666               	xorwf	main@fader8bitValue^(0+128),w
  6476  023A  1903               	skipnz
  6477  023B  2A42               	goto	l4527
  6478                           
  6479                           ;main.c: 362: iChangeCount++;
  6480  023C  3001               	movlw	1
  6481  023D  0020               	movlb	0	; select bank0
  6482  023E  00E4               	movwf	??_main
  6483  023F  0864               	movf	??_main,w
  6484  0240  0021               	movlb	1	; select bank1
  6485  0241  07D7               	addwf	main@iChangeCount^(0+128),f
  6486  0242                     l4527:	
  6487                           
  6488                           ;main.c: 364: }
  6489                           ;main.c: 365: prevFader8bitValue=fader8bitValue;
  6490  0242  0866               	movf	main@fader8bitValue^(0+128),w
  6491  0243  0020               	movlb	0	; select bank0
  6492  0244  00E4               	movwf	??_main
  6493  0245  0864               	movf	??_main,w
  6494  0246  0021               	movlb	1	; select bank1
  6495  0247  00D8               	movwf	main@prevFader8bitValue^(0+128)
  6496                           
  6497                           ;main.c: 368: iCounter++;
  6498  0248  3001               	movlw	1
  6499  0249  07D5               	addwf	main@iCounter^(0+128),f
  6500  024A  3000               	movlw	0
  6501  024B  3DD6               	addwfc	(main@iCounter+1)^(0+128),f
  6502                           
  6503                           ;main.c: 369: if (fader8bitValue<252)
  6504  024C  30FC               	movlw	252
  6505  024D  0266               	subwf	main@fader8bitValue^(0+128),w
  6506  024E  1803               	skipnc
  6507  024F  2A62               	goto	l4535
  6508                           
  6509                           ;main.c: 370: delay(1*(255-fader8bitValue));
  6510  0250  0866               	movf	main@fader8bitValue^(0+128),w
  6511  0251  0020               	movlb	0	; select bank0
  6512  0252  00E4               	movwf	??_main
  6513  0253  01E5               	clrf	??_main+1
  6514  0254  09E4               	comf	??_main,f
  6515  0255  09E5               	comf	??_main+1,f
  6516  0256  0AE4               	incf	??_main,f
  6517  0257  1903               	skipnz
  6518  0258  0AE5               	incf	??_main+1,f
  6519  0259  0864               	movf	??_main,w
  6520  025A  3EFF               	addlw	255
  6521  025B  00A6               	movwf	delay@delaytime
  6522  025C  3000               	movlw	0
  6523  025D  3D65               	addwfc	??_main+1,w
  6524  025E  00A7               	movwf	delay@delaytime+1
  6525  025F  318D  2537  3180   	fcall	_delay
  6526  0262                     l4535:	
  6527                           
  6528                           ;main.c: 376: mvcPatchNumber=(POT1Value*10)+POT0Value;
  6529  0262  0021               	movlb	1	; select bank1
  6530  0263  085B               	movf	main@POT0Value^(0+128),w
  6531  0264  0020               	movlb	0	; select bank0
  6532  0265  00E4               	movwf	??_main
  6533  0266  01E5               	clrf	??_main+1
  6534  0267  0021               	movlb	1	; select bank1
  6535  0268  085C               	movf	main@POT1Value^(0+128),w
  6536  0269  0020               	movlb	0	; select bank0
  6537  026A  00E6               	movwf	??_main+2
  6538  026B  01E7               	clrf	??_main+3
  6539  026C  0866               	movf	??_main+2,w
  6540  026D  00A0               	movwf	___wmul@multiplier
  6541  026E  0867               	movf	??_main+3,w
  6542  026F  00A1               	movwf	___wmul@multiplier+1
  6543  0270  300A               	movlw	10
  6544  0271  00A2               	movwf	___wmul@multiplicand
  6545  0272  3000               	movlw	0
  6546  0273  00A3               	movwf	___wmul@multiplicand+1
  6547  0274  318B  2314  3180   	fcall	___wmul
  6548  0277  0020               	movlb	0	; select bank0
  6549  0278  0864               	movf	??_main,w
  6550  0279  0720               	addwf	?___wmul,w
  6551  027A  0021               	movlb	1	; select bank1
  6552  027B  00B5               	movwf	_mvcPatchNumber^(0+128)
  6553  027C  0020               	movlb	0	; select bank0
  6554  027D  0865               	movf	??_main+1,w
  6555  027E  3D21               	addwfc	?___wmul+1,w
  6556  027F  0021               	movlb	1	; select bank1
  6557  0280  00B6               	movwf	(_mvcPatchNumber+1)^(0+128)
  6558                           
  6559                           ;main.c: 377: LED7SegDisplayValueByDigit(POT1Value,POT0Value);
  6560  0281  085C               	movf	main@POT1Value^(0+128),w
  6561  0282  0020               	movlb	0	; select bank0
  6562  0283  00E4               	movwf	??_main
  6563  0284  01E5               	clrf	??_main+1
  6564  0285  0864               	movf	??_main,w
  6565  0286  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  6566  0287  0865               	movf	??_main+1,w
  6567  0288  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  6568  0289  0021               	movlb	1	; select bank1
  6569  028A  085B               	movf	main@POT0Value^(0+128),w
  6570  028B  0020               	movlb	0	; select bank0
  6571  028C  00E6               	movwf	??_main+2
  6572  028D  01E7               	clrf	??_main+3
  6573  028E  0866               	movf	??_main+2,w
  6574  028F  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  6575  0290  0867               	movf	??_main+3,w
  6576  0291  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  6577  0292  318C  2427  3180   	fcall	_LED7SegDisplayValueByDigit
  6578                           
  6579                           ;main.c: 385: if (PORTBbits.RB4 == 0){
  6580  0295  0020               	movlb	0	; select bank0
  6581  0296  1A0D               	btfsc	13,4	;volatile
  6582  0297  2AB0               	goto	l4545
  6583                           
  6584                           ;main.c: 387: LoadDebounceCount++;
  6585  0298  3001               	movlw	1
  6586  0299  0021               	movlb	1	; select bank1
  6587  029A  07DD               	addwf	main@LoadDebounceCount^(0+128),f
  6588  029B  3000               	movlw	0
  6589  029C  3DDE               	addwfc	(main@LoadDebounceCount+1)^(0+128),f
  6590                           
  6591                           ;main.c: 388: if(5<LoadDebounceCount) {
  6592  029D  085E               	movf	(main@LoadDebounceCount+1)^(0+128),w
  6593  029E  3A80               	xorlw	128
  6594  029F  0020               	movlb	0	; select bank0
  6595  02A0  00E4               	movwf	??_main
  6596  02A1  3080               	movlw	128
  6597  02A2  0264               	subwf	??_main,w
  6598  02A3  1D03               	skipz
  6599  02A4  2AA8               	goto	u4385
  6600  02A5  3006               	movlw	6
  6601  02A6  0021               	movlb	1	; select bank1
  6602  02A7  025D               	subwf	main@LoadDebounceCount^(0+128),w
  6603  02A8                     u4385:	
  6604  02A8  1C03               	skipc
  6605  02A9  2AC3               	goto	l4551
  6606                           
  6607                           ;main.c: 389: LATB &= 0b10011110 ;
  6608  02AA  309E               	movlw	158
  6609  02AB  0020               	movlb	0	; select bank0
  6610  02AC  00E4               	movwf	??_main
  6611  02AD  0864               	movf	??_main,w
  6612  02AE  0597               	andwf	23,f	;volatile
  6613                           
  6614                           ;main.c: 390: }
  6615                           ;main.c: 391: }else{
  6616  02AF  2AC3               	goto	l4551
  6617  02B0                     l4545:	
  6618                           
  6619                           ;main.c: 392: if(0<LoadDebounceCount){
  6620  02B0  0021               	movlb	1	; select bank1
  6621  02B1  085E               	movf	(main@LoadDebounceCount+1)^(0+128),w
  6622  02B2  3A80               	xorlw	128
  6623  02B3  0020               	movlb	0	; select bank0
  6624  02B4  00E4               	movwf	??_main
  6625  02B5  3080               	movlw	128
  6626  02B6  0264               	subwf	??_main,w
  6627  02B7  1D03               	skipz
  6628  02B8  2ABC               	goto	u4395
  6629  02B9  3001               	movlw	1
  6630  02BA  0021               	movlb	1	; select bank1
  6631  02BB  025D               	subwf	main@LoadDebounceCount^(0+128),w
  6632  02BC                     u4395:	
  6633  02BC  1C03               	skipc
  6634  02BD  2AC3               	goto	l4551
  6635                           
  6636                           ;main.c: 393: LoadDebounceCount=0;
  6637  02BE  0021               	movlb	1	; select bank1
  6638  02BF  01DD               	clrf	main@LoadDebounceCount^(0+128)
  6639  02C0  01DE               	clrf	(main@LoadDebounceCount+1)^(0+128)
  6640                           
  6641                           ;main.c: 394: LATB |= 0b00000001 ;
  6642  02C1  0020               	movlb	0	; select bank0
  6643  02C2  1417               	bsf	23,0	;volatile
  6644  02C3                     l4551:	
  6645                           
  6646                           ;main.c: 395: }
  6647                           ;main.c: 396: }
  6648                           ;main.c: 397: if (PORTBbits.RB5 == 0){
  6649  02C3  0020               	movlb	0	; select bank0
  6650  02C4  1A8D               	btfsc	13,5	;volatile
  6651  02C5  2B6D               	goto	l4591
  6652                           
  6653                           ;main.c: 399: SaveDebounceCount++;
  6654  02C6  3001               	movlw	1
  6655  02C7  0021               	movlb	1	; select bank1
  6656  02C8  07DF               	addwf	main@SaveDebounceCount^(0+128),f
  6657  02C9  3000               	movlw	0
  6658  02CA  3DE0               	addwfc	(main@SaveDebounceCount+1)^(0+128),f
  6659                           
  6660                           ;main.c: 400: if(5<SaveDebounceCount) {
  6661  02CB  0860               	movf	(main@SaveDebounceCount+1)^(0+128),w
  6662  02CC  3A80               	xorlw	128
  6663  02CD  0020               	movlb	0	; select bank0
  6664  02CE  00E4               	movwf	??_main
  6665  02CF  3080               	movlw	128
  6666  02D0  0264               	subwf	??_main,w
  6667  02D1  1D03               	skipz
  6668  02D2  2AD6               	goto	u4415
  6669  02D3  3006               	movlw	6
  6670  02D4  0021               	movlb	1	; select bank1
  6671  02D5  025F               	subwf	main@SaveDebounceCount^(0+128),w
  6672  02D6                     u4415:	
  6673  02D6  1C03               	skipc
  6674  02D7  28EE               	goto	l4483
  6675                           
  6676                           ;main.c: 401: LATB &= 0b10011101 ;
  6677  02D8  309D               	movlw	157
  6678  02D9  0020               	movlb	0	; select bank0
  6679  02DA  00E4               	movwf	??_main
  6680  02DB  0864               	movf	??_main,w
  6681  02DC  0597               	andwf	23,f	;volatile
  6682                           
  6683                           ;main.c: 403: readStatus = MYI2C_ReadFaders(i2c_addr_dualADSR0);
  6684  02DD  3031               	movlw	low (_i2c_addr_dualADSR0| (0+32768))
  6685  02DE  0084               	movwf	4
  6686  02DF  3090               	movlw	high (_i2c_addr_dualADSR0| (0+32768))
  6687  02E0  0085               	movwf	5
  6688  02E1  0800               	movf	0,w	;code access
  6689  02E2  3187  27A8  3180   	fcall	_MYI2C_ReadFaders
  6690  02E5  0020               	movlb	0	; select bank0
  6691  02E6  00E4               	movwf	??_main
  6692  02E7  0864               	movf	??_main,w
  6693  02E8  0021               	movlb	1	; select bank1
  6694  02E9  00E1               	movwf	main@readStatus^(0+128)
  6695                           
  6696                           ;main.c: 404: if(readStatus==I2C1_MESSAGE_COMPLETE)
  6697  02EA  0861               	movf	main@readStatus^(0+128),w
  6698  02EB  1D03               	btfss	3,2
  6699  02EC  28EE               	goto	l4483
  6700                           
  6701                           ;main.c: 405: {
  6702                           ;main.c: 406: for(int x=0;x<cADSRdataBytes;x++) {
  6703  02ED  01E2               	clrf	main@x^(0+128)
  6704  02EE  01E3               	clrf	(main@x+1)^(0+128)
  6705  02EF  0863               	movf	(main@x+1)^(0+128),w
  6706  02F0  3A80               	xorlw	128
  6707  02F1  0020               	movlb	0	; select bank0
  6708  02F2  00E4               	movwf	??_main
  6709  02F3  3080               	movlw	128
  6710  02F4  0264               	subwf	??_main,w
  6711  02F5  1D03               	skipz
  6712  02F6  2AFA               	goto	u4435
  6713  02F7  3008               	movlw	8
  6714  02F8  0021               	movlb	1	; select bank1
  6715  02F9  0262               	subwf	main@x^(0+128),w
  6716  02FA                     u4435:	
  6717  02FA  1803               	btfsc	3,0
  6718  02FB  2B1F               	goto	l4573
  6719  02FC                     l4567:	
  6720                           
  6721                           ;main.c: 408: dualADSRdata0[x]=iI2CFaderValue[x];
  6722  02FC  0021               	movlb	1	; select bank1
  6723  02FD  0862               	movf	main@x^(0+128),w
  6724  02FE  3EBE               	addlw	(low (_iI2CFaderValue| 0))& (0+255)
  6725  02FF  0086               	movwf	6
  6726  0300  0187               	clrf	7
  6727  0301  0801               	movf	1,w
  6728  0302  0020               	movlb	0	; select bank0
  6729  0303  00E4               	movwf	??_main
  6730  0304  0021               	movlb	1	; select bank1
  6731  0305  0862               	movf	main@x^(0+128),w
  6732  0306  3E50               	addlw	(low (_dualADSRdata0| (0+256)))& (0+255)
  6733  0307  0086               	movwf	6
  6734  0308  3001               	movlw	1	; select bank2/3
  6735  0309  0087               	movwf	7
  6736  030A  0020               	movlb	0	; select bank0
  6737  030B  0864               	movf	??_main,w
  6738  030C  0081               	movwf	1
  6739  030D  3001               	movlw	1
  6740  030E  0021               	movlb	1	; select bank1
  6741  030F  07E2               	addwf	main@x^(0+128),f
  6742  0310  3000               	movlw	0
  6743  0311  3DE3               	addwfc	(main@x+1)^(0+128),f
  6744  0312  0863               	movf	(main@x+1)^(0+128),w
  6745  0313  3A80               	xorlw	128
  6746  0314  0020               	movlb	0	; select bank0
  6747  0315  00E4               	movwf	??_main
  6748  0316  3080               	movlw	128
  6749  0317  0264               	subwf	??_main,w
  6750  0318  1D03               	skipz
  6751  0319  2B1D               	goto	u4445
  6752  031A  3008               	movlw	8
  6753  031B  0021               	movlb	1	; select bank1
  6754  031C  0262               	subwf	main@x^(0+128),w
  6755  031D                     u4445:	
  6756  031D  1C03               	skipc
  6757  031E  2AFC               	goto	l4567
  6758  031F                     l4573:	
  6759                           
  6760                           ;main.c: 409: }
  6761                           ;main.c: 410: readStatus = MYI2C_ReadFaders(i2c_addr_dualADSR1);
  6762  031F  3030               	movlw	low (_i2c_addr_dualADSR1| (0+32768))
  6763  0320  0084               	movwf	4
  6764  0321  3090               	movlw	high (_i2c_addr_dualADSR1| (0+32768))
  6765  0322  0085               	movwf	5
  6766  0323  0800               	movf	0,w	;code access
  6767  0324  3187  27A8  3180   	fcall	_MYI2C_ReadFaders
  6768  0327  0020               	movlb	0	; select bank0
  6769  0328  00E4               	movwf	??_main
  6770  0329  0864               	movf	??_main,w
  6771  032A  0021               	movlb	1	; select bank1
  6772  032B  00E1               	movwf	main@readStatus^(0+128)
  6773                           
  6774                           ;main.c: 411: if(readStatus==I2C1_MESSAGE_COMPLETE)
  6775  032C  0861               	movf	main@readStatus^(0+128),w
  6776  032D  1D03               	btfss	3,2
  6777  032E  28EE               	goto	l4483
  6778                           
  6779                           ;main.c: 412: {
  6780                           ;main.c: 413: for(int x=0;x<cADSRdataBytes;x++) {
  6781  032F  01E4               	clrf	main@x_945^(0+128)
  6782  0330  01E5               	clrf	(main@x_945+1)^(0+128)
  6783  0331  0865               	movf	(main@x_945+1)^(0+128),w
  6784  0332  3A80               	xorlw	128
  6785  0333  0020               	movlb	0	; select bank0
  6786  0334  00E4               	movwf	??_main
  6787  0335  3080               	movlw	128
  6788  0336  0264               	subwf	??_main,w
  6789  0337  1D03               	skipz
  6790  0338  2B3C               	goto	u4465
  6791  0339  3008               	movlw	8
  6792  033A  0021               	movlb	1	; select bank1
  6793  033B  0264               	subwf	main@x_945^(0+128),w
  6794  033C                     u4465:	
  6795  033C  1803               	btfsc	3,0
  6796  033D  2B61               	goto	l4589
  6797  033E                     l4583:	
  6798                           
  6799                           ;main.c: 415: dualADSRdata0[x]=iI2CFaderValue[x];
  6800  033E  0021               	movlb	1	; select bank1
  6801  033F  0864               	movf	main@x_945^(0+128),w
  6802  0340  3EBE               	addlw	(low (_iI2CFaderValue| 0))& (0+255)
  6803  0341  0086               	movwf	6
  6804  0342  0187               	clrf	7
  6805  0343  0801               	movf	1,w
  6806  0344  0020               	movlb	0	; select bank0
  6807  0345  00E4               	movwf	??_main
  6808  0346  0021               	movlb	1	; select bank1
  6809  0347  0864               	movf	main@x_945^(0+128),w
  6810  0348  3E50               	addlw	(low (_dualADSRdata0| (0+256)))& (0+255)
  6811  0349  0086               	movwf	6
  6812  034A  3001               	movlw	1	; select bank2/3
  6813  034B  0087               	movwf	7
  6814  034C  0020               	movlb	0	; select bank0
  6815  034D  0864               	movf	??_main,w
  6816  034E  0081               	movwf	1
  6817  034F  3001               	movlw	1
  6818  0350  0021               	movlb	1	; select bank1
  6819  0351  07E4               	addwf	main@x_945^(0+128),f
  6820  0352  3000               	movlw	0
  6821  0353  3DE5               	addwfc	(main@x_945+1)^(0+128),f
  6822  0354  0865               	movf	(main@x_945+1)^(0+128),w
  6823  0355  3A80               	xorlw	128
  6824  0356  0020               	movlb	0	; select bank0
  6825  0357  00E4               	movwf	??_main
  6826  0358  3080               	movlw	128
  6827  0359  0264               	subwf	??_main,w
  6828  035A  1D03               	skipz
  6829  035B  2B5F               	goto	u4475
  6830  035C  3008               	movlw	8
  6831  035D  0021               	movlb	1	; select bank1
  6832  035E  0264               	subwf	main@x_945^(0+128),w
  6833  035F                     u4475:	
  6834  035F  1C03               	skipc
  6835  0360  2B3E               	goto	l4583
  6836  0361                     l4589:	
  6837                           
  6838                           ;main.c: 416: }
  6839                           ;main.c: 418: savePatch(mvcPatchNumber);
  6840  0361  0021               	movlb	1	; select bank1
  6841  0362  0836               	movf	(_mvcPatchNumber+1)^(0+128),w
  6842  0363  0020               	movlb	0	; select bank0
  6843  0364  00D7               	movwf	savePatch@PatchNumber+1
  6844  0365  0021               	movlb	1	; select bank1
  6845  0366  0835               	movf	_mvcPatchNumber^(0+128),w
  6846  0367  0020               	movlb	0	; select bank0
  6847  0368  00D6               	movwf	savePatch@PatchNumber
  6848  0369  318E  26CC  3180   	fcall	_savePatch
  6849                           
  6850                           ;main.c: 419: }
  6851                           ;main.c: 420: }
  6852                           ;main.c: 421: }
  6853                           ;main.c: 422: }else{
  6854  036C  28EE               	goto	l4483
  6855  036D                     l4591:	
  6856                           
  6857                           ;main.c: 423: if(0<SaveDebounceCount){
  6858  036D  0021               	movlb	1	; select bank1
  6859  036E  0860               	movf	(main@SaveDebounceCount+1)^(0+128),w
  6860  036F  3A80               	xorlw	128
  6861  0370  0020               	movlb	0	; select bank0
  6862  0371  00E4               	movwf	??_main
  6863  0372  3080               	movlw	128
  6864  0373  0264               	subwf	??_main,w
  6865  0374  1D03               	skipz
  6866  0375  2B79               	goto	u4485
  6867  0376  3001               	movlw	1
  6868  0377  0021               	movlb	1	; select bank1
  6869  0378  025F               	subwf	main@SaveDebounceCount^(0+128),w
  6870  0379                     u4485:	
  6871  0379  1C03               	skipc
  6872  037A  28EE               	goto	l4483
  6873                           
  6874                           ;main.c: 424: SaveDebounceCount=0;
  6875  037B  0021               	movlb	1	; select bank1
  6876  037C  01DF               	clrf	main@SaveDebounceCount^(0+128)
  6877  037D  01E0               	clrf	(main@SaveDebounceCount+1)^(0+128)
  6878                           
  6879                           ;main.c: 425: LATB |= 0b00000010 ;
  6880  037E  0020               	movlb	0	; select bank0
  6881  037F  1497               	bsf	23,1	;volatile
  6882  0380  28EE               	goto	l4483
  6883  0381                     __end_of_main:	
  6884                           
  6885                           	psect	text1
  6886  0BB2                     __ptext1:	
  6887 ;; *************** function _writeDAC528 *****************
  6888 ;; Defined at:
  6889 ;;		line 59 in file "VCAMIX_SPI_Master.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  dacNumber       2   53[BANK0 ] int 
  6892 ;;  dacData         1   55[BANK0 ] unsigned char 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  wkDacNumber     1   57[BANK0 ] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6904 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;Total ram usage:        5 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    6
  6911 ;; This function calls:
  6912 ;;		_putByte
  6913 ;; This function is called by:
  6914 ;;		_main
  6915 ;;		_loadPatch
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _writeDAC528
  6921  0BB2                     _writeDAC528:	
  6922                           
  6923                           ;VCAMIX_SPI_Master.c: 60: uint8_t wkDacNumber=0;
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _writeDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6927  0BB2  0020               	movlb	0	; select bank0
  6928  0BB3  01D9               	clrf	writeDAC528@wkDacNumber
  6929                           
  6930                           ;VCAMIX_SPI_Master.c: 61: wkDacNumber=cPowerOfTwo[dacNumber];
  6931  0BB4  0856               	movf	writeDAC528@dacNumber+1,w
  6932  0BB5  0085               	movwf	5
  6933  0BB6  0855               	movf	writeDAC528@dacNumber,w
  6934  0BB7  0084               	movwf	4
  6935  0BB8  3584               	lslf	4,f
  6936  0BB9  0D85               	rlf	5,f
  6937  0BBA  3000               	movlw	low (_cPowerOfTwo| (0+32768))
  6938  0BBB  0784               	addwf	4,f
  6939  0BBC  3090               	movlw	high (_cPowerOfTwo| (0+32768))
  6940  0BBD  3D85               	addwfc	5,f
  6941  0BBE  0800               	movf	0,w	;code access
  6942  0BBF  00D8               	movwf	??_writeDAC528
  6943  0BC0  0858               	movf	??_writeDAC528,w
  6944  0BC1  00D9               	movwf	writeDAC528@wkDacNumber
  6945                           
  6946                           ;VCAMIX_SPI_Master.c: 72: PORTA &= 0x7F ;
  6947  0BC2  307F               	movlw	127
  6948  0BC3  00D8               	movwf	??_writeDAC528
  6949  0BC4  0858               	movf	??_writeDAC528,w
  6950  0BC5  058C               	andwf	12,f	;volatile
  6951                           
  6952                           ;VCAMIX_SPI_Master.c: 74: putByte(wkDacNumber,0);
  6953  0BC6  3000               	movlw	0
  6954  0BC7  00CC               	movwf	putByte@clockPin
  6955  0BC8  00CD               	movwf	putByte@clockPin+1
  6956  0BC9  0859               	movf	writeDAC528@wkDacNumber,w
  6957  0BCA  3186  263F  318B   	fcall	_putByte
  6958                           
  6959                           ;VCAMIX_SPI_Master.c: 76: putByte(dacData,0);
  6960  0BCD  3000               	movlw	0
  6961  0BCE  0020               	movlb	0	; select bank0
  6962  0BCF  00CC               	movwf	putByte@clockPin
  6963  0BD0  00CD               	movwf	putByte@clockPin+1
  6964  0BD1  0857               	movf	writeDAC528@dacData,w
  6965  0BD2  3186  263F         	fcall	_putByte
  6966                           
  6967                           ;VCAMIX_SPI_Master.c: 79: PORTA |= 0x80 ;
  6968  0BD4  0020               	movlb	0	; select bank0
  6969  0BD5  178C               	bsf	12,7	;volatile
  6970  0BD6  0008               	return
  6971  0BD7                     __end_of_writeDAC528:	
  6972                           
  6973                           	psect	text2
  6974  0ECC                     __ptext2:	
  6975 ;; *************** function _savePatch *****************
  6976 ;; Defined at:
  6977 ;;		line 257 in file "EEPROM_24LC256.c"
  6978 ;; Parameters:    Size  Location     Type
  6979 ;;  PatchNumber     2   54[BANK0 ] int 
  6980 ;; Auto vars:     Size  Location     Type
  6981 ;;  batchNum        2   64[BANK0 ] int 
  6982 ;;  iPatchAddres    2   66[BANK0 ] int 
  6983 ;;  idx             2   62[BANK0 ] int 
  6984 ;;  pData           2   60[BANK0 ] PTR unsigned char 
  6985 ;;		 -> aPatchMemory(128), 
  6986 ;;  iPatchAddres    1   59[BANK0 ] unsigned char 
  6987 ;;  iPatchAddres    1   58[BANK0 ] unsigned char 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6997 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;Total ram usage:       14 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    6
  7004 ;; This function calls:
  7005 ;;		_MYI2C_Write16EEPROMBytes
  7006 ;;		___wmul
  7007 ;;		_marshallPatchMemory
  7008 ;; This function is called by:
  7009 ;;		_main
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           
  7014                           ;psect for function _savePatch
  7015  0ECC                     _savePatch:	
  7016                           
  7017                           ;EEPROM_24LC256.c: 258: int iPatchAddress=PatchNumber*cPatchSize;
  7018                           
  7019                           ;incstack = 0
  7020                           ; Regs used in _savePatch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7021  0ECC  0020               	movlb	0	; select bank0
  7022  0ECD  0857               	movf	savePatch@PatchNumber+1,w
  7023  0ECE  00D9               	movwf	??_savePatch+1
  7024  0ECF  0856               	movf	savePatch@PatchNumber,w
  7025  0ED0  00D8               	movwf	??_savePatch
  7026  0ED1  3007               	movlw	7
  7027  0ED2                     u4275:	
  7028  0ED2  35D8               	lslf	??_savePatch,f
  7029  0ED3  0DD9               	rlf	??_savePatch+1,f
  7030  0ED4  0B89               	decfsz	9,f
  7031  0ED5  2ED2               	goto	u4275
  7032  0ED6  0858               	movf	??_savePatch,w
  7033  0ED7  00E2               	movwf	savePatch@iPatchAddress
  7034  0ED8  0859               	movf	??_savePatch+1,w
  7035  0ED9  00E3               	movwf	savePatch@iPatchAddress+1
  7036                           
  7037                           ;EEPROM_24LC256.c: 259: uint8_t iPatchAddressHigh=iPatchAddress>>8;
  7038  0EDA  0863               	movf	savePatch@iPatchAddress+1,w
  7039  0EDB  00D8               	movwf	??_savePatch
  7040  0EDC  0858               	movf	??_savePatch,w
  7041  0EDD  00DA               	movwf	savePatch@iPatchAddressHigh
  7042                           
  7043                           ;EEPROM_24LC256.c: 260: uint8_t iPatchAddressLow=iPatchAddress&0xFF;
  7044  0EDE  0862               	movf	savePatch@iPatchAddress,w
  7045  0EDF  00D8               	movwf	??_savePatch
  7046  0EE0  0858               	movf	??_savePatch,w
  7047  0EE1  00DB               	movwf	savePatch@iPatchAddressLow
  7048                           
  7049                           ;EEPROM_24LC256.c: 263: marshallPatchMemory(mvcChannels,dualADSRdata0,dualADSRdata1);
  7050  0EE2  3050               	movlw	(low (_dualADSRdata0| (0+256)))& (0+255)
  7051  0EE3  00D8               	movwf	??_savePatch
  7052  0EE4  0858               	movf	??_savePatch,w
  7053  0EE5  00A0               	movwf	marshallPatchMemory@dualADSRdata0
  7054  0EE6  3048               	movlw	(low (_dualADSRdata1| (0+256)))& (0+255)
  7055  0EE7  00D9               	movwf	??_savePatch+1
  7056  0EE8  0859               	movf	??_savePatch+1,w
  7057  0EE9  00A1               	movwf	marshallPatchMemory@dualADSRdata1
  7058  0EEA  30C6               	movlw	(low (_mvcChannels| 0))& (0+255)
  7059  0EEB  3184  24BC  318E   	fcall	_marshallPatchMemory
  7060                           
  7061                           ;EEPROM_24LC256.c: 266: uint8_t *pData;
  7062                           ;EEPROM_24LC256.c: 267: int idx;
  7063                           ;EEPROM_24LC256.c: 270: for(int batchNum=0;(batchNum*ciBatchSize)<cPatchSize;batchNum++)
      +                          {
  7064  0EEE  0020               	movlb	0	; select bank0
  7065  0EEF  01E0               	clrf	savePatch@batchNum
  7066  0EF0  01E1               	clrf	savePatch@batchNum+1
  7067  0EF1                     l4419:	
  7068  0EF1  0861               	movf	savePatch@batchNum+1,w
  7069  0EF2  00A1               	movwf	___wmul@multiplier+1
  7070  0EF3  0860               	movf	savePatch@batchNum,w
  7071  0EF4  00A0               	movwf	___wmul@multiplier
  7072  0EF5  3010               	movlw	low (_ciBatchSize| (0+32768))
  7073  0EF6  0084               	movwf	4
  7074  0EF7  3090               	movlw	high (_ciBatchSize| (0+32768))
  7075  0EF8  0085               	movwf	5
  7076  0EF9  3F00               	moviw [0]fsr0
  7077  0EFA  00A2               	movwf	___wmul@multiplicand
  7078  0EFB  3F01               	moviw [1]fsr0
  7079  0EFC  00A3               	movwf	___wmul@multiplicand+1
  7080  0EFD  318B  2314  318E   	fcall	___wmul
  7081  0F00  0020               	movlb	0	; select bank0
  7082  0F01  0821               	movf	?___wmul+1,w
  7083  0F02  3A80               	xorlw	128
  7084  0F03  00D8               	movwf	??_savePatch
  7085  0F04  3080               	movlw	128
  7086  0F05  0258               	subwf	??_savePatch,w
  7087  0F06  1D03               	skipz
  7088  0F07  2F0A               	goto	u4285
  7089  0F08  3080               	movlw	128
  7090  0F09  0220               	subwf	?___wmul,w
  7091  0F0A                     u4285:	
  7092  0F0A  1803               	btfsc	3,0
  7093  0F0B  0008               	return
  7094                           
  7095                           ;EEPROM_24LC256.c: 272: idx=batchNum*ciBatchSize;
  7096  0F0C  0020               	movlb	0	; select bank0
  7097  0F0D  0861               	movf	savePatch@batchNum+1,w
  7098  0F0E  00A1               	movwf	___wmul@multiplier+1
  7099  0F0F  0860               	movf	savePatch@batchNum,w
  7100  0F10  00A0               	movwf	___wmul@multiplier
  7101  0F11  3010               	movlw	low (_ciBatchSize| (0+32768))
  7102  0F12  0084               	movwf	4
  7103  0F13  3090               	movlw	high (_ciBatchSize| (0+32768))
  7104  0F14  0085               	movwf	5
  7105  0F15  3F00               	moviw [0]fsr0
  7106  0F16  00A2               	movwf	___wmul@multiplicand
  7107  0F17  3F01               	moviw [1]fsr0
  7108  0F18  00A3               	movwf	___wmul@multiplicand+1
  7109  0F19  318B  2314  318E   	fcall	___wmul
  7110  0F1C  0020               	movlb	0	; select bank0
  7111  0F1D  0821               	movf	?___wmul+1,w
  7112  0F1E  00DF               	movwf	savePatch@idx+1
  7113  0F1F  0820               	movf	?___wmul,w
  7114  0F20  00DE               	movwf	savePatch@idx
  7115                           
  7116                           ;EEPROM_24LC256.c: 273: pData=&aPatchMemory[idx];
  7117  0F21  3070               	movlw	112
  7118  0F22  00D8               	movwf	??_savePatch
  7119  0F23  3023               	movlw	35
  7120  0F24  00D9               	movwf	??_savePatch+1
  7121  0F25  085E               	movf	savePatch@idx,w
  7122  0F26  0758               	addwf	??_savePatch,w
  7123  0F27  00DC               	movwf	savePatch@pData
  7124  0F28  085F               	movf	savePatch@idx+1,w
  7125  0F29  3D59               	addwfc	??_savePatch+1,w
  7126  0F2A  00DD               	movwf	savePatch@pData+1
  7127                           
  7128                           ;EEPROM_24LC256.c: 274: MYI2C_Write16EEPROMBytes(ciI2C_EEPROM_DEVICE_ADDRESS,iPatchAddre
      +                          ss,pData);
  7129  0F2B  0863               	movf	savePatch@iPatchAddress+1,w
  7130  0F2C  00AF               	movwf	MYI2C_Write16EEPROMBytes@writeAddress+1
  7131  0F2D  0862               	movf	savePatch@iPatchAddress,w
  7132  0F2E  00AE               	movwf	MYI2C_Write16EEPROMBytes@writeAddress
  7133  0F2F  085D               	movf	savePatch@pData+1,w
  7134  0F30  00B1               	movwf	MYI2C_Write16EEPROMBytes@pData+1
  7135  0F31  085C               	movf	savePatch@pData,w
  7136  0F32  00B0               	movwf	MYI2C_Write16EEPROMBytes@pData
  7137  0F33  3012               	movlw	low (_ciI2C_EEPROM_DEVICE_ADDRESS| (0+32768))
  7138  0F34  0084               	movwf	4
  7139  0F35  3090               	movlw	high (_ciI2C_EEPROM_DEVICE_ADDRESS| (0+32768))
  7140  0F36  0085               	movwf	5
  7141  0F37  0800               	movf	0,w	;code access
  7142  0F38  3185  2588  318E   	fcall	_MYI2C_Write16EEPROMBytes
  7143                           
  7144                           ;EEPROM_24LC256.c: 276: iPatchAddress+=ciBatchSize;
  7145  0F3B  3010               	movlw	low (_ciBatchSize| (0+32768))
  7146  0F3C  0084               	movwf	4
  7147  0F3D  3090               	movlw	high (_ciBatchSize| (0+32768))
  7148  0F3E  0085               	movwf	5
  7149  0F3F  3F00               	moviw [0]fsr0
  7150  0F40  0020               	movlb	0	; select bank0
  7151  0F41  00D8               	movwf	??_savePatch
  7152  0F42  3F01               	moviw [1]fsr0
  7153  0F43  00D9               	movwf	??_savePatch+1
  7154  0F44  0858               	movf	??_savePatch,w
  7155  0F45  07E2               	addwf	savePatch@iPatchAddress,f
  7156  0F46  0859               	movf	??_savePatch+1,w
  7157  0F47  3DE3               	addwfc	savePatch@iPatchAddress+1,f
  7158                           
  7159                           ;EEPROM_24LC256.c: 278: _delay((unsigned long)((5)*(32000000/4000.0)));
  7160  0F48  3034               	movlw	52
  7161  0F49  0020               	movlb	0	; select bank0
  7162  0F4A  00D8               	movwf	??_savePatch
  7163  0F4B  30F1               	movlw	241
  7164  0F4C                     u4577:	
  7165  0F4C  0B89               	decfsz	9,f
  7166  0F4D  2F4C               	goto	u4577
  7167  0F4E  0BD8               	decfsz	??_savePatch,f
  7168  0F4F  2F4C               	goto	u4577
  7169  0F50  3200               	nop2
  7170  0F51  3001               	movlw	1
  7171  0F52  0020               	movlb	0	; select bank0
  7172  0F53  07E0               	addwf	savePatch@batchNum,f
  7173  0F54  3000               	movlw	0
  7174  0F55  3DE1               	addwfc	savePatch@batchNum+1,f
  7175  0F56  2EF1               	goto	l4419
  7176  0F57                     __end_of_savePatch:	
  7177                           
  7178                           	psect	text3
  7179  04BC                     __ptext3:	
  7180 ;; *************** function _marshallPatchMemory *****************
  7181 ;; Defined at:
  7182 ;;		line 21 in file "EEPROM_24LC256.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  mvcChannels     1    wreg     PTR unsigned char 
  7185 ;;		 -> mvcChannels(4), 
  7186 ;;  dualADSRdata    1    0[BANK0 ] PTR unsigned char 
  7187 ;;		 -> dualADSRdata0(8), 
  7188 ;;  dualADSRdata    1    1[BANK0 ] PTR unsigned char 
  7189 ;;		 -> dualADSRdata1(8), 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  mvcChannels     1    8[BANK0 ] PTR unsigned char 
  7192 ;;		 -> mvcChannels(4), 
  7193 ;;  i               2   13[BANK0 ] int 
  7194 ;;  i               2   11[BANK0 ] int 
  7195 ;;  i               2    9[BANK0 ] int 
  7196 ;;  iPatchMemory    2   15[BANK0 ] int 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7206 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7207 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;Total ram usage:       17 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    3
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_savePatch
  7217 ;; This function uses a non-reentrant model
  7218 ;;
  7219                           
  7220                           
  7221                           ;psect for function _marshallPatchMemory
  7222  04BC                     _marshallPatchMemory:	
  7223                           
  7224                           ;incstack = 0
  7225                           ; Regs used in _marshallPatchMemory: [wreg+fsr1l+fsr1h+status,2+status,0]
  7226                           ;marshallPatchMemory@mvcChannels stored from wreg
  7227  04BC  0020               	movlb	0	; select bank0
  7228  04BD  00A8               	movwf	marshallPatchMemory@mvcChannels
  7229                           
  7230                           ;EEPROM_24LC256.c: 22: int iPatchMemoryNDX=0;
  7231  04BE  01AF               	clrf	marshallPatchMemory@iPatchMemoryNDX
  7232  04BF  01B0               	clrf	marshallPatchMemory@iPatchMemoryNDX+1
  7233                           
  7234                           ;EEPROM_24LC256.c: 23: for(int i=0; i<cMixFaderCount;i++) {
  7235  04C0  01A9               	clrf	marshallPatchMemory@i
  7236  04C1  01AA               	clrf	marshallPatchMemory@i+1
  7237  04C2  082A               	movf	marshallPatchMemory@i+1,w
  7238  04C3  3A80               	xorlw	128
  7239  04C4  00A2               	movwf	??_marshallPatchMemory
  7240  04C5  3080               	movlw	128
  7241  04C6  0222               	subwf	??_marshallPatchMemory,w
  7242  04C7  1D03               	skipz
  7243  04C8  2CCB               	goto	u2575
  7244  04C9  3004               	movlw	4
  7245  04CA  0229               	subwf	marshallPatchMemory@i,w
  7246  04CB                     u2575:	
  7247  04CB  1803               	btfsc	3,0
  7248  04CC  2CF9               	goto	l3135
  7249  04CD                     l3127:	
  7250                           
  7251                           ;EEPROM_24LC256.c: 24: aPatchMemory[iPatchMemoryNDX++]=mvcChannels[i];
  7252  04CD  0020               	movlb	0	; select bank0
  7253  04CE  0829               	movf	marshallPatchMemory@i,w
  7254  04CF  0728               	addwf	marshallPatchMemory@mvcChannels,w
  7255  04D0  00A2               	movwf	??_marshallPatchMemory
  7256  04D1  0822               	movf	??_marshallPatchMemory,w
  7257  04D2  0086               	movwf	6
  7258  04D3  0187               	clrf	7
  7259  04D4  0801               	movf	1,w
  7260  04D5  00A3               	movwf	??_marshallPatchMemory+1
  7261  04D6  3070               	movlw	112
  7262  04D7  00A4               	movwf	??_marshallPatchMemory+2
  7263  04D8  3023               	movlw	35
  7264  04D9  00A5               	movwf	??_marshallPatchMemory+3
  7265  04DA  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7266  04DB  0724               	addwf	??_marshallPatchMemory+2,w
  7267  04DC  00A6               	movwf	??_marshallPatchMemory+4
  7268  04DD  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7269  04DE  3D25               	addwfc	??_marshallPatchMemory+3,w
  7270  04DF  00A7               	movwf	??_marshallPatchMemory+5
  7271  04E0  0826               	movf	??_marshallPatchMemory+4,w
  7272  04E1  0086               	movwf	6
  7273  04E2  0827               	movf	??_marshallPatchMemory+5,w
  7274  04E3  0087               	movwf	7
  7275  04E4  0823               	movf	??_marshallPatchMemory+1,w
  7276  04E5  0081               	movwf	1
  7277  04E6  3001               	movlw	1
  7278  04E7  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7279  04E8  3000               	movlw	0
  7280  04E9  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7281  04EA  3001               	movlw	1
  7282  04EB  07A9               	addwf	marshallPatchMemory@i,f
  7283  04EC  3000               	movlw	0
  7284  04ED  3DAA               	addwfc	marshallPatchMemory@i+1,f
  7285  04EE  082A               	movf	marshallPatchMemory@i+1,w
  7286  04EF  3A80               	xorlw	128
  7287  04F0  00A2               	movwf	??_marshallPatchMemory
  7288  04F1  3080               	movlw	128
  7289  04F2  0222               	subwf	??_marshallPatchMemory,w
  7290  04F3  1D03               	skipz
  7291  04F4  2CF7               	goto	u2585
  7292  04F5  3004               	movlw	4
  7293  04F6  0229               	subwf	marshallPatchMemory@i,w
  7294  04F7                     u2585:	
  7295  04F7  1C03               	skipc
  7296  04F8  2CCD               	goto	l3127
  7297  04F9                     l3135:	
  7298                           
  7299                           ;EEPROM_24LC256.c: 25: }
  7300                           ;EEPROM_24LC256.c: 26: for(int i=0; i<cADSRdataBytes;i++) {
  7301  04F9  0020               	movlb	0	; select bank0
  7302  04FA  01AB               	clrf	marshallPatchMemory@i_1164
  7303  04FB  01AC               	clrf	marshallPatchMemory@i_1164+1
  7304  04FC  082C               	movf	marshallPatchMemory@i_1164+1,w
  7305  04FD  3A80               	xorlw	128
  7306  04FE  00A2               	movwf	??_marshallPatchMemory
  7307  04FF  3080               	movlw	128
  7308  0500  0222               	subwf	??_marshallPatchMemory,w
  7309  0501  3008               	movlw	8
  7310  0502  1903               	btfsc	3,2
  7311  0503  022B               	subwf	marshallPatchMemory@i_1164,w
  7312  0504  1803               	btfsc	3,0
  7313  0505  2D32               	goto	l3149
  7314  0506                     l3141:	
  7315                           
  7316                           ;EEPROM_24LC256.c: 27: aPatchMemory[iPatchMemoryNDX++]=dualADSRdata0[i];
  7317  0506  0020               	movlb	0	; select bank0
  7318  0507  082B               	movf	marshallPatchMemory@i_1164,w
  7319  0508  0720               	addwf	marshallPatchMemory@dualADSRdata0,w
  7320  0509  00A2               	movwf	??_marshallPatchMemory
  7321  050A  0822               	movf	??_marshallPatchMemory,w
  7322  050B  0086               	movwf	6
  7323  050C  3001               	movlw	1	; select bank2/3
  7324  050D  0087               	movwf	7
  7325  050E  0801               	movf	1,w
  7326  050F  00A3               	movwf	??_marshallPatchMemory+1
  7327  0510  3070               	movlw	112
  7328  0511  00A4               	movwf	??_marshallPatchMemory+2
  7329  0512  3023               	movlw	35
  7330  0513  00A5               	movwf	??_marshallPatchMemory+3
  7331  0514  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7332  0515  0724               	addwf	??_marshallPatchMemory+2,w
  7333  0516  00A6               	movwf	??_marshallPatchMemory+4
  7334  0517  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7335  0518  3D25               	addwfc	??_marshallPatchMemory+3,w
  7336  0519  00A7               	movwf	??_marshallPatchMemory+5
  7337  051A  0826               	movf	??_marshallPatchMemory+4,w
  7338  051B  0086               	movwf	6
  7339  051C  0827               	movf	??_marshallPatchMemory+5,w
  7340  051D  0087               	movwf	7
  7341  051E  0823               	movf	??_marshallPatchMemory+1,w
  7342  051F  0081               	movwf	1
  7343  0520  3001               	movlw	1
  7344  0521  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7345  0522  3000               	movlw	0
  7346  0523  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7347  0524  3001               	movlw	1
  7348  0525  07AB               	addwf	marshallPatchMemory@i_1164,f
  7349  0526  3000               	movlw	0
  7350  0527  3DAC               	addwfc	marshallPatchMemory@i_1164+1,f
  7351  0528  082C               	movf	marshallPatchMemory@i_1164+1,w
  7352  0529  3A80               	xorlw	128
  7353  052A  00A2               	movwf	??_marshallPatchMemory
  7354  052B  3080               	movlw	128
  7355  052C  0222               	subwf	??_marshallPatchMemory,w
  7356  052D  3008               	movlw	8
  7357  052E  1903               	btfsc	3,2
  7358  052F  022B               	subwf	marshallPatchMemory@i_1164,w
  7359  0530  1C03               	skipc
  7360  0531  2D06               	goto	l3141
  7361  0532                     l3149:	
  7362                           
  7363                           ;EEPROM_24LC256.c: 28: }
  7364                           ;EEPROM_24LC256.c: 29: for(int i=0; i<cADSRdataBytes;i++) {
  7365  0532  0020               	movlb	0	; select bank0
  7366  0533  01AD               	clrf	marshallPatchMemory@i_1165
  7367  0534  01AE               	clrf	marshallPatchMemory@i_1165+1
  7368  0535  082E               	movf	marshallPatchMemory@i_1165+1,w
  7369  0536  3A80               	xorlw	128
  7370  0537  00A2               	movwf	??_marshallPatchMemory
  7371  0538  3080               	movlw	128
  7372  0539  0222               	subwf	??_marshallPatchMemory,w
  7373  053A  3008               	movlw	8
  7374  053B  1903               	btfsc	3,2
  7375  053C  022D               	subwf	marshallPatchMemory@i_1165,w
  7376  053D  1803               	btfsc	3,0
  7377  053E  2D6B               	goto	l3163
  7378  053F                     l3155:	
  7379                           
  7380                           ;EEPROM_24LC256.c: 30: aPatchMemory[iPatchMemoryNDX++]=dualADSRdata1[i];
  7381  053F  0020               	movlb	0	; select bank0
  7382  0540  082D               	movf	marshallPatchMemory@i_1165,w
  7383  0541  0721               	addwf	marshallPatchMemory@dualADSRdata1,w
  7384  0542  00A2               	movwf	??_marshallPatchMemory
  7385  0543  0822               	movf	??_marshallPatchMemory,w
  7386  0544  0086               	movwf	6
  7387  0545  3001               	movlw	1	; select bank2/3
  7388  0546  0087               	movwf	7
  7389  0547  0801               	movf	1,w
  7390  0548  00A3               	movwf	??_marshallPatchMemory+1
  7391  0549  3070               	movlw	112
  7392  054A  00A4               	movwf	??_marshallPatchMemory+2
  7393  054B  3023               	movlw	35
  7394  054C  00A5               	movwf	??_marshallPatchMemory+3
  7395  054D  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7396  054E  0724               	addwf	??_marshallPatchMemory+2,w
  7397  054F  00A6               	movwf	??_marshallPatchMemory+4
  7398  0550  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7399  0551  3D25               	addwfc	??_marshallPatchMemory+3,w
  7400  0552  00A7               	movwf	??_marshallPatchMemory+5
  7401  0553  0826               	movf	??_marshallPatchMemory+4,w
  7402  0554  0086               	movwf	6
  7403  0555  0827               	movf	??_marshallPatchMemory+5,w
  7404  0556  0087               	movwf	7
  7405  0557  0823               	movf	??_marshallPatchMemory+1,w
  7406  0558  0081               	movwf	1
  7407  0559  3001               	movlw	1
  7408  055A  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7409  055B  3000               	movlw	0
  7410  055C  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7411  055D  3001               	movlw	1
  7412  055E  07AD               	addwf	marshallPatchMemory@i_1165,f
  7413  055F  3000               	movlw	0
  7414  0560  3DAE               	addwfc	marshallPatchMemory@i_1165+1,f
  7415  0561  082E               	movf	marshallPatchMemory@i_1165+1,w
  7416  0562  3A80               	xorlw	128
  7417  0563  00A2               	movwf	??_marshallPatchMemory
  7418  0564  3080               	movlw	128
  7419  0565  0222               	subwf	??_marshallPatchMemory,w
  7420  0566  3008               	movlw	8
  7421  0567  1903               	btfsc	3,2
  7422  0568  022D               	subwf	marshallPatchMemory@i_1165,w
  7423  0569  1C03               	skipc
  7424  056A  2D3F               	goto	l3155
  7425  056B                     l3163:	
  7426                           
  7427                           ;EEPROM_24LC256.c: 31: }
  7428                           ;EEPROM_24LC256.c: 33: for(;iPatchMemoryNDX<cPatchSize;iPatchMemoryNDX++){
  7429  056B  0020               	movlb	0	; select bank0
  7430  056C                     L1:	
  7431  056C  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7432  056D  3A80               	xorlw	128
  7433  056E  00A2               	movwf	??_marshallPatchMemory
  7434  056F  3080               	movlw	128
  7435  0570  0222               	subwf	??_marshallPatchMemory,w
  7436  0571  1D03               	skipz
  7437  0572  2D75               	goto	u2635
  7438  0573  3080               	movlw	128
  7439  0574  022F               	subwf	marshallPatchMemory@iPatchMemoryNDX,w
  7440  0575                     u2635:	
  7441  0575  1803               	btfsc	3,0
  7442  0576  0008               	return
  7443                           
  7444                           ;EEPROM_24LC256.c: 34: aPatchMemory[iPatchMemoryNDX]=0;
  7445  0577  3070               	movlw	112
  7446  0578  0020               	movlb	0	; select bank0
  7447  0579  00A2               	movwf	??_marshallPatchMemory
  7448  057A  3023               	movlw	35
  7449  057B  00A3               	movwf	??_marshallPatchMemory+1
  7450  057C  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7451  057D  0722               	addwf	??_marshallPatchMemory,w
  7452  057E  0086               	movwf	6
  7453  057F  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7454  0580  3D23               	addwfc	??_marshallPatchMemory+1,w
  7455  0581  0087               	movwf	7
  7456  0582  0181               	clrf	1
  7457  0583  3001               	movlw	1
  7458  0584  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7459  0585  3000               	movlw	0
  7460  0586  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7461  0587  2D6C               	goto	L1
  7462  0588                     __end_of_marshallPatchMemory:	
  7463                           
  7464                           	psect	text4
  7465  0588                     __ptext4:	
  7466 ;; *************** function _MYI2C_Write16EEPROMBytes *****************
  7467 ;; Defined at:
  7468 ;;		line 76 in file "EEPROM_24LC256.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  slaveDeviceA    1    wreg     unsigned char 
  7471 ;;  writeAddress    2   14[BANK0 ] int 
  7472 ;;  pData           2   16[BANK0 ] PTR unsigned char 
  7473 ;;		 -> aPatchMemory(128), 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  slaveDeviceA    1   47[BANK0 ] unsigned char 
  7476 ;;  i               2   51[BANK0 ] int 
  7477 ;;  writeBuffer    17   22[BANK0 ] unsigned char [17]
  7478 ;;  counter         2   49[BANK0 ] unsigned int 
  7479 ;;  timeOut         2   44[BANK0 ] unsigned int 
  7480 ;;  nCount          2   42[BANK0 ] unsigned int 
  7481 ;;  dataAddress     2   39[BANK0 ] unsigned int 
  7482 ;;  status          1   53[BANK0 ] enum E14260
  7483 ;;  iPatchAddres    1   48[BANK0 ] unsigned char 
  7484 ;;  pointerByte     1   46[BANK0 ] unsigned char 
  7485 ;;  iPatchAddres    1   41[BANK0 ] unsigned char 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  1    wreg      void 
  7488 ;; Registers used:
  7489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7495 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7497 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7498 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;Total ram usage:       40 bytes
  7500 ;; Hardware stack levels used:    1
  7501 ;; Hardware stack levels required when called:    5
  7502 ;; This function calls:
  7503 ;;		_I2C1_MasterWrite
  7504 ;; This function is called by:
  7505 ;;		_savePatch
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           
  7510                           ;psect for function _MYI2C_Write16EEPROMBytes
  7511  0588                     _MYI2C_Write16EEPROMBytes:	
  7512                           
  7513                           ;incstack = 0
  7514                           ; Regs used in _MYI2C_Write16EEPROMBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7515                           ;MYI2C_Write16EEPROMBytes@slaveDeviceAddress stored from wreg
  7516  0588  0020               	movlb	0	; select bank0
  7517  0589  00CF               	movwf	MYI2C_Write16EEPROMBytes@slaveDeviceAddress
  7518                           
  7519                           ;EEPROM_24LC256.c: 78: uint8_t iPatchAddressHigh=writeAddress>>8;
  7520  058A  082F               	movf	MYI2C_Write16EEPROMBytes@writeAddress+1,w
  7521  058B  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7522  058C  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7523  058D  00D0               	movwf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh
  7524                           
  7525                           ;EEPROM_24LC256.c: 79: uint8_t iPatchAddressLow=writeAddress&0xFF;
  7526  058E  082E               	movf	MYI2C_Write16EEPROMBytes@writeAddress,w
  7527  058F  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7528  0590  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7529  0591  00C9               	movwf	MYI2C_Write16EEPROMBytes@iPatchAddressLow
  7530                           
  7531                           ;EEPROM_24LC256.c: 84: uint16_t dataAddress;
  7532                           ;EEPROM_24LC256.c: 85: uint16_t nCount;
  7533                           ;EEPROM_24LC256.c: 86: uint8_t writeBuffer[17];
  7534                           ;EEPROM_24LC256.c: 87: uint16_t counter, timeOut;
  7535                           ;EEPROM_24LC256.c: 89: uint8_t pointerByte = 0b10100000;
  7536  0592  30A0               	movlw	160
  7537  0593  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7538  0594  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7539  0595  00CE               	movwf	MYI2C_Write16EEPROMBytes@pointerByte
  7540                           
  7541                           ;EEPROM_24LC256.c: 91: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7542  0596  3002               	movlw	2
  7543  0597  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7544  0598  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7545  0599  00D5               	movwf	MYI2C_Write16EEPROMBytes@status
  7546                           
  7547                           ;EEPROM_24LC256.c: 94: dataAddress = 0x00;
  7548  059A  01C7               	clrf	MYI2C_Write16EEPROMBytes@dataAddress
  7549  059B  01C8               	clrf	MYI2C_Write16EEPROMBytes@dataAddress+1
  7550                           
  7551                           ;EEPROM_24LC256.c: 95: nCount = 2;
  7552  059C  3002               	movlw	2
  7553  059D  00CA               	movwf	MYI2C_Write16EEPROMBytes@nCount
  7554  059E  3000               	movlw	0
  7555  059F  00CB               	movwf	MYI2C_Write16EEPROMBytes@nCount+1
  7556                           
  7557                           ;EEPROM_24LC256.c: 98: for (counter = 0; counter < nCount; counter++)
  7558  05A0  01D1               	clrf	MYI2C_Write16EEPROMBytes@counter
  7559  05A1  01D2               	clrf	MYI2C_Write16EEPROMBytes@counter+1
  7560  05A2                     l796:	
  7561  05A2  084B               	movf	MYI2C_Write16EEPROMBytes@nCount+1,w
  7562  05A3  0252               	subwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7563  05A4  1D03               	skipz
  7564  05A5  2DA8               	goto	u2745
  7565  05A6  084A               	movf	MYI2C_Write16EEPROMBytes@nCount,w
  7566  05A7  0251               	subwf	MYI2C_Write16EEPROMBytes@counter,w
  7567  05A8                     u2745:	
  7568  05A8  1803               	btfsc	3,0
  7569  05A9  0008               	return
  7570                           
  7571                           ;EEPROM_24LC256.c: 99: {
  7572                           ;EEPROM_24LC256.c: 102: writeBuffer[0] = pointerByte;
  7573  05AA  084E               	movf	MYI2C_Write16EEPROMBytes@pointerByte,w
  7574  05AB  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7575  05AC  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7576  05AD  00B6               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer
  7577                           
  7578                           ;EEPROM_24LC256.c: 104: if(0==counter) {
  7579  05AE  0851               	movf	MYI2C_Write16EEPROMBytes@counter,w
  7580  05AF  0452               	iorwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7581  05B0  1D03               	btfss	3,2
  7582  05B1  2DBB               	goto	l3191
  7583                           
  7584                           ;EEPROM_24LC256.c: 106: writeBuffer[1] = iPatchAddressHigh;
  7585  05B2  0850               	movf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh,w
  7586  05B3  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7587  05B4  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7588  05B5  00B7               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer+1
  7589                           
  7590                           ;EEPROM_24LC256.c: 107: writeBuffer[2] = iPatchAddressHigh;
  7591  05B6  0850               	movf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh,w
  7592  05B7  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7593  05B8  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7594  05B9  00B8               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer+2
  7595                           
  7596                           ;EEPROM_24LC256.c: 108: }
  7597  05BA  2DFC               	goto	l3205
  7598  05BB                     l3191:	
  7599                           
  7600                           ;EEPROM_24LC256.c: 109: else
  7601                           ;EEPROM_24LC256.c: 110: {
  7602                           ;EEPROM_24LC256.c: 112: for(int i=1;i<ciBatchSize;i++){
  7603  05BB  3001               	movlw	1
  7604  05BC  00D3               	movwf	MYI2C_Write16EEPROMBytes@i
  7605  05BD  3000               	movlw	0
  7606  05BE  00D4               	movwf	MYI2C_Write16EEPROMBytes@i+1
  7607  05BF  3010               	movlw	low (_ciBatchSize| (0+32768))
  7608  05C0  0084               	movwf	4
  7609  05C1  3090               	movlw	high (_ciBatchSize| (0+32768))
  7610  05C2  0085               	movwf	5
  7611  05C3  3F00               	moviw [0]fsr0
  7612  05C4  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7613  05C5  3F01               	moviw [1]fsr0
  7614  05C6  00B3               	movwf	??_MYI2C_Write16EEPROMBytes+1
  7615  05C7  0854               	movf	MYI2C_Write16EEPROMBytes@i+1,w
  7616  05C8  3A80               	xorlw	128
  7617  05C9  00B4               	movwf	??_MYI2C_Write16EEPROMBytes+2
  7618  05CA  0833               	movf	??_MYI2C_Write16EEPROMBytes+1,w
  7619  05CB  3A80               	xorlw	128
  7620  05CC  0234               	subwf	??_MYI2C_Write16EEPROMBytes+2,w
  7621  05CD  1D03               	skipz
  7622  05CE  2DD1               	goto	u2665
  7623  05CF  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7624  05D0  0253               	subwf	MYI2C_Write16EEPROMBytes@i,w
  7625  05D1                     u2665:	
  7626  05D1  1803               	btfsc	3,0
  7627  05D2  2DFC               	goto	l3205
  7628  05D3                     l3197:	
  7629                           
  7630                           ;EEPROM_24LC256.c: 113: writeBuffer[i]=(*pData++);
  7631  05D3  0020               	movlb	0	; select bank0
  7632  05D4  0830               	movf	MYI2C_Write16EEPROMBytes@pData,w
  7633  05D5  0086               	movwf	6
  7634  05D6  0831               	movf	MYI2C_Write16EEPROMBytes@pData+1,w
  7635  05D7  0087               	movwf	7
  7636  05D8  0801               	movf	1,w
  7637  05D9  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7638  05DA  0853               	movf	MYI2C_Write16EEPROMBytes@i,w
  7639  05DB  3E36               	addlw	(low (MYI2C_Write16EEPROMBytes@writeBuffer| 0))& (0+255)
  7640  05DC  0086               	movwf	6
  7641  05DD  0187               	clrf	7
  7642  05DE  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7643  05DF  0081               	movwf	1
  7644  05E0  3001               	movlw	1
  7645  05E1  07B0               	addwf	MYI2C_Write16EEPROMBytes@pData,f
  7646  05E2  3000               	movlw	0
  7647  05E3  3DB1               	addwfc	MYI2C_Write16EEPROMBytes@pData+1,f
  7648  05E4  3001               	movlw	1
  7649  05E5  07D3               	addwf	MYI2C_Write16EEPROMBytes@i,f
  7650  05E6  3000               	movlw	0
  7651  05E7  3DD4               	addwfc	MYI2C_Write16EEPROMBytes@i+1,f
  7652  05E8  3010               	movlw	low (_ciBatchSize| (0+32768))
  7653  05E9  0084               	movwf	4
  7654  05EA  3090               	movlw	high (_ciBatchSize| (0+32768))
  7655  05EB  0085               	movwf	5
  7656  05EC  3F00               	moviw [0]fsr0
  7657  05ED  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7658  05EE  3F01               	moviw [1]fsr0
  7659  05EF  00B3               	movwf	??_MYI2C_Write16EEPROMBytes+1
  7660  05F0  0854               	movf	MYI2C_Write16EEPROMBytes@i+1,w
  7661  05F1  3A80               	xorlw	128
  7662  05F2  00B4               	movwf	??_MYI2C_Write16EEPROMBytes+2
  7663  05F3  0833               	movf	??_MYI2C_Write16EEPROMBytes+1,w
  7664  05F4  3A80               	xorlw	128
  7665  05F5  0234               	subwf	??_MYI2C_Write16EEPROMBytes+2,w
  7666  05F6  1D03               	skipz
  7667  05F7  2DFA               	goto	u2675
  7668  05F8  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7669  05F9  0253               	subwf	MYI2C_Write16EEPROMBytes@i,w
  7670  05FA                     u2675:	
  7671  05FA  1C03               	skipc
  7672  05FB  2DD3               	goto	l3197
  7673  05FC                     l3205:	
  7674                           
  7675                           ;EEPROM_24LC256.c: 114: }
  7676                           ;EEPROM_24LC256.c: 115: }
  7677                           ;EEPROM_24LC256.c: 120: timeOut = 0;
  7678  05FC  0020               	movlb	0	; select bank0
  7679  05FD  01CC               	clrf	MYI2C_Write16EEPROMBytes@timeOut
  7680  05FE  01CD               	clrf	MYI2C_Write16EEPROMBytes@timeOut+1
  7681  05FF                     l3227:	
  7682                           ;EEPROM_24LC256.c: 121: while(status != I2C1_MESSAGE_FAIL)
  7683                           
  7684  05FF  0355               	decf	MYI2C_Write16EEPROMBytes@status,w
  7685  0600  1903               	btfsc	3,2
  7686  0601  2E33               	goto	l3229
  7687                           
  7688                           ;EEPROM_24LC256.c: 122: {
  7689                           ;EEPROM_24LC256.c: 123: if(0==counter) {
  7690  0602  0851               	movf	MYI2C_Write16EEPROMBytes@counter,w
  7691  0603  0452               	iorwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7692  0604  1D03               	btfss	3,2
  7693  0605  2E08               	goto	l3211
  7694                           
  7695                           ;EEPROM_24LC256.c: 125: I2C1_MasterWrite( writeBuffer,
  7696                           ;EEPROM_24LC256.c: 126: 3,
  7697                           ;EEPROM_24LC256.c: 127: slaveDeviceAddress,
  7698                           ;EEPROM_24LC256.c: 128: &status);
  7699  0606  3003               	movlw	3
  7700  0607  2E0F               	goto	L2
  7701  0608                     l3211:	
  7702                           ;EEPROM_24LC256.c: 129: } else {
  7703                           
  7704                           
  7705                           ;EEPROM_24LC256.c: 131: I2C1_MasterWrite( writeBuffer,
  7706                           ;EEPROM_24LC256.c: 132: ciBatchSize+1,
  7707                           ;EEPROM_24LC256.c: 133: slaveDeviceAddress,
  7708                           ;EEPROM_24LC256.c: 134: &status);
  7709  0608  3010               	movlw	low (_ciBatchSize| (0+32768))
  7710  0609  0084               	movwf	4
  7711  060A  3090               	movlw	high (_ciBatchSize| (0+32768))
  7712  060B  0085               	movwf	5
  7713  060C  0800               	movf	0,w	;code access
  7714  060D  3E01               	addlw	1
  7715  060E  0020               	movlb	0	; select bank0
  7716  060F                     L2:	
  7717  060F  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7718  0610  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7719  0611  00A7               	movwf	I2C1_MasterWrite@length
  7720  0612  084F               	movf	MYI2C_Write16EEPROMBytes@slaveDeviceAddress,w
  7721  0613  00B3               	movwf	??_MYI2C_Write16EEPROMBytes+1
  7722  0614  01B4               	clrf	??_MYI2C_Write16EEPROMBytes+2
  7723  0615  0833               	movf	??_MYI2C_Write16EEPROMBytes+1,w
  7724  0616  00A8               	movwf	I2C1_MasterWrite@address
  7725  0617  0834               	movf	??_MYI2C_Write16EEPROMBytes+2,w
  7726  0618  00A9               	movwf	I2C1_MasterWrite@address+1
  7727  0619  3055               	movlw	(low (MYI2C_Write16EEPROMBytes@status| 0))& (0+255)
  7728  061A  00B5               	movwf	??_MYI2C_Write16EEPROMBytes+3
  7729  061B  0835               	movf	??_MYI2C_Write16EEPROMBytes+3,w
  7730  061C  00AA               	movwf	I2C1_MasterWrite@pflag
  7731  061D  3036               	movlw	(low (MYI2C_Write16EEPROMBytes@writeBuffer| 0))& (0+255)
  7732  061E  318B  23FF  3185   	fcall	_I2C1_MasterWrite
  7733  0621                     l3213:	
  7734                           ;EEPROM_24LC256.c: 135: }
  7735                           ;EEPROM_24LC256.c: 138: while(status == I2C1_MESSAGE_PENDING);
  7736                           
  7737  0621  3002               	movlw	2
  7738  0622  0020               	movlb	0	; select bank0
  7739  0623  0655               	xorwf	MYI2C_Write16EEPROMBytes@status,w
  7740  0624  1903               	btfsc	3,2
  7741  0625  2E21               	goto	l3213
  7742                           
  7743                           ;EEPROM_24LC256.c: 140: if (status == I2C1_MESSAGE_COMPLETE)
  7744  0626  0855               	movf	MYI2C_Write16EEPROMBytes@status,w
  7745  0627  1903               	btfsc	3,2
  7746  0628  2E33               	goto	l3229
  7747                           
  7748                           ;EEPROM_24LC256.c: 150: if (timeOut == 100)
  7749                           
  7750                           ;EEPROM_24LC256.c: 141: break;
  7751  0629  3064               	movlw	100
  7752  062A  064C               	xorwf	MYI2C_Write16EEPROMBytes@timeOut,w
  7753  062B  044D               	iorwf	MYI2C_Write16EEPROMBytes@timeOut+1,w
  7754  062C  1903               	btfsc	3,2
  7755  062D  2E33               	goto	l3229
  7756                           
  7757                           ;EEPROM_24LC256.c: 152: else
  7758                           ;EEPROM_24LC256.c: 153: timeOut++;
  7759                           
  7760                           ;EEPROM_24LC256.c: 151: break;
  7761  062E  3001               	movlw	1
  7762  062F  07CC               	addwf	MYI2C_Write16EEPROMBytes@timeOut,f
  7763  0630  3000               	movlw	0
  7764  0631  3DCD               	addwfc	MYI2C_Write16EEPROMBytes@timeOut+1,f
  7765  0632  2DFF               	goto	l3227
  7766  0633                     l3229:	
  7767                           
  7768                           ;EEPROM_24LC256.c: 154: }
  7769                           ;EEPROM_24LC256.c: 156: if (status == I2C1_MESSAGE_FAIL) { break; }
  7770  0633  0355               	decf	MYI2C_Write16EEPROMBytes@status,w
  7771  0634  1903               	btfsc	3,2
  7772  0635  0008               	return
  7773                           
  7774                           ;EEPROM_24LC256.c: 157: dataAddress++;
  7775  0636  3001               	movlw	1
  7776  0637  07C7               	addwf	MYI2C_Write16EEPROMBytes@dataAddress,f
  7777  0638  3000               	movlw	0
  7778  0639  3DC8               	addwfc	MYI2C_Write16EEPROMBytes@dataAddress+1,f
  7779  063A  3001               	movlw	1
  7780  063B  07D1               	addwf	MYI2C_Write16EEPROMBytes@counter,f
  7781  063C  3000               	movlw	0
  7782  063D  3DD2               	addwfc	MYI2C_Write16EEPROMBytes@counter+1,f
  7783  063E  2DA2               	goto	l796
  7784  063F                     __end_of_MYI2C_Write16EEPROMBytes:	
  7785                           
  7786                           	psect	text5
  7787  0BFF                     __ptext5:	
  7788 ;; *************** function _I2C1_MasterWrite *****************
  7789 ;; Defined at:
  7790 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  7791 ;; Parameters:    Size  Location     Type
  7792 ;;  pdata           1    wreg     PTR unsigned char 
  7793 ;;		 -> MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), 
  7794 ;;  length          1    7[BANK0 ] unsigned char 
  7795 ;;  address         2    8[BANK0 ] unsigned int 
  7796 ;;  pflag           1   10[BANK0 ] PTR enum E14260
  7797 ;;		 -> MYI2C_Write16EEPROMBytes@status(1), MYI2C_Write2LEDBytes@status(1), 
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  7800 ;;		 -> MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1    wreg      void 
  7803 ;; Registers used:
  7804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;Total ram usage:        7 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    4
  7817 ;; This function calls:
  7818 ;;		_I2C1_MasterTRBInsert
  7819 ;;		_I2C1_MasterWriteTRBBuild
  7820 ;; This function is called by:
  7821 ;;		_MYI2C_Write16EEPROMBytes
  7822 ;;		_MYI2C_Write2LEDBytes
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           
  7827                           ;psect for function _I2C1_MasterWrite
  7828  0BFF                     _I2C1_MasterWrite:	
  7829                           
  7830                           ;incstack = 0
  7831                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7832                           ;I2C1_MasterWrite@pdata stored from wreg
  7833  0BFF  0020               	movlb	0	; select bank0
  7834  0C00  00AD               	movwf	I2C1_MasterWrite@pdata
  7835                           
  7836                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  7837                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  7838  0C01  186A               	btfsc	_i2c1_object+2,0
  7839  0C02  2C20               	goto	l2865
  7840                           
  7841                           ;i2c1.c: 608: {
  7842                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  7843  0C03  082D               	movf	I2C1_MasterWrite@pdata,w
  7844  0C04  00AB               	movwf	??_I2C1_MasterWrite
  7845  0C05  082B               	movf	??_I2C1_MasterWrite,w
  7846  0C06  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  7847  0C07  0827               	movf	I2C1_MasterWrite@length,w
  7848  0C08  00AC               	movwf	??_I2C1_MasterWrite+1
  7849  0C09  082C               	movf	??_I2C1_MasterWrite+1,w
  7850  0C0A  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  7851  0C0B  0829               	movf	I2C1_MasterWrite@address+1,w
  7852  0C0C  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  7853  0C0D  0828               	movf	I2C1_MasterWrite@address,w
  7854  0C0E  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  7855  0C0F  30CE               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  7856  0C10  318B  234C  318B   	fcall	_I2C1_MasterWriteTRBBuild
  7857                           
  7858                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  7859  0C13  30CE               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  7860  0C14  0020               	movlb	0	; select bank0
  7861  0C15  00AB               	movwf	??_I2C1_MasterWrite
  7862  0C16  082B               	movf	??_I2C1_MasterWrite,w
  7863  0C17  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  7864  0C18  082A               	movf	I2C1_MasterWrite@pflag,w
  7865  0C19  00AC               	movwf	??_I2C1_MasterWrite+1
  7866  0C1A  082C               	movf	??_I2C1_MasterWrite+1,w
  7867  0C1B  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  7868  0C1C  3001               	movlw	1
  7869  0C1D  318C  249F         	fcall	_I2C1_MasterTRBInsert
  7870                           
  7871                           ;i2c1.c: 611: }
  7872  0C1F  0008               	return
  7873  0C20                     l2865:	
  7874                           
  7875                           ;i2c1.c: 612: else
  7876                           ;i2c1.c: 613: {
  7877                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  7878  0C20  0020               	movlb	0	; select bank0
  7879  0C21  082A               	movf	I2C1_MasterWrite@pflag,w
  7880  0C22  0086               	movwf	6
  7881  0C23  0187               	clrf	7
  7882  0C24  0181               	clrf	1
  7883  0C25  0A81               	incf	1,f
  7884  0C26  0008               	return
  7885  0C27                     __end_of_I2C1_MasterWrite:	
  7886                           
  7887                           	psect	text6
  7888  0AB4                     __ptext6:	
  7889 ;; *************** function _initDAC528 *****************
  7890 ;; Defined at:
  7891 ;;		line 44 in file "VCAMIX_SPI_Master.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;Total ram usage:        1 bytes
  7910 ;; Hardware stack levels used:    1
  7911 ;; Hardware stack levels required when called:    6
  7912 ;; This function calls:
  7913 ;;		_putByte
  7914 ;; This function is called by:
  7915 ;;		_main
  7916 ;; This function uses a non-reentrant model
  7917 ;;
  7918                           
  7919                           
  7920                           ;psect for function _initDAC528
  7921  0AB4                     _initDAC528:	
  7922                           
  7923                           ;VCAMIX_SPI_Master.c: 49: PORTA &= 0x7F ;
  7924                           
  7925                           ;incstack = 0
  7926                           ; Regs used in _initDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7927  0AB4  307F               	movlw	127
  7928  0AB5  0020               	movlb	0	; select bank0
  7929  0AB6  00D5               	movwf	??_initDAC528
  7930  0AB7  0855               	movf	??_initDAC528,w
  7931  0AB8  058C               	andwf	12,f	;volatile
  7932                           
  7933                           ;VCAMIX_SPI_Master.c: 51: putByte(0x00,0);
  7934  0AB9  3000               	movlw	0
  7935  0ABA  00CC               	movwf	putByte@clockPin
  7936  0ABB  00CD               	movwf	putByte@clockPin+1
  7937  0ABC  3000               	movlw	0
  7938  0ABD  3186  263F  318A   	fcall	_putByte
  7939                           
  7940                           ;VCAMIX_SPI_Master.c: 53: putByte(0xFF,0);
  7941  0AC0  3000               	movlw	0
  7942  0AC1  0020               	movlb	0	; select bank0
  7943  0AC2  00CC               	movwf	putByte@clockPin
  7944  0AC3  00CD               	movwf	putByte@clockPin+1
  7945  0AC4  30FF               	movlw	255
  7946  0AC5  3186  263F         	fcall	_putByte
  7947                           
  7948                           ;VCAMIX_SPI_Master.c: 56: PORTA |= 0x80 ;
  7949  0AC7  0020               	movlb	0	; select bank0
  7950  0AC8  178C               	bsf	12,7	;volatile
  7951  0AC9  0008               	return
  7952  0ACA                     __end_of_initDAC528:	
  7953                           
  7954                           	psect	text7
  7955  063F                     __ptext7:	
  7956 ;; *************** function _putByte *****************
  7957 ;; Defined at:
  7958 ;;		line 14 in file "VCAMIX_SPI_Master.c"
  7959 ;; Parameters:    Size  Location     Type
  7960 ;;  data            1    wreg     unsigned char 
  7961 ;;  clockPin        2   44[BANK0 ] int 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  data            1   50[BANK0 ] unsigned char 
  7964 ;;  i               1   52[BANK0 ] unsigned char 
  7965 ;;  mask            1   51[BANK0 ] unsigned char 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;Total ram usage:        9 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:    5
  7982 ;; This function calls:
  7983 ;;		___awtoft
  7984 ;;		___ftmul
  7985 ;;		___fttol
  7986 ;; This function is called by:
  7987 ;;		_initDAC528
  7988 ;;		_writeDAC528
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           
  7993                           ;psect for function _putByte
  7994  063F                     _putByte:	
  7995                           
  7996                           ;incstack = 0
  7997                           ; Regs used in _putByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7998                           ;putByte@data stored from wreg
  7999  063F  0020               	movlb	0	; select bank0
  8000  0640  00D2               	movwf	putByte@data
  8001                           
  8002                           ;VCAMIX_SPI_Master.c: 15: uint8_t i = 8;
  8003  0641  3008               	movlw	8
  8004  0642  00CE               	movwf	??_putByte
  8005  0643  084E               	movf	??_putByte,w
  8006  0644  00D4               	movwf	putByte@i
  8007  0645                     l722:	
  8008                           ;VCAMIX_SPI_Master.c: 16: uint8_t mask;
  8009                           ;VCAMIX_SPI_Master.c: 17: while(i > 0) {
  8010                           
  8011  0645  0854               	movf	putByte@i,w
  8012  0646  1903               	btfsc	3,2
  8013  0647  0008               	return
  8014                           
  8015                           ;VCAMIX_SPI_Master.c: 18: mask = 0x01 << (i - 1);
  8016  0648  3001               	movlw	1
  8017  0649  00CE               	movwf	??_putByte
  8018  064A  0854               	movf	putByte@i,w
  8019  064B  3EFF               	addlw	-1
  8020  064C  0A89               	incf	9,f
  8021  064D  2E4F               	goto	u2544
  8022  064E                     u2545:	
  8023  064E  35CE               	lslf	??_putByte,f
  8024  064F                     u2544:	
  8025  064F  0B89               	decfsz	9,f
  8026  0650  2E4E               	goto	u2545
  8027  0651  084E               	movf	??_putByte,w
  8028  0652  00CF               	movwf	??_putByte+1
  8029  0653  084F               	movf	??_putByte+1,w
  8030  0654  00D3               	movwf	putByte@mask
  8031                           
  8032                           ;VCAMIX_SPI_Master.c: 20: PORTB &= 0xBF ;
  8033  0655  30BF               	movlw	191
  8034  0656  00CE               	movwf	??_putByte
  8035  0657  084E               	movf	??_putByte,w
  8036  0658  058D               	andwf	13,f	;volatile
  8037                           
  8038                           ;VCAMIX_SPI_Master.c: 22: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8039  0659  301C               	movlw	low (_clockMicroTime| (0+32768))
  8040  065A  0084               	movwf	4
  8041  065B  3090               	movlw	high (_clockMicroTime| (0+32768))
  8042  065C  0085               	movwf	5
  8043  065D  3F00               	moviw [0]fsr0
  8044  065E  00A8               	movwf	___awtoft@c
  8045  065F  3F01               	moviw [1]fsr0
  8046  0660  00A9               	movwf	___awtoft@c+1
  8047  0661  318B  236C  3186   	fcall	___awtoft
  8048  0664  0020               	movlb	0	; select bank0
  8049  0665  0828               	movf	?___awtoft,w
  8050  0666  00B1               	movwf	___ftmul@f2
  8051  0667  0829               	movf	?___awtoft+1,w
  8052  0668  00B2               	movwf	___ftmul@f2+1
  8053  0669  082A               	movf	?___awtoft+2,w
  8054  066A  00B3               	movwf	___ftmul@f2+2
  8055  066B  3000               	movlw	0
  8056  066C  00AE               	movwf	___ftmul@f1
  8057  066D  3000               	movlw	0
  8058  066E  00AF               	movwf	___ftmul@f1+1
  8059  066F  3041               	movlw	65
  8060  0670  00B0               	movwf	___ftmul@f1+2
  8061  0671  3186  26F4  3186   	fcall	___ftmul
  8062  0674  0020               	movlb	0	; select bank0
  8063  0675  082E               	movf	?___ftmul,w
  8064  0676  00BE               	movwf	___fttol@f1
  8065  0677  082F               	movf	?___ftmul+1,w
  8066  0678  00BF               	movwf	___fttol@f1+1
  8067  0679  0830               	movf	?___ftmul+2,w
  8068  067A  00C0               	movwf	___fttol@f1+2
  8069  067B  318E  2645  3186   	fcall	___fttol
  8070  067E  0020               	movlb	0	; select bank0
  8071  067F  083E               	movf	?___fttol,w
  8072  0680  00CE               	movwf	??_putByte
  8073  0681  083F               	movf	?___fttol+1,w
  8074  0682  00CF               	movwf	??_putByte+1
  8075  0683  0840               	movf	?___fttol+2,w
  8076  0684  00D0               	movwf	??_putByte+2
  8077  0685  0841               	movf	?___fttol+3,w
  8078  0686  00D1               	movwf	??_putByte+3
  8079                           
  8080                           ;VCAMIX_SPI_Master.c: 23: if (data & mask){
  8081  0687  0020               	movlb	0	; select bank0
  8082  0688  0852               	movf	putByte@data,w
  8083  0689  0553               	andwf	putByte@mask,w
  8084  068A  1903               	btfsc	3,2
  8085  068B  2E8E               	goto	l3113
  8086                           
  8087                           ;VCAMIX_SPI_Master.c: 25: PORTB |= 0x80 ;
  8088  068C  178D               	bsf	13,7	;volatile
  8089                           
  8090                           ;VCAMIX_SPI_Master.c: 26: }else{
  8091  068D  2E92               	goto	l3115
  8092  068E                     l3113:	
  8093                           
  8094                           ;VCAMIX_SPI_Master.c: 28: PORTB &= 0x7F ;
  8095  068E  307F               	movlw	127
  8096  068F  00CE               	movwf	??_putByte
  8097  0690  084E               	movf	??_putByte,w
  8098  0691  058D               	andwf	13,f	;volatile
  8099  0692                     l3115:	
  8100                           
  8101                           ;VCAMIX_SPI_Master.c: 29: }
  8102                           ;VCAMIX_SPI_Master.c: 31: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8103  0692  301C               	movlw	low (_clockMicroTime| (0+32768))
  8104  0693  0084               	movwf	4
  8105  0694  3090               	movlw	high (_clockMicroTime| (0+32768))
  8106  0695  0085               	movwf	5
  8107  0696  3F00               	moviw [0]fsr0
  8108  0697  00A8               	movwf	___awtoft@c
  8109  0698  3F01               	moviw [1]fsr0
  8110  0699  00A9               	movwf	___awtoft@c+1
  8111  069A  318B  236C  3186   	fcall	___awtoft
  8112  069D  0020               	movlb	0	; select bank0
  8113  069E  0828               	movf	?___awtoft,w
  8114  069F  00B1               	movwf	___ftmul@f2
  8115  06A0  0829               	movf	?___awtoft+1,w
  8116  06A1  00B2               	movwf	___ftmul@f2+1
  8117  06A2  082A               	movf	?___awtoft+2,w
  8118  06A3  00B3               	movwf	___ftmul@f2+2
  8119  06A4  3000               	movlw	0
  8120  06A5  00AE               	movwf	___ftmul@f1
  8121  06A6  3000               	movlw	0
  8122  06A7  00AF               	movwf	___ftmul@f1+1
  8123  06A8  3041               	movlw	65
  8124  06A9  00B0               	movwf	___ftmul@f1+2
  8125  06AA  3186  26F4  3186   	fcall	___ftmul
  8126  06AD  0020               	movlb	0	; select bank0
  8127  06AE  082E               	movf	?___ftmul,w
  8128  06AF  00BE               	movwf	___fttol@f1
  8129  06B0  082F               	movf	?___ftmul+1,w
  8130  06B1  00BF               	movwf	___fttol@f1+1
  8131  06B2  0830               	movf	?___ftmul+2,w
  8132  06B3  00C0               	movwf	___fttol@f1+2
  8133  06B4  318E  2645  3186   	fcall	___fttol
  8134  06B7  0020               	movlb	0	; select bank0
  8135  06B8  083E               	movf	?___fttol,w
  8136  06B9  00CE               	movwf	??_putByte
  8137  06BA  083F               	movf	?___fttol+1,w
  8138  06BB  00CF               	movwf	??_putByte+1
  8139  06BC  0840               	movf	?___fttol+2,w
  8140  06BD  00D0               	movwf	??_putByte+2
  8141  06BE  0841               	movf	?___fttol+3,w
  8142  06BF  00D1               	movwf	??_putByte+3
  8143                           
  8144                           ;VCAMIX_SPI_Master.c: 33: PORTB |= 0x40 ;
  8145  06C0  0020               	movlb	0	; select bank0
  8146  06C1  170D               	bsf	13,6	;volatile
  8147                           
  8148                           ;VCAMIX_SPI_Master.c: 35: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8149  06C2  301C               	movlw	low (_clockMicroTime| (0+32768))
  8150  06C3  0084               	movwf	4
  8151  06C4  3090               	movlw	high (_clockMicroTime| (0+32768))
  8152  06C5  0085               	movwf	5
  8153  06C6  3F00               	moviw [0]fsr0
  8154  06C7  00A8               	movwf	___awtoft@c
  8155  06C8  3F01               	moviw [1]fsr0
  8156  06C9  00A9               	movwf	___awtoft@c+1
  8157  06CA  318B  236C  3186   	fcall	___awtoft
  8158  06CD  0020               	movlb	0	; select bank0
  8159  06CE  0828               	movf	?___awtoft,w
  8160  06CF  00B1               	movwf	___ftmul@f2
  8161  06D0  0829               	movf	?___awtoft+1,w
  8162  06D1  00B2               	movwf	___ftmul@f2+1
  8163  06D2  082A               	movf	?___awtoft+2,w
  8164  06D3  00B3               	movwf	___ftmul@f2+2
  8165  06D4  3000               	movlw	0
  8166  06D5  00AE               	movwf	___ftmul@f1
  8167  06D6  3000               	movlw	0
  8168  06D7  00AF               	movwf	___ftmul@f1+1
  8169  06D8  3041               	movlw	65
  8170  06D9  00B0               	movwf	___ftmul@f1+2
  8171  06DA  3186  26F4  3186   	fcall	___ftmul
  8172  06DD  0020               	movlb	0	; select bank0
  8173  06DE  082E               	movf	?___ftmul,w
  8174  06DF  00BE               	movwf	___fttol@f1
  8175  06E0  082F               	movf	?___ftmul+1,w
  8176  06E1  00BF               	movwf	___fttol@f1+1
  8177  06E2  0830               	movf	?___ftmul+2,w
  8178  06E3  00C0               	movwf	___fttol@f1+2
  8179  06E4  318E  2645  3186   	fcall	___fttol
  8180  06E7  0020               	movlb	0	; select bank0
  8181  06E8  083E               	movf	?___fttol,w
  8182  06E9  00CE               	movwf	??_putByte
  8183  06EA  083F               	movf	?___fttol+1,w
  8184  06EB  00CF               	movwf	??_putByte+1
  8185  06EC  0840               	movf	?___fttol+2,w
  8186  06ED  00D0               	movwf	??_putByte+2
  8187  06EE  0841               	movf	?___fttol+3,w
  8188  06EF  00D1               	movwf	??_putByte+3
  8189                           
  8190                           ;VCAMIX_SPI_Master.c: 36: --i;
  8191  06F0  3001               	movlw	1
  8192  06F1  0020               	movlb	0	; select bank0
  8193  06F2  02D4               	subwf	putByte@i,f
  8194  06F3  2E45               	goto	l722
  8195  06F4                     __end_of_putByte:	
  8196                           
  8197                           	psect	text8
  8198  0E45                     __ptext8:	
  8199 ;; *************** function ___fttol *****************
  8200 ;; Defined at:
  8201 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8202 ;; Parameters:    Size  Location     Type
  8203 ;;  f1              3   30[BANK0 ] float 
  8204 ;; Auto vars:     Size  Location     Type
  8205 ;;  lval            4   39[BANK0 ] unsigned long 
  8206 ;;  exp1            1   43[BANK0 ] unsigned char 
  8207 ;;  sign1           1   38[BANK0 ] unsigned char 
  8208 ;; Return value:  Size  Location     Type
  8209 ;;                  4   30[BANK0 ] long 
  8210 ;; Registers used:
  8211 ;;		wreg, status,2, status,0
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8217 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8218 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8220 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8221 ;;Total ram usage:       14 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    3
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		_main
  8228 ;;		_putByte
  8229 ;;		_LED7SegDisplayValue
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           
  8234                           ;psect for function ___fttol
  8235  0E45                     ___fttol:	
  8236                           
  8237                           ;incstack = 0
  8238                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8239  0E45  0020               	movlb	0	; select bank0
  8240  0E46  083E               	movf	___fttol@f1,w
  8241  0E47  00C2               	movwf	??___fttol
  8242  0E48  083F               	movf	___fttol@f1+1,w
  8243  0E49  00C3               	movwf	??___fttol+1
  8244  0E4A  0840               	movf	___fttol@f1+2,w
  8245  0E4B  00C4               	movwf	??___fttol+2
  8246  0E4C  1003               	clrc
  8247  0E4D  0D43               	rlf	??___fttol+1,w
  8248  0E4E  0D44               	rlf	??___fttol+2,w
  8249  0E4F  00C5               	movwf	??___fttol+3
  8250  0E50  0845               	movf	??___fttol+3,w
  8251  0E51  00CB               	movwf	___fttol@exp1
  8252  0E52  084B               	movf	___fttol@exp1,w
  8253  0E53  1D03               	btfss	3,2
  8254  0E54  2E5E               	goto	l2941
  8255  0E55  3000               	movlw	0
  8256  0E56  00C1               	movwf	?___fttol+3
  8257  0E57  3000               	movlw	0
  8258  0E58  00C0               	movwf	?___fttol+2
  8259  0E59  3000               	movlw	0
  8260  0E5A  00BF               	movwf	?___fttol+1
  8261  0E5B  3000               	movlw	0
  8262  0E5C  00BE               	movwf	?___fttol
  8263  0E5D  0008               	return
  8264  0E5E                     l2941:	
  8265  0E5E  083E               	movf	___fttol@f1,w
  8266  0E5F  00C2               	movwf	??___fttol
  8267  0E60  083F               	movf	___fttol@f1+1,w
  8268  0E61  00C3               	movwf	??___fttol+1
  8269  0E62  0840               	movf	___fttol@f1+2,w
  8270  0E63  00C4               	movwf	??___fttol+2
  8271  0E64  3017               	movlw	23
  8272  0E65                     u2385:	
  8273  0E65  36C4               	lsrf	??___fttol+2,f
  8274  0E66  0CC3               	rrf	??___fttol+1,f
  8275  0E67  0CC2               	rrf	??___fttol,f
  8276  0E68  0B89               	decfsz	9,f
  8277  0E69  2E65               	goto	u2385
  8278  0E6A  0842               	movf	??___fttol,w
  8279  0E6B  00C5               	movwf	??___fttol+3
  8280  0E6C  0845               	movf	??___fttol+3,w
  8281  0E6D  00C6               	movwf	___fttol@sign1
  8282  0E6E  17BF               	bsf	___fttol@f1+1,7
  8283  0E6F  30FF               	movlw	255
  8284  0E70  05BE               	andwf	___fttol@f1,f
  8285  0E71  30FF               	movlw	255
  8286  0E72  05BF               	andwf	___fttol@f1+1,f
  8287  0E73  3000               	movlw	0
  8288  0E74  05C0               	andwf	___fttol@f1+2,f
  8289  0E75  083E               	movf	___fttol@f1,w
  8290  0E76  00C7               	movwf	___fttol@lval
  8291  0E77  083F               	movf	___fttol@f1+1,w
  8292  0E78  00C8               	movwf	___fttol@lval+1
  8293  0E79  0840               	movf	___fttol@f1+2,w
  8294  0E7A  00C9               	movwf	___fttol@lval+2
  8295  0E7B  01CA               	clrf	___fttol@lval+3
  8296  0E7C  308E               	movlw	142
  8297  0E7D  02CB               	subwf	___fttol@exp1,f
  8298  0E7E  1FCB               	btfss	___fttol@exp1,7
  8299  0E7F  2E9C               	goto	l2961
  8300  0E80  084B               	movf	___fttol@exp1,w
  8301  0E81  3A80               	xorlw	128
  8302  0E82  3E8F               	addlw	143
  8303  0E83  1803               	skipnc
  8304  0E84  2E8E               	goto	l2959
  8305  0E85  3000               	movlw	0
  8306  0E86  00C1               	movwf	?___fttol+3
  8307  0E87  3000               	movlw	0
  8308  0E88  00C0               	movwf	?___fttol+2
  8309  0E89  3000               	movlw	0
  8310  0E8A  00BF               	movwf	?___fttol+1
  8311  0E8B  3000               	movlw	0
  8312  0E8C  00BE               	movwf	?___fttol
  8313  0E8D  0008               	return
  8314  0E8E                     l2959:	
  8315  0E8E  3001               	movlw	1
  8316  0E8F                     u2415:	
  8317  0E8F  36CA               	lsrf	___fttol@lval+3,f
  8318  0E90  0CC9               	rrf	___fttol@lval+2,f
  8319  0E91  0CC8               	rrf	___fttol@lval+1,f
  8320  0E92  0CC7               	rrf	___fttol@lval,f
  8321  0E93  0B89               	decfsz	9,f
  8322  0E94  2E8F               	goto	u2415
  8323  0E95  3001               	movlw	1
  8324  0E96  00C2               	movwf	??___fttol
  8325  0E97  0842               	movf	??___fttol,w
  8326  0E98  07CB               	addwf	___fttol@exp1,f
  8327  0E99  1903               	btfsc	3,2
  8328  0E9A  2EB5               	goto	l2969
  8329  0E9B  2E8E               	goto	l2959
  8330  0E9C                     l2961:	
  8331  0E9C  3018               	movlw	24
  8332  0E9D  024B               	subwf	___fttol@exp1,w
  8333  0E9E  1C03               	skipc
  8334  0E9F  2EB2               	goto	l1185
  8335  0EA0  3000               	movlw	0
  8336  0EA1  00C1               	movwf	?___fttol+3
  8337  0EA2  3000               	movlw	0
  8338  0EA3  00C0               	movwf	?___fttol+2
  8339  0EA4  3000               	movlw	0
  8340  0EA5  00BF               	movwf	?___fttol+1
  8341  0EA6  3000               	movlw	0
  8342  0EA7  00BE               	movwf	?___fttol
  8343  0EA8  0008               	return
  8344  0EA9                     l2967:	
  8345  0EA9  3001               	movlw	1
  8346  0EAA                     u2445:	
  8347  0EAA  35C7               	lslf	___fttol@lval,f
  8348  0EAB  0DC8               	rlf	___fttol@lval+1,f
  8349  0EAC  0DC9               	rlf	___fttol@lval+2,f
  8350  0EAD  0DCA               	rlf	___fttol@lval+3,f
  8351  0EAE  0B89               	decfsz	9,f
  8352  0EAF  2EAA               	goto	u2445
  8353  0EB0  3001               	movlw	1
  8354  0EB1  02CB               	subwf	___fttol@exp1,f
  8355  0EB2                     l1185:	
  8356  0EB2  084B               	movf	___fttol@exp1,w
  8357  0EB3  1D03               	btfss	3,2
  8358  0EB4  2EA9               	goto	l2967
  8359  0EB5                     l2969:	
  8360  0EB5  0846               	movf	___fttol@sign1,w
  8361  0EB6  1903               	btfsc	3,2
  8362  0EB7  2EC3               	goto	l2973
  8363  0EB8  09C7               	comf	___fttol@lval,f
  8364  0EB9  09C8               	comf	___fttol@lval+1,f
  8365  0EBA  09C9               	comf	___fttol@lval+2,f
  8366  0EBB  09CA               	comf	___fttol@lval+3,f
  8367  0EBC  0AC7               	incf	___fttol@lval,f
  8368  0EBD  1903               	skipnz
  8369  0EBE  0AC8               	incf	___fttol@lval+1,f
  8370  0EBF  1903               	skipnz
  8371  0EC0  0AC9               	incf	___fttol@lval+2,f
  8372  0EC1  1903               	skipnz
  8373  0EC2  0ACA               	incf	___fttol@lval+3,f
  8374  0EC3                     l2973:	
  8375  0EC3  084A               	movf	___fttol@lval+3,w
  8376  0EC4  00C1               	movwf	?___fttol+3
  8377  0EC5  0849               	movf	___fttol@lval+2,w
  8378  0EC6  00C0               	movwf	?___fttol+2
  8379  0EC7  0848               	movf	___fttol@lval+1,w
  8380  0EC8  00BF               	movwf	?___fttol+1
  8381  0EC9  0847               	movf	___fttol@lval,w
  8382  0ECA  00BE               	movwf	?___fttol
  8383  0ECB  0008               	return
  8384  0ECC                     __end_of___fttol:	
  8385                           
  8386                           	psect	text9
  8387  06F4                     __ptext9:	
  8388 ;; *************** function ___ftmul *****************
  8389 ;; Defined at:
  8390 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  f1              3   14[BANK0 ] float 
  8393 ;;  f2              3   17[BANK0 ] float 
  8394 ;; Auto vars:     Size  Location     Type
  8395 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8396 ;;  sign            1   29[BANK0 ] unsigned char 
  8397 ;;  cntr            1   28[BANK0 ] unsigned char 
  8398 ;;  exp             1   24[BANK0 ] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  3   14[BANK0 ] float 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8408 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;Total ram usage:       16 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    4
  8415 ;; This function calls:
  8416 ;;		___ftpack
  8417 ;; This function is called by:
  8418 ;;		_putByte
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function ___ftmul
  8424  06F4                     ___ftmul:	
  8425                           
  8426                           ;incstack = 0
  8427                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8428  06F4  0020               	movlb	0	; select bank0
  8429  06F5  082E               	movf	___ftmul@f1,w
  8430  06F6  00B4               	movwf	??___ftmul
  8431  06F7  082F               	movf	___ftmul@f1+1,w
  8432  06F8  00B5               	movwf	??___ftmul+1
  8433  06F9  0830               	movf	___ftmul@f1+2,w
  8434  06FA  00B6               	movwf	??___ftmul+2
  8435  06FB  1003               	clrc
  8436  06FC  0D35               	rlf	??___ftmul+1,w
  8437  06FD  0D36               	rlf	??___ftmul+2,w
  8438  06FE  00B7               	movwf	??___ftmul+3
  8439  06FF  0837               	movf	??___ftmul+3,w
  8440  0700  00B8               	movwf	___ftmul@exp
  8441  0701  0838               	movf	___ftmul@exp,w
  8442  0702  1D03               	btfss	3,2
  8443  0703  2F0B               	goto	l2891
  8444  0704  3000               	movlw	0
  8445  0705  00AE               	movwf	?___ftmul
  8446  0706  3000               	movlw	0
  8447  0707  00AF               	movwf	?___ftmul+1
  8448  0708  3000               	movlw	0
  8449  0709  00B0               	movwf	?___ftmul+2
  8450  070A  0008               	return
  8451  070B                     l2891:	
  8452  070B  0831               	movf	___ftmul@f2,w
  8453  070C  00B4               	movwf	??___ftmul
  8454  070D  0832               	movf	___ftmul@f2+1,w
  8455  070E  00B5               	movwf	??___ftmul+1
  8456  070F  0833               	movf	___ftmul@f2+2,w
  8457  0710  00B6               	movwf	??___ftmul+2
  8458  0711  1003               	clrc
  8459  0712  0D35               	rlf	??___ftmul+1,w
  8460  0713  0D36               	rlf	??___ftmul+2,w
  8461  0714  00B7               	movwf	??___ftmul+3
  8462  0715  0837               	movf	??___ftmul+3,w
  8463  0716  00BD               	movwf	___ftmul@sign
  8464  0717  083D               	movf	___ftmul@sign,w
  8465  0718  1D03               	btfss	3,2
  8466  0719  2F21               	goto	l2897
  8467  071A  3000               	movlw	0
  8468  071B  00AE               	movwf	?___ftmul
  8469  071C  3000               	movlw	0
  8470  071D  00AF               	movwf	?___ftmul+1
  8471  071E  3000               	movlw	0
  8472  071F  00B0               	movwf	?___ftmul+2
  8473  0720  0008               	return
  8474  0721                     l2897:	
  8475  0721  083D               	movf	___ftmul@sign,w
  8476  0722  3E7B               	addlw	123
  8477  0723  00B4               	movwf	??___ftmul
  8478  0724  0834               	movf	??___ftmul,w
  8479  0725  07B8               	addwf	___ftmul@exp,f
  8480  0726  082E               	movf	___ftmul@f1,w
  8481  0727  00B4               	movwf	??___ftmul
  8482  0728  082F               	movf	___ftmul@f1+1,w
  8483  0729  00B5               	movwf	??___ftmul+1
  8484  072A  0830               	movf	___ftmul@f1+2,w
  8485  072B  00B6               	movwf	??___ftmul+2
  8486  072C  3010               	movlw	16
  8487  072D                     u2275:	
  8488  072D  36B6               	lsrf	??___ftmul+2,f
  8489  072E  0CB5               	rrf	??___ftmul+1,f
  8490  072F  0CB4               	rrf	??___ftmul,f
  8491  0730  0B89               	decfsz	9,f
  8492  0731  2F2D               	goto	u2275
  8493  0732  0834               	movf	??___ftmul,w
  8494  0733  00B7               	movwf	??___ftmul+3
  8495  0734  0837               	movf	??___ftmul+3,w
  8496  0735  00BD               	movwf	___ftmul@sign
  8497  0736  0831               	movf	___ftmul@f2,w
  8498  0737  00B4               	movwf	??___ftmul
  8499  0738  0832               	movf	___ftmul@f2+1,w
  8500  0739  00B5               	movwf	??___ftmul+1
  8501  073A  0833               	movf	___ftmul@f2+2,w
  8502  073B  00B6               	movwf	??___ftmul+2
  8503  073C  3010               	movlw	16
  8504  073D                     u2285:	
  8505  073D  36B6               	lsrf	??___ftmul+2,f
  8506  073E  0CB5               	rrf	??___ftmul+1,f
  8507  073F  0CB4               	rrf	??___ftmul,f
  8508  0740  0B89               	decfsz	9,f
  8509  0741  2F3D               	goto	u2285
  8510  0742  0834               	movf	??___ftmul,w
  8511  0743  00B7               	movwf	??___ftmul+3
  8512  0744  0837               	movf	??___ftmul+3,w
  8513  0745  06BD               	xorwf	___ftmul@sign,f
  8514  0746  3080               	movlw	128
  8515  0747  00B4               	movwf	??___ftmul
  8516  0748  0834               	movf	??___ftmul,w
  8517  0749  05BD               	andwf	___ftmul@sign,f
  8518  074A  17AF               	bsf	___ftmul@f1+1,7
  8519  074B  17B2               	bsf	___ftmul@f2+1,7
  8520  074C  30FF               	movlw	255
  8521  074D  05B1               	andwf	___ftmul@f2,f
  8522  074E  30FF               	movlw	255
  8523  074F  05B2               	andwf	___ftmul@f2+1,f
  8524  0750  3000               	movlw	0
  8525  0751  05B3               	andwf	___ftmul@f2+2,f
  8526  0752  3000               	movlw	0
  8527  0753  00B9               	movwf	___ftmul@f3_as_product
  8528  0754  3000               	movlw	0
  8529  0755  00BA               	movwf	___ftmul@f3_as_product+1
  8530  0756  3000               	movlw	0
  8531  0757  00BB               	movwf	___ftmul@f3_as_product+2
  8532  0758  3007               	movlw	7
  8533  0759  00B4               	movwf	??___ftmul
  8534  075A  0834               	movf	??___ftmul,w
  8535  075B  00BC               	movwf	___ftmul@cntr
  8536  075C                     l2909:	
  8537  075C  1C2E               	btfss	___ftmul@f1,0
  8538  075D  2F64               	goto	l2913
  8539  075E  0831               	movf	___ftmul@f2,w
  8540  075F  07B9               	addwf	___ftmul@f3_as_product,f
  8541  0760  0832               	movf	___ftmul@f2+1,w
  8542  0761  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8543  0762  0833               	movf	___ftmul@f2+2,w
  8544  0763  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8545  0764                     l2913:	
  8546  0764  3001               	movlw	1
  8547  0765                     u2305:	
  8548  0765  36B0               	lsrf	___ftmul@f1+2,f
  8549  0766  0CAF               	rrf	___ftmul@f1+1,f
  8550  0767  0CAE               	rrf	___ftmul@f1,f
  8551  0768  0B89               	decfsz	9,f
  8552  0769  2F65               	goto	u2305
  8553  076A  3001               	movlw	1
  8554  076B                     u2315:	
  8555  076B  35B1               	lslf	___ftmul@f2,f
  8556  076C  0DB2               	rlf	___ftmul@f2+1,f
  8557  076D  0DB3               	rlf	___ftmul@f2+2,f
  8558  076E  0B89               	decfsz	9,f
  8559  076F  2F6B               	goto	u2315
  8560  0770  3001               	movlw	1
  8561  0771  02BC               	subwf	___ftmul@cntr,f
  8562  0772  1D03               	btfss	3,2
  8563  0773  2F5C               	goto	l2909
  8564  0774  3009               	movlw	9
  8565  0775  00B4               	movwf	??___ftmul
  8566  0776  0834               	movf	??___ftmul,w
  8567  0777  00BC               	movwf	___ftmul@cntr
  8568  0778                     l2921:	
  8569  0778  1C2E               	btfss	___ftmul@f1,0
  8570  0779  2F80               	goto	l2925
  8571  077A  0831               	movf	___ftmul@f2,w
  8572  077B  07B9               	addwf	___ftmul@f3_as_product,f
  8573  077C  0832               	movf	___ftmul@f2+1,w
  8574  077D  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8575  077E  0833               	movf	___ftmul@f2+2,w
  8576  077F  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8577  0780                     l2925:	
  8578  0780  3001               	movlw	1
  8579  0781                     u2345:	
  8580  0781  36B0               	lsrf	___ftmul@f1+2,f
  8581  0782  0CAF               	rrf	___ftmul@f1+1,f
  8582  0783  0CAE               	rrf	___ftmul@f1,f
  8583  0784  0B89               	decfsz	9,f
  8584  0785  2F81               	goto	u2345
  8585  0786  3001               	movlw	1
  8586  0787                     u2355:	
  8587  0787  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8588  0788  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8589  0789  0CB9               	rrf	___ftmul@f3_as_product,f
  8590  078A  0B89               	decfsz	9,f
  8591  078B  2F87               	goto	u2355
  8592  078C  3001               	movlw	1
  8593  078D  02BC               	subwf	___ftmul@cntr,f
  8594  078E  1D03               	btfss	3,2
  8595  078F  2F78               	goto	l2921
  8596  0790  0839               	movf	___ftmul@f3_as_product,w
  8597  0791  00A0               	movwf	___ftpack@arg
  8598  0792  083A               	movf	___ftmul@f3_as_product+1,w
  8599  0793  00A1               	movwf	___ftpack@arg+1
  8600  0794  083B               	movf	___ftmul@f3_as_product+2,w
  8601  0795  00A2               	movwf	___ftpack@arg+2
  8602  0796  0838               	movf	___ftmul@exp,w
  8603  0797  00B4               	movwf	??___ftmul
  8604  0798  0834               	movf	??___ftmul,w
  8605  0799  00A3               	movwf	___ftpack@exp
  8606  079A  083D               	movf	___ftmul@sign,w
  8607  079B  00B5               	movwf	??___ftmul+1
  8608  079C  0835               	movf	??___ftmul+1,w
  8609  079D  00A4               	movwf	___ftpack@sign
  8610  079E  318D  25E0         	fcall	___ftpack
  8611  07A0  0020               	movlb	0	; select bank0
  8612  07A1  0820               	movf	?___ftpack,w
  8613  07A2  00AE               	movwf	?___ftmul
  8614  07A3  0821               	movf	?___ftpack+1,w
  8615  07A4  00AF               	movwf	?___ftmul+1
  8616  07A5  0822               	movf	?___ftpack+2,w
  8617  07A6  00B0               	movwf	?___ftmul+2
  8618  07A7  0008               	return
  8619  07A8                     __end_of___ftmul:	
  8620                           
  8621                           	psect	text10
  8622  0B6C                     __ptext10:	
  8623 ;; *************** function ___awtoft *****************
  8624 ;; Defined at:
  8625 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8626 ;; Parameters:    Size  Location     Type
  8627 ;;  c               2    8[BANK0 ] int 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  sign            1   13[BANK0 ] unsigned char 
  8630 ;; Return value:  Size  Location     Type
  8631 ;;                  3    8[BANK0 ] float 
  8632 ;; Registers used:
  8633 ;;		wreg, status,2, status,0, pclath, cstack
  8634 ;; Tracked objects:
  8635 ;;		On entry : 0/0
  8636 ;;		On exit  : 0/0
  8637 ;;		Unchanged: 0/0
  8638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8639 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8642 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8643 ;;Total ram usage:        6 bytes
  8644 ;; Hardware stack levels used:    1
  8645 ;; Hardware stack levels required when called:    4
  8646 ;; This function calls:
  8647 ;;		___ftpack
  8648 ;; This function is called by:
  8649 ;;		_main
  8650 ;;		_putByte
  8651 ;; This function uses a non-reentrant model
  8652 ;;
  8653                           
  8654                           
  8655                           ;psect for function ___awtoft
  8656  0B6C                     ___awtoft:	
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8660  0B6C  0020               	movlb	0	; select bank0
  8661  0B6D  01AD               	clrf	___awtoft@sign
  8662  0B6E  1FA9               	btfss	___awtoft@c+1,7
  8663  0B6F  2B77               	goto	l2881
  8664  0B70  09A8               	comf	___awtoft@c,f
  8665  0B71  09A9               	comf	___awtoft@c+1,f
  8666  0B72  0AA8               	incf	___awtoft@c,f
  8667  0B73  1903               	skipnz
  8668  0B74  0AA9               	incf	___awtoft@c+1,f
  8669  0B75  01AD               	clrf	___awtoft@sign
  8670  0B76  0AAD               	incf	___awtoft@sign,f
  8671  0B77                     l2881:	
  8672  0B77  0828               	movf	___awtoft@c,w
  8673  0B78  00A0               	movwf	___ftpack@arg
  8674  0B79  0829               	movf	___awtoft@c+1,w
  8675  0B7A  00A1               	movwf	___ftpack@arg+1
  8676  0B7B  01A2               	clrf	___ftpack@arg+2
  8677  0B7C  308E               	movlw	142
  8678  0B7D  00AB               	movwf	??___awtoft
  8679  0B7E  082B               	movf	??___awtoft,w
  8680  0B7F  00A3               	movwf	___ftpack@exp
  8681  0B80  082D               	movf	___awtoft@sign,w
  8682  0B81  00AC               	movwf	??___awtoft+1
  8683  0B82  082C               	movf	??___awtoft+1,w
  8684  0B83  00A4               	movwf	___ftpack@sign
  8685  0B84  318D  25E0         	fcall	___ftpack
  8686  0B86  0020               	movlb	0	; select bank0
  8687  0B87  0820               	movf	?___ftpack,w
  8688  0B88  00A8               	movwf	?___awtoft
  8689  0B89  0821               	movf	?___ftpack+1,w
  8690  0B8A  00A9               	movwf	?___awtoft+1
  8691  0B8B  0822               	movf	?___ftpack+2,w
  8692  0B8C  00AA               	movwf	?___awtoft+2
  8693  0B8D  0008               	return
  8694  0B8E                     __end_of___awtoft:	
  8695                           
  8696                           	psect	text11
  8697  0D8A                     __ptext11:	
  8698 ;; *************** function _blinkyLoop *****************
  8699 ;; Defined at:
  8700 ;;		line 179 in file "main.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  maxLoops        2   17[BANK0 ] int 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  loopCount       2   22[BANK0 ] int 
  8705 ;;  delayTime       2   20[BANK0 ] int 
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      void 
  8708 ;; Registers used:
  8709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;Total ram usage:        7 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    5
  8722 ;; This function calls:
  8723 ;;		___wmul
  8724 ;;		_delay
  8725 ;; This function is called by:
  8726 ;;		_main
  8727 ;; This function uses a non-reentrant model
  8728 ;;
  8729                           
  8730                           
  8731                           ;psect for function _blinkyLoop
  8732  0D8A                     _blinkyLoop:	
  8733                           
  8734                           ;main.c: 180: int loopCount=maxLoops;
  8735                           
  8736                           ;incstack = 0
  8737                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8738  0D8A  0020               	movlb	0	; select bank0
  8739  0D8B  0832               	movf	blinkyLoop@maxLoops+1,w
  8740  0D8C  00B7               	movwf	blinkyLoop@loopCount+1
  8741  0D8D  0831               	movf	blinkyLoop@maxLoops,w
  8742  0D8E  00B6               	movwf	blinkyLoop@loopCount
  8743                           
  8744                           ;main.c: 181: int delayTime;
  8745                           ;main.c: 183: ODCONB &= 0xF0;
  8746  0D8F  30F0               	movlw	240
  8747  0D90  00B3               	movwf	??_blinkyLoop
  8748  0D91  0833               	movf	??_blinkyLoop,w
  8749  0D92  003E               	movlb	30	; select bank30
  8750  0D93  05C5               	andwf	69,f	;volatile
  8751                           
  8752                           ;main.c: 184: ODCONC &= 0x1F;
  8753  0D94  301F               	movlw	31
  8754  0D95  0020               	movlb	0	; select bank0
  8755  0D96  00B3               	movwf	??_blinkyLoop
  8756  0D97  0833               	movf	??_blinkyLoop,w
  8757  0D98  003E               	movlb	30	; select bank30
  8758  0D99  05D0               	andwf	80,f	;volatile
  8759  0D9A                     l4361:	
  8760                           ;main.c: 185: while(loopCount>0){
  8761                           
  8762  0D9A  0020               	movlb	0	; select bank0
  8763  0D9B  0837               	movf	blinkyLoop@loopCount+1,w
  8764  0D9C  3A80               	xorlw	128
  8765  0D9D  00B3               	movwf	??_blinkyLoop
  8766  0D9E  3080               	movlw	128
  8767  0D9F  0233               	subwf	??_blinkyLoop,w
  8768  0DA0  1D03               	skipz
  8769  0DA1  2DA4               	goto	u4235
  8770  0DA2  3001               	movlw	1
  8771  0DA3  0236               	subwf	blinkyLoop@loopCount,w
  8772  0DA4                     u4235:	
  8773  0DA4  1C03               	btfss	3,0
  8774  0DA5  2DD4               	goto	l4363
  8775                           
  8776                           ;main.c: 186: delayTime=loopCount*400;
  8777  0DA6  0020               	movlb	0	; select bank0
  8778  0DA7  0837               	movf	blinkyLoop@loopCount+1,w
  8779  0DA8  00A1               	movwf	___wmul@multiplier+1
  8780  0DA9  0836               	movf	blinkyLoop@loopCount,w
  8781  0DAA  00A0               	movwf	___wmul@multiplier
  8782  0DAB  3090               	movlw	144
  8783  0DAC  00A2               	movwf	___wmul@multiplicand
  8784  0DAD  3001               	movlw	1
  8785  0DAE  00A3               	movwf	___wmul@multiplicand+1
  8786  0DAF  318B  2314  318D   	fcall	___wmul
  8787  0DB2  0020               	movlb	0	; select bank0
  8788  0DB3  0821               	movf	?___wmul+1,w
  8789  0DB4  00B5               	movwf	blinkyLoop@delayTime+1
  8790  0DB5  0820               	movf	?___wmul,w
  8791  0DB6  00B4               	movwf	blinkyLoop@delayTime
  8792                           
  8793                           ;main.c: 189: LATB |= 0x0F;
  8794  0DB7  300F               	movlw	15
  8795  0DB8  00B3               	movwf	??_blinkyLoop
  8796  0DB9  0833               	movf	??_blinkyLoop,w
  8797  0DBA  0497               	iorwf	23,f	;volatile
  8798                           
  8799                           ;main.c: 192: delay(delayTime);
  8800  0DBB  0835               	movf	blinkyLoop@delayTime+1,w
  8801  0DBC  00A7               	movwf	delay@delaytime+1
  8802  0DBD  0834               	movf	blinkyLoop@delayTime,w
  8803  0DBE  00A6               	movwf	delay@delaytime
  8804  0DBF  318D  2537  318D   	fcall	_delay
  8805                           
  8806                           ;main.c: 194: LATB &= 0xF0;
  8807  0DC2  30F0               	movlw	240
  8808  0DC3  0020               	movlb	0	; select bank0
  8809  0DC4  00B3               	movwf	??_blinkyLoop
  8810  0DC5  0833               	movf	??_blinkyLoop,w
  8811  0DC6  0597               	andwf	23,f	;volatile
  8812                           
  8813                           ;main.c: 197: delay(delayTime);
  8814  0DC7  0835               	movf	blinkyLoop@delayTime+1,w
  8815  0DC8  00A7               	movwf	delay@delaytime+1
  8816  0DC9  0834               	movf	blinkyLoop@delayTime,w
  8817  0DCA  00A6               	movwf	delay@delaytime
  8818  0DCB  318D  2537  318D   	fcall	_delay
  8819                           
  8820                           ;main.c: 199: loopCount--;
  8821  0DCE  30FF               	movlw	255
  8822  0DCF  0020               	movlb	0	; select bank0
  8823  0DD0  07B6               	addwf	blinkyLoop@loopCount,f
  8824  0DD1  30FF               	movlw	255
  8825  0DD2  3DB7               	addwfc	blinkyLoop@loopCount+1,f
  8826  0DD3  2D9A               	goto	l4361
  8827  0DD4                     l4363:	
  8828                           
  8829                           ;main.c: 200: }
  8830                           ;main.c: 201: LATB |= 0x0F;
  8831  0DD4  300F               	movlw	15
  8832  0DD5  0020               	movlb	0	; select bank0
  8833  0DD6  00B3               	movwf	??_blinkyLoop
  8834  0DD7  0833               	movf	??_blinkyLoop,w
  8835  0DD8  0497               	iorwf	23,f	;volatile
  8836                           
  8837                           ;main.c: 203: delay(5000);
  8838  0DD9  3088               	movlw	136
  8839  0DDA  00A6               	movwf	delay@delaytime
  8840  0DDB  3013               	movlw	19
  8841  0DDC  00A7               	movwf	delay@delaytime+1
  8842  0DDD  318D  2537         	fcall	_delay
  8843  0DDF  0008               	return
  8844  0DE0                     __end_of_blinkyLoop:	
  8845                           ;main.c: 204: return;
  8846                           
  8847                           
  8848                           	psect	text12
  8849  0F57                     __ptext12:	
  8850 ;; *************** function ___ftdiv *****************
  8851 ;; Defined at:
  8852 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8853 ;; Parameters:    Size  Location     Type
  8854 ;;  f2              3   14[BANK0 ] float 
  8855 ;;  f1              3   17[BANK0 ] float 
  8856 ;; Auto vars:     Size  Location     Type
  8857 ;;  f3              3   25[BANK0 ] float 
  8858 ;;  sign            1   29[BANK0 ] unsigned char 
  8859 ;;  exp             1   28[BANK0 ] unsigned char 
  8860 ;;  cntr            1   24[BANK0 ] unsigned char 
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  3   14[BANK0 ] float 
  8863 ;; Registers used:
  8864 ;;		wreg, status,2, status,0, pclath, cstack
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8870 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8871 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8872 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8873 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8874 ;;Total ram usage:       16 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    4
  8877 ;; This function calls:
  8878 ;;		___ftpack
  8879 ;; This function is called by:
  8880 ;;		_main
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           
  8885                           ;psect for function ___ftdiv
  8886  0F57                     ___ftdiv:	
  8887                           
  8888                           ;incstack = 0
  8889                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  8890  0F57  0020               	movlb	0	; select bank0
  8891  0F58  0831               	movf	___ftdiv@f1,w
  8892  0F59  00B4               	movwf	??___ftdiv
  8893  0F5A  0832               	movf	___ftdiv@f1+1,w
  8894  0F5B  00B5               	movwf	??___ftdiv+1
  8895  0F5C  0833               	movf	___ftdiv@f1+2,w
  8896  0F5D  00B6               	movwf	??___ftdiv+2
  8897  0F5E  1003               	clrc
  8898  0F5F  0D35               	rlf	??___ftdiv+1,w
  8899  0F60  0D36               	rlf	??___ftdiv+2,w
  8900  0F61  00B7               	movwf	??___ftdiv+3
  8901  0F62  0837               	movf	??___ftdiv+3,w
  8902  0F63  00BC               	movwf	___ftdiv@exp
  8903  0F64  083C               	movf	___ftdiv@exp,w
  8904  0F65  1D03               	btfss	3,2
  8905  0F66  2F6E               	goto	l3669
  8906  0F67  3000               	movlw	0
  8907  0F68  00AE               	movwf	?___ftdiv
  8908  0F69  3000               	movlw	0
  8909  0F6A  00AF               	movwf	?___ftdiv+1
  8910  0F6B  3000               	movlw	0
  8911  0F6C  00B0               	movwf	?___ftdiv+2
  8912  0F6D  0008               	return
  8913  0F6E                     l3669:	
  8914  0F6E  082E               	movf	___ftdiv@f2,w
  8915  0F6F  00B4               	movwf	??___ftdiv
  8916  0F70  082F               	movf	___ftdiv@f2+1,w
  8917  0F71  00B5               	movwf	??___ftdiv+1
  8918  0F72  0830               	movf	___ftdiv@f2+2,w
  8919  0F73  00B6               	movwf	??___ftdiv+2
  8920  0F74  1003               	clrc
  8921  0F75  0D35               	rlf	??___ftdiv+1,w
  8922  0F76  0D36               	rlf	??___ftdiv+2,w
  8923  0F77  00B7               	movwf	??___ftdiv+3
  8924  0F78  0837               	movf	??___ftdiv+3,w
  8925  0F79  00BD               	movwf	___ftdiv@sign
  8926  0F7A  083D               	movf	___ftdiv@sign,w
  8927  0F7B  1D03               	btfss	3,2
  8928  0F7C  2F84               	goto	l3675
  8929  0F7D  3000               	movlw	0
  8930  0F7E  00AE               	movwf	?___ftdiv
  8931  0F7F  3000               	movlw	0
  8932  0F80  00AF               	movwf	?___ftdiv+1
  8933  0F81  3000               	movlw	0
  8934  0F82  00B0               	movwf	?___ftdiv+2
  8935  0F83  0008               	return
  8936  0F84                     l3675:	
  8937  0F84  3000               	movlw	0
  8938  0F85  00B9               	movwf	___ftdiv@f3
  8939  0F86  3000               	movlw	0
  8940  0F87  00BA               	movwf	___ftdiv@f3+1
  8941  0F88  3000               	movlw	0
  8942  0F89  00BB               	movwf	___ftdiv@f3+2
  8943  0F8A  3089               	movlw	137
  8944  0F8B  073D               	addwf	___ftdiv@sign,w
  8945  0F8C  00B4               	movwf	??___ftdiv
  8946  0F8D  0834               	movf	??___ftdiv,w
  8947  0F8E  02BC               	subwf	___ftdiv@exp,f
  8948  0F8F  0831               	movf	___ftdiv@f1,w
  8949  0F90  00B4               	movwf	??___ftdiv
  8950  0F91  0832               	movf	___ftdiv@f1+1,w
  8951  0F92  00B5               	movwf	??___ftdiv+1
  8952  0F93  0833               	movf	___ftdiv@f1+2,w
  8953  0F94  00B6               	movwf	??___ftdiv+2
  8954  0F95  3010               	movlw	16
  8955  0F96                     u3255:	
  8956  0F96  36B6               	lsrf	??___ftdiv+2,f
  8957  0F97  0CB5               	rrf	??___ftdiv+1,f
  8958  0F98  0CB4               	rrf	??___ftdiv,f
  8959  0F99  0B89               	decfsz	9,f
  8960  0F9A  2F96               	goto	u3255
  8961  0F9B  0834               	movf	??___ftdiv,w
  8962  0F9C  00B7               	movwf	??___ftdiv+3
  8963  0F9D  0837               	movf	??___ftdiv+3,w
  8964  0F9E  00BD               	movwf	___ftdiv@sign
  8965  0F9F  082E               	movf	___ftdiv@f2,w
  8966  0FA0  00B4               	movwf	??___ftdiv
  8967  0FA1  082F               	movf	___ftdiv@f2+1,w
  8968  0FA2  00B5               	movwf	??___ftdiv+1
  8969  0FA3  0830               	movf	___ftdiv@f2+2,w
  8970  0FA4  00B6               	movwf	??___ftdiv+2
  8971  0FA5  3010               	movlw	16
  8972  0FA6                     u3265:	
  8973  0FA6  36B6               	lsrf	??___ftdiv+2,f
  8974  0FA7  0CB5               	rrf	??___ftdiv+1,f
  8975  0FA8  0CB4               	rrf	??___ftdiv,f
  8976  0FA9  0B89               	decfsz	9,f
  8977  0FAA  2FA6               	goto	u3265
  8978  0FAB  0834               	movf	??___ftdiv,w
  8979  0FAC  00B7               	movwf	??___ftdiv+3
  8980  0FAD  0837               	movf	??___ftdiv+3,w
  8981  0FAE  06BD               	xorwf	___ftdiv@sign,f
  8982  0FAF  3080               	movlw	128
  8983  0FB0  00B4               	movwf	??___ftdiv
  8984  0FB1  0834               	movf	??___ftdiv,w
  8985  0FB2  05BD               	andwf	___ftdiv@sign,f
  8986  0FB3  17B2               	bsf	___ftdiv@f1+1,7
  8987  0FB4  30FF               	movlw	255
  8988  0FB5  05B1               	andwf	___ftdiv@f1,f
  8989  0FB6  30FF               	movlw	255
  8990  0FB7  05B2               	andwf	___ftdiv@f1+1,f
  8991  0FB8  3000               	movlw	0
  8992  0FB9  05B3               	andwf	___ftdiv@f1+2,f
  8993  0FBA  17AF               	bsf	___ftdiv@f2+1,7
  8994  0FBB  30FF               	movlw	255
  8995  0FBC  05AE               	andwf	___ftdiv@f2,f
  8996  0FBD  30FF               	movlw	255
  8997  0FBE  05AF               	andwf	___ftdiv@f2+1,f
  8998  0FBF  3000               	movlw	0
  8999  0FC0  05B0               	andwf	___ftdiv@f2+2,f
  9000  0FC1  3018               	movlw	24
  9001  0FC2  00B4               	movwf	??___ftdiv
  9002  0FC3  0834               	movf	??___ftdiv,w
  9003  0FC4  00B8               	movwf	___ftdiv@cntr
  9004  0FC5                     l3689:	
  9005  0FC5  3001               	movlw	1
  9006  0FC6                     u3275:	
  9007  0FC6  35B9               	lslf	___ftdiv@f3,f
  9008  0FC7  0DBA               	rlf	___ftdiv@f3+1,f
  9009  0FC8  0DBB               	rlf	___ftdiv@f3+2,f
  9010  0FC9  0B89               	decfsz	9,f
  9011  0FCA  2FC6               	goto	u3275
  9012  0FCB  0830               	movf	___ftdiv@f2+2,w
  9013  0FCC  0233               	subwf	___ftdiv@f1+2,w
  9014  0FCD  1D03               	skipz
  9015  0FCE  2FD5               	goto	u3285
  9016  0FCF  082F               	movf	___ftdiv@f2+1,w
  9017  0FD0  0232               	subwf	___ftdiv@f1+1,w
  9018  0FD1  1D03               	skipz
  9019  0FD2  2FD5               	goto	u3285
  9020  0FD3  082E               	movf	___ftdiv@f2,w
  9021  0FD4  0231               	subwf	___ftdiv@f1,w
  9022  0FD5                     u3285:	
  9023  0FD5  1C03               	skipc
  9024  0FD6  2FDE               	goto	l3697
  9025  0FD7  082E               	movf	___ftdiv@f2,w
  9026  0FD8  02B1               	subwf	___ftdiv@f1,f
  9027  0FD9  082F               	movf	___ftdiv@f2+1,w
  9028  0FDA  3BB2               	subwfb	___ftdiv@f1+1,f
  9029  0FDB  0830               	movf	___ftdiv@f2+2,w
  9030  0FDC  3BB3               	subwfb	___ftdiv@f1+2,f
  9031  0FDD  1439               	bsf	___ftdiv@f3,0
  9032  0FDE                     l3697:	
  9033  0FDE  3001               	movlw	1
  9034  0FDF                     u3295:	
  9035  0FDF  35B1               	lslf	___ftdiv@f1,f
  9036  0FE0  0DB2               	rlf	___ftdiv@f1+1,f
  9037  0FE1  0DB3               	rlf	___ftdiv@f1+2,f
  9038  0FE2  0B89               	decfsz	9,f
  9039  0FE3  2FDF               	goto	u3295
  9040  0FE4  3001               	movlw	1
  9041  0FE5  02B8               	subwf	___ftdiv@cntr,f
  9042  0FE6  1D03               	btfss	3,2
  9043  0FE7  2FC5               	goto	l3689
  9044  0FE8  0839               	movf	___ftdiv@f3,w
  9045  0FE9  00A0               	movwf	___ftpack@arg
  9046  0FEA  083A               	movf	___ftdiv@f3+1,w
  9047  0FEB  00A1               	movwf	___ftpack@arg+1
  9048  0FEC  083B               	movf	___ftdiv@f3+2,w
  9049  0FED  00A2               	movwf	___ftpack@arg+2
  9050  0FEE  083C               	movf	___ftdiv@exp,w
  9051  0FEF  00B4               	movwf	??___ftdiv
  9052  0FF0  0834               	movf	??___ftdiv,w
  9053  0FF1  00A3               	movwf	___ftpack@exp
  9054  0FF2  083D               	movf	___ftdiv@sign,w
  9055  0FF3  00B5               	movwf	??___ftdiv+1
  9056  0FF4  0835               	movf	??___ftdiv+1,w
  9057  0FF5  00A4               	movwf	___ftpack@sign
  9058  0FF6  318D  25E0         	fcall	___ftpack
  9059  0FF8  0020               	movlb	0	; select bank0
  9060  0FF9  0820               	movf	?___ftpack,w
  9061  0FFA  00AE               	movwf	?___ftdiv
  9062  0FFB  0821               	movf	?___ftpack+1,w
  9063  0FFC  00AF               	movwf	?___ftdiv+1
  9064  0FFD  0822               	movf	?___ftpack+2,w
  9065  0FFE  00B0               	movwf	?___ftdiv+2
  9066  0FFF  0008               	return
  9067  1000                     __end_of___ftdiv:	
  9068                           
  9069                           	psect	text13
  9070  0DE0                     __ptext13:	
  9071 ;; *************** function ___ftpack *****************
  9072 ;; Defined at:
  9073 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;  arg             3    0[BANK0 ] unsigned um
  9076 ;;  exp             1    3[BANK0 ] unsigned char 
  9077 ;;  sign            1    4[BANK0 ] unsigned char 
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  3    0[BANK0 ] float 
  9082 ;; Registers used:
  9083 ;;		wreg, status,2, status,0
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9089 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;Total ram usage:        8 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    3
  9096 ;; This function calls:
  9097 ;;		Nothing
  9098 ;; This function is called by:
  9099 ;;		___awtoft
  9100 ;;		___ftdiv
  9101 ;;		___ftmul
  9102 ;;		___lwtoft
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106                           
  9107                           ;psect for function ___ftpack
  9108  0DE0                     ___ftpack:	
  9109                           
  9110                           ;incstack = 0
  9111                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9112  0DE0  0020               	movlb	0	; select bank0
  9113  0DE1  0823               	movf	___ftpack@exp,w
  9114  0DE2  1903               	btfsc	3,2
  9115  0DE3  2DE9               	goto	l2833
  9116  0DE4  0822               	movf	___ftpack@arg+2,w
  9117  0DE5  0421               	iorwf	___ftpack@arg+1,w
  9118  0DE6  0420               	iorwf	___ftpack@arg,w
  9119  0DE7  1D03               	skipz
  9120  0DE8  2DFA               	goto	l2839
  9121  0DE9                     l2833:	
  9122  0DE9  3000               	movlw	0
  9123  0DEA  00A0               	movwf	?___ftpack
  9124  0DEB  3000               	movlw	0
  9125  0DEC  00A1               	movwf	?___ftpack+1
  9126  0DED  3000               	movlw	0
  9127  0DEE  00A2               	movwf	?___ftpack+2
  9128  0DEF  0008               	return
  9129  0DF0                     l2837:	
  9130  0DF0  3001               	movlw	1
  9131  0DF1  00A5               	movwf	??___ftpack
  9132  0DF2  0825               	movf	??___ftpack,w
  9133  0DF3  07A3               	addwf	___ftpack@exp,f
  9134  0DF4  3001               	movlw	1
  9135  0DF5                     u2125:	
  9136  0DF5  36A2               	lsrf	___ftpack@arg+2,f
  9137  0DF6  0CA1               	rrf	___ftpack@arg+1,f
  9138  0DF7  0CA0               	rrf	___ftpack@arg,f
  9139  0DF8  0B89               	decfsz	9,f
  9140  0DF9  2DF5               	goto	u2125
  9141  0DFA                     l2839:	
  9142  0DFA  30FE               	movlw	254
  9143  0DFB  0522               	andwf	___ftpack@arg+2,w
  9144  0DFC  1903               	btfsc	3,2
  9145  0DFD  2E13               	goto	l1094
  9146  0DFE  2DF0               	goto	l2837
  9147  0DFF                     l2841:	
  9148  0DFF  3001               	movlw	1
  9149  0E00  00A5               	movwf	??___ftpack
  9150  0E01  0825               	movf	??___ftpack,w
  9151  0E02  07A3               	addwf	___ftpack@exp,f
  9152  0E03  3001               	movlw	1
  9153  0E04  07A0               	addwf	___ftpack@arg,f
  9154  0E05  3000               	movlw	0
  9155  0E06  1803               	skipnc
  9156  0E07  3001               	movlw	1
  9157  0E08  07A1               	addwf	___ftpack@arg+1,f
  9158  0E09  3000               	movlw	0
  9159  0E0A  1803               	skipnc
  9160  0E0B  3001               	movlw	1
  9161  0E0C  07A2               	addwf	___ftpack@arg+2,f
  9162  0E0D  3001               	movlw	1
  9163  0E0E                     u2145:	
  9164  0E0E  36A2               	lsrf	___ftpack@arg+2,f
  9165  0E0F  0CA1               	rrf	___ftpack@arg+1,f
  9166  0E10  0CA0               	rrf	___ftpack@arg,f
  9167  0E11  0B89               	decfsz	9,f
  9168  0E12  2E0E               	goto	u2145
  9169  0E13                     l1094:	
  9170  0E13  30FF               	movlw	255
  9171  0E14  0522               	andwf	___ftpack@arg+2,w
  9172  0E15  1903               	btfsc	3,2
  9173  0E16  2E20               	goto	l2849
  9174  0E17  2DFF               	goto	l2841
  9175  0E18                     l2847:	
  9176  0E18  3001               	movlw	1
  9177  0E19  02A3               	subwf	___ftpack@exp,f
  9178  0E1A  3001               	movlw	1
  9179  0E1B                     u2165:	
  9180  0E1B  35A0               	lslf	___ftpack@arg,f
  9181  0E1C  0DA1               	rlf	___ftpack@arg+1,f
  9182  0E1D  0DA2               	rlf	___ftpack@arg+2,f
  9183  0E1E  0B89               	decfsz	9,f
  9184  0E1F  2E1B               	goto	u2165
  9185  0E20                     l2849:	
  9186  0E20  1BA1               	btfsc	___ftpack@arg+1,7
  9187  0E21  2E26               	goto	l1101
  9188  0E22  3002               	movlw	2
  9189  0E23  0223               	subwf	___ftpack@exp,w
  9190  0E24  1803               	skipnc
  9191  0E25  2E18               	goto	l2847
  9192  0E26                     l1101:	
  9193  0E26  1823               	btfsc	___ftpack@exp,0
  9194  0E27  2E2E               	goto	l1102
  9195  0E28  30FF               	movlw	255
  9196  0E29  05A0               	andwf	___ftpack@arg,f
  9197  0E2A  307F               	movlw	127
  9198  0E2B  05A1               	andwf	___ftpack@arg+1,f
  9199  0E2C  30FF               	movlw	255
  9200  0E2D  05A2               	andwf	___ftpack@arg+2,f
  9201  0E2E                     l1102:	
  9202  0E2E  1003               	clrc
  9203  0E2F  0CA3               	rrf	___ftpack@exp,f
  9204  0E30  0823               	movf	___ftpack@exp,w
  9205  0E31  00A5               	movwf	??___ftpack
  9206  0E32  01A6               	clrf	??___ftpack+1
  9207  0E33  01A7               	clrf	??___ftpack+2
  9208  0E34  3010               	movlw	16
  9209  0E35                     u2205:	
  9210  0E35  35A5               	lslf	??___ftpack,f
  9211  0E36  0DA6               	rlf	??___ftpack+1,f
  9212  0E37  0DA7               	rlf	??___ftpack+2,f
  9213  0E38  0B89               	decfsz	9,f
  9214  0E39  2E35               	goto	u2205
  9215  0E3A  0825               	movf	??___ftpack,w
  9216  0E3B  04A0               	iorwf	___ftpack@arg,f
  9217  0E3C  0826               	movf	??___ftpack+1,w
  9218  0E3D  04A1               	iorwf	___ftpack@arg+1,f
  9219  0E3E  0827               	movf	??___ftpack+2,w
  9220  0E3F  04A2               	iorwf	___ftpack@arg+2,f
  9221  0E40  0824               	movf	___ftpack@sign,w
  9222  0E41  1903               	btfsc	3,2
  9223  0E42  0008               	return
  9224  0E43  17A2               	bsf	___ftpack@arg+2,7
  9225  0E44  0008               	return
  9226  0E45                     __end_of___ftpack:	
  9227                           
  9228                           	psect	text14
  9229  0CE5                     __ptext14:	
  9230 ;; *************** function ___awdiv *****************
  9231 ;; Defined at:
  9232 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;  divisor         2    0[BANK0 ] int 
  9235 ;;  dividend        2    2[BANK0 ] int 
  9236 ;; Auto vars:     Size  Location     Type
  9237 ;;  quotient        2    7[BANK0 ] int 
  9238 ;;  sign            1    6[BANK0 ] unsigned char 
  9239 ;;  counter         1    5[BANK0 ] unsigned char 
  9240 ;; Return value:  Size  Location     Type
  9241 ;;                  2    0[BANK0 ] int 
  9242 ;; Registers used:
  9243 ;;		wreg, status,2, status,0
  9244 ;; Tracked objects:
  9245 ;;		On entry : 0/0
  9246 ;;		On exit  : 0/0
  9247 ;;		Unchanged: 0/0
  9248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9250 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9251 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;Total ram usage:        9 bytes
  9254 ;; Hardware stack levels used:    1
  9255 ;; Hardware stack levels required when called:    3
  9256 ;; This function calls:
  9257 ;;		Nothing
  9258 ;; This function is called by:
  9259 ;;		_main
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           
  9264                           ;psect for function ___awdiv
  9265  0CE5                     ___awdiv:	
  9266                           
  9267                           ;incstack = 0
  9268                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9269  0CE5  0020               	movlb	0	; select bank0
  9270  0CE6  01A6               	clrf	___awdiv@sign
  9271  0CE7  1FA1               	btfss	___awdiv@divisor+1,7
  9272  0CE8  2CF0               	goto	l3627
  9273  0CE9  09A0               	comf	___awdiv@divisor,f
  9274  0CEA  09A1               	comf	___awdiv@divisor+1,f
  9275  0CEB  0AA0               	incf	___awdiv@divisor,f
  9276  0CEC  1903               	skipnz
  9277  0CED  0AA1               	incf	___awdiv@divisor+1,f
  9278  0CEE  01A6               	clrf	___awdiv@sign
  9279  0CEF  0AA6               	incf	___awdiv@sign,f
  9280  0CF0                     l3627:	
  9281  0CF0  1FA3               	btfss	___awdiv@dividend+1,7
  9282  0CF1  2CFB               	goto	l3633
  9283  0CF2  09A2               	comf	___awdiv@dividend,f
  9284  0CF3  09A3               	comf	___awdiv@dividend+1,f
  9285  0CF4  0AA2               	incf	___awdiv@dividend,f
  9286  0CF5  1903               	skipnz
  9287  0CF6  0AA3               	incf	___awdiv@dividend+1,f
  9288  0CF7  3001               	movlw	1
  9289  0CF8  00A4               	movwf	??___awdiv
  9290  0CF9  0824               	movf	??___awdiv,w
  9291  0CFA  06A6               	xorwf	___awdiv@sign,f
  9292  0CFB                     l3633:	
  9293  0CFB  01A7               	clrf	___awdiv@quotient
  9294  0CFC  01A8               	clrf	___awdiv@quotient+1
  9295  0CFD  0820               	movf	___awdiv@divisor,w
  9296  0CFE  0421               	iorwf	___awdiv@divisor+1,w
  9297  0CFF  1903               	btfsc	3,2
  9298  0D00  2D2A               	goto	l3655
  9299  0D01  01A5               	clrf	___awdiv@counter
  9300  0D02  0AA5               	incf	___awdiv@counter,f
  9301  0D03                     l3643:	
  9302  0D03  1BA1               	btfsc	___awdiv@divisor+1,7
  9303  0D04  2D0F               	goto	l3645
  9304  0D05  3001               	movlw	1
  9305  0D06                     u3165:	
  9306  0D06  35A0               	lslf	___awdiv@divisor,f
  9307  0D07  0DA1               	rlf	___awdiv@divisor+1,f
  9308  0D08  0B89               	decfsz	9,f
  9309  0D09  2D06               	goto	u3165
  9310  0D0A  3001               	movlw	1
  9311  0D0B  00A4               	movwf	??___awdiv
  9312  0D0C  0824               	movf	??___awdiv,w
  9313  0D0D  07A5               	addwf	___awdiv@counter,f
  9314  0D0E  2D03               	goto	l3643
  9315  0D0F                     l3645:	
  9316  0D0F  3001               	movlw	1
  9317  0D10                     u3185:	
  9318  0D10  35A7               	lslf	___awdiv@quotient,f
  9319  0D11  0DA8               	rlf	___awdiv@quotient+1,f
  9320  0D12  0B89               	decfsz	9,f
  9321  0D13  2D10               	goto	u3185
  9322  0D14  0821               	movf	___awdiv@divisor+1,w
  9323  0D15  0223               	subwf	___awdiv@dividend+1,w
  9324  0D16  1D03               	skipz
  9325  0D17  2D1A               	goto	u3195
  9326  0D18  0820               	movf	___awdiv@divisor,w
  9327  0D19  0222               	subwf	___awdiv@dividend,w
  9328  0D1A                     u3195:	
  9329  0D1A  1C03               	skipc
  9330  0D1B  2D21               	goto	l3651
  9331  0D1C  0820               	movf	___awdiv@divisor,w
  9332  0D1D  02A2               	subwf	___awdiv@dividend,f
  9333  0D1E  0821               	movf	___awdiv@divisor+1,w
  9334  0D1F  3BA3               	subwfb	___awdiv@dividend+1,f
  9335  0D20  1427               	bsf	___awdiv@quotient,0
  9336  0D21                     l3651:	
  9337  0D21  3001               	movlw	1
  9338  0D22                     u3205:	
  9339  0D22  36A1               	lsrf	___awdiv@divisor+1,f
  9340  0D23  0CA0               	rrf	___awdiv@divisor,f
  9341  0D24  0B89               	decfsz	9,f
  9342  0D25  2D22               	goto	u3205
  9343  0D26  3001               	movlw	1
  9344  0D27  02A5               	subwf	___awdiv@counter,f
  9345  0D28  1D03               	btfss	3,2
  9346  0D29  2D0F               	goto	l3645
  9347  0D2A                     l3655:	
  9348  0D2A  0826               	movf	___awdiv@sign,w
  9349  0D2B  1903               	btfsc	3,2
  9350  0D2C  2D32               	goto	l3659
  9351  0D2D  09A7               	comf	___awdiv@quotient,f
  9352  0D2E  09A8               	comf	___awdiv@quotient+1,f
  9353  0D2F  0AA7               	incf	___awdiv@quotient,f
  9354  0D30  1903               	skipnz
  9355  0D31  0AA8               	incf	___awdiv@quotient+1,f
  9356  0D32                     l3659:	
  9357  0D32  0828               	movf	___awdiv@quotient+1,w
  9358  0D33  00A1               	movwf	?___awdiv+1
  9359  0D34  0827               	movf	___awdiv@quotient,w
  9360  0D35  00A0               	movwf	?___awdiv
  9361  0D36  0008               	return
  9362  0D37                     __end_of___awdiv:	
  9363                           
  9364                           	psect	text15
  9365  0A5D                     __ptext15:	
  9366 ;; *************** function _SYSTEM_Initialize *****************
  9367 ;; Defined at:
  9368 ;;		line 83 in file "mcc_generated_files/mcc.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		wreg, status,2, status,0, pclath, cstack
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:    4
  9389 ;; This function calls:
  9390 ;;		_ADCC_Initialize
  9391 ;;		_I2C1_Initialize
  9392 ;;		_OSCILLATOR_Initialize
  9393 ;;		_PIN_MANAGER_Initialize
  9394 ;; This function is called by:
  9395 ;;		_main
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           
  9400                           ;psect for function _SYSTEM_Initialize
  9401  0A5D                     _SYSTEM_Initialize:	
  9402                           
  9403                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  9404                           
  9405                           ;incstack = 0
  9406                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9407  0A5D  318C  2460  318A   	fcall	_PIN_MANAGER_Initialize
  9408                           
  9409                           ;mcc.c: 87: OSCILLATOR_Initialize();
  9410  0A60  318A  2249  318A   	fcall	_OSCILLATOR_Initialize
  9411                           
  9412                           ;mcc.c: 88: I2C1_Initialize();
  9413  0A63  318A  22CA  318A   	fcall	_I2C1_Initialize
  9414                           
  9415                           ;mcc.c: 89: ADCC_Initialize();
  9416  0A66  318A  22F9         	fcall	_ADCC_Initialize
  9417  0A68  0008               	return
  9418  0A69                     __end_of_SYSTEM_Initialize:	
  9419                           
  9420                           	psect	text16
  9421  0C60                     __ptext16:	
  9422 ;; *************** function _PIN_MANAGER_Initialize *****************
  9423 ;; Defined at:
  9424 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;		None
  9427 ;; Auto vars:     Size  Location     Type
  9428 ;;  state           1    0[BANK0 ] unsigned char 
  9429 ;; Return value:  Size  Location     Type
  9430 ;;                  1    wreg      void 
  9431 ;; Registers used:
  9432 ;;		wreg, status,2, status,0
  9433 ;; Tracked objects:
  9434 ;;		On entry : 0/0
  9435 ;;		On exit  : 0/0
  9436 ;;		Unchanged: 0/0
  9437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9442 ;;Total ram usage:        1 bytes
  9443 ;; Hardware stack levels used:    1
  9444 ;; Hardware stack levels required when called:    3
  9445 ;; This function calls:
  9446 ;;		Nothing
  9447 ;; This function is called by:
  9448 ;;		_SYSTEM_Initialize
  9449 ;; This function uses a non-reentrant model
  9450 ;;
  9451                           
  9452                           
  9453                           ;psect for function _PIN_MANAGER_Initialize
  9454  0C60                     _PIN_MANAGER_Initialize:	
  9455                           
  9456                           ;pin_manager.c: 57: LATA = 0x00;
  9457                           
  9458                           ;incstack = 0
  9459                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  9460  0C60  0020               	movlb	0	; select bank0
  9461  0C61  0196               	clrf	22	;volatile
  9462                           
  9463                           ;pin_manager.c: 58: LATB = 0x00;
  9464  0C62  0197               	clrf	23	;volatile
  9465                           
  9466                           ;pin_manager.c: 59: LATC = 0x00;
  9467  0C63  0198               	clrf	24	;volatile
  9468                           
  9469                           ;pin_manager.c: 64: TRISA = 0x7F;
  9470  0C64  307F               	movlw	127
  9471  0C65  0091               	movwf	17	;volatile
  9472                           
  9473                           ;pin_manager.c: 65: TRISB = 0x30;
  9474  0C66  3030               	movlw	48
  9475  0C67  0092               	movwf	18	;volatile
  9476                           
  9477                           ;pin_manager.c: 66: TRISC = 0x1D;
  9478  0C68  301D               	movlw	29
  9479  0C69  0093               	movwf	19	;volatile
  9480                           
  9481                           ;pin_manager.c: 71: ANSELC = 0xE7;
  9482  0C6A  30E7               	movlw	231
  9483  0C6B  003E               	movlb	30	; select bank30
  9484  0C6C  00CE               	movwf	78	;volatile
  9485                           
  9486                           ;pin_manager.c: 72: ANSELB = 0xCF;
  9487  0C6D  30CF               	movlw	207
  9488  0C6E  00C3               	movwf	67	;volatile
  9489                           
  9490                           ;pin_manager.c: 73: ANSELA = 0xFF;
  9491  0C6F  30FF               	movlw	255
  9492  0C70  00B8               	movwf	56	;volatile
  9493                           
  9494                           ;pin_manager.c: 78: WPUE = 0x00;
  9495  0C71  01E5               	clrf	101	;volatile
  9496                           
  9497                           ;pin_manager.c: 79: WPUB = 0x30;
  9498  0C72  3030               	movlw	48
  9499  0C73  00C4               	movwf	68	;volatile
  9500                           
  9501                           ;pin_manager.c: 80: WPUA = 0x00;
  9502  0C74  01B9               	clrf	57	;volatile
  9503                           
  9504                           ;pin_manager.c: 81: WPUC = 0x00;
  9505  0C75  01CF               	clrf	79	;volatile
  9506                           
  9507                           ;pin_manager.c: 86: ODCONA = 0x00;
  9508  0C76  01BA               	clrf	58	;volatile
  9509                           
  9510                           ;pin_manager.c: 87: ODCONB = 0x00;
  9511  0C77  01C5               	clrf	69	;volatile
  9512                           
  9513                           ;pin_manager.c: 88: ODCONC = 0x00;
  9514  0C78  01D0               	clrf	80	;volatile
  9515                           
  9516                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  9517  0C79  3000               	movlw	0
  9518  0C7A  1B8B               	btfsc	11,7	;volatile
  9519  0C7B  3001               	movlw	1
  9520  0C7C  0020               	movlb	0	; select bank0
  9521  0C7D  00A0               	movwf	PIN_MANAGER_Initialize@state
  9522                           
  9523                           ;pin_manager.c: 96: GIE = 0;
  9524  0C7E  138B               	bcf	11,7	;volatile
  9525                           
  9526                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  9527  0C7F  3055               	movlw	85
  9528  0C80  003D               	movlb	29	; select bank29
  9529  0C81  008F               	movwf	15	;volsfr
  9530                           
  9531                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  9532  0C82  30AA               	movlw	170
  9533  0C83  008F               	movwf	15	;volsfr
  9534                           
  9535                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  9536  0C84  100F               	bcf	15,0	;volsfr
  9537                           
  9538                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  9539  0C85  0846               	movf	70,w	;volatile
  9540  0C86  39E0               	andlw	-32
  9541  0C87  3813               	iorlw	19
  9542  0C88  00C6               	movwf	70	;volatile
  9543                           
  9544                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  9545  0C89  0845               	movf	69,w	;volatile
  9546  0C8A  39E0               	andlw	-32
  9547  0C8B  3814               	iorlw	20
  9548  0C8C  00C5               	movwf	69	;volatile
  9549                           
  9550                           ;pin_manager.c: 103: RC3PPS = 0x15;
  9551  0C8D  3015               	movlw	21
  9552  0C8E  003E               	movlb	30	; select bank30
  9553  0C8F  00A3               	movwf	35	;volatile
  9554                           
  9555                           ;pin_manager.c: 104: RC4PPS = 0x14;
  9556  0C90  3014               	movlw	20
  9557  0C91  00A4               	movwf	36	;volatile
  9558                           
  9559                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  9560  0C92  3055               	movlw	85
  9561  0C93  003D               	movlb	29	; select bank29
  9562  0C94  008F               	movwf	15	;volsfr
  9563                           
  9564                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  9565  0C95  30AA               	movlw	170
  9566  0C96  008F               	movwf	15	;volsfr
  9567                           
  9568                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  9569  0C97  140F               	bsf	15,0	;volsfr
  9570                           
  9571                           ;pin_manager.c: 110: GIE = state;
  9572  0C98  0020               	movlb	0	; select bank0
  9573  0C99  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  9574  0C9A  2C9D               	goto	u4170
  9575  0C9B  178B               	bsf	11,7	;volatile
  9576  0C9C  0008               	return
  9577  0C9D                     u4170:	
  9578  0C9D  138B               	bcf	11,7	;volatile
  9579  0C9E  0008               	return
  9580  0C9F                     __end_of_PIN_MANAGER_Initialize:	
  9581                           
  9582                           	psect	text17
  9583  0A49                     __ptext17:	
  9584 ;; *************** function _OSCILLATOR_Initialize *****************
  9585 ;; Defined at:
  9586 ;;		line 92 in file "mcc_generated_files/mcc.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;		None
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;		None
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  1    wreg      void 
  9593 ;; Registers used:
  9594 ;;		wreg, status,2
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9604 ;;Total ram usage:        0 bytes
  9605 ;; Hardware stack levels used:    1
  9606 ;; Hardware stack levels required when called:    3
  9607 ;; This function calls:
  9608 ;;		Nothing
  9609 ;; This function is called by:
  9610 ;;		_SYSTEM_Initialize
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           
  9615                           ;psect for function _OSCILLATOR_Initialize
  9616  0A49                     _OSCILLATOR_Initialize:	
  9617                           
  9618                           ;mcc.c: 95: OSCCON1 = 0x60;
  9619                           
  9620                           ;incstack = 0
  9621                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9622  0A49  3060               	movlw	96
  9623  0A4A  0031               	movlb	17	; select bank17
  9624  0A4B  008D               	movwf	13	;volatile
  9625                           
  9626                           ;mcc.c: 97: OSCCON3 = 0x00;
  9627  0A4C  018F               	clrf	15	;volatile
  9628                           
  9629                           ;mcc.c: 99: OSCEN = 0x00;
  9630  0A4D  0191               	clrf	17	;volatile
  9631                           
  9632                           ;mcc.c: 101: OSCFRQ = 0x06;
  9633  0A4E  3006               	movlw	6
  9634  0A4F  0093               	movwf	19	;volatile
  9635                           
  9636                           ;mcc.c: 103: OSCTUNE = 0x00;
  9637  0A50  0192               	clrf	18	;volatile
  9638  0A51  0008               	return
  9639  0A52                     __end_of_OSCILLATOR_Initialize:	
  9640                           
  9641                           	psect	text18
  9642  0ACA                     __ptext18:	
  9643 ;; *************** function _I2C1_Initialize *****************
  9644 ;; Defined at:
  9645 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  9646 ;; Parameters:    Size  Location     Type
  9647 ;;		None
  9648 ;; Auto vars:     Size  Location     Type
  9649 ;;		None
  9650 ;; Return value:  Size  Location     Type
  9651 ;;                  1    wreg      void 
  9652 ;; Registers used:
  9653 ;;		wreg, status,2
  9654 ;; Tracked objects:
  9655 ;;		On entry : 0/0
  9656 ;;		On exit  : 0/0
  9657 ;;		Unchanged: 0/0
  9658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9663 ;;Total ram usage:        1 bytes
  9664 ;; Hardware stack levels used:    1
  9665 ;; Hardware stack levels required when called:    3
  9666 ;; This function calls:
  9667 ;;		Nothing
  9668 ;; This function is called by:
  9669 ;;		_SYSTEM_Initialize
  9670 ;; This function uses a non-reentrant model
  9671 ;;
  9672                           
  9673                           
  9674                           ;psect for function _I2C1_Initialize
  9675  0ACA                     _I2C1_Initialize:	
  9676                           
  9677                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  9678                           
  9679                           ;incstack = 0
  9680                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  9681  0ACA  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9682  0ACB  0020               	movlb	0	; select bank0
  9683  0ACC  00A0               	movwf	??_I2C1_Initialize
  9684  0ACD  0820               	movf	??_I2C1_Initialize,w
  9685  0ACE  00E9               	movwf	low ((_i2c1_object| 0+1))
  9686                           
  9687                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  9688  0ACF  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9689  0AD0  00A0               	movwf	??_I2C1_Initialize
  9690  0AD1  0820               	movf	??_I2C1_Initialize,w
  9691  0AD2  00E8               	movwf	_i2c1_object
  9692                           
  9693                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  9694  0AD3  14EA               	bsf	_i2c1_object+2,1
  9695                           
  9696                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  9697  0AD4  106A               	bcf	_i2c1_object+2,0
  9698                           
  9699                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  9700  0AD5  01EC               	clrf	_i2c1_object+4
  9701                           
  9702                           ;i2c1.c: 208: SSP1STAT = 0x00;
  9703  0AD6  0023               	movlb	3	; select bank3
  9704  0AD7  018F               	clrf	15	;volatile
  9705                           
  9706                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  9707  0AD8  3028               	movlw	40
  9708  0AD9  0090               	movwf	16	;volatile
  9709                           
  9710                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  9711  0ADA  0192               	clrf	18	;volatile
  9712                           
  9713                           ;i2c1.c: 214: SSP1ADD = 0x13;
  9714  0ADB  3013               	movlw	19
  9715  0ADC  008D               	movwf	13	;volatile
  9716                           
  9717                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  9718  0ADD  002E               	movlb	14	; select bank14
  9719  0ADE  100F               	bcf	15,0	;volatile
  9720                           
  9721                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  9722  0ADF  1419               	bsf	25,0	;volatile
  9723  0AE0  0008               	return
  9724  0AE1                     __end_of_I2C1_Initialize:	
  9725                           
  9726                           	psect	text19
  9727  0AF9                     __ptext19:	
  9728 ;; *************** function _ADCC_Initialize *****************
  9729 ;; Defined at:
  9730 ;;		line 62 in file "mcc_generated_files/adcc.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;		None
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;		None
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		wreg, status,2
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;Total ram usage:        0 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; Hardware stack levels required when called:    3
  9751 ;; This function calls:
  9752 ;;		Nothing
  9753 ;; This function is called by:
  9754 ;;		_SYSTEM_Initialize
  9755 ;; This function uses a non-reentrant model
  9756 ;;
  9757                           
  9758                           
  9759                           ;psect for function _ADCC_Initialize
  9760  0AF9                     _ADCC_Initialize:	
  9761                           
  9762                           ;adcc.c: 66: ADCON1 = 0x00;
  9763                           
  9764                           ;incstack = 0
  9765                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9766  0AF9  0021               	movlb	1	; select bank1
  9767  0AFA  0194               	clrf	20	;volatile
  9768                           
  9769                           ;adcc.c: 68: ADCON2 = 0x03;
  9770  0AFB  3003               	movlw	3
  9771  0AFC  0095               	movwf	21	;volatile
  9772                           
  9773                           ;adcc.c: 70: ADCON3 = 0x00;
  9774  0AFD  0196               	clrf	22	;volatile
  9775                           
  9776                           ;adcc.c: 72: ADACT = 0x00;
  9777  0AFE  0199               	clrf	25	;volatile
  9778                           
  9779                           ;adcc.c: 74: ADSTAT = 0x00;
  9780  0AFF  0197               	clrf	23	;volatile
  9781                           
  9782                           ;adcc.c: 76: ADCLK = 0x13;
  9783  0B00  3013               	movlw	19
  9784  0B01  0098               	movwf	24	;volatile
  9785                           
  9786                           ;adcc.c: 78: ADREF = 0x00;
  9787  0B02  019A               	clrf	26	;volatile
  9788                           
  9789                           ;adcc.c: 80: ADCAP = 0x00;
  9790  0B03  019B               	clrf	27	;volatile
  9791                           
  9792                           ;adcc.c: 82: ADPRE = 0x00;
  9793  0B04  019C               	clrf	28	;volatile
  9794                           
  9795                           ;adcc.c: 84: ADACQ = 0x04;
  9796  0B05  3004               	movlw	4
  9797  0B06  009D               	movwf	29	;volatile
  9798                           
  9799                           ;adcc.c: 86: ADPCH = 0x00;
  9800  0B07  019E               	clrf	30	;volatile
  9801                           
  9802                           ;adcc.c: 88: ADRPT = 0x00;
  9803  0B08  0022               	movlb	2	; select bank2
  9804  0B09  018D               	clrf	13	;volatile
  9805                           
  9806                           ;adcc.c: 90: ADLTHL = 0x00;
  9807  0B0A  018E               	clrf	14	;volatile
  9808                           
  9809                           ;adcc.c: 92: ADLTHH = 0x00;
  9810  0B0B  018F               	clrf	15	;volatile
  9811                           
  9812                           ;adcc.c: 94: ADUTHL = 0x00;
  9813  0B0C  0190               	clrf	16	;volatile
  9814                           
  9815                           ;adcc.c: 96: ADUTHH = 0x00;
  9816  0B0D  0191               	clrf	17	;volatile
  9817                           
  9818                           ;adcc.c: 98: ADSTPTL = 0x00;
  9819  0B0E  0192               	clrf	18	;volatile
  9820                           
  9821                           ;adcc.c: 100: ADSTPTH = 0x00;
  9822  0B0F  0193               	clrf	19	;volatile
  9823                           
  9824                           ;adcc.c: 103: ADCON0 = 0x84;
  9825  0B10  3084               	movlw	132
  9826  0B11  0021               	movlb	1	; select bank1
  9827  0B12  0093               	movwf	19	;volatile
  9828  0B13  0008               	return
  9829  0B14                     __end_of_ADCC_Initialize:	
  9830                           
  9831                           	psect	text20
  9832  07A8                     __ptext20:	
  9833 ;; *************** function _MYI2C_ReadFaders *****************
  9834 ;; Defined at:
  9835 ;;		line 490 in file "main.c"
  9836 ;; Parameters:    Size  Location     Type
  9837 ;;  slaveDeviceA    1    wreg     unsigned char 
  9838 ;; Auto vars:     Size  Location     Type
  9839 ;;  slaveDeviceA    1   15[BANK0 ] unsigned char 
  9840 ;;  readTRB         8   17[BANK0 ] struct .[2]
  9841 ;;  writeBuffer     3    0        unsigned char [3]
  9842 ;;  timeOut         2   13[BANK0 ] unsigned int 
  9843 ;;  dataAddress     2   11[BANK0 ] int 
  9844 ;;  pflag           2    0        int 
  9845 ;;  status          1   25[BANK0 ] enum E14267
  9846 ;;  pointerByte     1   16[BANK0 ] unsigned char 
  9847 ;; Return value:  Size  Location     Type
  9848 ;;                  1    wreg      enum E14267
  9849 ;; Registers used:
  9850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9851 ;; Tracked objects:
  9852 ;;		On entry : 0/0
  9853 ;;		On exit  : 0/0
  9854 ;;		Unchanged: 0/0
  9855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9860 ;;Total ram usage:       19 bytes
  9861 ;; Hardware stack levels used:    1
  9862 ;; Hardware stack levels required when called:    4
  9863 ;; This function calls:
  9864 ;;		_I2C1_MasterReadTRBBuild
  9865 ;;		_I2C1_MasterTRBInsert
  9866 ;;		_I2C1_MasterWriteTRBBuild
  9867 ;; This function is called by:
  9868 ;;		_main
  9869 ;; This function uses a non-reentrant model
  9870 ;;
  9871                           
  9872                           
  9873                           ;psect for function _MYI2C_ReadFaders
  9874  07A8                     _MYI2C_ReadFaders:	
  9875                           
  9876                           ;incstack = 0
  9877                           ; Regs used in _MYI2C_ReadFaders: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9878                           ;MYI2C_ReadFaders@slaveDeviceAddress stored from wreg
  9879  07A8  0020               	movlb	0	; select bank0
  9880  07A9  00AF               	movwf	MYI2C_ReadFaders@slaveDeviceAddress
  9881                           
  9882                           ;main.c: 500: int pflag;
  9883                           ;main.c: 501: int dataAddress=0;
  9884  07AA  01AB               	clrf	MYI2C_ReadFaders@dataAddress
  9885  07AB  01AC               	clrf	MYI2C_ReadFaders@dataAddress+1
  9886                           
  9887                           ;main.c: 502: uint8_t pointerByte=0b00100000;
  9888  07AC  3020               	movlw	32
  9889  07AD  00A7               	movwf	??_MYI2C_ReadFaders
  9890  07AE  0827               	movf	??_MYI2C_ReadFaders,w
  9891  07AF  00B0               	movwf	MYI2C_ReadFaders@pointerByte
  9892                           
  9893                           ;main.c: 503: I2C1_MESSAGE_STATUS status;
  9894                           ;main.c: 504: I2C1_TRANSACTION_REQUEST_BLOCK readTRB[2];
  9895                           ;main.c: 505: uint8_t writeBuffer[3];
  9896                           ;main.c: 506: uint16_t timeOut;
  9897                           ;main.c: 510: status = I2C1_MESSAGE_PENDING;
  9898  07B0  3002               	movlw	2
  9899  07B1  00A7               	movwf	??_MYI2C_ReadFaders
  9900  07B2  0827               	movf	??_MYI2C_ReadFaders,w
  9901  07B3  00B9               	movwf	MYI2C_ReadFaders@status
  9902                           
  9903                           ;main.c: 518: timeOut = 0;
  9904  07B4  01AD               	clrf	MYI2C_ReadFaders@timeOut
  9905  07B5  01AE               	clrf	MYI2C_ReadFaders@timeOut+1
  9906  07B6                     l3489:	
  9907                           ;main.c: 520: while(status != I2C1_MESSAGE_FAIL)
  9908                           
  9909  07B6  0339               	decf	MYI2C_ReadFaders@status,w
  9910  07B7  1903               	btfsc	3,2
  9911  07B8  2FFD               	goto	l3493
  9912                           
  9913                           ;main.c: 521: {
  9914                           ;main.c: 525: I2C1_MasterWriteTRBBuild( &readTRB[0],
  9915                           ;main.c: 526: &pointerByte,
  9916                           ;main.c: 527: 1,
  9917                           ;main.c: 528: slaveDeviceAddress);
  9918  07B9  3030               	movlw	(low (MYI2C_ReadFaders@pointerByte| 0))& (0+255)
  9919  07BA  00A7               	movwf	??_MYI2C_ReadFaders
  9920  07BB  0827               	movf	??_MYI2C_ReadFaders,w
  9921  07BC  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  9922  07BD  01A1               	clrf	I2C1_MasterWriteTRBBuild@length
  9923  07BE  0AA1               	incf	I2C1_MasterWriteTRBBuild@length,f
  9924  07BF  082F               	movf	MYI2C_ReadFaders@slaveDeviceAddress,w
  9925  07C0  00A8               	movwf	??_MYI2C_ReadFaders+1
  9926  07C1  01A9               	clrf	??_MYI2C_ReadFaders+2
  9927  07C2  0828               	movf	??_MYI2C_ReadFaders+1,w
  9928  07C3  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  9929  07C4  0829               	movf	??_MYI2C_ReadFaders+2,w
  9930  07C5  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  9931  07C6  3031               	movlw	(low (MYI2C_ReadFaders@readTRB| 0))& (0+255)
  9932  07C7  318B  234C  3187   	fcall	_I2C1_MasterWriteTRBBuild
  9933                           
  9934                           ;main.c: 530: I2C1_MasterReadTRBBuild( &readTRB[1],
  9935                           ;main.c: 531: iI2CFaderValue,
  9936                           ;main.c: 532: 8,
  9937                           ;main.c: 533: slaveDeviceAddress);
  9938  07CA  30BE               	movlw	(low (_iI2CFaderValue| 0))& (0+255)
  9939  07CB  0020               	movlb	0	; select bank0
  9940  07CC  00A7               	movwf	??_MYI2C_ReadFaders
  9941  07CD  0827               	movf	??_MYI2C_ReadFaders,w
  9942  07CE  00A0               	movwf	I2C1_MasterReadTRBBuild@pdata
  9943  07CF  3008               	movlw	8
  9944  07D0  00A8               	movwf	??_MYI2C_ReadFaders+1
  9945  07D1  0828               	movf	??_MYI2C_ReadFaders+1,w
  9946  07D2  00A1               	movwf	I2C1_MasterReadTRBBuild@length
  9947  07D3  082F               	movf	MYI2C_ReadFaders@slaveDeviceAddress,w
  9948  07D4  00A9               	movwf	??_MYI2C_ReadFaders+2
  9949  07D5  01AA               	clrf	??_MYI2C_ReadFaders+3
  9950  07D6  0829               	movf	??_MYI2C_ReadFaders+2,w
  9951  07D7  00A2               	movwf	I2C1_MasterReadTRBBuild@address
  9952  07D8  082A               	movf	??_MYI2C_ReadFaders+3,w
  9953  07D9  00A3               	movwf	I2C1_MasterReadTRBBuild@address+1
  9954  07DA  3035               	movlw	(low ((MYI2C_ReadFaders@readTRB| 0+4)))& (0+255)
  9955  07DB  318B  23D7  3187   	fcall	_I2C1_MasterReadTRBBuild
  9956                           
  9957                           ;main.c: 536: I2C1_MasterTRBInsert(2, readTRB, &status);
  9958  07DE  3031               	movlw	(low (MYI2C_ReadFaders@readTRB| 0))& (0+255)
  9959  07DF  0020               	movlb	0	; select bank0
  9960  07E0  00A7               	movwf	??_MYI2C_ReadFaders
  9961  07E1  0827               	movf	??_MYI2C_ReadFaders,w
  9962  07E2  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  9963  07E3  3039               	movlw	(low (MYI2C_ReadFaders@status| 0))& (0+255)
  9964  07E4  00A8               	movwf	??_MYI2C_ReadFaders+1
  9965  07E5  0828               	movf	??_MYI2C_ReadFaders+1,w
  9966  07E6  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  9967  07E7  3002               	movlw	2
  9968  07E8  318C  249F  3187   	fcall	_I2C1_MasterTRBInsert
  9969  07EB                     l3475:	
  9970                           ;main.c: 539: while(status == I2C1_MESSAGE_PENDING);
  9971                           
  9972  07EB  3002               	movlw	2
  9973  07EC  0020               	movlb	0	; select bank0
  9974  07ED  0639               	xorwf	MYI2C_ReadFaders@status,w
  9975  07EE  1903               	btfsc	3,2
  9976  07EF  2FEB               	goto	l3475
  9977                           
  9978                           ;main.c: 541: if (status == I2C1_MESSAGE_COMPLETE)
  9979  07F0  0839               	movf	MYI2C_ReadFaders@status,w
  9980  07F1  1903               	btfsc	3,2
  9981  07F2  2FFD               	goto	l3493
  9982                           
  9983                           ;main.c: 551: if (timeOut == 100)
  9984                           
  9985                           ;main.c: 542: break;
  9986  07F3  3064               	movlw	100
  9987  07F4  062D               	xorwf	MYI2C_ReadFaders@timeOut,w
  9988  07F5  042E               	iorwf	MYI2C_ReadFaders@timeOut+1,w
  9989  07F6  1903               	btfsc	3,2
  9990  07F7  2FFD               	goto	l3493
  9991                           
  9992                           ;main.c: 553: else
  9993                           ;main.c: 554: timeOut++;
  9994                           
  9995                           ;main.c: 552: break;
  9996  07F8  3001               	movlw	1
  9997  07F9  07AD               	addwf	MYI2C_ReadFaders@timeOut,f
  9998  07FA  3000               	movlw	0
  9999  07FB  3DAE               	addwfc	MYI2C_ReadFaders@timeOut+1,f
 10000  07FC  2FB6               	goto	l3489
 10001  07FD                     l3493:	
 10002                           
 10003                           ;main.c: 560: }
 10004                           ;main.c: 562: return status;
 10005  07FD  0839               	movf	MYI2C_ReadFaders@status,w
 10006  07FE  0008               	return
 10007  07FF                     __end_of_MYI2C_ReadFaders:	
 10008                           
 10009                           	psect	text21
 10010  0B4C                     __ptext21:	
 10011 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 10012 ;; Defined at:
 10013 ;;		line 707 in file "mcc_generated_files/i2c1.c"
 10014 ;; Parameters:    Size  Location     Type
 10015 ;;  ptrb            1    wreg     PTR struct .
 10016 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
 10017 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 10018 ;;		 -> MYI2C_ReadPatch@pointerByte(1), MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), M
      +YI2C_ReadFaders@pointerByte(1), 
 10019 ;;  length          1    1[BANK0 ] unsigned char 
 10020 ;;  address         2    2[BANK0 ] unsigned int 
 10021 ;; Auto vars:     Size  Location     Type
 10022 ;;  ptrb            1    6[BANK0 ] PTR struct .
 10023 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  1    wreg      void 
 10026 ;; Registers used:
 10027 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10033 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10036 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;Total ram usage:        7 bytes
 10038 ;; Hardware stack levels used:    1
 10039 ;; Hardware stack levels required when called:    3
 10040 ;; This function calls:
 10041 ;;		Nothing
 10042 ;; This function is called by:
 10043 ;;		_I2C1_MasterWrite
 10044 ;;		_MYI2C_ReadFaders
 10045 ;;		_MYI2C_ReadPatch
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           
 10050                           ;psect for function _I2C1_MasterWriteTRBBuild
 10051  0B4C                     _I2C1_MasterWriteTRBBuild:	
 10052                           
 10053                           ;incstack = 0
 10054                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 10055                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 10056  0B4C  0020               	movlb	0	; select bank0
 10057  0B4D  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 10058                           
 10059                           ;i2c1.c: 713: ptrb->address = address << 1;
 10060  0B4E  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 10061  0B4F  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 10062  0B50  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 10063  0B51  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10064  0B52  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 10065  0B53  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 10066  0B54  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10067  0B55  0086               	movwf	6
 10068  0B56  0187               	clrf	7
 10069  0B57  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10070  0B58  3FC0               	movwi [0]fsr1
 10071  0B59  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 10072  0B5A  3FC1               	movwi [1]fsr1
 10073                           
 10074                           ;i2c1.c: 714: ptrb->length = length;
 10075  0B5B  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 10076  0B5C  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10077  0B5D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10078  0B5E  3E02               	addlw	2
 10079  0B5F  0086               	movwf	6
 10080  0B60  0187               	clrf	7
 10081  0B61  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10082  0B62  0081               	movwf	1
 10083                           
 10084                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
 10085  0B63  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 10086  0B64  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 10087  0B65  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 10088  0B66  3E03               	addlw	3
 10089  0B67  0086               	movwf	6
 10090  0B68  0187               	clrf	7
 10091  0B69  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 10092  0B6A  0081               	movwf	1
 10093  0B6B  0008               	return
 10094  0B6C                     __end_of_I2C1_MasterWriteTRBBuild:	
 10095                           
 10096                           	psect	text22
 10097  0C9F                     __ptext22:	
 10098 ;; *************** function _I2C1_MasterTRBInsert *****************
 10099 ;; Defined at:
 10100 ;;		line 641 in file "mcc_generated_files/i2c1.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  count           1    wreg     unsigned char 
 10103 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 10104 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4)
      +, 
 10105 ;;  pflag           1    1[BANK0 ] PTR enum E14260
 10106 ;;		 -> MYI2C_ReadPatch@status(1), MYI2C_Write16EEPROMBytes@status(1), MYI2C_Write2LEDBytes@status(1), MYI2C_ReadFaders@
      +status(1), 
 10107 ;; Auto vars:     Size  Location     Type
 10108 ;;  count           1    3[BANK0 ] unsigned char 
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      void 
 10111 ;; Registers used:
 10112 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;Total ram usage:        4 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    3
 10125 ;; This function calls:
 10126 ;;		Nothing
 10127 ;; This function is called by:
 10128 ;;		_I2C1_MasterWrite
 10129 ;;		_MYI2C_ReadFaders
 10130 ;;		_I2C1_MasterRead
 10131 ;;		_MYI2C_ReadPatch
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           
 10136                           ;psect for function _I2C1_MasterTRBInsert
 10137  0C9F                     _I2C1_MasterTRBInsert:	
 10138                           
 10139                           ;incstack = 0
 10140                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
 10141                           ;I2C1_MasterTRBInsert@count stored from wreg
 10142  0C9F  0020               	movlb	0	; select bank0
 10143  0CA0  00A3               	movwf	I2C1_MasterTRBInsert@count
 10144                           
 10145                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
 10146  0CA1  186A               	btfsc	_i2c1_object+2,0
 10147  0CA2  2CD3               	goto	l2811
 10148                           
 10149                           ;i2c1.c: 649: {
 10150                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
 10151  0CA3  3002               	movlw	2
 10152  0CA4  00A2               	movwf	??_I2C1_MasterTRBInsert
 10153  0CA5  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10154  0CA6  0086               	movwf	6
 10155  0CA7  0187               	clrf	7
 10156  0CA8  0822               	movf	??_I2C1_MasterTRBInsert,w
 10157  0CA9  0081               	movwf	1
 10158                           
 10159                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 10160  0CAA  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 10161  0CAB  00A2               	movwf	??_I2C1_MasterTRBInsert
 10162  0CAC  0A68               	incf	_i2c1_object,w
 10163  0CAD  0086               	movwf	6
 10164  0CAE  0187               	clrf	7
 10165  0CAF  0822               	movf	??_I2C1_MasterTRBInsert,w
 10166  0CB0  0081               	movwf	1
 10167                           
 10168                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
 10169  0CB1  0823               	movf	I2C1_MasterTRBInsert@count,w
 10170  0CB2  00A2               	movwf	??_I2C1_MasterTRBInsert
 10171  0CB3  0868               	movf	_i2c1_object,w
 10172  0CB4  0086               	movwf	6
 10173  0CB5  0187               	clrf	7
 10174  0CB6  0822               	movf	??_I2C1_MasterTRBInsert,w
 10175  0CB7  0081               	movwf	1
 10176                           
 10177                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
 10178  0CB8  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10179  0CB9  00A2               	movwf	??_I2C1_MasterTRBInsert
 10180  0CBA  0868               	movf	_i2c1_object,w
 10181  0CBB  3E02               	addlw	2
 10182  0CBC  0086               	movwf	6
 10183  0CBD  0187               	clrf	7
 10184  0CBE  0822               	movf	??_I2C1_MasterTRBInsert,w
 10185  0CBF  0081               	movwf	1
 10186                           
 10187                           ;i2c1.c: 655: i2c1_object.pTrTail++;
 10188  0CC0  3003               	movlw	3
 10189  0CC1  00A2               	movwf	??_I2C1_MasterTRBInsert
 10190  0CC2  0822               	movf	??_I2C1_MasterTRBInsert,w
 10191  0CC3  07E8               	addwf	_i2c1_object,f
 10192                           
 10193                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 10194  0CC4  0868               	movf	_i2c1_object,w
 10195  0CC5  3AD5               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 10196  0CC6  1D03               	skipz
 10197  0CC7  2CCC               	goto	l2807
 10198                           
 10199                           ;i2c1.c: 659: {
 10200                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
 10201  0CC8  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 10202  0CC9  00A2               	movwf	??_I2C1_MasterTRBInsert
 10203  0CCA  0822               	movf	??_I2C1_MasterTRBInsert,w
 10204  0CCB  00E8               	movwf	_i2c1_object
 10205  0CCC                     l2807:	
 10206                           
 10207                           ;i2c1.c: 662: }
 10208                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
 10209  0CCC  10EA               	bcf	_i2c1_object+2,1
 10210                           
 10211                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 10212  0CCD  0869               	movf	low ((_i2c1_object| 0+1)),w
 10213  0CCE  0668               	xorwf	_i2c1_object,w
 10214  0CCF  1D03               	skipz
 10215  0CD0  2CD8               	goto	l2813
 10216                           
 10217                           ;i2c1.c: 670: {
 10218                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
 10219  0CD1  146A               	bsf	_i2c1_object+2,0
 10220                           
 10221                           ;i2c1.c: 673: }
 10222                           ;i2c1.c: 675: }
 10223  0CD2  2CD8               	goto	l2813
 10224  0CD3                     l2811:	
 10225                           
 10226                           ;i2c1.c: 676: else
 10227                           ;i2c1.c: 677: {
 10228                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
 10229  0CD3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10230  0CD4  0086               	movwf	6
 10231  0CD5  0187               	clrf	7
 10232  0CD6  0181               	clrf	1
 10233  0CD7  0A81               	incf	1,f
 10234  0CD8                     l2813:	
 10235                           
 10236                           ;i2c1.c: 679: }
 10237                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
 10238  0CD8  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 10239  0CD9  0086               	movwf	6
 10240  0CDA  0187               	clrf	7
 10241  0CDB  3002               	movlw	2
 10242  0CDC  0601               	xorwf	1,w
 10243  0CDD  1D03               	btfss	3,2
 10244  0CDE  0008               	return
 10245  0CDF                     l2817:	
 10246                           ;i2c1.c: 683: {
 10247                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
 10248                           
 10249  0CDF  086F               	movf	_i2c1_state,w
 10250  0CE0  1D03               	btfss	3,2
 10251  0CE1  2CDF               	goto	l2817
 10252                           
 10253                           ;i2c1.c: 685: {
 10254                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
 10255  0CE2  002E               	movlb	14	; select bank14
 10256  0CE3  140F               	bsf	15,0	;volatile
 10257  0CE4  0008               	return
 10258  0CE5                     __end_of_I2C1_MasterTRBInsert:	
 10259                           
 10260                           	psect	text23
 10261  0BD7                     __ptext23:	
 10262 ;; *************** function _I2C1_MasterReadTRBBuild *****************
 10263 ;; Defined at:
 10264 ;;		line 694 in file "mcc_generated_files/i2c1.c"
 10265 ;; Parameters:    Size  Location     Type
 10266 ;;  ptrb            1    wreg     PTR struct .
 10267 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), 
 10268 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 10269 ;;		 -> iI2CFaderValue(8), 
 10270 ;;  length          1    1[BANK0 ] unsigned char 
 10271 ;;  address         2    2[BANK0 ] unsigned int 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;  ptrb            1    6[BANK0 ] PTR struct .
 10274 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), 
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10284 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;Total ram usage:        7 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; Hardware stack levels required when called:    3
 10291 ;; This function calls:
 10292 ;;		Nothing
 10293 ;; This function is called by:
 10294 ;;		_MYI2C_ReadFaders
 10295 ;;		_I2C1_MasterRead
 10296 ;;		_MYI2C_ReadPatch
 10297 ;; This function uses a non-reentrant model
 10298 ;;
 10299                           
 10300                           
 10301                           ;psect for function _I2C1_MasterReadTRBBuild
 10302  0BD7                     _I2C1_MasterReadTRBBuild:	
 10303                           
 10304                           ;incstack = 0
 10305                           ; Regs used in _I2C1_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 10306                           ;I2C1_MasterReadTRBBuild@ptrb stored from wreg
 10307  0BD7  0020               	movlb	0	; select bank0
 10308  0BD8  00A6               	movwf	I2C1_MasterReadTRBBuild@ptrb
 10309                           
 10310                           ;i2c1.c: 700: ptrb->address = address << 1;
 10311  0BD9  0823               	movf	I2C1_MasterReadTRBBuild@address+1,w
 10312  0BDA  00A5               	movwf	??_I2C1_MasterReadTRBBuild+1
 10313  0BDB  0822               	movf	I2C1_MasterReadTRBBuild@address,w
 10314  0BDC  00A4               	movwf	??_I2C1_MasterReadTRBBuild
 10315  0BDD  35A4               	lslf	??_I2C1_MasterReadTRBBuild,f
 10316  0BDE  0DA5               	rlf	??_I2C1_MasterReadTRBBuild+1,f
 10317  0BDF  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 10318  0BE0  0086               	movwf	6
 10319  0BE1  0187               	clrf	7
 10320  0BE2  0824               	movf	??_I2C1_MasterReadTRBBuild,w
 10321  0BE3  3FC0               	movwi [0]fsr1
 10322  0BE4  0825               	movf	??_I2C1_MasterReadTRBBuild+1,w
 10323  0BE5  3FC1               	movwi [1]fsr1
 10324                           
 10325                           ;i2c1.c: 702: ptrb->address |= 0x01;
 10326  0BE6  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 10327  0BE7  0086               	movwf	6
 10328  0BE8  0187               	clrf	7
 10329  0BE9  3001               	movlw	1
 10330  0BEA  0481               	iorwf	1,f
 10331  0BEB  3141               	addfsr 1,1
 10332  0BEC  3000               	movlw	0
 10333  0BED  0481               	iorwf	1,f
 10334                           
 10335                           ;i2c1.c: 703: ptrb->length = length;
 10336  0BEE  0821               	movf	I2C1_MasterReadTRBBuild@length,w
 10337  0BEF  00A4               	movwf	??_I2C1_MasterReadTRBBuild
 10338  0BF0  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 10339  0BF1  3E02               	addlw	2
 10340  0BF2  0086               	movwf	6
 10341  0BF3  0187               	clrf	7
 10342  0BF4  0824               	movf	??_I2C1_MasterReadTRBBuild,w
 10343  0BF5  0081               	movwf	1
 10344                           
 10345                           ;i2c1.c: 704: ptrb->pbuffer = pdata;
 10346  0BF6  0820               	movf	I2C1_MasterReadTRBBuild@pdata,w
 10347  0BF7  00A4               	movwf	??_I2C1_MasterReadTRBBuild
 10348  0BF8  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 10349  0BF9  3E03               	addlw	3
 10350  0BFA  0086               	movwf	6
 10351  0BFB  0187               	clrf	7
 10352  0BFC  0824               	movf	??_I2C1_MasterReadTRBBuild,w
 10353  0BFD  0081               	movwf	1
 10354  0BFE  0008               	return
 10355  0BFF                     __end_of_I2C1_MasterReadTRBBuild:	
 10356                           
 10357                           	psect	text24
 10358  0A81                     __ptext24:	
 10359 ;; *************** function _LED7SegSetup *****************
 10360 ;; Defined at:
 10361 ;;		line 31 in file "LED7Seg.c"
 10362 ;; Parameters:    Size  Location     Type
 10363 ;;		None
 10364 ;; Auto vars:     Size  Location     Type
 10365 ;;		None
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  1    wreg      void 
 10368 ;; Registers used:
 10369 ;;		None
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;Total ram usage:        0 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:    3
 10382 ;; This function calls:
 10383 ;;		Nothing
 10384 ;; This function is called by:
 10385 ;;		_main
 10386 ;; This function uses a non-reentrant model
 10387 ;;
 10388                           
 10389                           
 10390                           ;psect for function _LED7SegSetup
 10391  0A81                     _LED7SegSetup:	
 10392                           
 10393                           ;incstack = 0
 10394                           ; Regs used in _LED7SegSetup: []
 10395                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
 10396  0A81  003E               	movlb	30	; select bank30
 10397  0A82  12CE               	bcf	78,5	;volatile
 10398                           
 10399                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
 10400  0A83  0020               	movlb	0	; select bank0
 10401  0A84  1293               	bcf	19,5	;volatile
 10402                           
 10403                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
 10404  0A85  003E               	movlb	30	; select bank30
 10405  0A86  134E               	bcf	78,6	;volatile
 10406                           
 10407                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
 10408  0A87  0020               	movlb	0	; select bank0
 10409  0A88  1313               	bcf	19,6	;volatile
 10410                           
 10411                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
 10412  0A89  003E               	movlb	30	; select bank30
 10413  0A8A  13CE               	bcf	78,7	;volatile
 10414                           
 10415                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
 10416  0A8B  0020               	movlb	0	; select bank0
 10417  0A8C  1393               	bcf	19,7	;volatile
 10418  0A8D  0008               	return
 10419  0A8E                     __end_of_LED7SegSetup:	
 10420                           
 10421                           	psect	text25
 10422  0C27                     __ptext25:	
 10423 ;; *************** function _LED7SegDisplayValueByDigit *****************
 10424 ;; Defined at:
 10425 ;;		line 95 in file "LED7Seg.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  iTensDigit      2   20[BANK0 ] unsigned int 
 10428 ;;  iUnitsDigit     2   22[BANK0 ] unsigned int 
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;  iTensCode       2   24[BANK0 ] unsigned int 
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10440 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;Total ram usage:        6 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    7
 10447 ;; This function calls:
 10448 ;;		_LED7SegShiftOutPulseClock
 10449 ;; This function is called by:
 10450 ;;		_main
 10451 ;;		_LED7SegDisplayValue
 10452 ;; This function uses a non-reentrant model
 10453 ;;
 10454                           
 10455                           
 10456                           ;psect for function _LED7SegDisplayValueByDigit
 10457  0C27                     _LED7SegDisplayValueByDigit:	
 10458                           
 10459                           ;LED7Seg.c: 99: if(iUnitsDigit>9) iUnitsDigit=9;
 10460                           
 10461                           ;LED7Seg.c: 96: unsigned int iTensCode;
 10462                           ;LED7Seg.c: 98: if(0>iUnitsDigit) iUnitsDigit=0;
 10463                           
 10464                           ;incstack = 0
 10465                           ; Regs used in _LED7SegDisplayValueByDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10466  0C27  3000               	movlw	0
 10467  0C28  0020               	movlb	0	; select bank0
 10468  0C29  0237               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit+1,w
 10469  0C2A  300A               	movlw	10
 10470  0C2B  1903               	skipnz
 10471  0C2C  0236               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit,w
 10472  0C2D  1C03               	skipc
 10473  0C2E  2C33               	goto	l4379
 10474  0C2F  3009               	movlw	9
 10475  0C30  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
 10476  0C31  3000               	movlw	0
 10477  0C32  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
 10478  0C33                     l4379:	
 10479                           ;LED7Seg.c: 101: if(0>iTensDigit) iTensDigit=0;
 10480                           
 10481                           
 10482                           ;LED7Seg.c: 102: if(iTensDigit>9) iTensDigit=9;
 10483  0C33  3000               	movlw	0
 10484  0C34  0235               	subwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
 10485  0C35  300A               	movlw	10
 10486  0C36  1903               	skipnz
 10487  0C37  0234               	subwf	LED7SegDisplayValueByDigit@iTensDigit,w
 10488  0C38  1C03               	skipc
 10489  0C39  2C3E               	goto	l4383
 10490  0C3A  3009               	movlw	9
 10491  0C3B  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
 10492  0C3C  3000               	movlw	0
 10493  0C3D  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
 10494  0C3E                     l4383:	
 10495                           
 10496                           ;LED7Seg.c: 104: iTensCode=segdisp[iTensDigit];
 10497  0C3E  3534               	lslf	LED7SegDisplayValueByDigit@iTensDigit,w
 10498  0C3F  3E20               	addlw	(low (_segdisp| (0+256)))& (0+255)
 10499  0C40  0086               	movwf	6
 10500  0C41  3001               	movlw	1	; select bank2/3
 10501  0C42  0087               	movwf	7
 10502  0C43  3F40               	moviw [0]fsr1
 10503  0C44  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
 10504  0C45  3F41               	moviw [1]fsr1
 10505  0C46  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
 10506                           
 10507                           ;LED7Seg.c: 105: if(0==iTensDigit) iTensCode=255;
 10508  0C47  0834               	movf	LED7SegDisplayValueByDigit@iTensDigit,w
 10509  0C48  0435               	iorwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
 10510  0C49  1D03               	btfss	3,2
 10511  0C4A  2C4F               	goto	l4389
 10512  0C4B  30FF               	movlw	255
 10513  0C4C  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
 10514  0C4D  3000               	movlw	0
 10515  0C4E  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
 10516  0C4F                     l4389:	
 10517                           
 10518                           ;LED7Seg.c: 107: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
 10519  0C4F  3536               	lslf	LED7SegDisplayValueByDigit@iUnitsDigit,w
 10520  0C50  3E20               	addlw	(low (_segdisp| (0+256)))& (0+255)
 10521  0C51  0086               	movwf	6
 10522  0C52  3001               	movlw	1	; select bank2/3
 10523  0C53  0087               	movwf	7
 10524  0C54  0801               	movf	1,w
 10525  0C55  318B  2330  318C   	fcall	_LED7SegShiftOutPulseClock
 10526                           
 10527                           ;LED7Seg.c: 108: LED7SegShiftOutPulseClock( iTensCode );
 10528  0C58  0020               	movlb	0	; select bank0
 10529  0C59  0838               	movf	LED7SegDisplayValueByDigit@iTensCode,w
 10530  0C5A  318B  2330         	fcall	_LED7SegShiftOutPulseClock
 10531                           
 10532                           ;LED7Seg.c: 110: do { LATCbits.LATC5 = 1; } while(0);
 10533  0C5C  0020               	movlb	0	; select bank0
 10534  0C5D  1698               	bsf	24,5	;volatile
 10535                           
 10536                           ;LED7Seg.c: 111: do { LATCbits.LATC5 = 0; } while(0);
 10537  0C5E  1298               	bcf	24,5	;volatile
 10538  0C5F  0008               	return
 10539  0C60                     __end_of_LED7SegDisplayValueByDigit:	
 10540                           
 10541                           	psect	text26
 10542  0B30                     __ptext26:	
 10543 ;; *************** function _LED7SegShiftOutPulseClock *****************
 10544 ;; Defined at:
 10545 ;;		line 69 in file "LED7Seg.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;  val             1    wreg     unsigned char 
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;  val             1   18[BANK0 ] unsigned char 
 10550 ;;  i               1   19[BANK0 ] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      void 
 10553 ;; Registers used:
 10554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10561 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10562 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10563 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10564 ;;Total ram usage:        3 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    6
 10567 ;; This function calls:
 10568 ;;		_LED7SegPinWrite
 10569 ;;		_LED7SegPulseClock
 10570 ;; This function is called by:
 10571 ;;		_LED7SegDisplayValueByDigit
 10572 ;;		_LED7SegBlankDisplay
 10573 ;; This function uses a non-reentrant model
 10574 ;;
 10575                           
 10576                           
 10577                           ;psect for function _LED7SegShiftOutPulseClock
 10578  0B30                     _LED7SegShiftOutPulseClock:	
 10579                           
 10580                           ;incstack = 0
 10581                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10582                           ;LED7SegShiftOutPulseClock@val stored from wreg
 10583  0B30  0020               	movlb	0	; select bank0
 10584  0B31  00B2               	movwf	LED7SegShiftOutPulseClock@val
 10585                           
 10586                           ;LED7Seg.c: 71: char i;
 10587                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
 10588  0B32  01B3               	clrf	LED7SegShiftOutPulseClock@i
 10589  0B33                     L3:	
 10590  0B33  3008               	movlw	8
 10591  0B34  0233               	subwf	LED7SegShiftOutPulseClock@i,w
 10592  0B35  1803               	btfsc	3,0
 10593  0B36  0008               	return
 10594                           
 10595                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
 10596  0B37  3001               	movlw	1
 10597  0B38  00B1               	movwf	??_LED7SegShiftOutPulseClock
 10598  0B39  0A33               	incf	LED7SegShiftOutPulseClock@i,w
 10599  0B3A  2B3C               	goto	u4204
 10600  0B3B                     u4205:	
 10601  0B3B  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
 10602  0B3C                     u4204:	
 10603  0B3C  0B89               	decfsz	9,f
 10604  0B3D  2B3B               	goto	u4205
 10605  0B3E  0831               	movf	??_LED7SegShiftOutPulseClock,w
 10606  0B3F  0532               	andwf	LED7SegShiftOutPulseClock@val,w
 10607  0B40  318A  2240  318B   	fcall	_LED7SegPinWrite
 10608                           
 10609                           ;LED7Seg.c: 77: LED7SegPulseClock();
 10610  0B43  318A  2252  318B   	fcall	_LED7SegPulseClock
 10611  0B46  3001               	movlw	1
 10612  0B47  0020               	movlb	0	; select bank0
 10613  0B48  00B1               	movwf	??_LED7SegShiftOutPulseClock
 10614  0B49  0831               	movf	??_LED7SegShiftOutPulseClock,w
 10615  0B4A  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
 10616  0B4B  2B33               	goto	L3
 10617  0B4C                     __end_of_LED7SegShiftOutPulseClock:	
 10618                           
 10619                           	psect	text27
 10620  0A52                     __ptext27:	
 10621 ;; *************** function _LED7SegPulseClock *****************
 10622 ;; Defined at:
 10623 ;;		line 60 in file "LED7Seg.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;		None
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1    wreg      void 
 10630 ;; Registers used:
 10631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;Total ram usage:        0 bytes
 10642 ;; Hardware stack levels used:    1
 10643 ;; Hardware stack levels required when called:    5
 10644 ;; This function calls:
 10645 ;;		_delay
 10646 ;; This function is called by:
 10647 ;;		_LED7SegShiftOutPulseClock
 10648 ;; This function uses a non-reentrant model
 10649 ;;
 10650                           
 10651                           
 10652                           ;psect for function _LED7SegPulseClock
 10653  0A52                     _LED7SegPulseClock:	
 10654                           
 10655                           ;incstack = 0
 10656                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10657                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
 10658  0A52  0020               	movlb	0	; select bank0
 10659  0A53  1718               	bsf	24,6	;volatile
 10660                           
 10661                           ;LED7Seg.c: 64: delay(1);
 10662  0A54  3001               	movlw	1
 10663  0A55  00A6               	movwf	delay@delaytime
 10664  0A56  3000               	movlw	0
 10665  0A57  00A7               	movwf	delay@delaytime+1
 10666  0A58  318D  2537         	fcall	_delay
 10667                           
 10668                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
 10669  0A5A  0020               	movlb	0	; select bank0
 10670  0A5B  1318               	bcf	24,6	;volatile
 10671  0A5C  0008               	return
 10672  0A5D                     __end_of_LED7SegPulseClock:	
 10673                           
 10674                           	psect	text28
 10675  0D37                     __ptext28:	
 10676 ;; *************** function _delay *****************
 10677 ;; Defined at:
 10678 ;;		line 171 in file "main.c"
 10679 ;; Parameters:    Size  Location     Type
 10680 ;;  delaytime       2    6[BANK0 ] int 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;  counter         4   13[BANK0 ] long 
 10683 ;;  adjustedDela    4    9[BANK0 ] long 
 10684 ;; Return value:  Size  Location     Type
 10685 ;;                  1    wreg      void 
 10686 ;; Registers used:
 10687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10688 ;; Tracked objects:
 10689 ;;		On entry : 0/0
 10690 ;;		On exit  : 0/0
 10691 ;;		Unchanged: 0/0
 10692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10693 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10694 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10695 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10696 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10697 ;;Total ram usage:       11 bytes
 10698 ;; Hardware stack levels used:    1
 10699 ;; Hardware stack levels required when called:    4
 10700 ;; This function calls:
 10701 ;;		___wmul
 10702 ;; This function is called by:
 10703 ;;		_blinkyLoop
 10704 ;;		_main
 10705 ;;		_LED7SegPulseClock
 10706 ;;		_LED7SegLoop
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           
 10711                           ;psect for function _delay
 10712  0D37                     _delay:	
 10713                           
 10714                           ;main.c: 172: long counter = 0;
 10715                           
 10716                           ;incstack = 0
 10717                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10718  0D37  3000               	movlw	0
 10719  0D38  0020               	movlb	0	; select bank0
 10720  0D39  00B0               	movwf	delay@counter+3
 10721  0D3A  3000               	movlw	0
 10722  0D3B  00AF               	movwf	delay@counter+2
 10723  0D3C  3000               	movlw	0
 10724  0D3D  00AE               	movwf	delay@counter+1
 10725  0D3E  3000               	movlw	0
 10726  0D3F  00AD               	movwf	delay@counter
 10727                           
 10728                           ;main.c: 173: long adjustedDelaytime=delaytime*cMstrClkAdjust;
 10729  0D40  0827               	movf	delay@delaytime+1,w
 10730  0D41  00A1               	movwf	___wmul@multiplier+1
 10731  0D42  0826               	movf	delay@delaytime,w
 10732  0D43  00A0               	movwf	___wmul@multiplier
 10733  0D44  302E               	movlw	low (_cMstrClkAdjust| (0+32768))
 10734  0D45  0084               	movwf	4
 10735  0D46  3090               	movlw	high (_cMstrClkAdjust| (0+32768))
 10736  0D47  0085               	movwf	5
 10737  0D48  3F00               	moviw [0]fsr0
 10738  0D49  00A2               	movwf	___wmul@multiplicand
 10739  0D4A  3F01               	moviw [1]fsr0
 10740  0D4B  00A3               	movwf	___wmul@multiplicand+1
 10741  0D4C  318B  2314  318D   	fcall	___wmul
 10742  0D4F  0020               	movlb	0	; select bank0
 10743  0D50  0820               	movf	?___wmul,w
 10744  0D51  00A9               	movwf	delay@adjustedDelaytime
 10745  0D52  0821               	movf	?___wmul+1,w
 10746  0D53  00AA               	movwf	delay@adjustedDelaytime+1
 10747  0D54  0D89               	rlf	9,f
 10748  0D55  3B89               	subwfb	9,f
 10749  0D56  0989               	comf	9,f
 10750  0D57  00AB               	movwf	delay@adjustedDelaytime+2
 10751  0D58  00AC               	movwf	delay@adjustedDelaytime+3
 10752                           
 10753                           ;main.c: 174: if (0<delaytime)
 10754  0D59  0827               	movf	delay@delaytime+1,w
 10755  0D5A  3A80               	xorlw	128
 10756  0D5B  00A8               	movwf	??_delay
 10757  0D5C  3080               	movlw	128
 10758  0D5D  0228               	subwf	??_delay,w
 10759  0D5E  1D03               	skipz
 10760  0D5F  2D62               	goto	u4145
 10761  0D60  3001               	movlw	1
 10762  0D61  0226               	subwf	delay@delaytime,w
 10763  0D62                     u4145:	
 10764  0D62  1C03               	skipc
 10765  0D63  0008               	return
 10766                           
 10767                           ;main.c: 175: for (counter = 0; counter<adjustedDelaytime; counter++);
 10768  0D64  3000               	movlw	0
 10769  0D65  0020               	movlb	0	; select bank0
 10770  0D66  00B0               	movwf	delay@counter+3
 10771  0D67  3000               	movlw	0
 10772  0D68  00AF               	movwf	delay@counter+2
 10773  0D69  3000               	movlw	0
 10774  0D6A  00AE               	movwf	delay@counter+1
 10775  0D6B  3000               	movlw	0
 10776  0D6C  00AD               	movwf	delay@counter
 10777  0D6D                     l486:	
 10778  0D6D  0830               	movf	delay@counter+3,w
 10779  0D6E  3A80               	xorlw	128
 10780  0D6F  00A8               	movwf	??_delay
 10781  0D70  082C               	movf	delay@adjustedDelaytime+3,w
 10782  0D71  3A80               	xorlw	128
 10783  0D72  0228               	subwf	??_delay,w
 10784  0D73  1D03               	skipz
 10785  0D74  2D7F               	goto	u4153
 10786  0D75  082B               	movf	delay@adjustedDelaytime+2,w
 10787  0D76  022F               	subwf	delay@counter+2,w
 10788  0D77  1D03               	skipz
 10789  0D78  2D7F               	goto	u4153
 10790  0D79  082A               	movf	delay@adjustedDelaytime+1,w
 10791  0D7A  022E               	subwf	delay@counter+1,w
 10792  0D7B  1D03               	skipz
 10793  0D7C  2D7F               	goto	u4153
 10794  0D7D  0829               	movf	delay@adjustedDelaytime,w
 10795  0D7E  022D               	subwf	delay@counter,w
 10796  0D7F                     u4153:	
 10797  0D7F  1803               	btfsc	3,0
 10798  0D80  0008               	return
 10799  0D81  3001               	movlw	1
 10800  0D82  07AD               	addwf	delay@counter,f
 10801  0D83  3000               	movlw	0
 10802  0D84  3DAE               	addwfc	delay@counter+1,f
 10803  0D85  3000               	movlw	0
 10804  0D86  3DAF               	addwfc	delay@counter+2,f
 10805  0D87  3000               	movlw	0
 10806  0D88  3DB0               	addwfc	delay@counter+3,f
 10807  0D89  2D6D               	goto	l486
 10808  0D8A                     __end_of_delay:	
 10809                           
 10810                           	psect	text29
 10811  0B14                     __ptext29:	
 10812 ;; *************** function ___wmul *****************
 10813 ;; Defined at:
 10814 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10815 ;; Parameters:    Size  Location     Type
 10816 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10817 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  product         2    4[BANK0 ] unsigned int 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  2    0[BANK0 ] unsigned int 
 10822 ;; Registers used:
 10823 ;;		wreg, status,2, status,0
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10829 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10832 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10833 ;;Total ram usage:        6 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; Hardware stack levels required when called:    3
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		_delay
 10840 ;;		_blinkyLoop
 10841 ;;		_main
 10842 ;;		_savePatch
 10843 ;; This function uses a non-reentrant model
 10844 ;;
 10845                           
 10846                           
 10847                           ;psect for function ___wmul
 10848  0B14                     ___wmul:	
 10849                           
 10850                           ;incstack = 0
 10851                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10852  0B14  0020               	movlb	0	; select bank0
 10853  0B15  01A4               	clrf	___wmul@product
 10854  0B16  01A5               	clrf	___wmul@product+1
 10855  0B17                     l4205:	
 10856  0B17  1C20               	btfss	___wmul@multiplier,0
 10857  0B18  2B1D               	goto	l933
 10858  0B19  0822               	movf	___wmul@multiplicand,w
 10859  0B1A  07A4               	addwf	___wmul@product,f
 10860  0B1B  0823               	movf	___wmul@multiplicand+1,w
 10861  0B1C  3DA5               	addwfc	___wmul@product+1,f
 10862  0B1D                     l933:	
 10863  0B1D  3001               	movlw	1
 10864  0B1E                     u4115:	
 10865  0B1E  35A2               	lslf	___wmul@multiplicand,f
 10866  0B1F  0DA3               	rlf	___wmul@multiplicand+1,f
 10867  0B20  0B89               	decfsz	9,f
 10868  0B21  2B1E               	goto	u4115
 10869  0B22  3001               	movlw	1
 10870  0B23                     u4125:	
 10871  0B23  36A1               	lsrf	___wmul@multiplier+1,f
 10872  0B24  0CA0               	rrf	___wmul@multiplier,f
 10873  0B25  0B89               	decfsz	9,f
 10874  0B26  2B23               	goto	u4125
 10875  0B27  0820               	movf	___wmul@multiplier,w
 10876  0B28  0421               	iorwf	___wmul@multiplier+1,w
 10877  0B29  1D03               	btfss	3,2
 10878  0B2A  2B17               	goto	l4205
 10879  0B2B  0825               	movf	___wmul@product+1,w
 10880  0B2C  00A1               	movwf	?___wmul+1
 10881  0B2D  0824               	movf	___wmul@product,w
 10882  0B2E  00A0               	movwf	?___wmul
 10883  0B2F  0008               	return
 10884  0B30                     __end_of___wmul:	
 10885                           
 10886                           	psect	text30
 10887  0A40                     __ptext30:	
 10888 ;; *************** function _LED7SegPinWrite *****************
 10889 ;; Defined at:
 10890 ;;		line 48 in file "LED7Seg.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  val             1    wreg     unsigned char 
 10893 ;; Auto vars:     Size  Location     Type
 10894 ;;  val             1    0[BANK0 ] unsigned char 
 10895 ;; Return value:  Size  Location     Type
 10896 ;;                  1    wreg      void 
 10897 ;; Registers used:
 10898 ;;		wreg, status,2, status,0
 10899 ;; Tracked objects:
 10900 ;;		On entry : 0/0
 10901 ;;		On exit  : 0/0
 10902 ;;		Unchanged: 0/0
 10903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10907 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10908 ;;Total ram usage:        1 bytes
 10909 ;; Hardware stack levels used:    1
 10910 ;; Hardware stack levels required when called:    3
 10911 ;; This function calls:
 10912 ;;		Nothing
 10913 ;; This function is called by:
 10914 ;;		_LED7SegShiftOutPulseClock
 10915 ;; This function uses a non-reentrant model
 10916 ;;
 10917                           
 10918                           
 10919                           ;psect for function _LED7SegPinWrite
 10920  0A40                     _LED7SegPinWrite:	
 10921                           
 10922                           ;incstack = 0
 10923                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
 10924                           ;LED7SegPinWrite@val stored from wreg
 10925  0A40  0020               	movlb	0	; select bank0
 10926  0A41  00A0               	movwf	LED7SegPinWrite@val
 10927                           
 10928                           ;LED7Seg.c: 50: if (val){
 10929  0A42  0820               	movf	LED7SegPinWrite@val,w
 10930  0A43  1903               	btfsc	3,2
 10931  0A44  2A47               	goto	l658
 10932                           
 10933                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
 10934  0A45  1798               	bsf	24,7	;volatile
 10935                           
 10936                           ;LED7Seg.c: 53: } else {
 10937  0A46  0008               	return
 10938  0A47                     l658:	
 10939                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
 10940                           
 10941  0A47  1398               	bcf	24,7	;volatile
 10942  0A48  0008               	return
 10943  0A49                     __end_of_LED7SegPinWrite:	
 10944                           
 10945                           	psect	text31
 10946  0AA0                     __ptext31:	
 10947 ;; *************** function _ADCC_GetSingleConversion *****************
 10948 ;; Defined at:
 10949 ;;		line 132 in file "mcc_generated_files/adcc.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  channel         1    wreg     enum E14259
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;  channel         1    3[BANK0 ] enum E14259
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  2    0[BANK0 ] unsigned int 
 10956 ;; Registers used:
 10957 ;;		wreg
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10963 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;Total ram usage:        4 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; Hardware stack levels required when called:    3
 10970 ;; This function calls:
 10971 ;;		Nothing
 10972 ;; This function is called by:
 10973 ;;		_main
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           
 10978                           ;psect for function _ADCC_GetSingleConversion
 10979  0AA0                     _ADCC_GetSingleConversion:	
 10980                           
 10981                           ;incstack = 0
 10982                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 10983                           ;ADCC_GetSingleConversion@channel stored from wreg
 10984  0AA0  0020               	movlb	0	; select bank0
 10985  0AA1  00A3               	movwf	ADCC_GetSingleConversion@channel
 10986                           
 10987                           ;adcc.c: 135: ADPCH = channel;
 10988  0AA2  0823               	movf	ADCC_GetSingleConversion@channel,w
 10989  0AA3  0021               	movlb	1	; select bank1
 10990  0AA4  009E               	movwf	30	;volatile
 10991                           
 10992                           ;adcc.c: 138: ADCON0bits.ADON = 1;
 10993  0AA5  1793               	bsf	19,7	;volatile
 10994                           
 10995                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
 10996  0AA6  1313               	bcf	19,6	;volatile
 10997                           
 10998                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
 10999  0AA7  1413               	bsf	19,0	;volatile
 11000                           
 11001                           ;adcc.c: 147: __nop();
 11002  0AA8  0000               	nop
 11003  0AA9                     l163:	
 11004                           ;adcc.c: 151: {
 11005                           
 11006                           ;adcc.c: 150: while (ADCON0bits.ADGO)
 11007                           
 11008  0AA9  0021               	movlb	1	; select bank1
 11009  0AAA  1813               	btfsc	19,0	;volatile
 11010  0AAB  2AA9               	goto	l163
 11011                           
 11012                           ;adcc.c: 152: }
 11013                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11014  0AAC  080D               	movf	13,w	;volatile
 11015  0AAD  0020               	movlb	0	; select bank0
 11016  0AAE  00A1               	movwf	?_ADCC_GetSingleConversion+1
 11017  0AAF  0021               	movlb	1	; select bank1
 11018  0AB0  080C               	movf	12,w	;volatile
 11019  0AB1  0020               	movlb	0	; select bank0
 11020  0AB2  00A0               	movwf	?_ADCC_GetSingleConversion
 11021  0AB3  0008               	return
 11022  0AB4                     __end_of_ADCC_GetSingleConversion:	
 11023                           
 11024                           	psect	intentry
 11025  0004                     __pintentry:	
 11026 ;; *************** function _INTERRUPT_InterruptManager *****************
 11027 ;; Defined at:
 11028 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 11029 ;; Parameters:    Size  Location     Type
 11030 ;;		None
 11031 ;; Auto vars:     Size  Location     Type
 11032 ;;		None
 11033 ;; Return value:  Size  Location     Type
 11034 ;;                  1    wreg      void 
 11035 ;; Registers used:
 11036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11037 ;; Tracked objects:
 11038 ;;		On entry : 0/0
 11039 ;;		On exit  : 0/0
 11040 ;;		Unchanged: 0/0
 11041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;Total ram usage:        1 bytes
 11047 ;; Hardware stack levels used:    1
 11048 ;; Hardware stack levels required when called:    2
 11049 ;; This function calls:
 11050 ;;		_I2C1_BusCollisionISR
 11051 ;;		_I2C1_ISR
 11052 ;; This function is called by:
 11053 ;;		Interrupt level 1
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057  0004                     _INTERRUPT_InterruptManager:	
 11058                           
 11059                           ;incstack = 0
 11060  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11061                           
 11062                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11063  0005  3180               	pagesel	$
 11064  0006  0020               	movlb	0	; select bank0
 11065  0007  087F               	movf	127,w
 11066  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
 11067                           
 11068                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
 11069  0009  1F0B               	btfss	11,6	;volatile
 11070  000A  2813               	goto	i1l394
 11071  000B  002E               	movlb	14	; select bank14
 11072  000C  1899               	btfsc	25,1	;volatile
 11073  000D  1C8F               	btfss	15,1	;volatile
 11074  000E  2813               	goto	i1l394
 11075                           
 11076                           ;interrupt_manager.c: 55: {
 11077                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
 11078  000F  3187  27FF  3180   	fcall	_I2C1_BusCollisionISR
 11079                           
 11080                           ;interrupt_manager.c: 57: }
 11081  0012  281B               	goto	i1l398
 11082  0013                     i1l394:	
 11083                           
 11084                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
 11085  0013  1F0B               	btfss	11,6	;volatile
 11086  0014  281B               	goto	i1l398
 11087  0015  002E               	movlb	14	; select bank14
 11088  0016  1819               	btfsc	25,0	;volatile
 11089  0017  1C0F               	btfss	15,0	;volatile
 11090  0018  281B               	goto	i1l398
 11091                           
 11092                           ;interrupt_manager.c: 59: {
 11093                           ;interrupt_manager.c: 60: I2C1_ISR();
 11094  0019  3183  2381         	fcall	_I2C1_ISR
 11095  001B                     i1l398:	
 11096                           ;interrupt_manager.c: 62: else
 11097                           ;interrupt_manager.c: 63: {
 11098                           
 11099                           ;interrupt_manager.c: 61: }
 11100                           
 11101  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
 11102  001C  0020               	movlb	0	; select bank0
 11103  001D  00FF               	movwf	127
 11104  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11105  001F  0009               	retfie
 11106  0020                     __end_of_INTERRUPT_InterruptManager:	
 11107                           
 11108                           	psect	text33
 11109  0381                     __ptext33:	
 11110 ;; *************** function _I2C1_ISR *****************
 11111 ;; Defined at:
 11112 ;;		line 233 in file "mcc_generated_files/i2c1.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;		None
 11115 ;; Auto vars:     Size  Location     Type
 11116 ;;		None
 11117 ;; Return value:  Size  Location     Type
 11118 ;;                  1    wreg      void 
 11119 ;; Registers used:
 11120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11121 ;; Tracked objects:
 11122 ;;		On entry : 0/0
 11123 ;;		On exit  : 0/0
 11124 ;;		Unchanged: 0/0
 11125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11129 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11130 ;;Total ram usage:        4 bytes
 11131 ;; Hardware stack levels used:    1
 11132 ;; Hardware stack levels required when called:    1
 11133 ;; This function calls:
 11134 ;;		_I2C1_FunctionComplete
 11135 ;;		_I2C1_Stop
 11136 ;; This function is called by:
 11137 ;;		_INTERRUPT_InterruptManager
 11138 ;; This function uses a non-reentrant model
 11139 ;;
 11140                           
 11141                           
 11142                           ;psect for function _I2C1_ISR
 11143  0381                     _I2C1_ISR:	
 11144                           
 11145                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
 11146                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
 11147                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
 11148                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
 11149                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
 11150                           
 11151                           ;incstack = 0
 11152                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11153  0381  002E               	movlb	14	; select bank14
 11154  0382  100F               	bcf	15,0	;volatile
 11155                           
 11156                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
 11157  0383  0023               	movlb	3	; select bank3
 11158  0384  1F90               	btfss	16,7	;volatile
 11159  0385  2CB0               	goto	i1l3387
 11160                           
 11161                           ;i2c1.c: 246: {
 11162                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
 11163  0386  1390               	bcf	16,7	;volatile
 11164                           
 11165                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
 11166  0387  0020               	movlb	0	; select bank0
 11167  0388  01EF               	clrf	_i2c1_state
 11168                           
 11169                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 11170  0389  0872               	movf	_p_i2c1_current,w
 11171  038A  3E02               	addlw	2
 11172  038B  0086               	movwf	6
 11173  038C  0187               	clrf	7
 11174  038D  0801               	movf	1,w
 11175  038E  0086               	movwf	6
 11176  038F  0187               	clrf	7
 11177  0390  0181               	clrf	1
 11178  0391  0A81               	incf	1,f
 11179                           
 11180                           ;i2c1.c: 253: p_i2c1_current = (0);
 11181  0392  01F2               	clrf	_p_i2c1_current
 11182                           
 11183                           ;i2c1.c: 255: return;
 11184  0393  0008               	return
 11185  0394                     i1l292:	
 11186                           ;i2c1.c: 260: {
 11187                           ;i2c1.c: 261: case S_MASTER_IDLE:
 11188                           
 11189                           ;i2c1.c: 256: }
 11190                           ;i2c1.c: 259: switch(i2c1_state)
 11191                           
 11192                           
 11193                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
 11194  0394  18EA               	btfsc	_i2c1_object+2,1
 11195  0395  0008               	return
 11196                           
 11197                           ;i2c1.c: 264: {
 11198                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
 11199  0396  0869               	movf	low ((_i2c1_object| 0+1)),w
 11200  0397  00F9               	movwf	??_I2C1_ISR
 11201  0398  0879               	movf	??_I2C1_ISR,w
 11202  0399  00F2               	movwf	_p_i2c1_current
 11203                           
 11204                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
 11205  039A  0869               	movf	low ((_i2c1_object| 0+1)),w
 11206  039B  0086               	movwf	6
 11207  039C  0187               	clrf	7
 11208  039D  0801               	movf	1,w
 11209  039E  00F9               	movwf	??_I2C1_ISR
 11210  039F  0879               	movf	??_I2C1_ISR,w
 11211  03A0  00F4               	movwf	_i2c1_trb_count
 11212                           
 11213                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 11214  03A1  0869               	movf	low ((_i2c1_object| 0+1)),w
 11215  03A2  0086               	movwf	6
 11216  03A3  0187               	clrf	7
 11217  03A4  3F41               	moviw [1]fsr1
 11218  03A5  00F3               	movwf	_p_i2c1_trb_current
 11219                           
 11220                           ;i2c1.c: 270: i2c1_object.pTrHead++;
 11221  03A6  3003               	movlw	3
 11222  03A7  00F9               	movwf	??_I2C1_ISR
 11223  03A8  0879               	movf	??_I2C1_ISR,w
 11224  03A9  07E9               	addwf	low ((_i2c1_object| 0+1)),f
 11225                           
 11226                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 11227  03AA  0869               	movf	low ((_i2c1_object| 0+1)),w
 11228  03AB  3AD5               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 11229  03AC  1D03               	skipz
 11230  03AD  2BB2               	goto	i1l3275
 11231                           
 11232                           ;i2c1.c: 274: {
 11233                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
 11234  03AE  30D2               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 11235  03AF  00F9               	movwf	??_I2C1_ISR
 11236  03B0  0879               	movf	??_I2C1_ISR,w
 11237  03B1  00E9               	movwf	low ((_i2c1_object| 0+1))
 11238  03B2                     i1l3275:	
 11239                           
 11240                           ;i2c1.c: 277: }
 11241                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
 11242  03B2  106A               	bcf	_i2c1_object+2,0
 11243                           
 11244                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 11245  03B3  0869               	movf	low ((_i2c1_object| 0+1)),w
 11246  03B4  0668               	xorwf	_i2c1_object,w
 11247  03B5  1903               	btfsc	3,2
 11248                           
 11249                           ;i2c1.c: 285: {
 11250                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
 11251  03B6  14EA               	bsf	_i2c1_object+2,1
 11252                           
 11253                           ;i2c1.c: 288: }
 11254                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
 11255  03B7  0023               	movlb	3	; select bank3
 11256  03B8  1411               	bsf	17,0	;volatile
 11257                           
 11258                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
 11259  03B9  3002               	movlw	2
 11260  03BA  00F9               	movwf	??_I2C1_ISR
 11261  03BB  0879               	movf	??_I2C1_ISR,w
 11262  03BC  0020               	movlb	0	; select bank0
 11263  03BD  00EF               	movwf	_i2c1_state
 11264                           
 11265                           ;i2c1.c: 295: }
 11266                           ;i2c1.c: 297: break;
 11267  03BE  0008               	return
 11268  03BF                     i1l297:	
 11269                           ;i2c1.c: 299: case S_MASTER_RESTART:
 11270                           
 11271                           
 11272                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
 11273  03BF  0023               	movlb	3	; select bank3
 11274  03C0  1491               	bsf	17,1	;volatile
 11275                           
 11276                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
 11277  03C1  3002               	movlw	2
 11278  03C2  00F9               	movwf	??_I2C1_ISR
 11279  03C3  0879               	movf	??_I2C1_ISR,w
 11280  03C4  0020               	movlb	0	; select bank0
 11281  03C5  00EF               	movwf	_i2c1_state
 11282                           
 11283                           ;i2c1.c: 309: break;
 11284  03C6  0008               	return
 11285  03C7                     i1l298:	
 11286                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
 11287                           
 11288                           
 11289                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
 11290  03C7  0023               	movlb	3	; select bank3
 11291  03C8  1F11               	btfss	17,6	;volatile
 11292  03C9  2BD3               	goto	i1l3287
 11293                           
 11294                           ;i2c1.c: 314: {
 11295                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
 11296  03CA  3001               	movlw	1
 11297  03CB  00F9               	movwf	??_I2C1_ISR
 11298  03CC  0879               	movf	??_I2C1_ISR,w
 11299  03CD  0020               	movlb	0	; select bank0
 11300  03CE  07EC               	addwf	_i2c1_object+4,f
 11301                           
 11302                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11303  03CF  3004               	movlw	4
 11304  03D0  318A  22E1         	fcall	_I2C1_Stop
 11305                           
 11306                           ;i2c1.c: 317: }
 11307  03D2  0008               	return
 11308  03D3                     i1l3287:	
 11309                           
 11310                           ;i2c1.c: 318: else
 11311                           ;i2c1.c: 319: {
 11312                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11313  03D3  0876               	movf	I2C1_ISR@i2c_address+1,w
 11314  03D4  00FA               	movwf	??_I2C1_ISR+1
 11315  03D5  0875               	movf	I2C1_ISR@i2c_address,w
 11316  03D6  00F9               	movwf	??_I2C1_ISR
 11317  03D7  36FA               	lsrf	??_I2C1_ISR+1,f
 11318  03D8  0CF9               	rrf	??_I2C1_ISR,f
 11319  03D9  0879               	movf	??_I2C1_ISR,w
 11320  03DA  0023               	movlb	3	; select bank3
 11321  03DB  008C               	movwf	12	;volatile
 11322                           
 11323                           ;i2c1.c: 324: if(i2c_address & 0x01)
 11324  03DC  1C75               	btfss	I2C1_ISR@i2c_address,0
 11325  03DD  2BE4               	goto	i1l3293
 11326                           
 11327                           ;i2c1.c: 325: {
 11328                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
 11329  03DE  300B               	movlw	11
 11330  03DF  00F9               	movwf	??_I2C1_ISR
 11331  03E0  0879               	movf	??_I2C1_ISR,w
 11332  03E1  0020               	movlb	0	; select bank0
 11333  03E2  00EF               	movwf	_i2c1_state
 11334                           
 11335                           ;i2c1.c: 329: }
 11336  03E3  0008               	return
 11337  03E4                     i1l3293:	
 11338                           
 11339                           ;i2c1.c: 330: else
 11340                           ;i2c1.c: 331: {
 11341                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
 11342  03E4  3003               	movlw	3
 11343  03E5  00F9               	movwf	??_I2C1_ISR
 11344  03E6  0879               	movf	??_I2C1_ISR,w
 11345  03E7  0020               	movlb	0	; select bank0
 11346  03E8  00EF               	movwf	_i2c1_state
 11347                           
 11348                           ;i2c1.c: 334: }
 11349                           ;i2c1.c: 335: }
 11350                           ;i2c1.c: 337: break;
 11351  03E9  0008               	return
 11352  03EA                     i1l303:	
 11353                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
 11354                           
 11355                           
 11356                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
 11357  03EA  0023               	movlb	3	; select bank3
 11358  03EB  1F11               	btfss	17,6	;volatile
 11359  03EC  2BF6               	goto	i1l304
 11360                           
 11361                           ;i2c1.c: 342: {
 11362                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
 11363  03ED  3001               	movlw	1
 11364  03EE  00F9               	movwf	??_I2C1_ISR
 11365  03EF  0879               	movf	??_I2C1_ISR,w
 11366  03F0  0020               	movlb	0	; select bank0
 11367  03F1  07EC               	addwf	_i2c1_object+4,f
 11368                           
 11369                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11370  03F2  3004               	movlw	4
 11371  03F3  318A  22E1         	fcall	_I2C1_Stop
 11372                           
 11373                           ;i2c1.c: 345: }
 11374  03F5  0008               	return
 11375  03F6                     i1l304:	
 11376                           
 11377                           ;i2c1.c: 346: else
 11378                           ;i2c1.c: 347: {
 11379                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
 11380  03F6  1491               	bsf	17,1	;volatile
 11381                           
 11382                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 11383  03F7  0876               	movf	I2C1_ISR@i2c_address+1,w
 11384  03F8  00FA               	movwf	??_I2C1_ISR+1
 11385  03F9  0875               	movf	I2C1_ISR@i2c_address,w
 11386  03FA  00F9               	movwf	??_I2C1_ISR
 11387  03FB  087A               	movf	??_I2C1_ISR+1,w
 11388  03FC  00F9               	movwf	??_I2C1_ISR
 11389  03FD  01FA               	clrf	??_I2C1_ISR+1
 11390  03FE  3006               	movlw	6
 11391  03FF  0579               	andwf	??_I2C1_ISR,w
 11392  0400  00FB               	movwf	??_I2C1_ISR+2
 11393  0401  3000               	movlw	0
 11394  0402  057A               	andwf	??_I2C1_ISR+1,w
 11395  0403  00FC               	movwf	??_I2C1_ISR+3
 11396  0404  30F0               	movlw	240
 11397  0405  047B               	iorwf	??_I2C1_ISR+2,w
 11398  0406  00F5               	movwf	I2C1_ISR@i2c_address
 11399  0407  3000               	movlw	0
 11400  0408  047C               	iorwf	??_I2C1_ISR+3,w
 11401  0409  00F6               	movwf	I2C1_ISR@i2c_address+1
 11402                           
 11403                           ;i2c1.c: 357: i2c_address |= 0x0001;
 11404  040A  1475               	bsf	I2C1_ISR@i2c_address,0
 11405                           
 11406                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
 11407  040B  0020               	movlb	0	; select bank0
 11408  040C  01EE               	clrf	I2C1_ISR@i2c_10bit_address_restart
 11409  040D  0AEE               	incf	I2C1_ISR@i2c_10bit_address_restart,f
 11410                           
 11411                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
 11412  040E  3002               	movlw	2
 11413  040F  00F9               	movwf	??_I2C1_ISR
 11414  0410  0879               	movf	??_I2C1_ISR,w
 11415  0411  00EF               	movwf	_i2c1_state
 11416                           
 11417                           ;i2c1.c: 364: }
 11418                           ;i2c1.c: 366: break;
 11419  0412  0008               	return
 11420  0413                     i1l3307:	
 11421                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
 11422                           
 11423                           
 11424                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
 11425  0413  036E               	decf	I2C1_ISR@i2c_10bit_address_restart,w
 11426  0414  1903               	btfsc	3,2
 11427  0415  2C27               	goto	i1l3327
 11428                           
 11429                           ;i2c1.c: 382: {
 11430                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
 11431  0416  0873               	movf	_p_i2c1_trb_current,w
 11432  0417  0086               	movwf	6
 11433  0418  0187               	clrf	7
 11434  0419  3F40               	moviw [0]fsr1
 11435  041A  00F5               	movwf	I2C1_ISR@i2c_address
 11436  041B  3F41               	moviw [1]fsr1
 11437  041C  00F6               	movwf	I2C1_ISR@i2c_address+1
 11438                           
 11439                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 11440  041D  0873               	movf	_p_i2c1_trb_current,w
 11441  041E  0086               	movwf	6
 11442  041F  0187               	clrf	7
 11443  0420  3F43               	moviw [3]fsr1
 11444  0421  00F1               	movwf	I2C1_ISR@pi2c_buf_ptr
 11445                           
 11446                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
 11447  0422  0873               	movf	_p_i2c1_trb_current,w
 11448  0423  0086               	movwf	6
 11449  0424  0187               	clrf	7
 11450  0425  3F42               	moviw [2]fsr1
 11451  0426  00F0               	movwf	I2C1_ISR@i2c_bytes_left
 11452  0427                     i1l3327:	
 11453                           ;i2c1.c: 407: }
 11454                           ;i2c1.c: 408: }
 11455                           
 11456                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
 11457                           
 11458                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
 11459                           
 11460                           ;i2c1.c: 400: else
 11461                           ;i2c1.c: 401: {
 11462                           ;i2c1.c: 403: SSP1BUF = i2c_address;
 11463                           
 11464                           ;i2c1.c: 399: }
 11465                           
 11466                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
 11467                           
 11468                           ;i2c1.c: 393: {
 11469                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
 11470                           
 11471                           ;i2c1.c: 391: {
 11472                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
 11473                           
 11474                           ;i2c1.c: 387: }
 11475                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
 11476                           
 11477                           
 11478                           ;i2c1.c: 409: else
 11479                           ;i2c1.c: 410: {
 11480                           ;i2c1.c: 412: SSP1BUF = i2c_address;
 11481  0427  0875               	movf	I2C1_ISR@i2c_address,w
 11482  0428  0023               	movlb	3	; select bank3
 11483  0429  008C               	movwf	12	;volatile
 11484                           
 11485                           ;i2c1.c: 413: if(i2c_address & 0x01)
 11486  042A  1C75               	btfss	I2C1_ISR@i2c_address,0
 11487  042B  2C32               	goto	i1l3333
 11488                           
 11489                           ;i2c1.c: 414: {
 11490                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
 11491  042C  3005               	movlw	5
 11492  042D  00F9               	movwf	??_I2C1_ISR
 11493  042E  0879               	movf	??_I2C1_ISR,w
 11494  042F  0020               	movlb	0	; select bank0
 11495  0430  00EF               	movwf	_i2c1_state
 11496                           
 11497                           ;i2c1.c: 417: }
 11498  0431  0008               	return
 11499  0432                     i1l3333:	
 11500                           
 11501                           ;i2c1.c: 418: else
 11502                           ;i2c1.c: 419: {
 11503                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
 11504  0432  3003               	movlw	3
 11505  0433  00F9               	movwf	??_I2C1_ISR
 11506  0434  0879               	movf	??_I2C1_ISR,w
 11507  0435  0020               	movlb	0	; select bank0
 11508  0436  00EF               	movwf	_i2c1_state
 11509                           
 11510                           ;i2c1.c: 422: }
 11511                           ;i2c1.c: 423: }
 11512                           ;i2c1.c: 424: break;
 11513  0437  0008               	return
 11514  0438                     i1l314:	
 11515                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
 11516                           
 11517                           
 11518                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
 11519  0438  0023               	movlb	3	; select bank3
 11520  0439  1F11               	btfss	17,6	;volatile
 11521  043A  2C46               	goto	i1l3341
 11522                           
 11523                           ;i2c1.c: 430: {
 11524                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
 11525  043B  3001               	movlw	1
 11526  043C  00F9               	movwf	??_I2C1_ISR
 11527  043D  0879               	movf	??_I2C1_ISR,w
 11528  043E  0020               	movlb	0	; select bank0
 11529  043F  07EC               	addwf	_i2c1_object+4,f
 11530                           
 11531                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
 11532  0440  0023               	movlb	3	; select bank3
 11533  0441  1311               	bcf	17,6	;volatile
 11534                           
 11535                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
 11536  0442  3005               	movlw	5
 11537  0443  318A  22E1         	fcall	_I2C1_Stop
 11538                           
 11539                           ;i2c1.c: 440: }
 11540  0445  0008               	return
 11541  0446                     i1l3341:	
 11542                           
 11543                           ;i2c1.c: 441: else
 11544                           ;i2c1.c: 442: {
 11545                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
 11546  0446  3001               	movlw	1
 11547  0447  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
 11548  0448  0A70               	incf	I2C1_ISR@i2c_bytes_left,w
 11549  0449  1D03               	btfss	3,2
 11550  044A  2C5F               	goto	i1l3349
 11551                           
 11552                           ;i2c1.c: 445: {
 11553                           ;i2c1.c: 449: p_i2c1_trb_current++;
 11554  044B  3004               	movlw	4
 11555  044C  00F9               	movwf	??_I2C1_ISR
 11556  044D  0879               	movf	??_I2C1_ISR,w
 11557  044E  07F3               	addwf	_p_i2c1_trb_current,f
 11558                           
 11559                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
 11560  044F  3001               	movlw	1
 11561  0450  02F4               	subwf	_i2c1_trb_count,f
 11562  0451  1D03               	btfss	3,2
 11563  0452  2C57               	goto	i1l318
 11564                           
 11565                           ;i2c1.c: 453: {
 11566                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11567  0453  3000               	movlw	0
 11568  0454  318A  22E1         	fcall	_I2C1_Stop
 11569                           
 11570                           ;i2c1.c: 455: }
 11571  0456  0008               	return
 11572  0457                     i1l318:	
 11573                           
 11574                           ;i2c1.c: 456: else
 11575                           ;i2c1.c: 457: {
 11576                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
 11577  0457  0023               	movlb	3	; select bank3
 11578  0458  1491               	bsf	17,1	;volatile
 11579                           
 11580                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
 11581  0459  3002               	movlw	2
 11582  045A  00F9               	movwf	??_I2C1_ISR
 11583  045B  0879               	movf	??_I2C1_ISR,w
 11584  045C  0020               	movlb	0	; select bank0
 11585  045D  00EF               	movwf	_i2c1_state
 11586                           
 11587                           ;i2c1.c: 469: }
 11588                           ;i2c1.c: 470: }
 11589  045E  0008               	return
 11590  045F                     i1l3349:	
 11591                           
 11592                           ;i2c1.c: 471: else
 11593                           ;i2c1.c: 472: {
 11594                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
 11595  045F  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11596  0460  0086               	movwf	6
 11597  0461  0187               	clrf	7
 11598  0462  0801               	movf	1,w
 11599  0463  0023               	movlb	3	; select bank3
 11600  0464  008C               	movwf	12	;volatile
 11601  0465  3001               	movlw	1
 11602  0466  00F9               	movwf	??_I2C1_ISR
 11603  0467  0879               	movf	??_I2C1_ISR,w
 11604  0468  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11605                           
 11606                           ;i2c1.c: 475: }
 11607                           ;i2c1.c: 476: }
 11608                           ;i2c1.c: 477: break;
 11609  0469  0008               	return
 11610  046A                     i1l321:	
 11611                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
 11612                           
 11613                           
 11614                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
 11615  046A  0023               	movlb	3	; select bank3
 11616  046B  1F11               	btfss	17,6	;volatile
 11617  046C  2C78               	goto	i1l322
 11618                           
 11619                           ;i2c1.c: 483: {
 11620                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
 11621  046D  3001               	movlw	1
 11622  046E  00F9               	movwf	??_I2C1_ISR
 11623  046F  0879               	movf	??_I2C1_ISR,w
 11624  0470  0020               	movlb	0	; select bank0
 11625  0471  07EC               	addwf	_i2c1_object+4,f
 11626                           
 11627                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11628  0472  3004               	movlw	4
 11629  0473  318A  22E1         	fcall	_I2C1_Stop
 11630                           
 11631                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
 11632  0475  0023               	movlb	3	; select bank3
 11633  0476  1311               	bcf	17,6	;volatile
 11634                           
 11635                           ;i2c1.c: 493: }
 11636  0477  0008               	return
 11637  0478                     i1l322:	
 11638                           
 11639                           ;i2c1.c: 494: else
 11640                           ;i2c1.c: 495: {
 11641                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
 11642  0478  1591               	bsf	17,3	;volatile
 11643                           
 11644                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11645  0479  3008               	movlw	8
 11646  047A  00F9               	movwf	??_I2C1_ISR
 11647  047B  0879               	movf	??_I2C1_ISR,w
 11648  047C  0020               	movlb	0	; select bank0
 11649  047D  00EF               	movwf	_i2c1_state
 11650                           
 11651                           ;i2c1.c: 498: }
 11652                           ;i2c1.c: 499: break;
 11653  047E  0008               	return
 11654  047F                     i1l3361:	
 11655                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
 11656                           
 11657                           
 11658                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11659  047F  3008               	movlw	8
 11660  0480  00F9               	movwf	??_I2C1_ISR
 11661  0481  0879               	movf	??_I2C1_ISR,w
 11662  0482  00EF               	movwf	_i2c1_state
 11663                           
 11664                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
 11665  0483  0023               	movlb	3	; select bank3
 11666  0484  1591               	bsf	17,3	;volatile
 11667                           
 11668                           ;i2c1.c: 511: break;
 11669  0485  0008               	return
 11670  0486                     i1l3365:	
 11671                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
 11672                           
 11673                           
 11674                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
 11675  0486  0023               	movlb	3	; select bank3
 11676  0487  080C               	movf	12,w	;volatile
 11677  0488  00F9               	movwf	??_I2C1_ISR
 11678  0489  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11679  048A  0086               	movwf	6
 11680  048B  0187               	clrf	7
 11681  048C  0879               	movf	??_I2C1_ISR,w
 11682  048D  0081               	movwf	1
 11683  048E  3001               	movlw	1
 11684  048F  00F9               	movwf	??_I2C1_ISR
 11685  0490  0879               	movf	??_I2C1_ISR,w
 11686  0491  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11687                           
 11688                           ;i2c1.c: 519: if(--i2c_bytes_left)
 11689  0492  3001               	movlw	1
 11690  0493  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
 11691  0494  1903               	btfsc	3,2
 11692  0495  2C9D               	goto	i1l326
 11693                           
 11694                           ;i2c1.c: 520: {
 11695                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
 11696  0496  1291               	bcf	17,5	;volatile
 11697                           
 11698                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
 11699  0497  3006               	movlw	6
 11700  0498  00F9               	movwf	??_I2C1_ISR
 11701  0499  0879               	movf	??_I2C1_ISR,w
 11702  049A  0020               	movlb	0	; select bank0
 11703  049B  00EF               	movwf	_i2c1_state
 11704                           
 11705                           ;i2c1.c: 530: }
 11706  049C  2CA0               	goto	i1l3377
 11707  049D                     i1l326:	
 11708                           
 11709                           ;i2c1.c: 531: else
 11710                           ;i2c1.c: 532: {
 11711                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
 11712  049D  1691               	bsf	17,5	;volatile
 11713                           
 11714                           ;i2c1.c: 538: I2C1_FunctionComplete();
 11715  049E  318A  228E         	fcall	_I2C1_FunctionComplete
 11716  04A0                     i1l3377:	
 11717                           
 11718                           ;i2c1.c: 539: }
 11719                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
 11720  04A0  0023               	movlb	3	; select bank3
 11721  04A1  1611               	bsf	17,4	;volatile
 11722                           
 11723                           ;i2c1.c: 543: break;
 11724  04A2  0008               	return
 11725  04A3                     i1l3379:	
 11726                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
 11727                           
 11728                           
 11729                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
 11730                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11731  04A3  3000               	movlw	0
 11732  04A4  318A  22E1         	fcall	_I2C1_Stop
 11733                           
 11734                           ;i2c1.c: 550: break;
 11735  04A6  0008               	return
 11736  04A7                     i1l3381:	
 11737                           ;i2c1.c: 552: default:
 11738                           
 11739                           
 11740                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
 11741  04A7  3001               	movlw	1
 11742  04A8  00F9               	movwf	??_I2C1_ISR
 11743  04A9  0879               	movf	??_I2C1_ISR,w
 11744  04AA  0020               	movlb	0	; select bank0
 11745  04AB  07EC               	addwf	_i2c1_object+4,f
 11746                           
 11747                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
 11748  04AC  3006               	movlw	6
 11749  04AD  318A  22E1         	fcall	_I2C1_Stop
 11750                           
 11751                           ;i2c1.c: 560: }
 11752                           
 11753                           ;i2c1.c: 558: break;
 11754  04AF  0008               	return
 11755  04B0                     i1l3387:	
 11756  04B0  0020               	movlb	0	; select bank0
 11757  04B1  086F               	movf	_i2c1_state,w
 11758                           
 11759                           ; Switch size 1, requested type "space"
 11760                           ; Number of cases is 11, Range of values is 0 to 11
 11761                           ; switch strategies available:
 11762                           ; Name         Instructions Cycles
 11763                           ; direct_byte           30     6 (fixed)
 11764                           ; simple_byte           34    18 (average)
 11765                           ; jumptable            260     6 (fixed)
 11766                           ;	Chosen strategy is direct_byte
 11767  04B2  0084               	movwf	4
 11768  04B3  300C               	movlw	12
 11769  04B4  0204               	subwf	4,w
 11770  04B5  1803               	skipnc
 11771  04B6  2CA7               	goto	i1l3381
 11772  04B7  3188               	movlp	high i1S4667
 11773  04B8  3504               	lslf	4,w
 11774  04B9  3E00               	addlw	low i1S4667
 11775  04BA  0082               	movwf	2
 11776  04BB  0008               	return
 11777  04BC                     __end_of_I2C1_ISR:	
 11778                           
 11779                           	psect	swtext1
 11780  0800                     __pswtext1:	
 11781  0800                     i1S4667:	
 11782  0800  3183  2B94         	ljmp	i1l292
 11783  0802  3183  2BBF         	ljmp	i1l297
 11784  0804  3184  2C13         	ljmp	i1l3307
 11785  0806  3184  2C38         	ljmp	i1l314
 11786  0808  3184  2CA3         	ljmp	i1l3379
 11787  080A  3184  2C6A         	ljmp	i1l321
 11788  080C  3184  2C7F         	ljmp	i1l3361
 11789  080E  3184  2CA3         	ljmp	i1l3379
 11790  0810  3184  2C86         	ljmp	i1l3365
 11791  0812  3184  2CA7         	ljmp	i1l3381
 11792  0814  3183  2BC7         	ljmp	i1l298
 11793  0816  3183  2BEA         	ljmp	i1l303
 11794                           
 11795                           	psect	text34
 11796  0AE1                     __ptext34:	
 11797 ;; *************** function _I2C1_Stop *****************
 11798 ;; Defined at:
 11799 ;;		line 581 in file "mcc_generated_files/i2c1.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;  completion_c    1    wreg     enum E14260
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  completion_c    1    1[COMMON] enum E14260
 11804 ;; Return value:  Size  Location     Type
 11805 ;;                  1    wreg      void 
 11806 ;; Registers used:
 11807 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11808 ;; Tracked objects:
 11809 ;;		On entry : 0/0
 11810 ;;		On exit  : 0/0
 11811 ;;		Unchanged: 0/0
 11812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;Total ram usage:        2 bytes
 11818 ;; Hardware stack levels used:    1
 11819 ;; This function calls:
 11820 ;;		Nothing
 11821 ;; This function is called by:
 11822 ;;		_I2C1_ISR
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           
 11827                           ;psect for function _I2C1_Stop
 11828  0AE1                     _I2C1_Stop:	
 11829                           
 11830                           ;incstack = 0
 11831                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 11832                           ;I2C1_Stop@completion_code stored from wreg
 11833  0AE1  00F8               	movwf	I2C1_Stop@completion_code
 11834                           
 11835                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
 11836  0AE2  0023               	movlb	3	; select bank3
 11837  0AE3  1511               	bsf	17,2	;volatile
 11838                           
 11839                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
 11840  0AE4  0872               	movf	_p_i2c1_current,w
 11841  0AE5  3E02               	addlw	2
 11842  0AE6  0086               	movwf	6
 11843  0AE7  0187               	clrf	7
 11844  0AE8  0801               	movf	1,w
 11845  0AE9  1903               	btfsc	3,2
 11846  0AEA  2AF6               	goto	i1l3081
 11847                           
 11848                           ;i2c1.c: 588: {
 11849                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
 11850  0AEB  0878               	movf	I2C1_Stop@completion_code,w
 11851  0AEC  00F7               	movwf	??_I2C1_Stop
 11852  0AED  0872               	movf	_p_i2c1_current,w
 11853  0AEE  3E02               	addlw	2
 11854  0AEF  0086               	movwf	6
 11855  0AF0  0187               	clrf	7
 11856  0AF1  0801               	movf	1,w
 11857  0AF2  0086               	movwf	6
 11858  0AF3  0187               	clrf	7
 11859  0AF4  0877               	movf	??_I2C1_Stop,w
 11860  0AF5  0081               	movwf	1
 11861  0AF6                     i1l3081:	
 11862                           
 11863                           ;i2c1.c: 591: }
 11864                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
 11865  0AF6  0020               	movlb	0	; select bank0
 11866  0AF7  01EF               	clrf	_i2c1_state
 11867  0AF8  0008               	return
 11868  0AF9                     __end_of_I2C1_Stop:	
 11869                           
 11870                           	psect	text35
 11871  0A8E                     __ptext35:	
 11872 ;; *************** function _I2C1_FunctionComplete *****************
 11873 ;; Defined at:
 11874 ;;		line 563 in file "mcc_generated_files/i2c1.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;		None
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;		None
 11879 ;; Return value:  Size  Location     Type
 11880 ;;                  1    wreg      void 
 11881 ;; Registers used:
 11882 ;;		wreg, status,2, status,0
 11883 ;; Tracked objects:
 11884 ;;		On entry : 0/0
 11885 ;;		On exit  : 0/0
 11886 ;;		Unchanged: 0/0
 11887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11892 ;;Total ram usage:        1 bytes
 11893 ;; Hardware stack levels used:    1
 11894 ;; This function calls:
 11895 ;;		Nothing
 11896 ;; This function is called by:
 11897 ;;		_I2C1_ISR
 11898 ;; This function uses a non-reentrant model
 11899 ;;
 11900                           
 11901                           
 11902                           ;psect for function _I2C1_FunctionComplete
 11903  0A8E                     _I2C1_FunctionComplete:	
 11904                           
 11905                           ;i2c1.c: 567: p_i2c1_trb_current++;
 11906                           
 11907                           ;incstack = 0
 11908                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 11909  0A8E  3004               	movlw	4
 11910  0A8F  00F7               	movwf	??_I2C1_FunctionComplete
 11911  0A90  0877               	movf	??_I2C1_FunctionComplete,w
 11912  0A91  07F3               	addwf	_p_i2c1_trb_current,f
 11913                           
 11914                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
 11915  0A92  3001               	movlw	1
 11916  0A93  02F4               	subwf	_i2c1_trb_count,f
 11917  0A94  1D03               	btfss	3,2
 11918  0A95  2A9C               	goto	i1l333
 11919                           
 11920                           ;i2c1.c: 571: {
 11921                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
 11922  0A96  3004               	movlw	4
 11923  0A97  00F7               	movwf	??_I2C1_FunctionComplete
 11924  0A98  0877               	movf	??_I2C1_FunctionComplete,w
 11925  0A99  0020               	movlb	0	; select bank0
 11926  0A9A  00EF               	movwf	_i2c1_state
 11927                           
 11928                           ;i2c1.c: 573: }
 11929  0A9B  0008               	return
 11930  0A9C                     i1l333:	
 11931                           
 11932                           ;i2c1.c: 574: else
 11933                           ;i2c1.c: 575: {
 11934                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
 11935  0A9C  0020               	movlb	0	; select bank0
 11936  0A9D  01EF               	clrf	_i2c1_state
 11937  0A9E  0AEF               	incf	_i2c1_state,f
 11938  0A9F  0008               	return
 11939  0AA0                     __end_of_I2C1_FunctionComplete:	
 11940                           
 11941                           	psect	text36
 11942  07FF                     __ptext36:	
 11943 ;; *************** function _I2C1_BusCollisionISR *****************
 11944 ;; Defined at:
 11945 ;;		line 728 in file "mcc_generated_files/i2c1.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;		None
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  1    wreg      void 
 11952 ;; Registers used:
 11953 ;;		None
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11963 ;;Total ram usage:        0 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; This function calls:
 11966 ;;		Nothing
 11967 ;; This function is called by:
 11968 ;;		_INTERRUPT_InterruptManager
 11969 ;; This function uses a non-reentrant model
 11970 ;;
 11971                           
 11972                           
 11973                           ;psect for function _I2C1_BusCollisionISR
 11974  07FF                     _I2C1_BusCollisionISR:	
 11975                           
 11976                           ;incstack = 0
 11977                           ; Regs used in _I2C1_BusCollisionISR: []
 11978  07FF  0008               	return
 11979  0800                     __end_of_I2C1_BusCollisionISR:	
 11980  007E                     btemp	set	126	;btemp
 11981  007E                     int$flags	set	126
 11982  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    50
    Data        36
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     72      80
    BANK1            80     24      77
    BANK2            80      0      56
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    MYI2C_ReadPatch@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    savePatch@pData	PTR unsigned char  size(2) Largest target is 128
		 -> aPatchMemory(BIGRAM[128]), 

    MYI2C_Write16EEPROMBytes@pData	PTR unsigned char  size(2) Largest target is 128
		 -> aPatchMemory(BIGRAM[128]), 

    marshallPatchMemory@dualADSRdata1	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata1(BANK2[8]), 

    marshallPatchMemory@dualADSRdata0	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata0(BANK2[8]), 

    marshallPatchMemory@mvcChannels	PTR unsigned char  size(1) Largest target is 4
		 -> mvcChannels(BANK1[4]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 8
		 -> iI2CFaderValue(BANK1[8]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    I2C1_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    I2C1_MasterWrite@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_Write16EEPROMBytes@status(BANK0[1]), MYI2C_Write2LEDBytes@status(COMMON[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 
		 -> NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S374$pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    S386$pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> iI2CFaderValue(BANK1[8]), 

    S386$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S397$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S397$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_savePatch
    _writeDAC528->_putByte
    _savePatch->_MYI2C_Write16EEPROMBytes
    _MYI2C_Write16EEPROMBytes->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _initDAC528->_putByte
    _putByte->___fttol
    ___fttol->___ftdiv
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _blinkyLoop->_delay
    ___ftdiv->___awtoft
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _MYI2C_ReadFaders->_I2C1_MasterReadTRBBuild
    _MYI2C_ReadFaders->_I2C1_MasterWriteTRBBuild
    _LED7SegDisplayValueByDigit->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                36    36      0   31569
                                             68 BANK0      4     4      0
                                              0 BANK1     24    24      0
           _ADCC_GetSingleConversion
         _LED7SegDisplayValueByDigit
                       _LED7SegSetup
                   _MYI2C_ReadFaders
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                         _blinkyLoop
                              _delay
                         _initDAC528
                          _savePatch
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _writeDAC528                                          5     2      3    5548
                                             53 BANK0      5     2      3
                            _putByte
 ---------------------------------------------------------------------------------
 (1) _savePatch                                           14    12      2    4319
                                             54 BANK0     14    12      2
           _MYI2C_Write16EEPROMBytes
                             ___wmul
                _marshallPatchMemory
 ---------------------------------------------------------------------------------
 (2) _marshallPatchMemory                                 17    15      2     540
                                              0 BANK0     17    15      2
 ---------------------------------------------------------------------------------
 (2) _MYI2C_Write16EEPROMBytes                            40    36      4    2656
                                             14 BANK0     40    36      4
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     3      4    1914
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (1) _initDAC528                                           1     1      0    5268
                                             53 BANK0      1     1      0
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _putByte                                              9     7      2    5268
                                             44 BANK0      9     7      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     623
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2315
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2027
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    2652
                                             17 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2163
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1671
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MYI2C_ReadFaders                                    24    24      0    2285
                                              7 BANK0     19    19      0
            _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             7     3      4     690
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 4     2      2     556
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterReadTRBBuild                              7     3      4     712
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegDisplayValueByDigit                           6     2      4    2262
                                             20 BANK0      6     2      4
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (2) _LED7SegShiftOutPulseClock                            3     3      0    1798
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegPulseClock                                    0     0      0    1637
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1637
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     786
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LED7SegDisplayValueByDigit
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
   _LED7SegSetup
   _MYI2C_ReadFaders
     _I2C1_MasterReadTRBBuild
     _I2C1_MasterTRBInsert
     _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
   _blinkyLoop
     ___wmul
     _delay
       ___wmul
   _delay
     ___wmul
   _initDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _savePatch
     _MYI2C_Write16EEPROMBytes
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     ___wmul
     _marshallPatchMemory
   _writeDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     48      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     18      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      38       9       70.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 26 06:47:10 2018

                                         _b 00AE                                           _c 00B3  
                                         _d 00AB                                           _e 00B1  
                                         pc 0002                                 __CFG_CP$OFF 0000  
                              ___awdiv@sign 0026                  __size_of_LED7SegPulseClock 000B  
                MYI2C_Write2LEDBytes@F14517 0134                         ___wmul@multiplicand 0022  
                                       l163 0AA9                                         l505 0109  
                                       l722 0645                                         l486 0D6D  
                                       l658 0A47                                         l933 0B1D  
                                       l796 05A2                                         _GIE 005F  
                              __CFG_CPD$OFF 0000                         _marshallPatchMemory 04BC  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_LVP$OFF 0000                                __CFG_ZCD$OFF 0000  
                              ___ftdiv@cntr 0038                            __end_of_I2C1_ISR 04BC  
                              ___ftdiv@sign 003D                                        l1101 0E26  
                                      l1102 0E2E                                        l1094 0E13  
                                      l1185 0EB2                                        l3113 068E  
                                      l3115 0692                                        l3211 0608  
                                      l3213 0621                                        l3205 05FC  
                                      l3141 0506                                        l3135 04F9  
                                      l3127 04CD                                        l3227 05FF  
                                      l3163 056B                                        l3155 053F  
                                      l4205 0B17                                        l3229 0633  
                                      l3149 0532                                        l3191 05BB  
                                      l2811 0CD3                                        l2813 0CD8  
                                      l3197 05D3                                        l2807 0CCC  
                                      l2817 0CDF                                        l3633 0CFB  
                                      l2841 0DFF                                        l2833 0DE9  
                                      l4361 0D9A                                        l2921 0778  
                                      l2913 0764                                        l3475 07EB  
                                      l3651 0D21                                        l3643 0D03  
                                      l3627 0CF0                                        l4363 0DD4  
                                      l4419 0EF1                                        l3493 07FD  
                                      l3645 0D0F                                        l2837 0DF0  
                                      l2925 0780                                        l2909 075C  
                                      l2941 0E5E                                        l4509 0196  
                                      l4383 0C3E                                        l3655 0D2A  
                                      l2847 0E18                                        l2839 0DFA  
                                      l4551 02C3                                        l4535 0262  
                                      l4527 0242                                        l4463 0089  
                                      l3489 07B6                                        l2849 0E20  
                                      l2881 0B77                                        l2961 0E9C  
                                      l2865 0C20                                        l4545 02B0  
                                      l4473 00D2                                        l4379 0C33  
                                      l3659 0D32                                        l3675 0F84  
                                      l2891 070B                                        l4483 00EE  
                                      l4389 0C4F                                        l3669 0F6E  
                                      l2973 0EC3                                        l4573 031F  
                                      l4493 0118                                        l2967 0EA9  
                                      l2959 0E8E                                        l4583 033E  
                                      l4567 02FC                                        l4591 036D  
                                      l3697 0FDE                                        l3689 0FC5  
                                      l2897 0721                                        l2969 0EB5  
                                      l4589 0361                                        u2205 0E35  
                                      u2125 0DF5                                        _LATA 0016  
                                      _LATB 0017                                        _LATC 0018  
                                      u2145 0E0E                                        u2305 0765  
                                      u2315 076B                                        u3205 0D22  
                                      u2165 0E1B                                        u2415 0E8F  
                                      u2345 0781                                        u4115 0B1E  
                                      u2355 0787                                        u2275 072D  
                                      u4204 0B3C                                        u4125 0B23  
                                      u4205 0B3B                                        u3165 0D06  
                                      u2285 073D                                        u2445 0EAA  
                                      u3255 0F96                                        u2544 064F  
                                      u4153 0D7F                                        u4145 0D62  
                                      u3185 0D10                                        u3265 0FA6  
                                      u2385 0E65                                        u2545 064E  
                                      u4305 0087                                        u4170 0C9D  
                                      u3195 0D1A                                        u3275 0FC6  
                                      u4235 0DA4                                        u2635 0575  
                                      u4315 00D0                                        u3285 0FD5  
                                      u4325 0105                                        u3295 0FDF  
                                      u2575 04CB                                        u4415 02D6  
                                      u4335 0116                                        u2745 05A8  
                                      u2665 05D1                                        u2585 04F7  
                                      u4345 0194                                        u2675 05FA  
                                      u4275 0ED2                                        u4435 02FA  
                                      u4285 0F0A                                        u4445 031D  
                                      u4465 033C                                        u4385 02A8  
                                      u4475 035F                                        u4395 02BC  
                                      u4485 0379                                        u4577 0F4C  
                                      _WPUA 0F39                                        _WPUB 0F44  
                                      _WPUC 0F4F                                        _WPUE 0F65  
           __end_of_I2C1_MasterReadTRBBuild 0BFF                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                                        _main 0063  
                              ___ftpack@arg 0020                                ___ftpack@exp 0023  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      _twoK 1022                      ??_I2C1_MasterTRBInsert 0022  
                                      btemp 007E                                main@iCounter 00D5  
      LED7SegDisplayValueByDigit@iTensDigit 0034                               __CFG_BOREN$ON 0000  
                   __end_of_LED7SegPinWrite 0A49                                        start 0020  
                      ?_marshallPatchMemory 0020                                 _writeDAC528 0BB2  
                             __CFG_CSWEN$ON 0000                               __CFG_MCLRE$ON 0000  
                              ___ftmul@cntr 003C                                ___ftmul@sign 003D  
            I2C1_MasterWriteTRBBuild@length 0021                                ___fttol@exp1 004B  
                              ___fttol@lval 0047                                  _i2c1_state 006F  
            __size_of_OSCILLATOR_Initialize 0009                   I2C1_MasterTRBInsert@count 0023  
             __end_of_OSCILLATOR_Initialize 0A52                   I2C1_MasterTRBInsert@pflag 0021  
                                     _ADACQ 009D                                       _ADACT 0099  
                                     _ADCAP 009B                                       ?_main 0077  
                                     _ADCLK 0098                                       _ADCNT 010C  
                                     _ADPCH 009E                                       _ADREF 009A  
                           __end_of___awdiv 0D37                           __end_of_I2C1_Stop 0AF9  
                                     _ADPRE 009C                               __CFG_WDTE$OFF 0000  
                                     _ADRPT 010D                             __end_of___ftdiv 1000  
                           __end_of___ftmul 07A8                             ___awdiv@divisor 0020  
                           __end_of___fttol 0ECC                              __CFG_DEBUG$OFF 0000  
                                     i1l303 03EA                                       i1l304 03F6  
                                     i1l321 046A                                       i1l322 0478  
                                     i1l314 0438                                       i1l333 0A9C  
                                     i1l326 049D                                       i1l318 0457  
                                     i1l292 0394                                       i1l297 03BF  
                                     i1l298 03C7                                       i1l394 0013  
                                     i1l398 001B                             ___awdiv@counter 0025  
                                     _OSCEN 0891                                       _PORTA 000C  
                                     _PORTB 000D                                       _PORTC 000E  
                                     _TRISA 0011                                       _TRISB 0012  
                                     _TRISC 0013                             __end_of_datapin 1028  
              __end_of_I2C1_BusCollisionISR 0800                           ??_I2C1_Initialize 0020  
                             ___awtoft@sign 002D                                       _delay 0D37  
                             ___ftpack@sign 0024                                       _speed 1024  
                                     main@x 00E2                           savePatch@batchNum 0060  
                           __end_of_putByte 06F4                                       status 0003  
                                     wtemp0 007E                       ??_marshallPatchMemory 0022  
           I2C1_MasterWriteTRBBuild@address 0022                                  _iLEDs0_LSB 00BC  
                                _iLEDs0_MSB 00BD                                  _iLEDs1_LSB 00BA  
                                _iLEDs1_MSB 00BB                        __end_of_LED7SegSetup 0A8E  
                           __initialization 0022                       I2C1_MasterWrite@pdata 002D  
                     I2C1_MasterWrite@pflag 002A                                __end_of_main 0381  
                              __end_of_twoK 1024            __end_of_MYI2C_Write16EEPROMBytes 063F  
               ?_INTERRUPT_InterruptManager 0077                         _lineSettleMicroTime 101E  
                            _iI2CFaderValue 00BE                                 _i2c1_object 0068  
                                    ??_main 0064                               ___fttol@sign1 0046  
               ??_LED7SegShiftOutPulseClock 0031                             putByte@clockPin 004C  
     LED7SegDisplayValueByDigit@iUnitsDigit 0036                   savePatch@iPatchAddressLow 005B  
                                    ?_delay 0026                                      _ADACCH 0091  
                                    _ADACCL 0090                                      _ADCON0 0093  
                                    _ADCON1 0094                                      _ADCON2 0095  
                                    _ADCON3 0096                                      _ADERRH 0117  
                                    _ADERRL 0116                                      _ADLTHH 010F  
                                    i1S4667 0800                                      _ADLTHL 010E  
                                    _ADRESH 008D                                      _ADRESL 008C  
                                    _ADSTAT 0097                                      _ADUTHH 0111  
                          ___awdiv@dividend 0022                                      _ADUTHL 0110  
                          __end_of___awtoft 0B8E                                      _ANSELA 0F38  
                                    _ANSELB 0F43                                      _ANSELC 0F4E  
                          __end_of___ftpack 0E45                          __CFG_RSTOSC$HFINT1 0000  
                                    _RC3PPS 0F23                                      _RC4PPS 0F24  
                                    _ODCONA 0F3A                                      _ODCONB 0F45  
                                    _ODCONC 0F50                                      i1l3081 0AF6  
                                    i1l3307 0413                                      i1l3341 0446  
                                    i1l3333 0432                                      i1l3327 0427  
                                    i1l3361 047F                                      i1l3275 03B2  
                                    i1l3381 04A7                                      i1l3365 0486  
                                    i1l3349 045F                                      i1l3293 03E4  
                                    i1l3287 03D3                                      i1l3377 04A0  
                                    i1l3379 04A3                                      i1l3387 04B0  
                            __CFG_WDTCCS$SC 0000         MYI2C_Write16EEPROMBytes@pointerByte 004E  
                                    _OSCFRQ 0893                           ?_I2C1_MasterWrite 0027  
                     main@SaveDebounceCount 00DF                            ?_LED7SegPinWrite 0077  
                            __CFG_PWRTE$OFF 0000        MYI2C_Write16EEPROMBytes@writeAddress 002E  
                       __end_of_MvcMaxValue 101A                            __end_of_clockpin 102A  
                        ??_I2C1_MasterWrite 002B                         __end_of_MvcMinValue 101C  
                            _p_i2c1_current 0072                            __end_of_maxBanks 1016  
                 __size_of_MYI2C_ReadFaders 0057                                      ___wmul 0B14  
                                 ??___awdiv 0024                              __CFG_STVREN$ON 0000  
                                 ??___ftdiv 0034                                   ??___ftmul 0034  
                                 ??___fttol 0042                            __end_of_latchpin 102C  
                ??_I2C1_MasterWriteTRBBuild 0024                                   ?_I2C1_ISR 0077  
                          ___awdiv@quotient 0027                                      _wkByte 00B7  
                                    main@fx 00E7            __size_of_I2C1_MasterReadTRBBuild 0028  
                     ___ftmul@f3_as_product 0039                             _ADCC_Initialize 0AF9  
                                 ??_putByte 004E           __size_of_ADCC_GetSingleConversion 0014  
                 ?_ADCC_GetSingleConversion 0020               I2C1_MasterWriteTRBBuild@pdata 0020  
                         _SYSTEM_Initialize 0A5D                   _LED7SegShiftOutPulseClock 0B30  
                   __end_of__initialization 005F                          ?_SYSTEM_Initialize 0077  
                                ___ftdiv@f1 0031                                  ___ftdiv@f2 002E  
                                ___ftdiv@f3 0039                              _i2c1_trb_count 0074  
                                ___awtoft@c 0028                                  ___ftmul@f1 002E  
                                ___ftmul@f2 0031                       _I2C1_FunctionComplete 0A8E  
                      _I2C1_BusCollisionISR 07FF                                  ___fttol@f1 003E  
                            __pcstackCOMMON 0077                      I2C1_MasterWrite@length 0027  
                              __pidataBANK2 0B8E                         ??_SYSTEM_Initialize 0021  
                             __end_of_delay 0D8A                              main@faderValue 00E9  
                             __end_of_speed 1026                                  ??_I2C1_ISR 0079  
            I2C1_MasterReadTRBBuild@address 0022                    _MYI2C_Write16EEPROMBytes 0588  
                        main@fader8bitValue 00E6                                     ??_delay 0028  
                 __end_of_SYSTEM_Initialize 0A69         MYI2C_Write16EEPROMBytes@writeBuffer 0036  
                __end_of_i2c_addr_dualADSR0 1032                  __end_of_i2c_addr_dualADSR1 1031  
                                __pbssBANK0 0068                                  __pbssBANK1 00A0  
                                __pbssBANK2 0144                                 _MvcMaxValue 1018  
                               _MvcMinValue 101A                       __size_of_LED7SegSetup 000D  
                    savePatch@iPatchAddress 0062                  LED7SegShiftOutPulseClock@i 0033  
                              ?_writeDAC528 0055                       ?_I2C1_BusCollisionISR 0077  
                            _SSP1DATPPSbits 0EC6                                  __pmaintext 0063  
                                   ?___wmul 0020                             __CFG_PPS1WAY$ON 0000  
                   __end_of_ADCC_Initialize 0B14                          __size_of_savePatch 008B  
                                __pintentry 0004                             _I2C1_Initialize 0ACA  
                                   _ADFLTRH 0115                                     _ADFLTRL 0114  
                                _blinkyLoop 0D8A                                     _ADPREVH 008F  
                                   _ADPREVL 008E                                   ?___awtoft 0028  
                                 ?___ftpack 0020                                     _ADSTPTH 0113  
                                   _ADSTPTL 0112                              _SSP1CLKPPSbits 0EC5  
                                   _OSCCON1 088D                                     _OSCCON3 088F  
                                 _I2C1_Stop 0AE1                                     _OSCTUNE 0892  
                              _LED7SegSetup 0A81                       main@LoadDebounceCount 00DD  
                                   _SSP1ADD 018D                                     _PPSLOCK 0E8F  
                                   _SSP1BUF 018C              marshallPatchMemory@mvcChannels 0028  
                       __end_of_ciBatchSize 1012                                  _initDAC528 0AB4  
                            main@readStatus 00E1         __end_of_ciI2C_EEPROM_DEVICE_ADDRESS 1014  
               _ciI2C_EEPROM_DEVICE_ADDRESS 1012               I2C1_MasterTRBInsert@ptrb_list 0020  
                       __end_of_cPowerOfTwo 1010                                  _maxPatches 1016  
                    ?_I2C1_FunctionComplete 0077               __size_of_I2C1_MasterTRBInsert 0046  
                        _p_i2c1_trb_current 0073                             _PanelInChannels 0144  
                          _MYI2C_ReadFaders 07A8                        __CFG_SCANE$available 0000  
                                   ___awdiv 0CE5                                     ___ftdiv 0F57  
                           __size_of___wmul 001C                                     ___ftmul 06F4  
                                   ___fttol 0E45                          writeDAC528@dacData 0057  
        marshallPatchMemory@iPatchMemoryNDX 002F                                  ??___awtoft 002B  
                                ??___ftpack 0025                                     _datapin 1026  
                   _I2C1_MasterReadTRBBuild 0BD7                                     __ptext1 0BB2  
                                   __ptext2 0ECC                                     __ptext3 04BC  
                                   __ptext4 0588                                     __ptext5 0BFF  
                                   __ptext6 0AB4                                     __ptext7 063F  
                                   __ptext8 0E45                                     __ptext9 06F4  
                     _OSCILLATOR_Initialize 0A49                I2C1_MasterReadTRBBuild@pdata 0020  
                                   _wkFloat 00A8                                     _segdisp 0120  
                  ??_PIN_MANAGER_Initialize 0020                                  ?_I2C1_Stop 0077  
                                   _putByte 063F                  __size_of_SYSTEM_Initialize 000C  
                      I2C1_ISR@pi2c_buf_ptr 0071                                     clrloop0 0A6A  
                         __end_of_savePatch 0F57                 __end_of_marshallPatchMemory 0588  
                      end_of_initialization 005F                ??_LED7SegDisplayValueByDigit 0038  
                                   init_ram 0A75                                     initloop 0A76  
                    ??_I2C1_BusCollisionISR 0077                     __end_of_I2C1_Initialize 0AE1  
                         __end_of_toggleDly 1022            marshallPatchMemory@dualADSRdata0 0020  
          marshallPatchMemory@dualADSRdata1 0021                            ?_ADCC_Initialize 0077  
          __end_of_ADCC_GetSingleConversion 0AB4   MYI2C_Write16EEPROMBytes@iPatchAddressHigh 0050  
                               ?_blinkyLoop 0031                       __CFG_WDTCPS$WDTCPS_31 0000  
                                 _PORTBbits 000D                   __size_of_I2C1_MasterWrite 0028  
                         __size_of_I2C1_ISR 013B                                 _ciBatchSize 1010  
       __size_of_LED7SegDisplayValueByDigit 0039                                   _MY_CONSTS 006D  
                                 _TRISCbits 0013                                 _cPowerOfTwo 1000  
                          __CFG_FEXTOSC$OFF 0000                                 putByte@data 0052  
                           main@iResetValue 102C                                 ?_initDAC528 0077  
                               putByte@mask 0053           I2C1_ISR@i2c_10bit_address_restart 006E  
                 marshallPatchMemory@i_1164 002B                   marshallPatchMemory@i_1165 002D  
                                main@fx_935 00EB                                 ___ftdiv@exp 003C  
                   I2C1_MasterWrite@address 0028                 MYI2C_ReadFaders@dataAddress 002B  
                               ___ftmul@exp 0038                  ??_MYI2C_Write16EEPROMBytes 0032  
                      __size_of_writeDAC528 0025                   ??_I2C1_MasterReadTRBBuild 0024  
                    delay@adjustedDelaytime 0029                    __size_of_LED7SegPinWrite 0009  
                            __end_of___wmul 0B30                     I2C1_MasterWrite@trBlock 00CE  
                  I2C1_Stop@completion_code 0078                      ?_OSCILLATOR_Initialize 0077  
                            _clockMicroTime 101C                 __end_of_lineSettleMicroTime 1020  
                       start_initialization 0022                                 ??_I2C1_Stop 0077  
           __size_of_PIN_MANAGER_Initialize 003F                       _prevByteMixFaderValue 00A0  
         __size_of_I2C1_MasterWriteTRBBuild 0020                   ?_I2C1_MasterWriteTRBBuild 0020  
                       __size_of_blinkyLoop 0056                            ?_I2C1_Initialize 0077  
                          __CFG_LPBOREN$OFF 0000                        savePatch@PatchNumber 0056  
                        _i2c_addr_dualADSR0 1031                          _i2c_addr_dualADSR1 1030  
                                  ??___wmul 0024                                 __pdataBANK2 0120  
                    __end_of_clockMicroTime 101E                         __size_of_initDAC528 0016  
              I2C1_MasterWriteTRBBuild@ptrb 0026                           __size_of___awtoft 0022  
                  _ADCC_GetSingleConversion 0AA0                           __size_of___ftpack 0065  
                               __pbssBIGRAM 2370                     __end_ofmain@iResetValue 102E  
                               __pbssCOMMON 0070                                   ___latbits 0002  
                             __pcstackBANK0 0020                               __pcstackBANK1 00D5  
                             _i2c1_tr_queue 00D2                    __end_of_MYI2C_ReadFaders 07FF  
                       blinkyLoop@delayTime 0034          __end_of_LED7SegDisplayValueByDigit 0C60  
                _LED7SegDisplayValueByDigit 0C27                        writeDAC528@dacNumber 0055  
                   ??_I2C1_FunctionComplete 0077               MYI2C_Write16EEPROMBytes@pData 0030  
                    _PIN_MANAGER_Initialize 0C60             ADCC_GetSingleConversion@channel 0023  
                                  ?___awdiv 0020                                    ?___ftdiv 002E  
                                  ?___ftmul 002E                                    ?___fttol 003E  
                                  _I2C1_ISR 0381                ??_INTERRUPT_InterruptManager 007D  
                      marshallPatchMemory@i 0029                                   __pswtext1 0800  
                          _I2C1_MasterWrite 0BFF                          LED7SegPinWrite@val 0020  
                              savePatch@idx 005E                __end_of_I2C1_MasterTRBInsert 0CE5  
                    main@prevFader8bitValue 00D8                           ??_LED7SegPinWrite 0020  
                       blinkyLoop@loopCount 0036                                    ?_putByte 004C  
                              _wkFaderValue 00B9                              __size_of_delay 0053  
                              delay@counter 002D                 I2C1_MasterReadTRBBuild@ptrb 0026  
                    I2C1_MasterRead@trBlock 00CA                              ___wmul@product 0024  
                          main@iChangeCount 00D7                                    _LATCbits 0018  
                                 _savePatch 0ECC                                   clear_ram0 0A69  
                                  _PIE3bits 0719         __size_of_INTERRUPT_InterruptManager 001C  
                                  _PIR3bits 070F         LED7SegDisplayValueByDigit@iTensCode 0038  
                                  _SSP1CON1 0190                                    _SSP1CON3 0192  
  MYI2C_Write16EEPROMBytes@iPatchAddressLow 0049                                    _SSP1STAT 018F  
                              ??_blinkyLoop 0033                                   _toggleDly 1020  
                                _ADCON0bits 0093                                  _ADCON1bits 0094  
                                _ADCON2bits 0095                                  _ADCON3bits 0096  
                         ___wmul@multiplier 0020                               _dualADSRdata0 0150  
                             _dualADSRdata1 0148                                   main@x_945 00E4  
                            savePatch@pData 005C                                ??_initDAC528 0055  
MYI2C_Write16EEPROMBytes@slaveDeviceAddress 004F                          __end_of_blinkyLoop 0DE0  
                                ?_savePatch 0056                                  _ADSTATbits 0097  
              __size_of_marshallPatchMemory 00CC                                _aPatchMemory 2370  
             __size_of_I2C1_BusCollisionISR 0001                      I2C1_ISR@i2c_bytes_left 0070  
                   ??_OSCILLATOR_Initialize 0020                            __size_of___awdiv 0052  
                            delay@delaytime 0026                            __size_of___ftdiv 00A9  
                          __size_of___ftmul 00B4                            __size_of___fttol 0087  
                                  ___awtoft 0B6C                                    ___ftpack 0DE0  
          __end_of_I2C1_MasterWriteTRBBuild 0B6C                          __end_of_initDAC528 0ACA  
                         _LED7SegPulseClock 0A52                                  _ANSELCbits 0F4E  
       MYI2C_Write16EEPROMBytes@dataAddress 0047                          ?_LED7SegPulseClock 0077  
                  __size_of_ADCC_Initialize 001B                          __end_of_maxPatches 1018  
                       I2C1_ISR@i2c_address 0075                                    __ptext10 0B6C  
                                  __ptext11 0D8A                                    __ptext20 07A8  
                                  __ptext12 0F57                                    __ptext21 0B4C  
                                  __ptext13 0DE0                                    __ptext30 0A40  
                                  __ptext22 0C9F                                    __ptext14 0CE5  
                                  __ptext31 0AA0                                    __ptext23 0BD7  
                                  __ptext15 0A5D                                    __ptext24 0A81  
                                  __ptext16 0C60                                    __ptext33 0381  
                                  __ptext25 0C27                                    __ptext17 0A49  
                                  __ptext34 0AE1                                    __ptext26 0B30  
                                  __ptext18 0ACA                                    __ptext35 0A8E  
                                  __ptext27 0A52                                    __ptext19 0AF9  
                                  __ptext36 07FF                                    __ptext28 0D37  
                                  __ptext29 0B14                          blinkyLoop@maxLoops 0031  
                              _SSP1CON1bits 0190                                _SSP1CON2bits 0191  
           MYI2C_Write16EEPROMBytes@counter 0051                                    _clockpin 1028  
                               _mvcChannels 00C6                            __size_of_putByte 00B5  
                                  _maxBanks 1014                         ??_LED7SegPulseClock 0031  
                                  _wkMIDICC 00B8             MYI2C_Write16EEPROMBytes@timeOut 004C  
                                  _latchpin 102A                               __size_of_main 031E  
             I2C1_MasterReadTRBBuild@length 0021                               ??_writeDAC528 0058  
                      __CFG_WDTCWS$WDTCWS_7 0000          MYI2C_ReadFaders@slaveDeviceAddress 002F  
                      _I2C1_MasterTRBInsert 0C9F                      writeDAC528@wkDacNumber 0059  
                ??_ADCC_GetSingleConversion 0023                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0020                  _INTERRUPT_InterruptManager 0004  
                         _byteMixFaderValue 00A4                   __end_of_LED7SegPulseClock 0A5D  
        __size_of_LED7SegShiftOutPulseClock 001C                  ?_LED7SegShiftOutPulseClock 0077  
               MYI2C_ReadFaders@pointerByte 0030                 PIN_MANAGER_Initialize@state 0020  
              LED7SegShiftOutPulseClock@val 0032                              _cMstrClkAdjust 102E  
                                _INTCONbits 000B           __size_of_MYI2C_Write16EEPROMBytes 00B7  
                 ?_MYI2C_Write16EEPROMBytes 002E                               ?_LED7SegSetup 0077  
                            __pstringtext10 1020                              __pstringtext11 1022  
                            __pstringtext12 1024                              __pstringtext13 1026  
                            __pstringtext14 1028                              __pstringtext15 102A  
                            __pstringtext16 102C                              __pstringtext17 102E  
                            __pstringtext18 1030                              __pstringtext19 1031  
                         ?_MYI2C_ReadFaders 0077                                    intlevel1 0000  
               ?_LED7SegDisplayValueByDigit 0034              MYI2C_Write16EEPROMBytes@nCount 004A  
                        ??_MYI2C_ReadFaders 0027                              _mvcPatchNumber 00B5  
                   ?_PIN_MANAGER_Initialize 0077                    __end_of_I2C1_MasterWrite 0C27  
                               ??_savePatch 0058                           __CFG_CLKOUTEN$OFF 0000  
            __size_of_I2C1_FunctionComplete 0012               __end_of_I2C1_FunctionComplete 0AA0  
                               _PPSLOCKbits 0E8F              MYI2C_Write16EEPROMBytes@status 0055  
                     ?_I2C1_MasterTRBInsert 0020                    ?_I2C1_MasterReadTRBBuild 0020  
                savePatch@iPatchAddressHigh 005A                                    putByte@i 0054  
                           _LED7SegPinWrite 0A40                         __end_of_writeDAC528 0BD7  
                    __end_of_cMstrClkAdjust 1030                    __size_of_I2C1_Initialize 0017  
                             __pstringtext1 1000                               __pstringtext2 1010  
                             __pstringtext3 1012                               __pstringtext4 1014  
                             __pstringtext5 1016                               __pstringtext6 1018  
                             __pstringtext7 101A                               __pstringtext8 101C  
                             __pstringtext9 101E           __end_of_LED7SegShiftOutPulseClock 0B4C  
                             main@POT0Value 00DB                               main@POT1Value 00DC  
                   MYI2C_ReadFaders@readTRB 0031                              ??_LED7SegSetup 0020  
                  _I2C1_MasterWriteTRBBuild 0B4C                     MYI2C_ReadFaders@timeOut 002D  
                          main@iLoopCounter 00D9              __end_of_PIN_MANAGER_Initialize 0C9F  
                         ??_ADCC_Initialize 0020                          __size_of_I2C1_Stop 0018  
                    MYI2C_ReadFaders@status 0039                   MYI2C_Write16EEPROMBytes@i 0053  
