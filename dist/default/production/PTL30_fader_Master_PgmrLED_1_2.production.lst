

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Aug 22 07:26:40 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	intentry,global,class=CODE,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	swtext1,local,class=CONST,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 1.45
    59                           ; Generated 16/11/2017 GMT
    60                           ; 
    61                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F18855 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  001C                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  008C                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0110                     	;# 
   147  0110                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0112                     	;# 
   151  0113                     	;# 
   152  0114                     	;# 
   153  0114                     	;# 
   154  0115                     	;# 
   155  0116                     	;# 
   156  0116                     	;# 
   157  0117                     	;# 
   158  0119                     	;# 
   159  0119                     	;# 
   160  0119                     	;# 
   161  011A                     	;# 
   162  011A                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011B                     	;# 
   167  011B                     	;# 
   168  011B                     	;# 
   169  011C                     	;# 
   170  011C                     	;# 
   171  011C                     	;# 
   172  011D                     	;# 
   173  011D                     	;# 
   174  011D                     	;# 
   175  011E                     	;# 
   176  011E                     	;# 
   177  011E                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  011F                     	;# 
   181  011F                     	;# 
   182  011F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  018E                     	;# 
   186  018F                     	;# 
   187  0190                     	;# 
   188  0191                     	;# 
   189  0192                     	;# 
   190  0196                     	;# 
   191  0197                     	;# 
   192  0198                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  020C                     	;# 
   198  020C                     	;# 
   199  020D                     	;# 
   200  020E                     	;# 
   201  020F                     	;# 
   202  020F                     	;# 
   203  0210                     	;# 
   204  0210                     	;# 
   205  0211                     	;# 
   206  0211                     	;# 
   207  0212                     	;# 
   208  0212                     	;# 
   209  0213                     	;# 
   210  0214                     	;# 
   211  0215                     	;# 
   212  0215                     	;# 
   213  0216                     	;# 
   214  0216                     	;# 
   215  0217                     	;# 
   216  0217                     	;# 
   217  0218                     	;# 
   218  0218                     	;# 
   219  0219                     	;# 
   220  021A                     	;# 
   221  021B                     	;# 
   222  021B                     	;# 
   223  021C                     	;# 
   224  021C                     	;# 
   225  021D                     	;# 
   226  021D                     	;# 
   227  021E                     	;# 
   228  021F                     	;# 
   229  028C                     	;# 
   230  028C                     	;# 
   231  028D                     	;# 
   232  028D                     	;# 
   233  028E                     	;# 
   234  028F                     	;# 
   235  0290                     	;# 
   236  0290                     	;# 
   237  0291                     	;# 
   238  0292                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0293                     	;# 
   242  0294                     	;# 
   243  0295                     	;# 
   244  0296                     	;# 
   245  0296                     	;# 
   246  0297                     	;# 
   247  0298                     	;# 
   248  0298                     	;# 
   249  0299                     	;# 
   250  0299                     	;# 
   251  029A                     	;# 
   252  029B                     	;# 
   253  029C                     	;# 
   254  029C                     	;# 
   255  029D                     	;# 
   256  030C                     	;# 
   257  030C                     	;# 
   258  030D                     	;# 
   259  030E                     	;# 
   260  030F                     	;# 
   261  0310                     	;# 
   262  0310                     	;# 
   263  0311                     	;# 
   264  0312                     	;# 
   265  0313                     	;# 
   266  0314                     	;# 
   267  0314                     	;# 
   268  0315                     	;# 
   269  0316                     	;# 
   270  0317                     	;# 
   271  0318                     	;# 
   272  0318                     	;# 
   273  0319                     	;# 
   274  031A                     	;# 
   275  031B                     	;# 
   276  031C                     	;# 
   277  031C                     	;# 
   278  031D                     	;# 
   279  031E                     	;# 
   280  031F                     	;# 
   281  038C                     	;# 
   282  038D                     	;# 
   283  038E                     	;# 
   284  0390                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  040C                     	;# 
   288  040D                     	;# 
   289  040E                     	;# 
   290  040F                     	;# 
   291  0410                     	;# 
   292  0411                     	;# 
   293  0416                     	;# 
   294  0416                     	;# 
   295  0417                     	;# 
   296  0418                     	;# 
   297  0418                     	;# 
   298  0419                     	;# 
   299  041A                     	;# 
   300  041A                     	;# 
   301  041B                     	;# 
   302  041C                     	;# 
   303  041C                     	;# 
   304  041D                     	;# 
   305  041E                     	;# 
   306  041F                     	;# 
   307  048C                     	;# 
   308  048C                     	;# 
   309  048D                     	;# 
   310  048E                     	;# 
   311  048F                     	;# 
   312  048F                     	;# 
   313  0490                     	;# 
   314  0491                     	;# 
   315  0492                     	;# 
   316  0492                     	;# 
   317  0493                     	;# 
   318  0494                     	;# 
   319  0495                     	;# 
   320  0495                     	;# 
   321  0496                     	;# 
   322  0497                     	;# 
   323  0498                     	;# 
   324  0499                     	;# 
   325  049A                     	;# 
   326  049B                     	;# 
   327  049C                     	;# 
   328  049D                     	;# 
   329  050C                     	;# 
   330  050C                     	;# 
   331  050D                     	;# 
   332  050E                     	;# 
   333  050F                     	;# 
   334  050F                     	;# 
   335  0510                     	;# 
   336  0511                     	;# 
   337  0512                     	;# 
   338  0512                     	;# 
   339  0513                     	;# 
   340  0514                     	;# 
   341  0515                     	;# 
   342  0515                     	;# 
   343  0516                     	;# 
   344  0517                     	;# 
   345  0518                     	;# 
   346  0519                     	;# 
   347  051A                     	;# 
   348  051B                     	;# 
   349  051C                     	;# 
   350  051D                     	;# 
   351  058C                     	;# 
   352  058C                     	;# 
   353  058D                     	;# 
   354  058E                     	;# 
   355  058F                     	;# 
   356  058F                     	;# 
   357  0590                     	;# 
   358  0591                     	;# 
   359  0592                     	;# 
   360  0593                     	;# 
   361  060C                     	;# 
   362  060D                     	;# 
   363  060E                     	;# 
   364  060F                     	;# 
   365  0610                     	;# 
   366  0611                     	;# 
   367  0612                     	;# 
   368  0613                     	;# 
   369  0614                     	;# 
   370  0616                     	;# 
   371  0617                     	;# 
   372  0618                     	;# 
   373  0619                     	;# 
   374  061A                     	;# 
   375  061B                     	;# 
   376  061C                     	;# 
   377  061D                     	;# 
   378  061E                     	;# 
   379  068C                     	;# 
   380  068D                     	;# 
   381  068E                     	;# 
   382  068F                     	;# 
   383  0690                     	;# 
   384  0691                     	;# 
   385  0692                     	;# 
   386  0693                     	;# 
   387  0694                     	;# 
   388  070C                     	;# 
   389  070D                     	;# 
   390  070E                     	;# 
   391  070F                     	;# 
   392  0710                     	;# 
   393  0711                     	;# 
   394  0712                     	;# 
   395  0713                     	;# 
   396  0714                     	;# 
   397  0716                     	;# 
   398  0717                     	;# 
   399  0718                     	;# 
   400  0719                     	;# 
   401  071A                     	;# 
   402  071B                     	;# 
   403  071C                     	;# 
   404  071D                     	;# 
   405  071E                     	;# 
   406  0796                     	;# 
   407  0797                     	;# 
   408  0798                     	;# 
   409  0799                     	;# 
   410  079A                     	;# 
   411  079B                     	;# 
   412  080C                     	;# 
   413  080D                     	;# 
   414  080E                     	;# 
   415  080F                     	;# 
   416  0810                     	;# 
   417  0811                     	;# 
   418  0812                     	;# 
   419  0813                     	;# 
   420  0814                     	;# 
   421  081A                     	;# 
   422  081B                     	;# 
   423  081C                     	;# 
   424  081D                     	;# 
   425  081E                     	;# 
   426  081F                     	;# 
   427  088C                     	;# 
   428  088D                     	;# 
   429  088E                     	;# 
   430  088F                     	;# 
   431  0890                     	;# 
   432  0891                     	;# 
   433  0892                     	;# 
   434  0893                     	;# 
   435  0895                     	;# 
   436  0896                     	;# 
   437  0897                     	;# 
   438  0898                     	;# 
   439  0899                     	;# 
   440  089A                     	;# 
   441  089B                     	;# 
   442  090C                     	;# 
   443  090E                     	;# 
   444  090F                     	;# 
   445  091F                     	;# 
   446  091F                     	;# 
   447  098F                     	;# 
   448  098F                     	;# 
   449  0990                     	;# 
   450  0991                     	;# 
   451  0992                     	;# 
   452  0993                     	;# 
   453  0994                     	;# 
   454  0995                     	;# 
   455  0996                     	;# 
   456  0997                     	;# 
   457  0E0F                     	;# 
   458  0E10                     	;# 
   459  0E11                     	;# 
   460  0E12                     	;# 
   461  0E13                     	;# 
   462  0E14                     	;# 
   463  0E15                     	;# 
   464  0E16                     	;# 
   465  0E17                     	;# 
   466  0E18                     	;# 
   467  0E19                     	;# 
   468  0E1A                     	;# 
   469  0E1B                     	;# 
   470  0E1C                     	;# 
   471  0E1D                     	;# 
   472  0E1E                     	;# 
   473  0E1F                     	;# 
   474  0E20                     	;# 
   475  0E21                     	;# 
   476  0E22                     	;# 
   477  0E23                     	;# 
   478  0E24                     	;# 
   479  0E25                     	;# 
   480  0E26                     	;# 
   481  0E27                     	;# 
   482  0E28                     	;# 
   483  0E29                     	;# 
   484  0E2A                     	;# 
   485  0E2B                     	;# 
   486  0E2C                     	;# 
   487  0E2D                     	;# 
   488  0E2E                     	;# 
   489  0E2F                     	;# 
   490  0E30                     	;# 
   491  0E31                     	;# 
   492  0E32                     	;# 
   493  0E33                     	;# 
   494  0E34                     	;# 
   495  0E35                     	;# 
   496  0E36                     	;# 
   497  0E37                     	;# 
   498  0E8F                     	;# 
   499  0E90                     	;# 
   500  0E91                     	;# 
   501  0E92                     	;# 
   502  0E93                     	;# 
   503  0E94                     	;# 
   504  0E95                     	;# 
   505  0E96                     	;# 
   506  0E97                     	;# 
   507  0E9C                     	;# 
   508  0E9D                     	;# 
   509  0E9E                     	;# 
   510  0EA1                     	;# 
   511  0EA2                     	;# 
   512  0EA3                     	;# 
   513  0EA4                     	;# 
   514  0EA5                     	;# 
   515  0EA9                     	;# 
   516  0EAA                     	;# 
   517  0EAB                     	;# 
   518  0EAC                     	;# 
   519  0EB1                     	;# 
   520  0EB2                     	;# 
   521  0EB3                     	;# 
   522  0EB8                     	;# 
   523  0EB9                     	;# 
   524  0EBA                     	;# 
   525  0EBB                     	;# 
   526  0EBC                     	;# 
   527  0EBD                     	;# 
   528  0EBE                     	;# 
   529  0EC3                     	;# 
   530  0EC5                     	;# 
   531  0EC6                     	;# 
   532  0EC7                     	;# 
   533  0EC8                     	;# 
   534  0EC9                     	;# 
   535  0ECA                     	;# 
   536  0ECB                     	;# 
   537  0ECC                     	;# 
   538  0F10                     	;# 
   539  0F11                     	;# 
   540  0F12                     	;# 
   541  0F13                     	;# 
   542  0F14                     	;# 
   543  0F15                     	;# 
   544  0F16                     	;# 
   545  0F17                     	;# 
   546  0F18                     	;# 
   547  0F19                     	;# 
   548  0F1A                     	;# 
   549  0F1B                     	;# 
   550  0F1C                     	;# 
   551  0F1D                     	;# 
   552  0F1E                     	;# 
   553  0F1F                     	;# 
   554  0F20                     	;# 
   555  0F21                     	;# 
   556  0F22                     	;# 
   557  0F23                     	;# 
   558  0F24                     	;# 
   559  0F25                     	;# 
   560  0F26                     	;# 
   561  0F27                     	;# 
   562  0F38                     	;# 
   563  0F39                     	;# 
   564  0F3A                     	;# 
   565  0F3B                     	;# 
   566  0F3C                     	;# 
   567  0F3D                     	;# 
   568  0F3E                     	;# 
   569  0F3F                     	;# 
   570  0F40                     	;# 
   571  0F41                     	;# 
   572  0F43                     	;# 
   573  0F44                     	;# 
   574  0F45                     	;# 
   575  0F46                     	;# 
   576  0F47                     	;# 
   577  0F48                     	;# 
   578  0F49                     	;# 
   579  0F4A                     	;# 
   580  0F4B                     	;# 
   581  0F4C                     	;# 
   582  0F4E                     	;# 
   583  0F4F                     	;# 
   584  0F50                     	;# 
   585  0F51                     	;# 
   586  0F52                     	;# 
   587  0F53                     	;# 
   588  0F54                     	;# 
   589  0F55                     	;# 
   590  0F56                     	;# 
   591  0F57                     	;# 
   592  0F65                     	;# 
   593  0F68                     	;# 
   594  0F69                     	;# 
   595  0F6A                     	;# 
   596  0F6B                     	;# 
   597  0FE4                     	;# 
   598  0FE5                     	;# 
   599  0FE6                     	;# 
   600  0FE7                     	;# 
   601  0FE8                     	;# 
   602  0FE9                     	;# 
   603  0FEA                     	;# 
   604  0FEB                     	;# 
   605  0FED                     	;# 
   606  0FEE                     	;# 
   607  0FEF                     	;# 
   608  0000                     	;# 
   609  0001                     	;# 
   610  0002                     	;# 
   611  0003                     	;# 
   612  0004                     	;# 
   613  0005                     	;# 
   614  0006                     	;# 
   615  0007                     	;# 
   616  0008                     	;# 
   617  0009                     	;# 
   618  000A                     	;# 
   619  000B                     	;# 
   620  000C                     	;# 
   621  000D                     	;# 
   622  000E                     	;# 
   623  0010                     	;# 
   624  0011                     	;# 
   625  0012                     	;# 
   626  0013                     	;# 
   627  0016                     	;# 
   628  0017                     	;# 
   629  0018                     	;# 
   630  001C                     	;# 
   631  001C                     	;# 
   632  001D                     	;# 
   633  001D                     	;# 
   634  001E                     	;# 
   635  001F                     	;# 
   636  008C                     	;# 
   637  008C                     	;# 
   638  008D                     	;# 
   639  008E                     	;# 
   640  008E                     	;# 
   641  008F                     	;# 
   642  0090                     	;# 
   643  0090                     	;# 
   644  0091                     	;# 
   645  0093                     	;# 
   646  0094                     	;# 
   647  0095                     	;# 
   648  0096                     	;# 
   649  0097                     	;# 
   650  0098                     	;# 
   651  0099                     	;# 
   652  009A                     	;# 
   653  009B                     	;# 
   654  009C                     	;# 
   655  009D                     	;# 
   656  009E                     	;# 
   657  010C                     	;# 
   658  010D                     	;# 
   659  010E                     	;# 
   660  010E                     	;# 
   661  010F                     	;# 
   662  0110                     	;# 
   663  0110                     	;# 
   664  0111                     	;# 
   665  0112                     	;# 
   666  0112                     	;# 
   667  0113                     	;# 
   668  0114                     	;# 
   669  0114                     	;# 
   670  0115                     	;# 
   671  0116                     	;# 
   672  0116                     	;# 
   673  0117                     	;# 
   674  0119                     	;# 
   675  0119                     	;# 
   676  0119                     	;# 
   677  011A                     	;# 
   678  011A                     	;# 
   679  011A                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011B                     	;# 
   683  011B                     	;# 
   684  011B                     	;# 
   685  011C                     	;# 
   686  011C                     	;# 
   687  011C                     	;# 
   688  011D                     	;# 
   689  011D                     	;# 
   690  011D                     	;# 
   691  011E                     	;# 
   692  011E                     	;# 
   693  011E                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  011F                     	;# 
   697  011F                     	;# 
   698  011F                     	;# 
   699  018C                     	;# 
   700  018D                     	;# 
   701  018E                     	;# 
   702  018F                     	;# 
   703  0190                     	;# 
   704  0191                     	;# 
   705  0192                     	;# 
   706  0196                     	;# 
   707  0197                     	;# 
   708  0198                     	;# 
   709  0199                     	;# 
   710  019A                     	;# 
   711  019B                     	;# 
   712  019C                     	;# 
   713  020C                     	;# 
   714  020C                     	;# 
   715  020D                     	;# 
   716  020E                     	;# 
   717  020F                     	;# 
   718  020F                     	;# 
   719  0210                     	;# 
   720  0210                     	;# 
   721  0211                     	;# 
   722  0211                     	;# 
   723  0212                     	;# 
   724  0212                     	;# 
   725  0213                     	;# 
   726  0214                     	;# 
   727  0215                     	;# 
   728  0215                     	;# 
   729  0216                     	;# 
   730  0216                     	;# 
   731  0217                     	;# 
   732  0217                     	;# 
   733  0218                     	;# 
   734  0218                     	;# 
   735  0219                     	;# 
   736  021A                     	;# 
   737  021B                     	;# 
   738  021B                     	;# 
   739  021C                     	;# 
   740  021C                     	;# 
   741  021D                     	;# 
   742  021D                     	;# 
   743  021E                     	;# 
   744  021F                     	;# 
   745  028C                     	;# 
   746  028C                     	;# 
   747  028D                     	;# 
   748  028D                     	;# 
   749  028E                     	;# 
   750  028F                     	;# 
   751  0290                     	;# 
   752  0290                     	;# 
   753  0291                     	;# 
   754  0292                     	;# 
   755  0292                     	;# 
   756  0293                     	;# 
   757  0293                     	;# 
   758  0294                     	;# 
   759  0295                     	;# 
   760  0296                     	;# 
   761  0296                     	;# 
   762  0297                     	;# 
   763  0298                     	;# 
   764  0298                     	;# 
   765  0299                     	;# 
   766  0299                     	;# 
   767  029A                     	;# 
   768  029B                     	;# 
   769  029C                     	;# 
   770  029C                     	;# 
   771  029D                     	;# 
   772  030C                     	;# 
   773  030C                     	;# 
   774  030D                     	;# 
   775  030E                     	;# 
   776  030F                     	;# 
   777  0310                     	;# 
   778  0310                     	;# 
   779  0311                     	;# 
   780  0312                     	;# 
   781  0313                     	;# 
   782  0314                     	;# 
   783  0314                     	;# 
   784  0315                     	;# 
   785  0316                     	;# 
   786  0317                     	;# 
   787  0318                     	;# 
   788  0318                     	;# 
   789  0319                     	;# 
   790  031A                     	;# 
   791  031B                     	;# 
   792  031C                     	;# 
   793  031C                     	;# 
   794  031D                     	;# 
   795  031E                     	;# 
   796  031F                     	;# 
   797  038C                     	;# 
   798  038D                     	;# 
   799  038E                     	;# 
   800  0390                     	;# 
   801  0391                     	;# 
   802  0392                     	;# 
   803  040C                     	;# 
   804  040D                     	;# 
   805  040E                     	;# 
   806  040F                     	;# 
   807  0410                     	;# 
   808  0411                     	;# 
   809  0416                     	;# 
   810  0416                     	;# 
   811  0417                     	;# 
   812  0418                     	;# 
   813  0418                     	;# 
   814  0419                     	;# 
   815  041A                     	;# 
   816  041A                     	;# 
   817  041B                     	;# 
   818  041C                     	;# 
   819  041C                     	;# 
   820  041D                     	;# 
   821  041E                     	;# 
   822  041F                     	;# 
   823  048C                     	;# 
   824  048C                     	;# 
   825  048D                     	;# 
   826  048E                     	;# 
   827  048F                     	;# 
   828  048F                     	;# 
   829  0490                     	;# 
   830  0491                     	;# 
   831  0492                     	;# 
   832  0492                     	;# 
   833  0493                     	;# 
   834  0494                     	;# 
   835  0495                     	;# 
   836  0495                     	;# 
   837  0496                     	;# 
   838  0497                     	;# 
   839  0498                     	;# 
   840  0499                     	;# 
   841  049A                     	;# 
   842  049B                     	;# 
   843  049C                     	;# 
   844  049D                     	;# 
   845  050C                     	;# 
   846  050C                     	;# 
   847  050D                     	;# 
   848  050E                     	;# 
   849  050F                     	;# 
   850  050F                     	;# 
   851  0510                     	;# 
   852  0511                     	;# 
   853  0512                     	;# 
   854  0512                     	;# 
   855  0513                     	;# 
   856  0514                     	;# 
   857  0515                     	;# 
   858  0515                     	;# 
   859  0516                     	;# 
   860  0517                     	;# 
   861  0518                     	;# 
   862  0519                     	;# 
   863  051A                     	;# 
   864  051B                     	;# 
   865  051C                     	;# 
   866  051D                     	;# 
   867  058C                     	;# 
   868  058C                     	;# 
   869  058D                     	;# 
   870  058E                     	;# 
   871  058F                     	;# 
   872  058F                     	;# 
   873  0590                     	;# 
   874  0591                     	;# 
   875  0592                     	;# 
   876  0593                     	;# 
   877  060C                     	;# 
   878  060D                     	;# 
   879  060E                     	;# 
   880  060F                     	;# 
   881  0610                     	;# 
   882  0611                     	;# 
   883  0612                     	;# 
   884  0613                     	;# 
   885  0614                     	;# 
   886  0616                     	;# 
   887  0617                     	;# 
   888  0618                     	;# 
   889  0619                     	;# 
   890  061A                     	;# 
   891  061B                     	;# 
   892  061C                     	;# 
   893  061D                     	;# 
   894  061E                     	;# 
   895  068C                     	;# 
   896  068D                     	;# 
   897  068E                     	;# 
   898  068F                     	;# 
   899  0690                     	;# 
   900  0691                     	;# 
   901  0692                     	;# 
   902  0693                     	;# 
   903  0694                     	;# 
   904  070C                     	;# 
   905  070D                     	;# 
   906  070E                     	;# 
   907  070F                     	;# 
   908  0710                     	;# 
   909  0711                     	;# 
   910  0712                     	;# 
   911  0713                     	;# 
   912  0714                     	;# 
   913  0716                     	;# 
   914  0717                     	;# 
   915  0718                     	;# 
   916  0719                     	;# 
   917  071A                     	;# 
   918  071B                     	;# 
   919  071C                     	;# 
   920  071D                     	;# 
   921  071E                     	;# 
   922  0796                     	;# 
   923  0797                     	;# 
   924  0798                     	;# 
   925  0799                     	;# 
   926  079A                     	;# 
   927  079B                     	;# 
   928  080C                     	;# 
   929  080D                     	;# 
   930  080E                     	;# 
   931  080F                     	;# 
   932  0810                     	;# 
   933  0811                     	;# 
   934  0812                     	;# 
   935  0813                     	;# 
   936  0814                     	;# 
   937  081A                     	;# 
   938  081B                     	;# 
   939  081C                     	;# 
   940  081D                     	;# 
   941  081E                     	;# 
   942  081F                     	;# 
   943  088C                     	;# 
   944  088D                     	;# 
   945  088E                     	;# 
   946  088F                     	;# 
   947  0890                     	;# 
   948  0891                     	;# 
   949  0892                     	;# 
   950  0893                     	;# 
   951  0895                     	;# 
   952  0896                     	;# 
   953  0897                     	;# 
   954  0898                     	;# 
   955  0899                     	;# 
   956  089A                     	;# 
   957  089B                     	;# 
   958  090C                     	;# 
   959  090E                     	;# 
   960  090F                     	;# 
   961  091F                     	;# 
   962  091F                     	;# 
   963  098F                     	;# 
   964  098F                     	;# 
   965  0990                     	;# 
   966  0991                     	;# 
   967  0992                     	;# 
   968  0993                     	;# 
   969  0994                     	;# 
   970  0995                     	;# 
   971  0996                     	;# 
   972  0997                     	;# 
   973  0E0F                     	;# 
   974  0E10                     	;# 
   975  0E11                     	;# 
   976  0E12                     	;# 
   977  0E13                     	;# 
   978  0E14                     	;# 
   979  0E15                     	;# 
   980  0E16                     	;# 
   981  0E17                     	;# 
   982  0E18                     	;# 
   983  0E19                     	;# 
   984  0E1A                     	;# 
   985  0E1B                     	;# 
   986  0E1C                     	;# 
   987  0E1D                     	;# 
   988  0E1E                     	;# 
   989  0E1F                     	;# 
   990  0E20                     	;# 
   991  0E21                     	;# 
   992  0E22                     	;# 
   993  0E23                     	;# 
   994  0E24                     	;# 
   995  0E25                     	;# 
   996  0E26                     	;# 
   997  0E27                     	;# 
   998  0E28                     	;# 
   999  0E29                     	;# 
  1000  0E2A                     	;# 
  1001  0E2B                     	;# 
  1002  0E2C                     	;# 
  1003  0E2D                     	;# 
  1004  0E2E                     	;# 
  1005  0E2F                     	;# 
  1006  0E30                     	;# 
  1007  0E31                     	;# 
  1008  0E32                     	;# 
  1009  0E33                     	;# 
  1010  0E34                     	;# 
  1011  0E35                     	;# 
  1012  0E36                     	;# 
  1013  0E37                     	;# 
  1014  0E8F                     	;# 
  1015  0E90                     	;# 
  1016  0E91                     	;# 
  1017  0E92                     	;# 
  1018  0E93                     	;# 
  1019  0E94                     	;# 
  1020  0E95                     	;# 
  1021  0E96                     	;# 
  1022  0E97                     	;# 
  1023  0E9C                     	;# 
  1024  0E9D                     	;# 
  1025  0E9E                     	;# 
  1026  0EA1                     	;# 
  1027  0EA2                     	;# 
  1028  0EA3                     	;# 
  1029  0EA4                     	;# 
  1030  0EA5                     	;# 
  1031  0EA9                     	;# 
  1032  0EAA                     	;# 
  1033  0EAB                     	;# 
  1034  0EAC                     	;# 
  1035  0EB1                     	;# 
  1036  0EB2                     	;# 
  1037  0EB3                     	;# 
  1038  0EB8                     	;# 
  1039  0EB9                     	;# 
  1040  0EBA                     	;# 
  1041  0EBB                     	;# 
  1042  0EBC                     	;# 
  1043  0EBD                     	;# 
  1044  0EBE                     	;# 
  1045  0EC3                     	;# 
  1046  0EC5                     	;# 
  1047  0EC6                     	;# 
  1048  0EC7                     	;# 
  1049  0EC8                     	;# 
  1050  0EC9                     	;# 
  1051  0ECA                     	;# 
  1052  0ECB                     	;# 
  1053  0ECC                     	;# 
  1054  0F10                     	;# 
  1055  0F11                     	;# 
  1056  0F12                     	;# 
  1057  0F13                     	;# 
  1058  0F14                     	;# 
  1059  0F15                     	;# 
  1060  0F16                     	;# 
  1061  0F17                     	;# 
  1062  0F18                     	;# 
  1063  0F19                     	;# 
  1064  0F1A                     	;# 
  1065  0F1B                     	;# 
  1066  0F1C                     	;# 
  1067  0F1D                     	;# 
  1068  0F1E                     	;# 
  1069  0F1F                     	;# 
  1070  0F20                     	;# 
  1071  0F21                     	;# 
  1072  0F22                     	;# 
  1073  0F23                     	;# 
  1074  0F24                     	;# 
  1075  0F25                     	;# 
  1076  0F26                     	;# 
  1077  0F27                     	;# 
  1078  0F38                     	;# 
  1079  0F39                     	;# 
  1080  0F3A                     	;# 
  1081  0F3B                     	;# 
  1082  0F3C                     	;# 
  1083  0F3D                     	;# 
  1084  0F3E                     	;# 
  1085  0F3F                     	;# 
  1086  0F40                     	;# 
  1087  0F41                     	;# 
  1088  0F43                     	;# 
  1089  0F44                     	;# 
  1090  0F45                     	;# 
  1091  0F46                     	;# 
  1092  0F47                     	;# 
  1093  0F48                     	;# 
  1094  0F49                     	;# 
  1095  0F4A                     	;# 
  1096  0F4B                     	;# 
  1097  0F4C                     	;# 
  1098  0F4E                     	;# 
  1099  0F4F                     	;# 
  1100  0F50                     	;# 
  1101  0F51                     	;# 
  1102  0F52                     	;# 
  1103  0F53                     	;# 
  1104  0F54                     	;# 
  1105  0F55                     	;# 
  1106  0F56                     	;# 
  1107  0F57                     	;# 
  1108  0F65                     	;# 
  1109  0F68                     	;# 
  1110  0F69                     	;# 
  1111  0F6A                     	;# 
  1112  0F6B                     	;# 
  1113  0FE4                     	;# 
  1114  0FE5                     	;# 
  1115  0FE6                     	;# 
  1116  0FE7                     	;# 
  1117  0FE8                     	;# 
  1118  0FE9                     	;# 
  1119  0FEA                     	;# 
  1120  0FEB                     	;# 
  1121  0FED                     	;# 
  1122  0FEE                     	;# 
  1123  0FEF                     	;# 
  1124  0000                     	;# 
  1125  0001                     	;# 
  1126  0002                     	;# 
  1127  0003                     	;# 
  1128  0004                     	;# 
  1129  0005                     	;# 
  1130  0006                     	;# 
  1131  0007                     	;# 
  1132  0008                     	;# 
  1133  0009                     	;# 
  1134  000A                     	;# 
  1135  000B                     	;# 
  1136  000C                     	;# 
  1137  000D                     	;# 
  1138  000E                     	;# 
  1139  0010                     	;# 
  1140  0011                     	;# 
  1141  0012                     	;# 
  1142  0013                     	;# 
  1143  0016                     	;# 
  1144  0017                     	;# 
  1145  0018                     	;# 
  1146  001C                     	;# 
  1147  001C                     	;# 
  1148  001D                     	;# 
  1149  001D                     	;# 
  1150  001E                     	;# 
  1151  001F                     	;# 
  1152  008C                     	;# 
  1153  008C                     	;# 
  1154  008D                     	;# 
  1155  008E                     	;# 
  1156  008E                     	;# 
  1157  008F                     	;# 
  1158  0090                     	;# 
  1159  0090                     	;# 
  1160  0091                     	;# 
  1161  0093                     	;# 
  1162  0094                     	;# 
  1163  0095                     	;# 
  1164  0096                     	;# 
  1165  0097                     	;# 
  1166  0098                     	;# 
  1167  0099                     	;# 
  1168  009A                     	;# 
  1169  009B                     	;# 
  1170  009C                     	;# 
  1171  009D                     	;# 
  1172  009E                     	;# 
  1173  010C                     	;# 
  1174  010D                     	;# 
  1175  010E                     	;# 
  1176  010E                     	;# 
  1177  010F                     	;# 
  1178  0110                     	;# 
  1179  0110                     	;# 
  1180  0111                     	;# 
  1181  0112                     	;# 
  1182  0112                     	;# 
  1183  0113                     	;# 
  1184  0114                     	;# 
  1185  0114                     	;# 
  1186  0115                     	;# 
  1187  0116                     	;# 
  1188  0116                     	;# 
  1189  0117                     	;# 
  1190  0119                     	;# 
  1191  0119                     	;# 
  1192  0119                     	;# 
  1193  011A                     	;# 
  1194  011A                     	;# 
  1195  011A                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011B                     	;# 
  1199  011B                     	;# 
  1200  011B                     	;# 
  1201  011C                     	;# 
  1202  011C                     	;# 
  1203  011C                     	;# 
  1204  011D                     	;# 
  1205  011D                     	;# 
  1206  011D                     	;# 
  1207  011E                     	;# 
  1208  011E                     	;# 
  1209  011E                     	;# 
  1210  011F                     	;# 
  1211  011F                     	;# 
  1212  011F                     	;# 
  1213  011F                     	;# 
  1214  011F                     	;# 
  1215  018C                     	;# 
  1216  018D                     	;# 
  1217  018E                     	;# 
  1218  018F                     	;# 
  1219  0190                     	;# 
  1220  0191                     	;# 
  1221  0192                     	;# 
  1222  0196                     	;# 
  1223  0197                     	;# 
  1224  0198                     	;# 
  1225  0199                     	;# 
  1226  019A                     	;# 
  1227  019B                     	;# 
  1228  019C                     	;# 
  1229  020C                     	;# 
  1230  020C                     	;# 
  1231  020D                     	;# 
  1232  020E                     	;# 
  1233  020F                     	;# 
  1234  020F                     	;# 
  1235  0210                     	;# 
  1236  0210                     	;# 
  1237  0211                     	;# 
  1238  0211                     	;# 
  1239  0212                     	;# 
  1240  0212                     	;# 
  1241  0213                     	;# 
  1242  0214                     	;# 
  1243  0215                     	;# 
  1244  0215                     	;# 
  1245  0216                     	;# 
  1246  0216                     	;# 
  1247  0217                     	;# 
  1248  0217                     	;# 
  1249  0218                     	;# 
  1250  0218                     	;# 
  1251  0219                     	;# 
  1252  021A                     	;# 
  1253  021B                     	;# 
  1254  021B                     	;# 
  1255  021C                     	;# 
  1256  021C                     	;# 
  1257  021D                     	;# 
  1258  021D                     	;# 
  1259  021E                     	;# 
  1260  021F                     	;# 
  1261  028C                     	;# 
  1262  028C                     	;# 
  1263  028D                     	;# 
  1264  028D                     	;# 
  1265  028E                     	;# 
  1266  028F                     	;# 
  1267  0290                     	;# 
  1268  0290                     	;# 
  1269  0291                     	;# 
  1270  0292                     	;# 
  1271  0292                     	;# 
  1272  0293                     	;# 
  1273  0293                     	;# 
  1274  0294                     	;# 
  1275  0295                     	;# 
  1276  0296                     	;# 
  1277  0296                     	;# 
  1278  0297                     	;# 
  1279  0298                     	;# 
  1280  0298                     	;# 
  1281  0299                     	;# 
  1282  0299                     	;# 
  1283  029A                     	;# 
  1284  029B                     	;# 
  1285  029C                     	;# 
  1286  029C                     	;# 
  1287  029D                     	;# 
  1288  030C                     	;# 
  1289  030C                     	;# 
  1290  030D                     	;# 
  1291  030E                     	;# 
  1292  030F                     	;# 
  1293  0310                     	;# 
  1294  0310                     	;# 
  1295  0311                     	;# 
  1296  0312                     	;# 
  1297  0313                     	;# 
  1298  0314                     	;# 
  1299  0314                     	;# 
  1300  0315                     	;# 
  1301  0316                     	;# 
  1302  0317                     	;# 
  1303  0318                     	;# 
  1304  0318                     	;# 
  1305  0319                     	;# 
  1306  031A                     	;# 
  1307  031B                     	;# 
  1308  031C                     	;# 
  1309  031C                     	;# 
  1310  031D                     	;# 
  1311  031E                     	;# 
  1312  031F                     	;# 
  1313  038C                     	;# 
  1314  038D                     	;# 
  1315  038E                     	;# 
  1316  0390                     	;# 
  1317  0391                     	;# 
  1318  0392                     	;# 
  1319  040C                     	;# 
  1320  040D                     	;# 
  1321  040E                     	;# 
  1322  040F                     	;# 
  1323  0410                     	;# 
  1324  0411                     	;# 
  1325  0416                     	;# 
  1326  0416                     	;# 
  1327  0417                     	;# 
  1328  0418                     	;# 
  1329  0418                     	;# 
  1330  0419                     	;# 
  1331  041A                     	;# 
  1332  041A                     	;# 
  1333  041B                     	;# 
  1334  041C                     	;# 
  1335  041C                     	;# 
  1336  041D                     	;# 
  1337  041E                     	;# 
  1338  041F                     	;# 
  1339  048C                     	;# 
  1340  048C                     	;# 
  1341  048D                     	;# 
  1342  048E                     	;# 
  1343  048F                     	;# 
  1344  048F                     	;# 
  1345  0490                     	;# 
  1346  0491                     	;# 
  1347  0492                     	;# 
  1348  0492                     	;# 
  1349  0493                     	;# 
  1350  0494                     	;# 
  1351  0495                     	;# 
  1352  0495                     	;# 
  1353  0496                     	;# 
  1354  0497                     	;# 
  1355  0498                     	;# 
  1356  0499                     	;# 
  1357  049A                     	;# 
  1358  049B                     	;# 
  1359  049C                     	;# 
  1360  049D                     	;# 
  1361  050C                     	;# 
  1362  050C                     	;# 
  1363  050D                     	;# 
  1364  050E                     	;# 
  1365  050F                     	;# 
  1366  050F                     	;# 
  1367  0510                     	;# 
  1368  0511                     	;# 
  1369  0512                     	;# 
  1370  0512                     	;# 
  1371  0513                     	;# 
  1372  0514                     	;# 
  1373  0515                     	;# 
  1374  0515                     	;# 
  1375  0516                     	;# 
  1376  0517                     	;# 
  1377  0518                     	;# 
  1378  0519                     	;# 
  1379  051A                     	;# 
  1380  051B                     	;# 
  1381  051C                     	;# 
  1382  051D                     	;# 
  1383  058C                     	;# 
  1384  058C                     	;# 
  1385  058D                     	;# 
  1386  058E                     	;# 
  1387  058F                     	;# 
  1388  058F                     	;# 
  1389  0590                     	;# 
  1390  0591                     	;# 
  1391  0592                     	;# 
  1392  0593                     	;# 
  1393  060C                     	;# 
  1394  060D                     	;# 
  1395  060E                     	;# 
  1396  060F                     	;# 
  1397  0610                     	;# 
  1398  0611                     	;# 
  1399  0612                     	;# 
  1400  0613                     	;# 
  1401  0614                     	;# 
  1402  0616                     	;# 
  1403  0617                     	;# 
  1404  0618                     	;# 
  1405  0619                     	;# 
  1406  061A                     	;# 
  1407  061B                     	;# 
  1408  061C                     	;# 
  1409  061D                     	;# 
  1410  061E                     	;# 
  1411  068C                     	;# 
  1412  068D                     	;# 
  1413  068E                     	;# 
  1414  068F                     	;# 
  1415  0690                     	;# 
  1416  0691                     	;# 
  1417  0692                     	;# 
  1418  0693                     	;# 
  1419  0694                     	;# 
  1420  070C                     	;# 
  1421  070D                     	;# 
  1422  070E                     	;# 
  1423  070F                     	;# 
  1424  0710                     	;# 
  1425  0711                     	;# 
  1426  0712                     	;# 
  1427  0713                     	;# 
  1428  0714                     	;# 
  1429  0716                     	;# 
  1430  0717                     	;# 
  1431  0718                     	;# 
  1432  0719                     	;# 
  1433  071A                     	;# 
  1434  071B                     	;# 
  1435  071C                     	;# 
  1436  071D                     	;# 
  1437  071E                     	;# 
  1438  0796                     	;# 
  1439  0797                     	;# 
  1440  0798                     	;# 
  1441  0799                     	;# 
  1442  079A                     	;# 
  1443  079B                     	;# 
  1444  080C                     	;# 
  1445  080D                     	;# 
  1446  080E                     	;# 
  1447  080F                     	;# 
  1448  0810                     	;# 
  1449  0811                     	;# 
  1450  0812                     	;# 
  1451  0813                     	;# 
  1452  0814                     	;# 
  1453  081A                     	;# 
  1454  081B                     	;# 
  1455  081C                     	;# 
  1456  081D                     	;# 
  1457  081E                     	;# 
  1458  081F                     	;# 
  1459  088C                     	;# 
  1460  088D                     	;# 
  1461  088E                     	;# 
  1462  088F                     	;# 
  1463  0890                     	;# 
  1464  0891                     	;# 
  1465  0892                     	;# 
  1466  0893                     	;# 
  1467  0895                     	;# 
  1468  0896                     	;# 
  1469  0897                     	;# 
  1470  0898                     	;# 
  1471  0899                     	;# 
  1472  089A                     	;# 
  1473  089B                     	;# 
  1474  090C                     	;# 
  1475  090E                     	;# 
  1476  090F                     	;# 
  1477  091F                     	;# 
  1478  091F                     	;# 
  1479  098F                     	;# 
  1480  098F                     	;# 
  1481  0990                     	;# 
  1482  0991                     	;# 
  1483  0992                     	;# 
  1484  0993                     	;# 
  1485  0994                     	;# 
  1486  0995                     	;# 
  1487  0996                     	;# 
  1488  0997                     	;# 
  1489  0E0F                     	;# 
  1490  0E10                     	;# 
  1491  0E11                     	;# 
  1492  0E12                     	;# 
  1493  0E13                     	;# 
  1494  0E14                     	;# 
  1495  0E15                     	;# 
  1496  0E16                     	;# 
  1497  0E17                     	;# 
  1498  0E18                     	;# 
  1499  0E19                     	;# 
  1500  0E1A                     	;# 
  1501  0E1B                     	;# 
  1502  0E1C                     	;# 
  1503  0E1D                     	;# 
  1504  0E1E                     	;# 
  1505  0E1F                     	;# 
  1506  0E20                     	;# 
  1507  0E21                     	;# 
  1508  0E22                     	;# 
  1509  0E23                     	;# 
  1510  0E24                     	;# 
  1511  0E25                     	;# 
  1512  0E26                     	;# 
  1513  0E27                     	;# 
  1514  0E28                     	;# 
  1515  0E29                     	;# 
  1516  0E2A                     	;# 
  1517  0E2B                     	;# 
  1518  0E2C                     	;# 
  1519  0E2D                     	;# 
  1520  0E2E                     	;# 
  1521  0E2F                     	;# 
  1522  0E30                     	;# 
  1523  0E31                     	;# 
  1524  0E32                     	;# 
  1525  0E33                     	;# 
  1526  0E34                     	;# 
  1527  0E35                     	;# 
  1528  0E36                     	;# 
  1529  0E37                     	;# 
  1530  0E8F                     	;# 
  1531  0E90                     	;# 
  1532  0E91                     	;# 
  1533  0E92                     	;# 
  1534  0E93                     	;# 
  1535  0E94                     	;# 
  1536  0E95                     	;# 
  1537  0E96                     	;# 
  1538  0E97                     	;# 
  1539  0E9C                     	;# 
  1540  0E9D                     	;# 
  1541  0E9E                     	;# 
  1542  0EA1                     	;# 
  1543  0EA2                     	;# 
  1544  0EA3                     	;# 
  1545  0EA4                     	;# 
  1546  0EA5                     	;# 
  1547  0EA9                     	;# 
  1548  0EAA                     	;# 
  1549  0EAB                     	;# 
  1550  0EAC                     	;# 
  1551  0EB1                     	;# 
  1552  0EB2                     	;# 
  1553  0EB3                     	;# 
  1554  0EB8                     	;# 
  1555  0EB9                     	;# 
  1556  0EBA                     	;# 
  1557  0EBB                     	;# 
  1558  0EBC                     	;# 
  1559  0EBD                     	;# 
  1560  0EBE                     	;# 
  1561  0EC3                     	;# 
  1562  0EC5                     	;# 
  1563  0EC6                     	;# 
  1564  0EC7                     	;# 
  1565  0EC8                     	;# 
  1566  0EC9                     	;# 
  1567  0ECA                     	;# 
  1568  0ECB                     	;# 
  1569  0ECC                     	;# 
  1570  0F10                     	;# 
  1571  0F11                     	;# 
  1572  0F12                     	;# 
  1573  0F13                     	;# 
  1574  0F14                     	;# 
  1575  0F15                     	;# 
  1576  0F16                     	;# 
  1577  0F17                     	;# 
  1578  0F18                     	;# 
  1579  0F19                     	;# 
  1580  0F1A                     	;# 
  1581  0F1B                     	;# 
  1582  0F1C                     	;# 
  1583  0F1D                     	;# 
  1584  0F1E                     	;# 
  1585  0F1F                     	;# 
  1586  0F20                     	;# 
  1587  0F21                     	;# 
  1588  0F22                     	;# 
  1589  0F23                     	;# 
  1590  0F24                     	;# 
  1591  0F25                     	;# 
  1592  0F26                     	;# 
  1593  0F27                     	;# 
  1594  0F38                     	;# 
  1595  0F39                     	;# 
  1596  0F3A                     	;# 
  1597  0F3B                     	;# 
  1598  0F3C                     	;# 
  1599  0F3D                     	;# 
  1600  0F3E                     	;# 
  1601  0F3F                     	;# 
  1602  0F40                     	;# 
  1603  0F41                     	;# 
  1604  0F43                     	;# 
  1605  0F44                     	;# 
  1606  0F45                     	;# 
  1607  0F46                     	;# 
  1608  0F47                     	;# 
  1609  0F48                     	;# 
  1610  0F49                     	;# 
  1611  0F4A                     	;# 
  1612  0F4B                     	;# 
  1613  0F4C                     	;# 
  1614  0F4E                     	;# 
  1615  0F4F                     	;# 
  1616  0F50                     	;# 
  1617  0F51                     	;# 
  1618  0F52                     	;# 
  1619  0F53                     	;# 
  1620  0F54                     	;# 
  1621  0F55                     	;# 
  1622  0F56                     	;# 
  1623  0F57                     	;# 
  1624  0F65                     	;# 
  1625  0F68                     	;# 
  1626  0F69                     	;# 
  1627  0F6A                     	;# 
  1628  0F6B                     	;# 
  1629  0FE4                     	;# 
  1630  0FE5                     	;# 
  1631  0FE6                     	;# 
  1632  0FE7                     	;# 
  1633  0FE8                     	;# 
  1634  0FE9                     	;# 
  1635  0FEA                     	;# 
  1636  0FEB                     	;# 
  1637  0FED                     	;# 
  1638  0FEE                     	;# 
  1639  0FEF                     	;# 
  1640  0000                     	;# 
  1641  0001                     	;# 
  1642  0002                     	;# 
  1643  0003                     	;# 
  1644  0004                     	;# 
  1645  0005                     	;# 
  1646  0006                     	;# 
  1647  0007                     	;# 
  1648  0008                     	;# 
  1649  0009                     	;# 
  1650  000A                     	;# 
  1651  000B                     	;# 
  1652  000C                     	;# 
  1653  000D                     	;# 
  1654  000E                     	;# 
  1655  0010                     	;# 
  1656  0011                     	;# 
  1657  0012                     	;# 
  1658  0013                     	;# 
  1659  0016                     	;# 
  1660  0017                     	;# 
  1661  0018                     	;# 
  1662  001C                     	;# 
  1663  001C                     	;# 
  1664  001D                     	;# 
  1665  001D                     	;# 
  1666  001E                     	;# 
  1667  001F                     	;# 
  1668  008C                     	;# 
  1669  008C                     	;# 
  1670  008D                     	;# 
  1671  008E                     	;# 
  1672  008E                     	;# 
  1673  008F                     	;# 
  1674  0090                     	;# 
  1675  0090                     	;# 
  1676  0091                     	;# 
  1677  0093                     	;# 
  1678  0094                     	;# 
  1679  0095                     	;# 
  1680  0096                     	;# 
  1681  0097                     	;# 
  1682  0098                     	;# 
  1683  0099                     	;# 
  1684  009A                     	;# 
  1685  009B                     	;# 
  1686  009C                     	;# 
  1687  009D                     	;# 
  1688  009E                     	;# 
  1689  010C                     	;# 
  1690  010D                     	;# 
  1691  010E                     	;# 
  1692  010E                     	;# 
  1693  010F                     	;# 
  1694  0110                     	;# 
  1695  0110                     	;# 
  1696  0111                     	;# 
  1697  0112                     	;# 
  1698  0112                     	;# 
  1699  0113                     	;# 
  1700  0114                     	;# 
  1701  0114                     	;# 
  1702  0115                     	;# 
  1703  0116                     	;# 
  1704  0116                     	;# 
  1705  0117                     	;# 
  1706  0119                     	;# 
  1707  0119                     	;# 
  1708  0119                     	;# 
  1709  011A                     	;# 
  1710  011A                     	;# 
  1711  011A                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011B                     	;# 
  1715  011B                     	;# 
  1716  011B                     	;# 
  1717  011C                     	;# 
  1718  011C                     	;# 
  1719  011C                     	;# 
  1720  011D                     	;# 
  1721  011D                     	;# 
  1722  011D                     	;# 
  1723  011E                     	;# 
  1724  011E                     	;# 
  1725  011E                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  011F                     	;# 
  1729  011F                     	;# 
  1730  011F                     	;# 
  1731  018C                     	;# 
  1732  018D                     	;# 
  1733  018E                     	;# 
  1734  018F                     	;# 
  1735  0190                     	;# 
  1736  0191                     	;# 
  1737  0192                     	;# 
  1738  0196                     	;# 
  1739  0197                     	;# 
  1740  0198                     	;# 
  1741  0199                     	;# 
  1742  019A                     	;# 
  1743  019B                     	;# 
  1744  019C                     	;# 
  1745  020C                     	;# 
  1746  020C                     	;# 
  1747  020D                     	;# 
  1748  020E                     	;# 
  1749  020F                     	;# 
  1750  020F                     	;# 
  1751  0210                     	;# 
  1752  0210                     	;# 
  1753  0211                     	;# 
  1754  0211                     	;# 
  1755  0212                     	;# 
  1756  0212                     	;# 
  1757  0213                     	;# 
  1758  0214                     	;# 
  1759  0215                     	;# 
  1760  0215                     	;# 
  1761  0216                     	;# 
  1762  0216                     	;# 
  1763  0217                     	;# 
  1764  0217                     	;# 
  1765  0218                     	;# 
  1766  0218                     	;# 
  1767  0219                     	;# 
  1768  021A                     	;# 
  1769  021B                     	;# 
  1770  021B                     	;# 
  1771  021C                     	;# 
  1772  021C                     	;# 
  1773  021D                     	;# 
  1774  021D                     	;# 
  1775  021E                     	;# 
  1776  021F                     	;# 
  1777  028C                     	;# 
  1778  028C                     	;# 
  1779  028D                     	;# 
  1780  028D                     	;# 
  1781  028E                     	;# 
  1782  028F                     	;# 
  1783  0290                     	;# 
  1784  0290                     	;# 
  1785  0291                     	;# 
  1786  0292                     	;# 
  1787  0292                     	;# 
  1788  0293                     	;# 
  1789  0293                     	;# 
  1790  0294                     	;# 
  1791  0295                     	;# 
  1792  0296                     	;# 
  1793  0296                     	;# 
  1794  0297                     	;# 
  1795  0298                     	;# 
  1796  0298                     	;# 
  1797  0299                     	;# 
  1798  0299                     	;# 
  1799  029A                     	;# 
  1800  029B                     	;# 
  1801  029C                     	;# 
  1802  029C                     	;# 
  1803  029D                     	;# 
  1804  030C                     	;# 
  1805  030C                     	;# 
  1806  030D                     	;# 
  1807  030E                     	;# 
  1808  030F                     	;# 
  1809  0310                     	;# 
  1810  0310                     	;# 
  1811  0311                     	;# 
  1812  0312                     	;# 
  1813  0313                     	;# 
  1814  0314                     	;# 
  1815  0314                     	;# 
  1816  0315                     	;# 
  1817  0316                     	;# 
  1818  0317                     	;# 
  1819  0318                     	;# 
  1820  0318                     	;# 
  1821  0319                     	;# 
  1822  031A                     	;# 
  1823  031B                     	;# 
  1824  031C                     	;# 
  1825  031C                     	;# 
  1826  031D                     	;# 
  1827  031E                     	;# 
  1828  031F                     	;# 
  1829  038C                     	;# 
  1830  038D                     	;# 
  1831  038E                     	;# 
  1832  0390                     	;# 
  1833  0391                     	;# 
  1834  0392                     	;# 
  1835  040C                     	;# 
  1836  040D                     	;# 
  1837  040E                     	;# 
  1838  040F                     	;# 
  1839  0410                     	;# 
  1840  0411                     	;# 
  1841  0416                     	;# 
  1842  0416                     	;# 
  1843  0417                     	;# 
  1844  0418                     	;# 
  1845  0418                     	;# 
  1846  0419                     	;# 
  1847  041A                     	;# 
  1848  041A                     	;# 
  1849  041B                     	;# 
  1850  041C                     	;# 
  1851  041C                     	;# 
  1852  041D                     	;# 
  1853  041E                     	;# 
  1854  041F                     	;# 
  1855  048C                     	;# 
  1856  048C                     	;# 
  1857  048D                     	;# 
  1858  048E                     	;# 
  1859  048F                     	;# 
  1860  048F                     	;# 
  1861  0490                     	;# 
  1862  0491                     	;# 
  1863  0492                     	;# 
  1864  0492                     	;# 
  1865  0493                     	;# 
  1866  0494                     	;# 
  1867  0495                     	;# 
  1868  0495                     	;# 
  1869  0496                     	;# 
  1870  0497                     	;# 
  1871  0498                     	;# 
  1872  0499                     	;# 
  1873  049A                     	;# 
  1874  049B                     	;# 
  1875  049C                     	;# 
  1876  049D                     	;# 
  1877  050C                     	;# 
  1878  050C                     	;# 
  1879  050D                     	;# 
  1880  050E                     	;# 
  1881  050F                     	;# 
  1882  050F                     	;# 
  1883  0510                     	;# 
  1884  0511                     	;# 
  1885  0512                     	;# 
  1886  0512                     	;# 
  1887  0513                     	;# 
  1888  0514                     	;# 
  1889  0515                     	;# 
  1890  0515                     	;# 
  1891  0516                     	;# 
  1892  0517                     	;# 
  1893  0518                     	;# 
  1894  0519                     	;# 
  1895  051A                     	;# 
  1896  051B                     	;# 
  1897  051C                     	;# 
  1898  051D                     	;# 
  1899  058C                     	;# 
  1900  058C                     	;# 
  1901  058D                     	;# 
  1902  058E                     	;# 
  1903  058F                     	;# 
  1904  058F                     	;# 
  1905  0590                     	;# 
  1906  0591                     	;# 
  1907  0592                     	;# 
  1908  0593                     	;# 
  1909  060C                     	;# 
  1910  060D                     	;# 
  1911  060E                     	;# 
  1912  060F                     	;# 
  1913  0610                     	;# 
  1914  0611                     	;# 
  1915  0612                     	;# 
  1916  0613                     	;# 
  1917  0614                     	;# 
  1918  0616                     	;# 
  1919  0617                     	;# 
  1920  0618                     	;# 
  1921  0619                     	;# 
  1922  061A                     	;# 
  1923  061B                     	;# 
  1924  061C                     	;# 
  1925  061D                     	;# 
  1926  061E                     	;# 
  1927  068C                     	;# 
  1928  068D                     	;# 
  1929  068E                     	;# 
  1930  068F                     	;# 
  1931  0690                     	;# 
  1932  0691                     	;# 
  1933  0692                     	;# 
  1934  0693                     	;# 
  1935  0694                     	;# 
  1936  070C                     	;# 
  1937  070D                     	;# 
  1938  070E                     	;# 
  1939  070F                     	;# 
  1940  0710                     	;# 
  1941  0711                     	;# 
  1942  0712                     	;# 
  1943  0713                     	;# 
  1944  0714                     	;# 
  1945  0716                     	;# 
  1946  0717                     	;# 
  1947  0718                     	;# 
  1948  0719                     	;# 
  1949  071A                     	;# 
  1950  071B                     	;# 
  1951  071C                     	;# 
  1952  071D                     	;# 
  1953  071E                     	;# 
  1954  0796                     	;# 
  1955  0797                     	;# 
  1956  0798                     	;# 
  1957  0799                     	;# 
  1958  079A                     	;# 
  1959  079B                     	;# 
  1960  080C                     	;# 
  1961  080D                     	;# 
  1962  080E                     	;# 
  1963  080F                     	;# 
  1964  0810                     	;# 
  1965  0811                     	;# 
  1966  0812                     	;# 
  1967  0813                     	;# 
  1968  0814                     	;# 
  1969  081A                     	;# 
  1970  081B                     	;# 
  1971  081C                     	;# 
  1972  081D                     	;# 
  1973  081E                     	;# 
  1974  081F                     	;# 
  1975  088C                     	;# 
  1976  088D                     	;# 
  1977  088E                     	;# 
  1978  088F                     	;# 
  1979  0890                     	;# 
  1980  0891                     	;# 
  1981  0892                     	;# 
  1982  0893                     	;# 
  1983  0895                     	;# 
  1984  0896                     	;# 
  1985  0897                     	;# 
  1986  0898                     	;# 
  1987  0899                     	;# 
  1988  089A                     	;# 
  1989  089B                     	;# 
  1990  090C                     	;# 
  1991  090E                     	;# 
  1992  090F                     	;# 
  1993  091F                     	;# 
  1994  091F                     	;# 
  1995  098F                     	;# 
  1996  098F                     	;# 
  1997  0990                     	;# 
  1998  0991                     	;# 
  1999  0992                     	;# 
  2000  0993                     	;# 
  2001  0994                     	;# 
  2002  0995                     	;# 
  2003  0996                     	;# 
  2004  0997                     	;# 
  2005  0E0F                     	;# 
  2006  0E10                     	;# 
  2007  0E11                     	;# 
  2008  0E12                     	;# 
  2009  0E13                     	;# 
  2010  0E14                     	;# 
  2011  0E15                     	;# 
  2012  0E16                     	;# 
  2013  0E17                     	;# 
  2014  0E18                     	;# 
  2015  0E19                     	;# 
  2016  0E1A                     	;# 
  2017  0E1B                     	;# 
  2018  0E1C                     	;# 
  2019  0E1D                     	;# 
  2020  0E1E                     	;# 
  2021  0E1F                     	;# 
  2022  0E20                     	;# 
  2023  0E21                     	;# 
  2024  0E22                     	;# 
  2025  0E23                     	;# 
  2026  0E24                     	;# 
  2027  0E25                     	;# 
  2028  0E26                     	;# 
  2029  0E27                     	;# 
  2030  0E28                     	;# 
  2031  0E29                     	;# 
  2032  0E2A                     	;# 
  2033  0E2B                     	;# 
  2034  0E2C                     	;# 
  2035  0E2D                     	;# 
  2036  0E2E                     	;# 
  2037  0E2F                     	;# 
  2038  0E30                     	;# 
  2039  0E31                     	;# 
  2040  0E32                     	;# 
  2041  0E33                     	;# 
  2042  0E34                     	;# 
  2043  0E35                     	;# 
  2044  0E36                     	;# 
  2045  0E37                     	;# 
  2046  0E8F                     	;# 
  2047  0E90                     	;# 
  2048  0E91                     	;# 
  2049  0E92                     	;# 
  2050  0E93                     	;# 
  2051  0E94                     	;# 
  2052  0E95                     	;# 
  2053  0E96                     	;# 
  2054  0E97                     	;# 
  2055  0E9C                     	;# 
  2056  0E9D                     	;# 
  2057  0E9E                     	;# 
  2058  0EA1                     	;# 
  2059  0EA2                     	;# 
  2060  0EA3                     	;# 
  2061  0EA4                     	;# 
  2062  0EA5                     	;# 
  2063  0EA9                     	;# 
  2064  0EAA                     	;# 
  2065  0EAB                     	;# 
  2066  0EAC                     	;# 
  2067  0EB1                     	;# 
  2068  0EB2                     	;# 
  2069  0EB3                     	;# 
  2070  0EB8                     	;# 
  2071  0EB9                     	;# 
  2072  0EBA                     	;# 
  2073  0EBB                     	;# 
  2074  0EBC                     	;# 
  2075  0EBD                     	;# 
  2076  0EBE                     	;# 
  2077  0EC3                     	;# 
  2078  0EC5                     	;# 
  2079  0EC6                     	;# 
  2080  0EC7                     	;# 
  2081  0EC8                     	;# 
  2082  0EC9                     	;# 
  2083  0ECA                     	;# 
  2084  0ECB                     	;# 
  2085  0ECC                     	;# 
  2086  0F10                     	;# 
  2087  0F11                     	;# 
  2088  0F12                     	;# 
  2089  0F13                     	;# 
  2090  0F14                     	;# 
  2091  0F15                     	;# 
  2092  0F16                     	;# 
  2093  0F17                     	;# 
  2094  0F18                     	;# 
  2095  0F19                     	;# 
  2096  0F1A                     	;# 
  2097  0F1B                     	;# 
  2098  0F1C                     	;# 
  2099  0F1D                     	;# 
  2100  0F1E                     	;# 
  2101  0F1F                     	;# 
  2102  0F20                     	;# 
  2103  0F21                     	;# 
  2104  0F22                     	;# 
  2105  0F23                     	;# 
  2106  0F24                     	;# 
  2107  0F25                     	;# 
  2108  0F26                     	;# 
  2109  0F27                     	;# 
  2110  0F38                     	;# 
  2111  0F39                     	;# 
  2112  0F3A                     	;# 
  2113  0F3B                     	;# 
  2114  0F3C                     	;# 
  2115  0F3D                     	;# 
  2116  0F3E                     	;# 
  2117  0F3F                     	;# 
  2118  0F40                     	;# 
  2119  0F41                     	;# 
  2120  0F43                     	;# 
  2121  0F44                     	;# 
  2122  0F45                     	;# 
  2123  0F46                     	;# 
  2124  0F47                     	;# 
  2125  0F48                     	;# 
  2126  0F49                     	;# 
  2127  0F4A                     	;# 
  2128  0F4B                     	;# 
  2129  0F4C                     	;# 
  2130  0F4E                     	;# 
  2131  0F4F                     	;# 
  2132  0F50                     	;# 
  2133  0F51                     	;# 
  2134  0F52                     	;# 
  2135  0F53                     	;# 
  2136  0F54                     	;# 
  2137  0F55                     	;# 
  2138  0F56                     	;# 
  2139  0F57                     	;# 
  2140  0F65                     	;# 
  2141  0F68                     	;# 
  2142  0F69                     	;# 
  2143  0F6A                     	;# 
  2144  0F6B                     	;# 
  2145  0FE4                     	;# 
  2146  0FE5                     	;# 
  2147  0FE6                     	;# 
  2148  0FE7                     	;# 
  2149  0FE8                     	;# 
  2150  0FE9                     	;# 
  2151  0FEA                     	;# 
  2152  0FEB                     	;# 
  2153  0FED                     	;# 
  2154  0FEE                     	;# 
  2155  0FEF                     	;# 
  2156  0000                     	;# 
  2157  0001                     	;# 
  2158  0002                     	;# 
  2159  0003                     	;# 
  2160  0004                     	;# 
  2161  0005                     	;# 
  2162  0006                     	;# 
  2163  0007                     	;# 
  2164  0008                     	;# 
  2165  0009                     	;# 
  2166  000A                     	;# 
  2167  000B                     	;# 
  2168  000C                     	;# 
  2169  000D                     	;# 
  2170  000E                     	;# 
  2171  0010                     	;# 
  2172  0011                     	;# 
  2173  0012                     	;# 
  2174  0013                     	;# 
  2175  0016                     	;# 
  2176  0017                     	;# 
  2177  0018                     	;# 
  2178  001C                     	;# 
  2179  001C                     	;# 
  2180  001D                     	;# 
  2181  001D                     	;# 
  2182  001E                     	;# 
  2183  001F                     	;# 
  2184  008C                     	;# 
  2185  008C                     	;# 
  2186  008D                     	;# 
  2187  008E                     	;# 
  2188  008E                     	;# 
  2189  008F                     	;# 
  2190  0090                     	;# 
  2191  0090                     	;# 
  2192  0091                     	;# 
  2193  0093                     	;# 
  2194  0094                     	;# 
  2195  0095                     	;# 
  2196  0096                     	;# 
  2197  0097                     	;# 
  2198  0098                     	;# 
  2199  0099                     	;# 
  2200  009A                     	;# 
  2201  009B                     	;# 
  2202  009C                     	;# 
  2203  009D                     	;# 
  2204  009E                     	;# 
  2205  010C                     	;# 
  2206  010D                     	;# 
  2207  010E                     	;# 
  2208  010E                     	;# 
  2209  010F                     	;# 
  2210  0110                     	;# 
  2211  0110                     	;# 
  2212  0111                     	;# 
  2213  0112                     	;# 
  2214  0112                     	;# 
  2215  0113                     	;# 
  2216  0114                     	;# 
  2217  0114                     	;# 
  2218  0115                     	;# 
  2219  0116                     	;# 
  2220  0116                     	;# 
  2221  0117                     	;# 
  2222  0119                     	;# 
  2223  0119                     	;# 
  2224  0119                     	;# 
  2225  011A                     	;# 
  2226  011A                     	;# 
  2227  011A                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011B                     	;# 
  2231  011B                     	;# 
  2232  011B                     	;# 
  2233  011C                     	;# 
  2234  011C                     	;# 
  2235  011C                     	;# 
  2236  011D                     	;# 
  2237  011D                     	;# 
  2238  011D                     	;# 
  2239  011E                     	;# 
  2240  011E                     	;# 
  2241  011E                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  011F                     	;# 
  2245  011F                     	;# 
  2246  011F                     	;# 
  2247  018C                     	;# 
  2248  018D                     	;# 
  2249  018E                     	;# 
  2250  018F                     	;# 
  2251  0190                     	;# 
  2252  0191                     	;# 
  2253  0192                     	;# 
  2254  0196                     	;# 
  2255  0197                     	;# 
  2256  0198                     	;# 
  2257  0199                     	;# 
  2258  019A                     	;# 
  2259  019B                     	;# 
  2260  019C                     	;# 
  2261  020C                     	;# 
  2262  020C                     	;# 
  2263  020D                     	;# 
  2264  020E                     	;# 
  2265  020F                     	;# 
  2266  020F                     	;# 
  2267  0210                     	;# 
  2268  0210                     	;# 
  2269  0211                     	;# 
  2270  0211                     	;# 
  2271  0212                     	;# 
  2272  0212                     	;# 
  2273  0213                     	;# 
  2274  0214                     	;# 
  2275  0215                     	;# 
  2276  0215                     	;# 
  2277  0216                     	;# 
  2278  0216                     	;# 
  2279  0217                     	;# 
  2280  0217                     	;# 
  2281  0218                     	;# 
  2282  0218                     	;# 
  2283  0219                     	;# 
  2284  021A                     	;# 
  2285  021B                     	;# 
  2286  021B                     	;# 
  2287  021C                     	;# 
  2288  021C                     	;# 
  2289  021D                     	;# 
  2290  021D                     	;# 
  2291  021E                     	;# 
  2292  021F                     	;# 
  2293  028C                     	;# 
  2294  028C                     	;# 
  2295  028D                     	;# 
  2296  028D                     	;# 
  2297  028E                     	;# 
  2298  028F                     	;# 
  2299  0290                     	;# 
  2300  0290                     	;# 
  2301  0291                     	;# 
  2302  0292                     	;# 
  2303  0292                     	;# 
  2304  0293                     	;# 
  2305  0293                     	;# 
  2306  0294                     	;# 
  2307  0295                     	;# 
  2308  0296                     	;# 
  2309  0296                     	;# 
  2310  0297                     	;# 
  2311  0298                     	;# 
  2312  0298                     	;# 
  2313  0299                     	;# 
  2314  0299                     	;# 
  2315  029A                     	;# 
  2316  029B                     	;# 
  2317  029C                     	;# 
  2318  029C                     	;# 
  2319  029D                     	;# 
  2320  030C                     	;# 
  2321  030C                     	;# 
  2322  030D                     	;# 
  2323  030E                     	;# 
  2324  030F                     	;# 
  2325  0310                     	;# 
  2326  0310                     	;# 
  2327  0311                     	;# 
  2328  0312                     	;# 
  2329  0313                     	;# 
  2330  0314                     	;# 
  2331  0314                     	;# 
  2332  0315                     	;# 
  2333  0316                     	;# 
  2334  0317                     	;# 
  2335  0318                     	;# 
  2336  0318                     	;# 
  2337  0319                     	;# 
  2338  031A                     	;# 
  2339  031B                     	;# 
  2340  031C                     	;# 
  2341  031C                     	;# 
  2342  031D                     	;# 
  2343  031E                     	;# 
  2344  031F                     	;# 
  2345  038C                     	;# 
  2346  038D                     	;# 
  2347  038E                     	;# 
  2348  0390                     	;# 
  2349  0391                     	;# 
  2350  0392                     	;# 
  2351  040C                     	;# 
  2352  040D                     	;# 
  2353  040E                     	;# 
  2354  040F                     	;# 
  2355  0410                     	;# 
  2356  0411                     	;# 
  2357  0416                     	;# 
  2358  0416                     	;# 
  2359  0417                     	;# 
  2360  0418                     	;# 
  2361  0418                     	;# 
  2362  0419                     	;# 
  2363  041A                     	;# 
  2364  041A                     	;# 
  2365  041B                     	;# 
  2366  041C                     	;# 
  2367  041C                     	;# 
  2368  041D                     	;# 
  2369  041E                     	;# 
  2370  041F                     	;# 
  2371  048C                     	;# 
  2372  048C                     	;# 
  2373  048D                     	;# 
  2374  048E                     	;# 
  2375  048F                     	;# 
  2376  048F                     	;# 
  2377  0490                     	;# 
  2378  0491                     	;# 
  2379  0492                     	;# 
  2380  0492                     	;# 
  2381  0493                     	;# 
  2382  0494                     	;# 
  2383  0495                     	;# 
  2384  0495                     	;# 
  2385  0496                     	;# 
  2386  0497                     	;# 
  2387  0498                     	;# 
  2388  0499                     	;# 
  2389  049A                     	;# 
  2390  049B                     	;# 
  2391  049C                     	;# 
  2392  049D                     	;# 
  2393  050C                     	;# 
  2394  050C                     	;# 
  2395  050D                     	;# 
  2396  050E                     	;# 
  2397  050F                     	;# 
  2398  050F                     	;# 
  2399  0510                     	;# 
  2400  0511                     	;# 
  2401  0512                     	;# 
  2402  0512                     	;# 
  2403  0513                     	;# 
  2404  0514                     	;# 
  2405  0515                     	;# 
  2406  0515                     	;# 
  2407  0516                     	;# 
  2408  0517                     	;# 
  2409  0518                     	;# 
  2410  0519                     	;# 
  2411  051A                     	;# 
  2412  051B                     	;# 
  2413  051C                     	;# 
  2414  051D                     	;# 
  2415  058C                     	;# 
  2416  058C                     	;# 
  2417  058D                     	;# 
  2418  058E                     	;# 
  2419  058F                     	;# 
  2420  058F                     	;# 
  2421  0590                     	;# 
  2422  0591                     	;# 
  2423  0592                     	;# 
  2424  0593                     	;# 
  2425  060C                     	;# 
  2426  060D                     	;# 
  2427  060E                     	;# 
  2428  060F                     	;# 
  2429  0610                     	;# 
  2430  0611                     	;# 
  2431  0612                     	;# 
  2432  0613                     	;# 
  2433  0614                     	;# 
  2434  0616                     	;# 
  2435  0617                     	;# 
  2436  0618                     	;# 
  2437  0619                     	;# 
  2438  061A                     	;# 
  2439  061B                     	;# 
  2440  061C                     	;# 
  2441  061D                     	;# 
  2442  061E                     	;# 
  2443  068C                     	;# 
  2444  068D                     	;# 
  2445  068E                     	;# 
  2446  068F                     	;# 
  2447  0690                     	;# 
  2448  0691                     	;# 
  2449  0692                     	;# 
  2450  0693                     	;# 
  2451  0694                     	;# 
  2452  070C                     	;# 
  2453  070D                     	;# 
  2454  070E                     	;# 
  2455  070F                     	;# 
  2456  0710                     	;# 
  2457  0711                     	;# 
  2458  0712                     	;# 
  2459  0713                     	;# 
  2460  0714                     	;# 
  2461  0716                     	;# 
  2462  0717                     	;# 
  2463  0718                     	;# 
  2464  0719                     	;# 
  2465  071A                     	;# 
  2466  071B                     	;# 
  2467  071C                     	;# 
  2468  071D                     	;# 
  2469  071E                     	;# 
  2470  0796                     	;# 
  2471  0797                     	;# 
  2472  0798                     	;# 
  2473  0799                     	;# 
  2474  079A                     	;# 
  2475  079B                     	;# 
  2476  080C                     	;# 
  2477  080D                     	;# 
  2478  080E                     	;# 
  2479  080F                     	;# 
  2480  0810                     	;# 
  2481  0811                     	;# 
  2482  0812                     	;# 
  2483  0813                     	;# 
  2484  0814                     	;# 
  2485  081A                     	;# 
  2486  081B                     	;# 
  2487  081C                     	;# 
  2488  081D                     	;# 
  2489  081E                     	;# 
  2490  081F                     	;# 
  2491  088C                     	;# 
  2492  088D                     	;# 
  2493  088E                     	;# 
  2494  088F                     	;# 
  2495  0890                     	;# 
  2496  0891                     	;# 
  2497  0892                     	;# 
  2498  0893                     	;# 
  2499  0895                     	;# 
  2500  0896                     	;# 
  2501  0897                     	;# 
  2502  0898                     	;# 
  2503  0899                     	;# 
  2504  089A                     	;# 
  2505  089B                     	;# 
  2506  090C                     	;# 
  2507  090E                     	;# 
  2508  090F                     	;# 
  2509  091F                     	;# 
  2510  091F                     	;# 
  2511  098F                     	;# 
  2512  098F                     	;# 
  2513  0990                     	;# 
  2514  0991                     	;# 
  2515  0992                     	;# 
  2516  0993                     	;# 
  2517  0994                     	;# 
  2518  0995                     	;# 
  2519  0996                     	;# 
  2520  0997                     	;# 
  2521  0E0F                     	;# 
  2522  0E10                     	;# 
  2523  0E11                     	;# 
  2524  0E12                     	;# 
  2525  0E13                     	;# 
  2526  0E14                     	;# 
  2527  0E15                     	;# 
  2528  0E16                     	;# 
  2529  0E17                     	;# 
  2530  0E18                     	;# 
  2531  0E19                     	;# 
  2532  0E1A                     	;# 
  2533  0E1B                     	;# 
  2534  0E1C                     	;# 
  2535  0E1D                     	;# 
  2536  0E1E                     	;# 
  2537  0E1F                     	;# 
  2538  0E20                     	;# 
  2539  0E21                     	;# 
  2540  0E22                     	;# 
  2541  0E23                     	;# 
  2542  0E24                     	;# 
  2543  0E25                     	;# 
  2544  0E26                     	;# 
  2545  0E27                     	;# 
  2546  0E28                     	;# 
  2547  0E29                     	;# 
  2548  0E2A                     	;# 
  2549  0E2B                     	;# 
  2550  0E2C                     	;# 
  2551  0E2D                     	;# 
  2552  0E2E                     	;# 
  2553  0E2F                     	;# 
  2554  0E30                     	;# 
  2555  0E31                     	;# 
  2556  0E32                     	;# 
  2557  0E33                     	;# 
  2558  0E34                     	;# 
  2559  0E35                     	;# 
  2560  0E36                     	;# 
  2561  0E37                     	;# 
  2562  0E8F                     	;# 
  2563  0E90                     	;# 
  2564  0E91                     	;# 
  2565  0E92                     	;# 
  2566  0E93                     	;# 
  2567  0E94                     	;# 
  2568  0E95                     	;# 
  2569  0E96                     	;# 
  2570  0E97                     	;# 
  2571  0E9C                     	;# 
  2572  0E9D                     	;# 
  2573  0E9E                     	;# 
  2574  0EA1                     	;# 
  2575  0EA2                     	;# 
  2576  0EA3                     	;# 
  2577  0EA4                     	;# 
  2578  0EA5                     	;# 
  2579  0EA9                     	;# 
  2580  0EAA                     	;# 
  2581  0EAB                     	;# 
  2582  0EAC                     	;# 
  2583  0EB1                     	;# 
  2584  0EB2                     	;# 
  2585  0EB3                     	;# 
  2586  0EB8                     	;# 
  2587  0EB9                     	;# 
  2588  0EBA                     	;# 
  2589  0EBB                     	;# 
  2590  0EBC                     	;# 
  2591  0EBD                     	;# 
  2592  0EBE                     	;# 
  2593  0EC3                     	;# 
  2594  0EC5                     	;# 
  2595  0EC6                     	;# 
  2596  0EC7                     	;# 
  2597  0EC8                     	;# 
  2598  0EC9                     	;# 
  2599  0ECA                     	;# 
  2600  0ECB                     	;# 
  2601  0ECC                     	;# 
  2602  0F10                     	;# 
  2603  0F11                     	;# 
  2604  0F12                     	;# 
  2605  0F13                     	;# 
  2606  0F14                     	;# 
  2607  0F15                     	;# 
  2608  0F16                     	;# 
  2609  0F17                     	;# 
  2610  0F18                     	;# 
  2611  0F19                     	;# 
  2612  0F1A                     	;# 
  2613  0F1B                     	;# 
  2614  0F1C                     	;# 
  2615  0F1D                     	;# 
  2616  0F1E                     	;# 
  2617  0F1F                     	;# 
  2618  0F20                     	;# 
  2619  0F21                     	;# 
  2620  0F22                     	;# 
  2621  0F23                     	;# 
  2622  0F24                     	;# 
  2623  0F25                     	;# 
  2624  0F26                     	;# 
  2625  0F27                     	;# 
  2626  0F38                     	;# 
  2627  0F39                     	;# 
  2628  0F3A                     	;# 
  2629  0F3B                     	;# 
  2630  0F3C                     	;# 
  2631  0F3D                     	;# 
  2632  0F3E                     	;# 
  2633  0F3F                     	;# 
  2634  0F40                     	;# 
  2635  0F41                     	;# 
  2636  0F43                     	;# 
  2637  0F44                     	;# 
  2638  0F45                     	;# 
  2639  0F46                     	;# 
  2640  0F47                     	;# 
  2641  0F48                     	;# 
  2642  0F49                     	;# 
  2643  0F4A                     	;# 
  2644  0F4B                     	;# 
  2645  0F4C                     	;# 
  2646  0F4E                     	;# 
  2647  0F4F                     	;# 
  2648  0F50                     	;# 
  2649  0F51                     	;# 
  2650  0F52                     	;# 
  2651  0F53                     	;# 
  2652  0F54                     	;# 
  2653  0F55                     	;# 
  2654  0F56                     	;# 
  2655  0F57                     	;# 
  2656  0F65                     	;# 
  2657  0F68                     	;# 
  2658  0F69                     	;# 
  2659  0F6A                     	;# 
  2660  0F6B                     	;# 
  2661  0FE4                     	;# 
  2662  0FE5                     	;# 
  2663  0FE6                     	;# 
  2664  0FE7                     	;# 
  2665  0FE8                     	;# 
  2666  0FE9                     	;# 
  2667  0FEA                     	;# 
  2668  0FEB                     	;# 
  2669  0FED                     	;# 
  2670  0FEE                     	;# 
  2671  0FEF                     	;# 
  2672  0000                     	;# 
  2673  0001                     	;# 
  2674  0002                     	;# 
  2675  0003                     	;# 
  2676  0004                     	;# 
  2677  0005                     	;# 
  2678  0006                     	;# 
  2679  0007                     	;# 
  2680  0008                     	;# 
  2681  0009                     	;# 
  2682  000A                     	;# 
  2683  000B                     	;# 
  2684  000C                     	;# 
  2685  000D                     	;# 
  2686  000E                     	;# 
  2687  0010                     	;# 
  2688  0011                     	;# 
  2689  0012                     	;# 
  2690  0013                     	;# 
  2691  0016                     	;# 
  2692  0017                     	;# 
  2693  0018                     	;# 
  2694  001C                     	;# 
  2695  001C                     	;# 
  2696  001D                     	;# 
  2697  001D                     	;# 
  2698  001E                     	;# 
  2699  001F                     	;# 
  2700  008C                     	;# 
  2701  008C                     	;# 
  2702  008D                     	;# 
  2703  008E                     	;# 
  2704  008E                     	;# 
  2705  008F                     	;# 
  2706  0090                     	;# 
  2707  0090                     	;# 
  2708  0091                     	;# 
  2709  0093                     	;# 
  2710  0094                     	;# 
  2711  0095                     	;# 
  2712  0096                     	;# 
  2713  0097                     	;# 
  2714  0098                     	;# 
  2715  0099                     	;# 
  2716  009A                     	;# 
  2717  009B                     	;# 
  2718  009C                     	;# 
  2719  009D                     	;# 
  2720  009E                     	;# 
  2721  010C                     	;# 
  2722  010D                     	;# 
  2723  010E                     	;# 
  2724  010E                     	;# 
  2725  010F                     	;# 
  2726  0110                     	;# 
  2727  0110                     	;# 
  2728  0111                     	;# 
  2729  0112                     	;# 
  2730  0112                     	;# 
  2731  0113                     	;# 
  2732  0114                     	;# 
  2733  0114                     	;# 
  2734  0115                     	;# 
  2735  0116                     	;# 
  2736  0116                     	;# 
  2737  0117                     	;# 
  2738  0119                     	;# 
  2739  0119                     	;# 
  2740  0119                     	;# 
  2741  011A                     	;# 
  2742  011A                     	;# 
  2743  011A                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011B                     	;# 
  2747  011B                     	;# 
  2748  011B                     	;# 
  2749  011C                     	;# 
  2750  011C                     	;# 
  2751  011C                     	;# 
  2752  011D                     	;# 
  2753  011D                     	;# 
  2754  011D                     	;# 
  2755  011E                     	;# 
  2756  011E                     	;# 
  2757  011E                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  011F                     	;# 
  2761  011F                     	;# 
  2762  011F                     	;# 
  2763  018C                     	;# 
  2764  018D                     	;# 
  2765  018E                     	;# 
  2766  018F                     	;# 
  2767  0190                     	;# 
  2768  0191                     	;# 
  2769  0192                     	;# 
  2770  0196                     	;# 
  2771  0197                     	;# 
  2772  0198                     	;# 
  2773  0199                     	;# 
  2774  019A                     	;# 
  2775  019B                     	;# 
  2776  019C                     	;# 
  2777  020C                     	;# 
  2778  020C                     	;# 
  2779  020D                     	;# 
  2780  020E                     	;# 
  2781  020F                     	;# 
  2782  020F                     	;# 
  2783  0210                     	;# 
  2784  0210                     	;# 
  2785  0211                     	;# 
  2786  0211                     	;# 
  2787  0212                     	;# 
  2788  0212                     	;# 
  2789  0213                     	;# 
  2790  0214                     	;# 
  2791  0215                     	;# 
  2792  0215                     	;# 
  2793  0216                     	;# 
  2794  0216                     	;# 
  2795  0217                     	;# 
  2796  0217                     	;# 
  2797  0218                     	;# 
  2798  0218                     	;# 
  2799  0219                     	;# 
  2800  021A                     	;# 
  2801  021B                     	;# 
  2802  021B                     	;# 
  2803  021C                     	;# 
  2804  021C                     	;# 
  2805  021D                     	;# 
  2806  021D                     	;# 
  2807  021E                     	;# 
  2808  021F                     	;# 
  2809  028C                     	;# 
  2810  028C                     	;# 
  2811  028D                     	;# 
  2812  028D                     	;# 
  2813  028E                     	;# 
  2814  028F                     	;# 
  2815  0290                     	;# 
  2816  0290                     	;# 
  2817  0291                     	;# 
  2818  0292                     	;# 
  2819  0292                     	;# 
  2820  0293                     	;# 
  2821  0293                     	;# 
  2822  0294                     	;# 
  2823  0295                     	;# 
  2824  0296                     	;# 
  2825  0296                     	;# 
  2826  0297                     	;# 
  2827  0298                     	;# 
  2828  0298                     	;# 
  2829  0299                     	;# 
  2830  0299                     	;# 
  2831  029A                     	;# 
  2832  029B                     	;# 
  2833  029C                     	;# 
  2834  029C                     	;# 
  2835  029D                     	;# 
  2836  030C                     	;# 
  2837  030C                     	;# 
  2838  030D                     	;# 
  2839  030E                     	;# 
  2840  030F                     	;# 
  2841  0310                     	;# 
  2842  0310                     	;# 
  2843  0311                     	;# 
  2844  0312                     	;# 
  2845  0313                     	;# 
  2846  0314                     	;# 
  2847  0314                     	;# 
  2848  0315                     	;# 
  2849  0316                     	;# 
  2850  0317                     	;# 
  2851  0318                     	;# 
  2852  0318                     	;# 
  2853  0319                     	;# 
  2854  031A                     	;# 
  2855  031B                     	;# 
  2856  031C                     	;# 
  2857  031C                     	;# 
  2858  031D                     	;# 
  2859  031E                     	;# 
  2860  031F                     	;# 
  2861  038C                     	;# 
  2862  038D                     	;# 
  2863  038E                     	;# 
  2864  0390                     	;# 
  2865  0391                     	;# 
  2866  0392                     	;# 
  2867  040C                     	;# 
  2868  040D                     	;# 
  2869  040E                     	;# 
  2870  040F                     	;# 
  2871  0410                     	;# 
  2872  0411                     	;# 
  2873  0416                     	;# 
  2874  0416                     	;# 
  2875  0417                     	;# 
  2876  0418                     	;# 
  2877  0418                     	;# 
  2878  0419                     	;# 
  2879  041A                     	;# 
  2880  041A                     	;# 
  2881  041B                     	;# 
  2882  041C                     	;# 
  2883  041C                     	;# 
  2884  041D                     	;# 
  2885  041E                     	;# 
  2886  041F                     	;# 
  2887  048C                     	;# 
  2888  048C                     	;# 
  2889  048D                     	;# 
  2890  048E                     	;# 
  2891  048F                     	;# 
  2892  048F                     	;# 
  2893  0490                     	;# 
  2894  0491                     	;# 
  2895  0492                     	;# 
  2896  0492                     	;# 
  2897  0493                     	;# 
  2898  0494                     	;# 
  2899  0495                     	;# 
  2900  0495                     	;# 
  2901  0496                     	;# 
  2902  0497                     	;# 
  2903  0498                     	;# 
  2904  0499                     	;# 
  2905  049A                     	;# 
  2906  049B                     	;# 
  2907  049C                     	;# 
  2908  049D                     	;# 
  2909  050C                     	;# 
  2910  050C                     	;# 
  2911  050D                     	;# 
  2912  050E                     	;# 
  2913  050F                     	;# 
  2914  050F                     	;# 
  2915  0510                     	;# 
  2916  0511                     	;# 
  2917  0512                     	;# 
  2918  0512                     	;# 
  2919  0513                     	;# 
  2920  0514                     	;# 
  2921  0515                     	;# 
  2922  0515                     	;# 
  2923  0516                     	;# 
  2924  0517                     	;# 
  2925  0518                     	;# 
  2926  0519                     	;# 
  2927  051A                     	;# 
  2928  051B                     	;# 
  2929  051C                     	;# 
  2930  051D                     	;# 
  2931  058C                     	;# 
  2932  058C                     	;# 
  2933  058D                     	;# 
  2934  058E                     	;# 
  2935  058F                     	;# 
  2936  058F                     	;# 
  2937  0590                     	;# 
  2938  0591                     	;# 
  2939  0592                     	;# 
  2940  0593                     	;# 
  2941  060C                     	;# 
  2942  060D                     	;# 
  2943  060E                     	;# 
  2944  060F                     	;# 
  2945  0610                     	;# 
  2946  0611                     	;# 
  2947  0612                     	;# 
  2948  0613                     	;# 
  2949  0614                     	;# 
  2950  0616                     	;# 
  2951  0617                     	;# 
  2952  0618                     	;# 
  2953  0619                     	;# 
  2954  061A                     	;# 
  2955  061B                     	;# 
  2956  061C                     	;# 
  2957  061D                     	;# 
  2958  061E                     	;# 
  2959  068C                     	;# 
  2960  068D                     	;# 
  2961  068E                     	;# 
  2962  068F                     	;# 
  2963  0690                     	;# 
  2964  0691                     	;# 
  2965  0692                     	;# 
  2966  0693                     	;# 
  2967  0694                     	;# 
  2968  070C                     	;# 
  2969  070D                     	;# 
  2970  070E                     	;# 
  2971  070F                     	;# 
  2972  0710                     	;# 
  2973  0711                     	;# 
  2974  0712                     	;# 
  2975  0713                     	;# 
  2976  0714                     	;# 
  2977  0716                     	;# 
  2978  0717                     	;# 
  2979  0718                     	;# 
  2980  0719                     	;# 
  2981  071A                     	;# 
  2982  071B                     	;# 
  2983  071C                     	;# 
  2984  071D                     	;# 
  2985  071E                     	;# 
  2986  0796                     	;# 
  2987  0797                     	;# 
  2988  0798                     	;# 
  2989  0799                     	;# 
  2990  079A                     	;# 
  2991  079B                     	;# 
  2992  080C                     	;# 
  2993  080D                     	;# 
  2994  080E                     	;# 
  2995  080F                     	;# 
  2996  0810                     	;# 
  2997  0811                     	;# 
  2998  0812                     	;# 
  2999  0813                     	;# 
  3000  0814                     	;# 
  3001  081A                     	;# 
  3002  081B                     	;# 
  3003  081C                     	;# 
  3004  081D                     	;# 
  3005  081E                     	;# 
  3006  081F                     	;# 
  3007  088C                     	;# 
  3008  088D                     	;# 
  3009  088E                     	;# 
  3010  088F                     	;# 
  3011  0890                     	;# 
  3012  0891                     	;# 
  3013  0892                     	;# 
  3014  0893                     	;# 
  3015  0895                     	;# 
  3016  0896                     	;# 
  3017  0897                     	;# 
  3018  0898                     	;# 
  3019  0899                     	;# 
  3020  089A                     	;# 
  3021  089B                     	;# 
  3022  090C                     	;# 
  3023  090E                     	;# 
  3024  090F                     	;# 
  3025  091F                     	;# 
  3026  091F                     	;# 
  3027  098F                     	;# 
  3028  098F                     	;# 
  3029  0990                     	;# 
  3030  0991                     	;# 
  3031  0992                     	;# 
  3032  0993                     	;# 
  3033  0994                     	;# 
  3034  0995                     	;# 
  3035  0996                     	;# 
  3036  0997                     	;# 
  3037  0E0F                     	;# 
  3038  0E10                     	;# 
  3039  0E11                     	;# 
  3040  0E12                     	;# 
  3041  0E13                     	;# 
  3042  0E14                     	;# 
  3043  0E15                     	;# 
  3044  0E16                     	;# 
  3045  0E17                     	;# 
  3046  0E18                     	;# 
  3047  0E19                     	;# 
  3048  0E1A                     	;# 
  3049  0E1B                     	;# 
  3050  0E1C                     	;# 
  3051  0E1D                     	;# 
  3052  0E1E                     	;# 
  3053  0E1F                     	;# 
  3054  0E20                     	;# 
  3055  0E21                     	;# 
  3056  0E22                     	;# 
  3057  0E23                     	;# 
  3058  0E24                     	;# 
  3059  0E25                     	;# 
  3060  0E26                     	;# 
  3061  0E27                     	;# 
  3062  0E28                     	;# 
  3063  0E29                     	;# 
  3064  0E2A                     	;# 
  3065  0E2B                     	;# 
  3066  0E2C                     	;# 
  3067  0E2D                     	;# 
  3068  0E2E                     	;# 
  3069  0E2F                     	;# 
  3070  0E30                     	;# 
  3071  0E31                     	;# 
  3072  0E32                     	;# 
  3073  0E33                     	;# 
  3074  0E34                     	;# 
  3075  0E35                     	;# 
  3076  0E36                     	;# 
  3077  0E37                     	;# 
  3078  0E8F                     	;# 
  3079  0E90                     	;# 
  3080  0E91                     	;# 
  3081  0E92                     	;# 
  3082  0E93                     	;# 
  3083  0E94                     	;# 
  3084  0E95                     	;# 
  3085  0E96                     	;# 
  3086  0E97                     	;# 
  3087  0E9C                     	;# 
  3088  0E9D                     	;# 
  3089  0E9E                     	;# 
  3090  0EA1                     	;# 
  3091  0EA2                     	;# 
  3092  0EA3                     	;# 
  3093  0EA4                     	;# 
  3094  0EA5                     	;# 
  3095  0EA9                     	;# 
  3096  0EAA                     	;# 
  3097  0EAB                     	;# 
  3098  0EAC                     	;# 
  3099  0EB1                     	;# 
  3100  0EB2                     	;# 
  3101  0EB3                     	;# 
  3102  0EB8                     	;# 
  3103  0EB9                     	;# 
  3104  0EBA                     	;# 
  3105  0EBB                     	;# 
  3106  0EBC                     	;# 
  3107  0EBD                     	;# 
  3108  0EBE                     	;# 
  3109  0EC3                     	;# 
  3110  0EC5                     	;# 
  3111  0EC6                     	;# 
  3112  0EC7                     	;# 
  3113  0EC8                     	;# 
  3114  0EC9                     	;# 
  3115  0ECA                     	;# 
  3116  0ECB                     	;# 
  3117  0ECC                     	;# 
  3118  0F10                     	;# 
  3119  0F11                     	;# 
  3120  0F12                     	;# 
  3121  0F13                     	;# 
  3122  0F14                     	;# 
  3123  0F15                     	;# 
  3124  0F16                     	;# 
  3125  0F17                     	;# 
  3126  0F18                     	;# 
  3127  0F19                     	;# 
  3128  0F1A                     	;# 
  3129  0F1B                     	;# 
  3130  0F1C                     	;# 
  3131  0F1D                     	;# 
  3132  0F1E                     	;# 
  3133  0F1F                     	;# 
  3134  0F20                     	;# 
  3135  0F21                     	;# 
  3136  0F22                     	;# 
  3137  0F23                     	;# 
  3138  0F24                     	;# 
  3139  0F25                     	;# 
  3140  0F26                     	;# 
  3141  0F27                     	;# 
  3142  0F38                     	;# 
  3143  0F39                     	;# 
  3144  0F3A                     	;# 
  3145  0F3B                     	;# 
  3146  0F3C                     	;# 
  3147  0F3D                     	;# 
  3148  0F3E                     	;# 
  3149  0F3F                     	;# 
  3150  0F40                     	;# 
  3151  0F41                     	;# 
  3152  0F43                     	;# 
  3153  0F44                     	;# 
  3154  0F45                     	;# 
  3155  0F46                     	;# 
  3156  0F47                     	;# 
  3157  0F48                     	;# 
  3158  0F49                     	;# 
  3159  0F4A                     	;# 
  3160  0F4B                     	;# 
  3161  0F4C                     	;# 
  3162  0F4E                     	;# 
  3163  0F4F                     	;# 
  3164  0F50                     	;# 
  3165  0F51                     	;# 
  3166  0F52                     	;# 
  3167  0F53                     	;# 
  3168  0F54                     	;# 
  3169  0F55                     	;# 
  3170  0F56                     	;# 
  3171  0F57                     	;# 
  3172  0F65                     	;# 
  3173  0F68                     	;# 
  3174  0F69                     	;# 
  3175  0F6A                     	;# 
  3176  0F6B                     	;# 
  3177  0FE4                     	;# 
  3178  0FE5                     	;# 
  3179  0FE6                     	;# 
  3180  0FE7                     	;# 
  3181  0FE8                     	;# 
  3182  0FE9                     	;# 
  3183  0FEA                     	;# 
  3184  0FEB                     	;# 
  3185  0FED                     	;# 
  3186  0FEE                     	;# 
  3187  0FEF                     	;# 
  3188  0000                     	;# 
  3189  0001                     	;# 
  3190  0002                     	;# 
  3191  0003                     	;# 
  3192  0004                     	;# 
  3193  0005                     	;# 
  3194  0006                     	;# 
  3195  0007                     	;# 
  3196  0008                     	;# 
  3197  0009                     	;# 
  3198  000A                     	;# 
  3199  000B                     	;# 
  3200  000C                     	;# 
  3201  000D                     	;# 
  3202  000E                     	;# 
  3203  0010                     	;# 
  3204  0011                     	;# 
  3205  0012                     	;# 
  3206  0013                     	;# 
  3207  0016                     	;# 
  3208  0017                     	;# 
  3209  0018                     	;# 
  3210  001C                     	;# 
  3211  001C                     	;# 
  3212  001D                     	;# 
  3213  001D                     	;# 
  3214  001E                     	;# 
  3215  001F                     	;# 
  3216  008C                     	;# 
  3217  008C                     	;# 
  3218  008D                     	;# 
  3219  008E                     	;# 
  3220  008E                     	;# 
  3221  008F                     	;# 
  3222  0090                     	;# 
  3223  0090                     	;# 
  3224  0091                     	;# 
  3225  0093                     	;# 
  3226  0094                     	;# 
  3227  0095                     	;# 
  3228  0096                     	;# 
  3229  0097                     	;# 
  3230  0098                     	;# 
  3231  0099                     	;# 
  3232  009A                     	;# 
  3233  009B                     	;# 
  3234  009C                     	;# 
  3235  009D                     	;# 
  3236  009E                     	;# 
  3237  010C                     	;# 
  3238  010D                     	;# 
  3239  010E                     	;# 
  3240  010E                     	;# 
  3241  010F                     	;# 
  3242  0110                     	;# 
  3243  0110                     	;# 
  3244  0111                     	;# 
  3245  0112                     	;# 
  3246  0112                     	;# 
  3247  0113                     	;# 
  3248  0114                     	;# 
  3249  0114                     	;# 
  3250  0115                     	;# 
  3251  0116                     	;# 
  3252  0116                     	;# 
  3253  0117                     	;# 
  3254  0119                     	;# 
  3255  0119                     	;# 
  3256  0119                     	;# 
  3257  011A                     	;# 
  3258  011A                     	;# 
  3259  011A                     	;# 
  3260  011B                     	;# 
  3261  011B                     	;# 
  3262  011B                     	;# 
  3263  011B                     	;# 
  3264  011B                     	;# 
  3265  011C                     	;# 
  3266  011C                     	;# 
  3267  011C                     	;# 
  3268  011D                     	;# 
  3269  011D                     	;# 
  3270  011D                     	;# 
  3271  011E                     	;# 
  3272  011E                     	;# 
  3273  011E                     	;# 
  3274  011F                     	;# 
  3275  011F                     	;# 
  3276  011F                     	;# 
  3277  011F                     	;# 
  3278  011F                     	;# 
  3279  018C                     	;# 
  3280  018D                     	;# 
  3281  018E                     	;# 
  3282  018F                     	;# 
  3283  0190                     	;# 
  3284  0191                     	;# 
  3285  0192                     	;# 
  3286  0196                     	;# 
  3287  0197                     	;# 
  3288  0198                     	;# 
  3289  0199                     	;# 
  3290  019A                     	;# 
  3291  019B                     	;# 
  3292  019C                     	;# 
  3293  020C                     	;# 
  3294  020C                     	;# 
  3295  020D                     	;# 
  3296  020E                     	;# 
  3297  020F                     	;# 
  3298  020F                     	;# 
  3299  0210                     	;# 
  3300  0210                     	;# 
  3301  0211                     	;# 
  3302  0211                     	;# 
  3303  0212                     	;# 
  3304  0212                     	;# 
  3305  0213                     	;# 
  3306  0214                     	;# 
  3307  0215                     	;# 
  3308  0215                     	;# 
  3309  0216                     	;# 
  3310  0216                     	;# 
  3311  0217                     	;# 
  3312  0217                     	;# 
  3313  0218                     	;# 
  3314  0218                     	;# 
  3315  0219                     	;# 
  3316  021A                     	;# 
  3317  021B                     	;# 
  3318  021B                     	;# 
  3319  021C                     	;# 
  3320  021C                     	;# 
  3321  021D                     	;# 
  3322  021D                     	;# 
  3323  021E                     	;# 
  3324  021F                     	;# 
  3325  028C                     	;# 
  3326  028C                     	;# 
  3327  028D                     	;# 
  3328  028D                     	;# 
  3329  028E                     	;# 
  3330  028F                     	;# 
  3331  0290                     	;# 
  3332  0290                     	;# 
  3333  0291                     	;# 
  3334  0292                     	;# 
  3335  0292                     	;# 
  3336  0293                     	;# 
  3337  0293                     	;# 
  3338  0294                     	;# 
  3339  0295                     	;# 
  3340  0296                     	;# 
  3341  0296                     	;# 
  3342  0297                     	;# 
  3343  0298                     	;# 
  3344  0298                     	;# 
  3345  0299                     	;# 
  3346  0299                     	;# 
  3347  029A                     	;# 
  3348  029B                     	;# 
  3349  029C                     	;# 
  3350  029C                     	;# 
  3351  029D                     	;# 
  3352  030C                     	;# 
  3353  030C                     	;# 
  3354  030D                     	;# 
  3355  030E                     	;# 
  3356  030F                     	;# 
  3357  0310                     	;# 
  3358  0310                     	;# 
  3359  0311                     	;# 
  3360  0312                     	;# 
  3361  0313                     	;# 
  3362  0314                     	;# 
  3363  0314                     	;# 
  3364  0315                     	;# 
  3365  0316                     	;# 
  3366  0317                     	;# 
  3367  0318                     	;# 
  3368  0318                     	;# 
  3369  0319                     	;# 
  3370  031A                     	;# 
  3371  031B                     	;# 
  3372  031C                     	;# 
  3373  031C                     	;# 
  3374  031D                     	;# 
  3375  031E                     	;# 
  3376  031F                     	;# 
  3377  038C                     	;# 
  3378  038D                     	;# 
  3379  038E                     	;# 
  3380  0390                     	;# 
  3381  0391                     	;# 
  3382  0392                     	;# 
  3383  040C                     	;# 
  3384  040D                     	;# 
  3385  040E                     	;# 
  3386  040F                     	;# 
  3387  0410                     	;# 
  3388  0411                     	;# 
  3389  0416                     	;# 
  3390  0416                     	;# 
  3391  0417                     	;# 
  3392  0418                     	;# 
  3393  0418                     	;# 
  3394  0419                     	;# 
  3395  041A                     	;# 
  3396  041A                     	;# 
  3397  041B                     	;# 
  3398  041C                     	;# 
  3399  041C                     	;# 
  3400  041D                     	;# 
  3401  041E                     	;# 
  3402  041F                     	;# 
  3403  048C                     	;# 
  3404  048C                     	;# 
  3405  048D                     	;# 
  3406  048E                     	;# 
  3407  048F                     	;# 
  3408  048F                     	;# 
  3409  0490                     	;# 
  3410  0491                     	;# 
  3411  0492                     	;# 
  3412  0492                     	;# 
  3413  0493                     	;# 
  3414  0494                     	;# 
  3415  0495                     	;# 
  3416  0495                     	;# 
  3417  0496                     	;# 
  3418  0497                     	;# 
  3419  0498                     	;# 
  3420  0499                     	;# 
  3421  049A                     	;# 
  3422  049B                     	;# 
  3423  049C                     	;# 
  3424  049D                     	;# 
  3425  050C                     	;# 
  3426  050C                     	;# 
  3427  050D                     	;# 
  3428  050E                     	;# 
  3429  050F                     	;# 
  3430  050F                     	;# 
  3431  0510                     	;# 
  3432  0511                     	;# 
  3433  0512                     	;# 
  3434  0512                     	;# 
  3435  0513                     	;# 
  3436  0514                     	;# 
  3437  0515                     	;# 
  3438  0515                     	;# 
  3439  0516                     	;# 
  3440  0517                     	;# 
  3441  0518                     	;# 
  3442  0519                     	;# 
  3443  051A                     	;# 
  3444  051B                     	;# 
  3445  051C                     	;# 
  3446  051D                     	;# 
  3447  058C                     	;# 
  3448  058C                     	;# 
  3449  058D                     	;# 
  3450  058E                     	;# 
  3451  058F                     	;# 
  3452  058F                     	;# 
  3453  0590                     	;# 
  3454  0591                     	;# 
  3455  0592                     	;# 
  3456  0593                     	;# 
  3457  060C                     	;# 
  3458  060D                     	;# 
  3459  060E                     	;# 
  3460  060F                     	;# 
  3461  0610                     	;# 
  3462  0611                     	;# 
  3463  0612                     	;# 
  3464  0613                     	;# 
  3465  0614                     	;# 
  3466  0616                     	;# 
  3467  0617                     	;# 
  3468  0618                     	;# 
  3469  0619                     	;# 
  3470  061A                     	;# 
  3471  061B                     	;# 
  3472  061C                     	;# 
  3473  061D                     	;# 
  3474  061E                     	;# 
  3475  068C                     	;# 
  3476  068D                     	;# 
  3477  068E                     	;# 
  3478  068F                     	;# 
  3479  0690                     	;# 
  3480  0691                     	;# 
  3481  0692                     	;# 
  3482  0693                     	;# 
  3483  0694                     	;# 
  3484  070C                     	;# 
  3485  070D                     	;# 
  3486  070E                     	;# 
  3487  070F                     	;# 
  3488  0710                     	;# 
  3489  0711                     	;# 
  3490  0712                     	;# 
  3491  0713                     	;# 
  3492  0714                     	;# 
  3493  0716                     	;# 
  3494  0717                     	;# 
  3495  0718                     	;# 
  3496  0719                     	;# 
  3497  071A                     	;# 
  3498  071B                     	;# 
  3499  071C                     	;# 
  3500  071D                     	;# 
  3501  071E                     	;# 
  3502  0796                     	;# 
  3503  0797                     	;# 
  3504  0798                     	;# 
  3505  0799                     	;# 
  3506  079A                     	;# 
  3507  079B                     	;# 
  3508  080C                     	;# 
  3509  080D                     	;# 
  3510  080E                     	;# 
  3511  080F                     	;# 
  3512  0810                     	;# 
  3513  0811                     	;# 
  3514  0812                     	;# 
  3515  0813                     	;# 
  3516  0814                     	;# 
  3517  081A                     	;# 
  3518  081B                     	;# 
  3519  081C                     	;# 
  3520  081D                     	;# 
  3521  081E                     	;# 
  3522  081F                     	;# 
  3523  088C                     	;# 
  3524  088D                     	;# 
  3525  088E                     	;# 
  3526  088F                     	;# 
  3527  0890                     	;# 
  3528  0891                     	;# 
  3529  0892                     	;# 
  3530  0893                     	;# 
  3531  0895                     	;# 
  3532  0896                     	;# 
  3533  0897                     	;# 
  3534  0898                     	;# 
  3535  0899                     	;# 
  3536  089A                     	;# 
  3537  089B                     	;# 
  3538  090C                     	;# 
  3539  090E                     	;# 
  3540  090F                     	;# 
  3541  091F                     	;# 
  3542  091F                     	;# 
  3543  098F                     	;# 
  3544  098F                     	;# 
  3545  0990                     	;# 
  3546  0991                     	;# 
  3547  0992                     	;# 
  3548  0993                     	;# 
  3549  0994                     	;# 
  3550  0995                     	;# 
  3551  0996                     	;# 
  3552  0997                     	;# 
  3553  0E0F                     	;# 
  3554  0E10                     	;# 
  3555  0E11                     	;# 
  3556  0E12                     	;# 
  3557  0E13                     	;# 
  3558  0E14                     	;# 
  3559  0E15                     	;# 
  3560  0E16                     	;# 
  3561  0E17                     	;# 
  3562  0E18                     	;# 
  3563  0E19                     	;# 
  3564  0E1A                     	;# 
  3565  0E1B                     	;# 
  3566  0E1C                     	;# 
  3567  0E1D                     	;# 
  3568  0E1E                     	;# 
  3569  0E1F                     	;# 
  3570  0E20                     	;# 
  3571  0E21                     	;# 
  3572  0E22                     	;# 
  3573  0E23                     	;# 
  3574  0E24                     	;# 
  3575  0E25                     	;# 
  3576  0E26                     	;# 
  3577  0E27                     	;# 
  3578  0E28                     	;# 
  3579  0E29                     	;# 
  3580  0E2A                     	;# 
  3581  0E2B                     	;# 
  3582  0E2C                     	;# 
  3583  0E2D                     	;# 
  3584  0E2E                     	;# 
  3585  0E2F                     	;# 
  3586  0E30                     	;# 
  3587  0E31                     	;# 
  3588  0E32                     	;# 
  3589  0E33                     	;# 
  3590  0E34                     	;# 
  3591  0E35                     	;# 
  3592  0E36                     	;# 
  3593  0E37                     	;# 
  3594  0E8F                     	;# 
  3595  0E90                     	;# 
  3596  0E91                     	;# 
  3597  0E92                     	;# 
  3598  0E93                     	;# 
  3599  0E94                     	;# 
  3600  0E95                     	;# 
  3601  0E96                     	;# 
  3602  0E97                     	;# 
  3603  0E9C                     	;# 
  3604  0E9D                     	;# 
  3605  0E9E                     	;# 
  3606  0EA1                     	;# 
  3607  0EA2                     	;# 
  3608  0EA3                     	;# 
  3609  0EA4                     	;# 
  3610  0EA5                     	;# 
  3611  0EA9                     	;# 
  3612  0EAA                     	;# 
  3613  0EAB                     	;# 
  3614  0EAC                     	;# 
  3615  0EB1                     	;# 
  3616  0EB2                     	;# 
  3617  0EB3                     	;# 
  3618  0EB8                     	;# 
  3619  0EB9                     	;# 
  3620  0EBA                     	;# 
  3621  0EBB                     	;# 
  3622  0EBC                     	;# 
  3623  0EBD                     	;# 
  3624  0EBE                     	;# 
  3625  0EC3                     	;# 
  3626  0EC5                     	;# 
  3627  0EC6                     	;# 
  3628  0EC7                     	;# 
  3629  0EC8                     	;# 
  3630  0EC9                     	;# 
  3631  0ECA                     	;# 
  3632  0ECB                     	;# 
  3633  0ECC                     	;# 
  3634  0F10                     	;# 
  3635  0F11                     	;# 
  3636  0F12                     	;# 
  3637  0F13                     	;# 
  3638  0F14                     	;# 
  3639  0F15                     	;# 
  3640  0F16                     	;# 
  3641  0F17                     	;# 
  3642  0F18                     	;# 
  3643  0F19                     	;# 
  3644  0F1A                     	;# 
  3645  0F1B                     	;# 
  3646  0F1C                     	;# 
  3647  0F1D                     	;# 
  3648  0F1E                     	;# 
  3649  0F1F                     	;# 
  3650  0F20                     	;# 
  3651  0F21                     	;# 
  3652  0F22                     	;# 
  3653  0F23                     	;# 
  3654  0F24                     	;# 
  3655  0F25                     	;# 
  3656  0F26                     	;# 
  3657  0F27                     	;# 
  3658  0F38                     	;# 
  3659  0F39                     	;# 
  3660  0F3A                     	;# 
  3661  0F3B                     	;# 
  3662  0F3C                     	;# 
  3663  0F3D                     	;# 
  3664  0F3E                     	;# 
  3665  0F3F                     	;# 
  3666  0F40                     	;# 
  3667  0F41                     	;# 
  3668  0F43                     	;# 
  3669  0F44                     	;# 
  3670  0F45                     	;# 
  3671  0F46                     	;# 
  3672  0F47                     	;# 
  3673  0F48                     	;# 
  3674  0F49                     	;# 
  3675  0F4A                     	;# 
  3676  0F4B                     	;# 
  3677  0F4C                     	;# 
  3678  0F4E                     	;# 
  3679  0F4F                     	;# 
  3680  0F50                     	;# 
  3681  0F51                     	;# 
  3682  0F52                     	;# 
  3683  0F53                     	;# 
  3684  0F54                     	;# 
  3685  0F55                     	;# 
  3686  0F56                     	;# 
  3687  0F57                     	;# 
  3688  0F65                     	;# 
  3689  0F68                     	;# 
  3690  0F69                     	;# 
  3691  0F6A                     	;# 
  3692  0F6B                     	;# 
  3693  0FE4                     	;# 
  3694  0FE5                     	;# 
  3695  0FE6                     	;# 
  3696  0FE7                     	;# 
  3697  0FE8                     	;# 
  3698  0FE9                     	;# 
  3699  0FEA                     	;# 
  3700  0FEB                     	;# 
  3701  0FED                     	;# 
  3702  0FEE                     	;# 
  3703  0FEF                     	;# 
  3704  0000                     	;# 
  3705  0001                     	;# 
  3706  0002                     	;# 
  3707  0003                     	;# 
  3708  0004                     	;# 
  3709  0005                     	;# 
  3710  0006                     	;# 
  3711  0007                     	;# 
  3712  0008                     	;# 
  3713  0009                     	;# 
  3714  000A                     	;# 
  3715  000B                     	;# 
  3716  000C                     	;# 
  3717  000D                     	;# 
  3718  000E                     	;# 
  3719  0010                     	;# 
  3720  0011                     	;# 
  3721  0012                     	;# 
  3722  0013                     	;# 
  3723  0016                     	;# 
  3724  0017                     	;# 
  3725  0018                     	;# 
  3726  001C                     	;# 
  3727  001C                     	;# 
  3728  001D                     	;# 
  3729  001D                     	;# 
  3730  001E                     	;# 
  3731  001F                     	;# 
  3732  008C                     	;# 
  3733  008C                     	;# 
  3734  008D                     	;# 
  3735  008E                     	;# 
  3736  008E                     	;# 
  3737  008F                     	;# 
  3738  0090                     	;# 
  3739  0090                     	;# 
  3740  0091                     	;# 
  3741  0093                     	;# 
  3742  0094                     	;# 
  3743  0095                     	;# 
  3744  0096                     	;# 
  3745  0097                     	;# 
  3746  0098                     	;# 
  3747  0099                     	;# 
  3748  009A                     	;# 
  3749  009B                     	;# 
  3750  009C                     	;# 
  3751  009D                     	;# 
  3752  009E                     	;# 
  3753  010C                     	;# 
  3754  010D                     	;# 
  3755  010E                     	;# 
  3756  010E                     	;# 
  3757  010F                     	;# 
  3758  0110                     	;# 
  3759  0110                     	;# 
  3760  0111                     	;# 
  3761  0112                     	;# 
  3762  0112                     	;# 
  3763  0113                     	;# 
  3764  0114                     	;# 
  3765  0114                     	;# 
  3766  0115                     	;# 
  3767  0116                     	;# 
  3768  0116                     	;# 
  3769  0117                     	;# 
  3770  0119                     	;# 
  3771  0119                     	;# 
  3772  0119                     	;# 
  3773  011A                     	;# 
  3774  011A                     	;# 
  3775  011A                     	;# 
  3776  011B                     	;# 
  3777  011B                     	;# 
  3778  011B                     	;# 
  3779  011B                     	;# 
  3780  011B                     	;# 
  3781  011C                     	;# 
  3782  011C                     	;# 
  3783  011C                     	;# 
  3784  011D                     	;# 
  3785  011D                     	;# 
  3786  011D                     	;# 
  3787  011E                     	;# 
  3788  011E                     	;# 
  3789  011E                     	;# 
  3790  011F                     	;# 
  3791  011F                     	;# 
  3792  011F                     	;# 
  3793  011F                     	;# 
  3794  011F                     	;# 
  3795  018C                     	;# 
  3796  018D                     	;# 
  3797  018E                     	;# 
  3798  018F                     	;# 
  3799  0190                     	;# 
  3800  0191                     	;# 
  3801  0192                     	;# 
  3802  0196                     	;# 
  3803  0197                     	;# 
  3804  0198                     	;# 
  3805  0199                     	;# 
  3806  019A                     	;# 
  3807  019B                     	;# 
  3808  019C                     	;# 
  3809  020C                     	;# 
  3810  020C                     	;# 
  3811  020D                     	;# 
  3812  020E                     	;# 
  3813  020F                     	;# 
  3814  020F                     	;# 
  3815  0210                     	;# 
  3816  0210                     	;# 
  3817  0211                     	;# 
  3818  0211                     	;# 
  3819  0212                     	;# 
  3820  0212                     	;# 
  3821  0213                     	;# 
  3822  0214                     	;# 
  3823  0215                     	;# 
  3824  0215                     	;# 
  3825  0216                     	;# 
  3826  0216                     	;# 
  3827  0217                     	;# 
  3828  0217                     	;# 
  3829  0218                     	;# 
  3830  0218                     	;# 
  3831  0219                     	;# 
  3832  021A                     	;# 
  3833  021B                     	;# 
  3834  021B                     	;# 
  3835  021C                     	;# 
  3836  021C                     	;# 
  3837  021D                     	;# 
  3838  021D                     	;# 
  3839  021E                     	;# 
  3840  021F                     	;# 
  3841  028C                     	;# 
  3842  028C                     	;# 
  3843  028D                     	;# 
  3844  028D                     	;# 
  3845  028E                     	;# 
  3846  028F                     	;# 
  3847  0290                     	;# 
  3848  0290                     	;# 
  3849  0291                     	;# 
  3850  0292                     	;# 
  3851  0292                     	;# 
  3852  0293                     	;# 
  3853  0293                     	;# 
  3854  0294                     	;# 
  3855  0295                     	;# 
  3856  0296                     	;# 
  3857  0296                     	;# 
  3858  0297                     	;# 
  3859  0298                     	;# 
  3860  0298                     	;# 
  3861  0299                     	;# 
  3862  0299                     	;# 
  3863  029A                     	;# 
  3864  029B                     	;# 
  3865  029C                     	;# 
  3866  029C                     	;# 
  3867  029D                     	;# 
  3868  030C                     	;# 
  3869  030C                     	;# 
  3870  030D                     	;# 
  3871  030E                     	;# 
  3872  030F                     	;# 
  3873  0310                     	;# 
  3874  0310                     	;# 
  3875  0311                     	;# 
  3876  0312                     	;# 
  3877  0313                     	;# 
  3878  0314                     	;# 
  3879  0314                     	;# 
  3880  0315                     	;# 
  3881  0316                     	;# 
  3882  0317                     	;# 
  3883  0318                     	;# 
  3884  0318                     	;# 
  3885  0319                     	;# 
  3886  031A                     	;# 
  3887  031B                     	;# 
  3888  031C                     	;# 
  3889  031C                     	;# 
  3890  031D                     	;# 
  3891  031E                     	;# 
  3892  031F                     	;# 
  3893  038C                     	;# 
  3894  038D                     	;# 
  3895  038E                     	;# 
  3896  0390                     	;# 
  3897  0391                     	;# 
  3898  0392                     	;# 
  3899  040C                     	;# 
  3900  040D                     	;# 
  3901  040E                     	;# 
  3902  040F                     	;# 
  3903  0410                     	;# 
  3904  0411                     	;# 
  3905  0416                     	;# 
  3906  0416                     	;# 
  3907  0417                     	;# 
  3908  0418                     	;# 
  3909  0418                     	;# 
  3910  0419                     	;# 
  3911  041A                     	;# 
  3912  041A                     	;# 
  3913  041B                     	;# 
  3914  041C                     	;# 
  3915  041C                     	;# 
  3916  041D                     	;# 
  3917  041E                     	;# 
  3918  041F                     	;# 
  3919  048C                     	;# 
  3920  048C                     	;# 
  3921  048D                     	;# 
  3922  048E                     	;# 
  3923  048F                     	;# 
  3924  048F                     	;# 
  3925  0490                     	;# 
  3926  0491                     	;# 
  3927  0492                     	;# 
  3928  0492                     	;# 
  3929  0493                     	;# 
  3930  0494                     	;# 
  3931  0495                     	;# 
  3932  0495                     	;# 
  3933  0496                     	;# 
  3934  0497                     	;# 
  3935  0498                     	;# 
  3936  0499                     	;# 
  3937  049A                     	;# 
  3938  049B                     	;# 
  3939  049C                     	;# 
  3940  049D                     	;# 
  3941  050C                     	;# 
  3942  050C                     	;# 
  3943  050D                     	;# 
  3944  050E                     	;# 
  3945  050F                     	;# 
  3946  050F                     	;# 
  3947  0510                     	;# 
  3948  0511                     	;# 
  3949  0512                     	;# 
  3950  0512                     	;# 
  3951  0513                     	;# 
  3952  0514                     	;# 
  3953  0515                     	;# 
  3954  0515                     	;# 
  3955  0516                     	;# 
  3956  0517                     	;# 
  3957  0518                     	;# 
  3958  0519                     	;# 
  3959  051A                     	;# 
  3960  051B                     	;# 
  3961  051C                     	;# 
  3962  051D                     	;# 
  3963  058C                     	;# 
  3964  058C                     	;# 
  3965  058D                     	;# 
  3966  058E                     	;# 
  3967  058F                     	;# 
  3968  058F                     	;# 
  3969  0590                     	;# 
  3970  0591                     	;# 
  3971  0592                     	;# 
  3972  0593                     	;# 
  3973  060C                     	;# 
  3974  060D                     	;# 
  3975  060E                     	;# 
  3976  060F                     	;# 
  3977  0610                     	;# 
  3978  0611                     	;# 
  3979  0612                     	;# 
  3980  0613                     	;# 
  3981  0614                     	;# 
  3982  0616                     	;# 
  3983  0617                     	;# 
  3984  0618                     	;# 
  3985  0619                     	;# 
  3986  061A                     	;# 
  3987  061B                     	;# 
  3988  061C                     	;# 
  3989  061D                     	;# 
  3990  061E                     	;# 
  3991  068C                     	;# 
  3992  068D                     	;# 
  3993  068E                     	;# 
  3994  068F                     	;# 
  3995  0690                     	;# 
  3996  0691                     	;# 
  3997  0692                     	;# 
  3998  0693                     	;# 
  3999  0694                     	;# 
  4000  070C                     	;# 
  4001  070D                     	;# 
  4002  070E                     	;# 
  4003  070F                     	;# 
  4004  0710                     	;# 
  4005  0711                     	;# 
  4006  0712                     	;# 
  4007  0713                     	;# 
  4008  0714                     	;# 
  4009  0716                     	;# 
  4010  0717                     	;# 
  4011  0718                     	;# 
  4012  0719                     	;# 
  4013  071A                     	;# 
  4014  071B                     	;# 
  4015  071C                     	;# 
  4016  071D                     	;# 
  4017  071E                     	;# 
  4018  0796                     	;# 
  4019  0797                     	;# 
  4020  0798                     	;# 
  4021  0799                     	;# 
  4022  079A                     	;# 
  4023  079B                     	;# 
  4024  080C                     	;# 
  4025  080D                     	;# 
  4026  080E                     	;# 
  4027  080F                     	;# 
  4028  0810                     	;# 
  4029  0811                     	;# 
  4030  0812                     	;# 
  4031  0813                     	;# 
  4032  0814                     	;# 
  4033  081A                     	;# 
  4034  081B                     	;# 
  4035  081C                     	;# 
  4036  081D                     	;# 
  4037  081E                     	;# 
  4038  081F                     	;# 
  4039  088C                     	;# 
  4040  088D                     	;# 
  4041  088E                     	;# 
  4042  088F                     	;# 
  4043  0890                     	;# 
  4044  0891                     	;# 
  4045  0892                     	;# 
  4046  0893                     	;# 
  4047  0895                     	;# 
  4048  0896                     	;# 
  4049  0897                     	;# 
  4050  0898                     	;# 
  4051  0899                     	;# 
  4052  089A                     	;# 
  4053  089B                     	;# 
  4054  090C                     	;# 
  4055  090E                     	;# 
  4056  090F                     	;# 
  4057  091F                     	;# 
  4058  091F                     	;# 
  4059  098F                     	;# 
  4060  098F                     	;# 
  4061  0990                     	;# 
  4062  0991                     	;# 
  4063  0992                     	;# 
  4064  0993                     	;# 
  4065  0994                     	;# 
  4066  0995                     	;# 
  4067  0996                     	;# 
  4068  0997                     	;# 
  4069  0E0F                     	;# 
  4070  0E10                     	;# 
  4071  0E11                     	;# 
  4072  0E12                     	;# 
  4073  0E13                     	;# 
  4074  0E14                     	;# 
  4075  0E15                     	;# 
  4076  0E16                     	;# 
  4077  0E17                     	;# 
  4078  0E18                     	;# 
  4079  0E19                     	;# 
  4080  0E1A                     	;# 
  4081  0E1B                     	;# 
  4082  0E1C                     	;# 
  4083  0E1D                     	;# 
  4084  0E1E                     	;# 
  4085  0E1F                     	;# 
  4086  0E20                     	;# 
  4087  0E21                     	;# 
  4088  0E22                     	;# 
  4089  0E23                     	;# 
  4090  0E24                     	;# 
  4091  0E25                     	;# 
  4092  0E26                     	;# 
  4093  0E27                     	;# 
  4094  0E28                     	;# 
  4095  0E29                     	;# 
  4096  0E2A                     	;# 
  4097  0E2B                     	;# 
  4098  0E2C                     	;# 
  4099  0E2D                     	;# 
  4100  0E2E                     	;# 
  4101  0E2F                     	;# 
  4102  0E30                     	;# 
  4103  0E31                     	;# 
  4104  0E32                     	;# 
  4105  0E33                     	;# 
  4106  0E34                     	;# 
  4107  0E35                     	;# 
  4108  0E36                     	;# 
  4109  0E37                     	;# 
  4110  0E8F                     	;# 
  4111  0E90                     	;# 
  4112  0E91                     	;# 
  4113  0E92                     	;# 
  4114  0E93                     	;# 
  4115  0E94                     	;# 
  4116  0E95                     	;# 
  4117  0E96                     	;# 
  4118  0E97                     	;# 
  4119  0E9C                     	;# 
  4120  0E9D                     	;# 
  4121  0E9E                     	;# 
  4122  0EA1                     	;# 
  4123  0EA2                     	;# 
  4124  0EA3                     	;# 
  4125  0EA4                     	;# 
  4126  0EA5                     	;# 
  4127  0EA9                     	;# 
  4128  0EAA                     	;# 
  4129  0EAB                     	;# 
  4130  0EAC                     	;# 
  4131  0EB1                     	;# 
  4132  0EB2                     	;# 
  4133  0EB3                     	;# 
  4134  0EB8                     	;# 
  4135  0EB9                     	;# 
  4136  0EBA                     	;# 
  4137  0EBB                     	;# 
  4138  0EBC                     	;# 
  4139  0EBD                     	;# 
  4140  0EBE                     	;# 
  4141  0EC3                     	;# 
  4142  0EC5                     	;# 
  4143  0EC6                     	;# 
  4144  0EC7                     	;# 
  4145  0EC8                     	;# 
  4146  0EC9                     	;# 
  4147  0ECA                     	;# 
  4148  0ECB                     	;# 
  4149  0ECC                     	;# 
  4150  0F10                     	;# 
  4151  0F11                     	;# 
  4152  0F12                     	;# 
  4153  0F13                     	;# 
  4154  0F14                     	;# 
  4155  0F15                     	;# 
  4156  0F16                     	;# 
  4157  0F17                     	;# 
  4158  0F18                     	;# 
  4159  0F19                     	;# 
  4160  0F1A                     	;# 
  4161  0F1B                     	;# 
  4162  0F1C                     	;# 
  4163  0F1D                     	;# 
  4164  0F1E                     	;# 
  4165  0F1F                     	;# 
  4166  0F20                     	;# 
  4167  0F21                     	;# 
  4168  0F22                     	;# 
  4169  0F23                     	;# 
  4170  0F24                     	;# 
  4171  0F25                     	;# 
  4172  0F26                     	;# 
  4173  0F27                     	;# 
  4174  0F38                     	;# 
  4175  0F39                     	;# 
  4176  0F3A                     	;# 
  4177  0F3B                     	;# 
  4178  0F3C                     	;# 
  4179  0F3D                     	;# 
  4180  0F3E                     	;# 
  4181  0F3F                     	;# 
  4182  0F40                     	;# 
  4183  0F41                     	;# 
  4184  0F43                     	;# 
  4185  0F44                     	;# 
  4186  0F45                     	;# 
  4187  0F46                     	;# 
  4188  0F47                     	;# 
  4189  0F48                     	;# 
  4190  0F49                     	;# 
  4191  0F4A                     	;# 
  4192  0F4B                     	;# 
  4193  0F4C                     	;# 
  4194  0F4E                     	;# 
  4195  0F4F                     	;# 
  4196  0F50                     	;# 
  4197  0F51                     	;# 
  4198  0F52                     	;# 
  4199  0F53                     	;# 
  4200  0F54                     	;# 
  4201  0F55                     	;# 
  4202  0F56                     	;# 
  4203  0F57                     	;# 
  4204  0F65                     	;# 
  4205  0F68                     	;# 
  4206  0F69                     	;# 
  4207  0F6A                     	;# 
  4208  0F6B                     	;# 
  4209  0FE4                     	;# 
  4210  0FE5                     	;# 
  4211  0FE6                     	;# 
  4212  0FE7                     	;# 
  4213  0FE8                     	;# 
  4214  0FE9                     	;# 
  4215  0FEA                     	;# 
  4216  0FEB                     	;# 
  4217  0FED                     	;# 
  4218  0FEE                     	;# 
  4219  0FEF                     	;# 
  4220                           
  4221                           	psect	idataBANK1
  4222  0FA5                     __pidataBANK1:	
  4223                           
  4224                           ;initializer for _segdisp
  4225  0FA5  3403               	retlw	3
  4226  0FA6  3400               	retlw	0
  4227  0FA7  349F               	retlw	159
  4228  0FA8  3400               	retlw	0
  4229  0FA9  3425               	retlw	37
  4230  0FAA  3400               	retlw	0
  4231  0FAB  340D               	retlw	13
  4232  0FAC  3400               	retlw	0
  4233  0FAD  3499               	retlw	153
  4234  0FAE  3400               	retlw	0
  4235  0FAF  3449               	retlw	73
  4236  0FB0  3400               	retlw	0
  4237  0FB1  3441               	retlw	65
  4238  0FB2  3400               	retlw	0
  4239  0FB3  341B               	retlw	27
  4240  0FB4  3400               	retlw	0
  4241  0FB5  3401               	retlw	1
  4242  0FB6  3400               	retlw	0
  4243  0FB7  3409               	retlw	9
  4244  0FB8  3400               	retlw	0
  4245                           
  4246                           ;initializer for MYI2C_Write2LEDBytes@F14477
  4247  0FB9  34A0               	retlw	160
  4248  0FBA  34A1               	retlw	161
  4249  0FBB  34A2               	retlw	162
  4250  0FBC  34A3               	retlw	163
  4251  0FBD  34A4               	retlw	164
  4252  0FBE  34A5               	retlw	165
  4253  0FBF  34A6               	retlw	166
  4254  0FC0  34A7               	retlw	167
  4255  0FC1  34A8               	retlw	168
  4256  0FC2  34A9               	retlw	169
  4257  0FC3  34AA               	retlw	170
  4258  0FC4  34AB               	retlw	171
  4259  0FC5  34AC               	retlw	172
  4260  0FC6  34AD               	retlw	173
  4261  0FC7  34AE               	retlw	174
  4262  0FC8  34AF               	retlw	175
  4263                           
  4264                           	psect	stringtext1
  4265  1000                     __pstringtext1:	
  4266  1000                     _cPowerOfTwo:	
  4267  1000  3401               	retlw	1
  4268  1001  3400               	retlw	0
  4269  1002  3402               	retlw	2
  4270  1003  3400               	retlw	0
  4271  1004  3404               	retlw	4
  4272  1005  3400               	retlw	0
  4273  1006  3408               	retlw	8
  4274  1007  3400               	retlw	0
  4275  1008  3410               	retlw	16
  4276  1009  3400               	retlw	0
  4277  100A  3420               	retlw	32
  4278  100B  3400               	retlw	0
  4279  100C  3440               	retlw	64
  4280  100D  3400               	retlw	0
  4281  100E  3480               	retlw	128
  4282  100F  3400               	retlw	0
  4283  1010                     __end_of_cPowerOfTwo:	
  4284                           
  4285                           	psect	stringtext2
  4286  1010                     __pstringtext2:	
  4287  1010                     _clockMicroTime:	
  4288  1010  34C8               	retlw	200
  4289  1011  3400               	retlw	0
  4290  1012                     __end_of_clockMicroTime:	
  4291                           
  4292                           	psect	stringtext3
  4293  1012                     __pstringtext3:	
  4294  1012                     _lineSettleMicroTime:	
  4295  1012  3490               	retlw	144
  4296  1013  3401               	retlw	1
  4297  1014                     __end_of_lineSettleMicroTime:	
  4298                           
  4299                           	psect	stringtext4
  4300  1014                     __pstringtext4:	
  4301  1014                     _toggleDly:	
  4302  1014  340A               	retlw	10
  4303  1015  3400               	retlw	0
  4304  1016                     __end_of_toggleDly:	
  4305                           
  4306                           	psect	stringtext5
  4307  1016                     __pstringtext5:	
  4308  1016                     _twoK:	
  4309  1016  3410               	retlw	16
  4310  1017  3427               	retlw	39
  4311  1018                     __end_of_twoK:	
  4312                           
  4313                           	psect	stringtext6
  4314  1018                     __pstringtext6:	
  4315  1018                     _speed:	
  4316  1018  3432               	retlw	50
  4317  1019  3400               	retlw	0
  4318  101A                     __end_of_speed:	
  4319                           
  4320                           	psect	stringtext7
  4321  101A                     __pstringtext7:	
  4322  101A                     _datapin:	
  4323  101A  3412               	retlw	18
  4324  101B  3400               	retlw	0
  4325  101C                     __end_of_datapin:	
  4326                           
  4327                           	psect	stringtext8
  4328  101C                     __pstringtext8:	
  4329  101C                     _clockpin:	
  4330  101C  3411               	retlw	17
  4331  101D  3400               	retlw	0
  4332  101E                     __end_of_clockpin:	
  4333                           
  4334                           	psect	stringtext9
  4335  101E                     __pstringtext9:	
  4336  101E                     _latchpin:	
  4337  101E  3410               	retlw	16
  4338  101F  3400               	retlw	0
  4339  1020                     __end_of_latchpin:	
  4340                           
  4341                           	psect	stringtext10
  4342  1020                     __pstringtext10:	
  4343  1020                     main@iResetValue:	
  4344  1020  3464               	retlw	100
  4345  1021  3400               	retlw	0
  4346  1022                     __end_ofmain@iResetValue:	
  4347                           
  4348                           	psect	stringtext11
  4349  1022                     __pstringtext11:	
  4350  1022                     _cMstrClkAdjust:	
  4351  1022  3420               	retlw	32
  4352  1023  3400               	retlw	0
  4353  1024                     __end_of_cMstrClkAdjust:	
  4354  000C                     _PORTA	set	12
  4355  0018                     _LATCbits	set	24
  4356  0013                     _TRISCbits	set	19
  4357  000E                     _PORTC	set	14
  4358  000D                     _PORTB	set	13
  4359  000B                     _INTCONbits	set	11
  4360  0013                     _TRISC	set	19
  4361  0012                     _TRISB	set	18
  4362  0011                     _TRISA	set	17
  4363  0018                     _LATC	set	24
  4364  0017                     _LATB	set	23
  4365  0016                     _LATA	set	22
  4366  005F                     _GIE	set	95
  4367  0094                     _ADCON1bits	set	148
  4368  008E                     _ADPREVL	set	142
  4369  008F                     _ADPREVH	set	143
  4370  0097                     _ADSTATbits	set	151
  4371  0090                     _ADACCL	set	144
  4372  0091                     _ADACCH	set	145
  4373  0095                     _ADCON2bits	set	149
  4374  0096                     _ADCON3bits	set	150
  4375  008C                     _ADRESL	set	140
  4376  008D                     _ADRESH	set	141
  4377  0093                     _ADCON0bits	set	147
  4378  0093                     _ADCON0	set	147
  4379  009E                     _ADPCH	set	158
  4380  009D                     _ADACQ	set	157
  4381  009C                     _ADPRE	set	156
  4382  009B                     _ADCAP	set	155
  4383  009A                     _ADREF	set	154
  4384  0098                     _ADCLK	set	152
  4385  0097                     _ADSTAT	set	151
  4386  0099                     _ADACT	set	153
  4387  0096                     _ADCON3	set	150
  4388  0095                     _ADCON2	set	149
  4389  0094                     _ADCON1	set	148
  4390  0116                     _ADERRL	set	278
  4391  0117                     _ADERRH	set	279
  4392  0114                     _ADFLTRL	set	276
  4393  0115                     _ADFLTRH	set	277
  4394  010C                     _ADCNT	set	268
  4395  0113                     _ADSTPTH	set	275
  4396  0112                     _ADSTPTL	set	274
  4397  0111                     _ADUTHH	set	273
  4398  0110                     _ADUTHL	set	272
  4399  010F                     _ADLTHH	set	271
  4400  010E                     _ADLTHL	set	270
  4401  010D                     _ADRPT	set	269
  4402  018C                     _SSP1BUF	set	396
  4403  0191                     _SSP1CON2bits	set	401
  4404  0190                     _SSP1CON1bits	set	400
  4405  018D                     _SSP1ADD	set	397
  4406  0192                     _SSP1CON3	set	402
  4407  0190                     _SSP1CON1	set	400
  4408  018F                     _SSP1STAT	set	399
  4409  0719                     _PIE3bits	set	1817
  4410  070F                     _PIR3bits	set	1807
  4411  0892                     _OSCTUNE	set	2194
  4412  0893                     _OSCFRQ	set	2195
  4413  0891                     _OSCEN	set	2193
  4414  088F                     _OSCCON3	set	2191
  4415  088D                     _OSCCON1	set	2189
  4416  0EC5                     _SSP1CLKPPSbits	set	3781
  4417  0EC6                     _SSP1DATPPSbits	set	3782
  4418  0E8F                     _PPSLOCKbits	set	3727
  4419  0E8F                     _PPSLOCK	set	3727
  4420  0F4E                     _ANSELCbits	set	3918
  4421  0F24                     _RC4PPS	set	3876
  4422  0F23                     _RC3PPS	set	3875
  4423  0F50                     _ODCONC	set	3920
  4424  0F45                     _ODCONB	set	3909
  4425  0F3A                     _ODCONA	set	3898
  4426  0F4F                     _WPUC	set	3919
  4427  0F39                     _WPUA	set	3897
  4428  0F44                     _WPUB	set	3908
  4429  0F65                     _WPUE	set	3941
  4430  0F38                     _ANSELA	set	3896
  4431  0F43                     _ANSELB	set	3907
  4432  0F4E                     _ANSELC	set	3918
  4433                           
  4434                           ; #config settings
  4435  0000                     
  4436                           	psect	cinit
  4437  0022                     start_initialization:	
  4438  0022                     __initialization:	
  4439                           
  4440                           ; Initialize objects allocated to BANK1
  4441  0022  30A5               	movlw	low __pidataBANK1
  4442  0023  0084               	movwf	4
  4443  0024  308F               	movlw	(high __pidataBANK1)| (0+128)
  4444  0025  0085               	movwf	5
  4445  0026  30A0               	movlw	low __pdataBANK1
  4446  0027  0086               	movwf	6
  4447  0028  3000               	movlw	high __pdataBANK1
  4448  0029  0087               	movwf	7
  4449  002A  3024               	movlw	36
  4450  002B  318E  2697  3180   	fcall	init_ram
  4451                           
  4452                           ; Clear objects allocated to COMMON
  4453  002E  01F0               	clrf	__pbssCOMMON& (0+127)
  4454  002F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4455  0030  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4456  0031  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4457  0032  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4458  0033  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4459  0034  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  4460                           
  4461                           ; Clear objects allocated to BANK0
  4462  0035  305E               	movlw	low __pbssBANK0
  4463  0036  0084               	movwf	4
  4464  0037  3000               	movlw	high __pbssBANK0
  4465  0038  0085               	movwf	5
  4466  0039  3012               	movlw	18
  4467  003A  318E  2691  3180   	fcall	clear_ram0
  4468                           
  4469                           ; Clear objects allocated to BANK1
  4470  003D  30C4               	movlw	low __pbssBANK1
  4471  003E  0084               	movwf	4
  4472  003F  3000               	movlw	high __pbssBANK1
  4473  0040  0085               	movwf	5
  4474  0041  3017               	movlw	23
  4475  0042  318E  2691         	fcall	clear_ram0
  4476  0044                     end_of_initialization:	
  4477                           ;End of C runtime variable initialization code
  4478                           
  4479  0044                     __end_of__initialization:	
  4480  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4481  0045  0020               	movlb	0
  4482  0046  3180  2848         	ljmp	_main	;jump to C main() function
  4483                           
  4484                           	psect	bssCOMMON
  4485  0070                     __pbssCOMMON:	
  4486  0070                     I2C1_ISR@pi2c_buf_ptr:	
  4487  0070                     	ds	1
  4488  0071                     _p_i2c1_current:	
  4489  0071                     	ds	1
  4490  0072                     _p_i2c1_trb_current:	
  4491  0072                     	ds	1
  4492  0073                     _i2c1_trb_count:	
  4493  0073                     	ds	1
  4494  0074                     _i2c1_state:	
  4495  0074                     	ds	1
  4496  0075                     I2C1_ISR@i2c_address:	
  4497  0075                     	ds	2
  4498                           
  4499                           	psect	bssBANK0
  4500  005E                     __pbssBANK0:	
  4501  005E                     _i2c1_object:	
  4502  005E                     	ds	5
  4503  0063                     _b:	
  4504  0063                     	ds	3
  4505  0066                     _wkFaderValue:	
  4506  0066                     	ds	1
  4507  0067                     _iLEDs1_LSB:	
  4508  0067                     	ds	1
  4509  0068                     _iLEDs1_MSB:	
  4510  0068                     	ds	1
  4511  0069                     _iLEDs0_LSB:	
  4512  0069                     	ds	1
  4513  006A                     _iLEDs0_MSB:	
  4514  006A                     	ds	1
  4515  006B                     I2C1_ISR@i2c_10bit_address_restart:	
  4516  006B                     	ds	1
  4517  006C                     I2C1_ISR@i2c_bytes_left:	
  4518  006C                     	ds	1
  4519  006D                     _i2c1_tr_queue:	
  4520  006D                     	ds	3
  4521                           
  4522                           	psect	bssBANK1
  4523  00C4                     __pbssBANK1:	
  4524  00C4                     _prevByteFaderValue:	
  4525  00C4                     	ds	4
  4526  00C8                     _d:	
  4527  00C8                     	ds	3
  4528  00CB                     _e:	
  4529  00CB                     	ds	2
  4530  00CD                     _c:	
  4531  00CD                     	ds	2
  4532  00CF                     _byteFaderValue:	
  4533  00CF                     	ds	4
  4534  00D3                     I2C1_MasterRead@trBlock:	
  4535  00D3                     	ds	4
  4536  00D7                     I2C1_MasterWrite@trBlock:	
  4537  00D7                     	ds	4
  4538                           
  4539                           	psect	dataBANK1
  4540  00A0                     __pdataBANK1:	
  4541  00A0                     _segdisp:	
  4542  00A0                     	ds	20
  4543  00B4                     MYI2C_Write2LEDBytes@F14477:	
  4544  00B4                     	ds	16
  4545                           
  4546                           	psect	inittext
  4547  0E97                     init_ram:	
  4548  0E97  00FE               	movwf	126
  4549  0E98                     initloop:	
  4550  0E98  0012               	moviw fsr0++
  4551  0E99  001E               	movwi fsr1++
  4552  0E9A  0BFE               	decfsz	126,f
  4553  0E9B  2E98               	goto	initloop
  4554  0E9C  3400               	retlw	0
  4555                           
  4556                           	psect	clrtext
  4557  0E91                     clear_ram0:	
  4558                           ;	Called with FSR0 containing the base address, and
  4559                           ;	WREG with the size to clear
  4560                           
  4561  0E91  0064               	clrwdt	;clear the watchdog before getting into this loop
  4562  0E92                     clrloop0:	
  4563  0E92  0180               	clrf	0	;clear RAM location pointed to by FSR
  4564  0E93  3101               	addfsr 0,1
  4565  0E94  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4566  0E95  2E92               	goto	clrloop0	;have we reached the end yet?
  4567  0E96  3400               	retlw	0	;all done for this memory range, return
  4568                           
  4569                           	psect	cstackBANK1
  4570  00DB                     __pcstackBANK1:	
  4571  00DB                     main@LoadDebounceCount:	
  4572                           
  4573                           ; 2 bytes @ 0x0
  4574  00DB                     	ds	2
  4575  00DD                     main@SaveDebounceCount:	
  4576                           
  4577                           ; 2 bytes @ 0x2
  4578  00DD                     	ds	2
  4579  00DF                     main@I2C_ADDRESS_FADELED0:	
  4580                           
  4581                           ; 1 bytes @ 0x4
  4582  00DF                     	ds	1
  4583  00E0                     main@readStatus:	
  4584                           
  4585                           ; 1 bytes @ 0x5
  4586  00E0                     	ds	1
  4587  00E1                     main@iCounter:	
  4588                           
  4589                           ; 2 bytes @ 0x6
  4590  00E1                     	ds	2
  4591  00E3                     main@iChangeCount:	
  4592                           
  4593                           ; 1 bytes @ 0x8
  4594  00E3                     	ds	1
  4595  00E4                     main@prevFader8bitValue:	
  4596                           
  4597                           ; 1 bytes @ 0x9
  4598  00E4                     	ds	1
  4599  00E5                     main@POT0Value:	
  4600                           
  4601                           ; 1 bytes @ 0xA
  4602  00E5                     	ds	1
  4603  00E6                     main@POT1Value:	
  4604                           
  4605                           ; 1 bytes @ 0xB
  4606  00E6                     	ds	1
  4607  00E7                     main@iLoopCounter:	
  4608                           
  4609                           ; 2 bytes @ 0xC
  4610  00E7                     	ds	2
  4611  00E9                     main@fader8bitValue:	
  4612                           
  4613                           ; 1 bytes @ 0xE
  4614  00E9                     	ds	1
  4615  00EA                     main@fx:	
  4616                           
  4617                           ; 2 bytes @ 0xF
  4618  00EA                     	ds	2
  4619  00EC                     main@faderValue:	
  4620                           
  4621                           ; 2 bytes @ 0x11
  4622  00EC                     	ds	2
  4623  00EE                     main@fx_888:	
  4624                           
  4625                           ; 2 bytes @ 0x13
  4626  00EE                     	ds	2
  4627                           
  4628                           	psect	cstackCOMMON
  4629  0077                     __pcstackCOMMON:	
  4630  0077                     ?_OSCILLATOR_Initialize:	
  4631  0077                     ?_I2C1_Initialize:	
  4632                           ; 1 bytes @ 0x0
  4633                           
  4634  0077                     ?_ADCC_Initialize:	
  4635                           ; 1 bytes @ 0x0
  4636                           
  4637  0077                     ?_I2C1_Stop:	
  4638                           ; 1 bytes @ 0x0
  4639                           
  4640  0077                     ??_I2C1_Stop:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0077                     ?_I2C1_FunctionComplete:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0077                     ??_I2C1_FunctionComplete:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0077                     ?_initDAC528:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0077                     ?_LED7SegSetup:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0077                     ?_PIN_MANAGER_Initialize:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0077                     ?_SYSTEM_Initialize:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0077                     ?_I2C1_ISR:	
  4662                           ; 1 bytes @ 0x0
  4663                           
  4664  0077                     ?_I2C1_BusCollisionISR:	
  4665                           ; 1 bytes @ 0x0
  4666                           
  4667  0077                     ??_I2C1_BusCollisionISR:	
  4668                           ; 1 bytes @ 0x0
  4669                           
  4670  0077                     ?_INTERRUPT_InterruptManager:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0077                     ?_main:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0077                     ?_LED7SegPinWrite:	
  4677                           ; 1 bytes @ 0x0
  4678                           
  4679  0077                     ?_LED7SegPulseClock:	
  4680                           ; 1 bytes @ 0x0
  4681                           
  4682  0077                     ?_LED7SegShiftOutPulseClock:	
  4683                           ; 1 bytes @ 0x0
  4684                           
  4685                           
  4686                           ; 1 bytes @ 0x0
  4687  0077                     	ds	1
  4688  0078                     I2C1_Stop@completion_code:	
  4689                           
  4690                           ; 1 bytes @ 0x1
  4691  0078                     	ds	1
  4692  0079                     ??_I2C1_ISR:	
  4693                           
  4694                           ; 1 bytes @ 0x2
  4695  0079                     	ds	4
  4696  007D                     ??_INTERRUPT_InterruptManager:	
  4697                           
  4698                           ; 1 bytes @ 0x6
  4699  007D                     	ds	1
  4700                           
  4701                           	psect	cstackBANK0
  4702  0020                     __pcstackBANK0:	
  4703  0020                     ??_OSCILLATOR_Initialize:	
  4704  0020                     ??_I2C1_Initialize:	
  4705                           ; 1 bytes @ 0x0
  4706                           
  4707  0020                     ??_ADCC_Initialize:	
  4708                           ; 1 bytes @ 0x0
  4709                           
  4710  0020                     ??_LED7SegSetup:	
  4711                           ; 1 bytes @ 0x0
  4712                           
  4713  0020                     ??_PIN_MANAGER_Initialize:	
  4714                           ; 1 bytes @ 0x0
  4715                           
  4716  0020                     ??_LED7SegPinWrite:	
  4717                           ; 1 bytes @ 0x0
  4718                           
  4719  0020                     ?_ADCC_GetSingleConversion:	
  4720                           ; 1 bytes @ 0x0
  4721                           
  4722  0020                     ?___wmul:	
  4723                           ; 2 bytes @ 0x0
  4724                           
  4725  0020                     ?___awdiv:	
  4726                           ; 2 bytes @ 0x0
  4727                           
  4728  0020                     ?___ftpack:	
  4729                           ; 2 bytes @ 0x0
  4730                           
  4731  0020                     PIN_MANAGER_Initialize@state:	
  4732                           ; 3 bytes @ 0x0
  4733                           
  4734  0020                     LED7SegPinWrite@val:	
  4735                           ; 1 bytes @ 0x0
  4736                           
  4737  0020                     ___wmul@multiplier:	
  4738                           ; 1 bytes @ 0x0
  4739                           
  4740  0020                     ___awdiv@divisor:	
  4741                           ; 2 bytes @ 0x0
  4742                           
  4743  0020                     ___ftpack@arg:	
  4744                           ; 2 bytes @ 0x0
  4745                           
  4746                           
  4747                           ; 3 bytes @ 0x0
  4748  0020                     	ds	1
  4749  0021                     ??_SYSTEM_Initialize:	
  4750                           
  4751                           ; 1 bytes @ 0x1
  4752  0021                     	ds	1
  4753  0022                     ___wmul@multiplicand:	
  4754  0022                     ___awdiv@dividend:	
  4755                           ; 2 bytes @ 0x2
  4756                           
  4757                           
  4758                           ; 2 bytes @ 0x2
  4759  0022                     	ds	1
  4760  0023                     ??_ADCC_GetSingleConversion:	
  4761  0023                     ADCC_GetSingleConversion@channel:	
  4762                           ; 1 bytes @ 0x3
  4763                           
  4764  0023                     ___ftpack@exp:	
  4765                           ; 1 bytes @ 0x3
  4766                           
  4767                           
  4768                           ; 1 bytes @ 0x3
  4769  0023                     	ds	1
  4770  0024                     ??___wmul:	
  4771  0024                     ??___awdiv:	
  4772                           ; 1 bytes @ 0x4
  4773                           
  4774  0024                     ___ftpack@sign:	
  4775                           ; 1 bytes @ 0x4
  4776                           
  4777  0024                     ___wmul@product:	
  4778                           ; 1 bytes @ 0x4
  4779                           
  4780                           
  4781                           ; 2 bytes @ 0x4
  4782  0024                     	ds	1
  4783  0025                     ??___ftpack:	
  4784  0025                     ___awdiv@counter:	
  4785                           ; 1 bytes @ 0x5
  4786                           
  4787                           
  4788                           ; 1 bytes @ 0x5
  4789  0025                     	ds	1
  4790  0026                     ?_delay:	
  4791  0026                     ___awdiv@sign:	
  4792                           ; 1 bytes @ 0x6
  4793                           
  4794  0026                     delay@delaytime:	
  4795                           ; 1 bytes @ 0x6
  4796                           
  4797                           
  4798                           ; 2 bytes @ 0x6
  4799  0026                     	ds	1
  4800  0027                     ___awdiv@quotient:	
  4801                           
  4802                           ; 2 bytes @ 0x7
  4803  0027                     	ds	1
  4804  0028                     ??_delay:	
  4805  0028                     ?___awtoft:	
  4806                           ; 1 bytes @ 0x8
  4807                           
  4808  0028                     ___awtoft@c:	
  4809                           ; 3 bytes @ 0x8
  4810                           
  4811                           
  4812                           ; 2 bytes @ 0x8
  4813  0028                     	ds	1
  4814  0029                     delay@adjustedDelaytime:	
  4815                           
  4816                           ; 4 bytes @ 0x9
  4817  0029                     	ds	2
  4818  002B                     ??___awtoft:	
  4819                           
  4820                           ; 1 bytes @ 0xB
  4821  002B                     	ds	2
  4822  002D                     ___awtoft@sign:	
  4823  002D                     delay@counter:	
  4824                           ; 1 bytes @ 0xD
  4825                           
  4826                           
  4827                           ; 4 bytes @ 0xD
  4828  002D                     	ds	1
  4829  002E                     ?___ftdiv:	
  4830  002E                     ?___ftmul:	
  4831                           ; 3 bytes @ 0xE
  4832                           
  4833  002E                     ___ftdiv@f2:	
  4834                           ; 3 bytes @ 0xE
  4835                           
  4836  002E                     ___ftmul@f1:	
  4837                           ; 3 bytes @ 0xE
  4838                           
  4839                           
  4840                           ; 3 bytes @ 0xE
  4841  002E                     	ds	3
  4842  0031                     ?_blinkyLoop:	
  4843  0031                     ??_LED7SegPulseClock:	
  4844                           ; 1 bytes @ 0x11
  4845                           
  4846  0031                     ??_LED7SegShiftOutPulseClock:	
  4847                           ; 1 bytes @ 0x11
  4848                           
  4849  0031                     blinkyLoop@maxLoops:	
  4850                           ; 1 bytes @ 0x11
  4851                           
  4852  0031                     ___ftdiv@f1:	
  4853                           ; 2 bytes @ 0x11
  4854                           
  4855  0031                     ___ftmul@f2:	
  4856                           ; 3 bytes @ 0x11
  4857                           
  4858                           
  4859                           ; 3 bytes @ 0x11
  4860  0031                     	ds	1
  4861  0032                     LED7SegShiftOutPulseClock@val:	
  4862                           
  4863                           ; 1 bytes @ 0x12
  4864  0032                     	ds	1
  4865  0033                     ??_blinkyLoop:	
  4866  0033                     LED7SegShiftOutPulseClock@i:	
  4867                           ; 1 bytes @ 0x13
  4868                           
  4869                           
  4870                           ; 1 bytes @ 0x13
  4871  0033                     	ds	1
  4872  0034                     ?_LED7SegDisplayValueByDigit:	
  4873  0034                     ??___ftdiv:	
  4874                           ; 1 bytes @ 0x14
  4875                           
  4876  0034                     ??___ftmul:	
  4877                           ; 1 bytes @ 0x14
  4878                           
  4879  0034                     blinkyLoop@delayTime:	
  4880                           ; 1 bytes @ 0x14
  4881                           
  4882  0034                     LED7SegDisplayValueByDigit@iTensDigit:	
  4883                           ; 2 bytes @ 0x14
  4884                           
  4885                           
  4886                           ; 2 bytes @ 0x14
  4887  0034                     	ds	2
  4888  0036                     blinkyLoop@loopCount:	
  4889  0036                     LED7SegDisplayValueByDigit@iUnitsDigit:	
  4890                           ; 2 bytes @ 0x16
  4891                           
  4892                           
  4893                           ; 2 bytes @ 0x16
  4894  0036                     	ds	2
  4895  0038                     ??_LED7SegDisplayValueByDigit:	
  4896  0038                     ___ftdiv@cntr:	
  4897                           ; 1 bytes @ 0x18
  4898                           
  4899  0038                     ___ftmul@exp:	
  4900                           ; 1 bytes @ 0x18
  4901                           
  4902  0038                     LED7SegDisplayValueByDigit@iTensCode:	
  4903                           ; 1 bytes @ 0x18
  4904                           
  4905                           
  4906                           ; 2 bytes @ 0x18
  4907  0038                     	ds	1
  4908  0039                     ___ftdiv@f3:	
  4909  0039                     ___ftmul@f3_as_product:	
  4910                           ; 3 bytes @ 0x19
  4911                           
  4912                           
  4913                           ; 3 bytes @ 0x19
  4914  0039                     	ds	3
  4915  003C                     ___ftdiv@exp:	
  4916  003C                     ___ftmul@cntr:	
  4917                           ; 1 bytes @ 0x1C
  4918                           
  4919                           
  4920                           ; 1 bytes @ 0x1C
  4921  003C                     	ds	1
  4922  003D                     ___ftdiv@sign:	
  4923  003D                     ___ftmul@sign:	
  4924                           ; 1 bytes @ 0x1D
  4925                           
  4926                           
  4927                           ; 1 bytes @ 0x1D
  4928  003D                     	ds	1
  4929  003E                     ?___fttol:	
  4930  003E                     ___fttol@f1:	
  4931                           ; 4 bytes @ 0x1E
  4932                           
  4933                           
  4934                           ; 3 bytes @ 0x1E
  4935  003E                     	ds	4
  4936  0042                     ??___fttol:	
  4937                           
  4938                           ; 1 bytes @ 0x22
  4939  0042                     	ds	4
  4940  0046                     ___fttol@sign1:	
  4941                           
  4942                           ; 1 bytes @ 0x26
  4943  0046                     	ds	1
  4944  0047                     ___fttol@lval:	
  4945                           
  4946                           ; 4 bytes @ 0x27
  4947  0047                     	ds	4
  4948  004B                     ___fttol@exp1:	
  4949                           
  4950                           ; 1 bytes @ 0x2B
  4951  004B                     	ds	1
  4952  004C                     ?_putByte:	
  4953  004C                     putByte@clockPin:	
  4954                           ; 1 bytes @ 0x2C
  4955                           
  4956                           
  4957                           ; 2 bytes @ 0x2C
  4958  004C                     	ds	2
  4959  004E                     ??_putByte:	
  4960                           
  4961                           ; 1 bytes @ 0x2E
  4962  004E                     	ds	4
  4963  0052                     putByte@data:	
  4964                           
  4965                           ; 1 bytes @ 0x32
  4966  0052                     	ds	1
  4967  0053                     putByte@mask:	
  4968                           
  4969                           ; 1 bytes @ 0x33
  4970  0053                     	ds	1
  4971  0054                     putByte@i:	
  4972                           
  4973                           ; 1 bytes @ 0x34
  4974  0054                     	ds	1
  4975  0055                     ??_initDAC528:	
  4976  0055                     ?_writeDAC528:	
  4977                           ; 1 bytes @ 0x35
  4978                           
  4979  0055                     writeDAC528@dacNumber:	
  4980                           ; 1 bytes @ 0x35
  4981                           
  4982                           
  4983                           ; 2 bytes @ 0x35
  4984  0055                     	ds	2
  4985  0057                     writeDAC528@dacData:	
  4986                           
  4987                           ; 1 bytes @ 0x37
  4988  0057                     	ds	1
  4989  0058                     ??_writeDAC528:	
  4990                           
  4991                           ; 1 bytes @ 0x38
  4992  0058                     	ds	1
  4993  0059                     writeDAC528@wkDacNumber:	
  4994                           
  4995                           ; 1 bytes @ 0x39
  4996  0059                     	ds	1
  4997  005A                     ??_main:	
  4998                           
  4999                           ; 1 bytes @ 0x3A
  5000  005A                     	ds	4
  5001                           
  5002                           	psect	maintext
  5003  0048                     __pmaintext:	
  5004 ;;
  5005 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5006 ;;
  5007 ;; *************** function _main *****************
  5008 ;; Defined at:
  5009 ;;		line 181 in file "main.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;		None
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  fx              2   19[BANK1 ] int 
  5014 ;;  fx              2   15[BANK1 ] int 
  5015 ;;  dFader8bitVa    3    0        int 
  5016 ;;  faderValue      2   17[BANK1 ] int 
  5017 ;;  iLoopCounter    2   12[BANK1 ] unsigned int 
  5018 ;;  iCounter        2    6[BANK1 ] unsigned int 
  5019 ;;  SaveDebounce    2    2[BANK1 ] int 
  5020 ;;  LoadDebounce    2    0[BANK1 ] int 
  5021 ;;  iLSByte         2    0        unsigned int 
  5022 ;;  iMSByte         2    0        unsigned int 
  5023 ;;  fader8bitVal    1   14[BANK1 ] unsigned char 
  5024 ;;  POT1Value       1   11[BANK1 ] unsigned char 
  5025 ;;  POT0Value       1   10[BANK1 ] unsigned char 
  5026 ;;  prevFader8bi    1    9[BANK1 ] unsigned char 
  5027 ;;  iChangeCount    1    8[BANK1 ] unsigned char 
  5028 ;;  readStatus      1    5[BANK1 ] enum E14335
  5029 ;;  I2C_ADDRESS_    1    4[BANK1 ] unsigned char 
  5030 ;;  DACDataValue    1    0        unsigned char 
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : B1F/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  5042 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5043 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;Total ram usage:       25 bytes
  5045 ;; Hardware stack levels required when called:    8
  5046 ;; This function calls:
  5047 ;;		_ADCC_GetSingleConversion
  5048 ;;		_LED7SegDisplayValueByDigit
  5049 ;;		_LED7SegSetup
  5050 ;;		_SYSTEM_Initialize
  5051 ;;		___awdiv
  5052 ;;		___awtoft
  5053 ;;		___ftdiv
  5054 ;;		___fttol
  5055 ;;		_blinkyLoop
  5056 ;;		_delay
  5057 ;;		_initDAC528
  5058 ;;		_writeDAC528
  5059 ;; This function is called by:
  5060 ;;		Startup code after reset
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           
  5065                           ;psect for function _main
  5066  0048                     _main:	
  5067                           
  5068                           ;main.c: 183: uint8_t I2C_ADDRESS_FADELED0 = 0x10;
  5069                           
  5070                           ;incstack = 0
  5071                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5072  0048  3010               	movlw	16
  5073  0049  0020               	movlb	0	; select bank0
  5074  004A  00DA               	movwf	??_main
  5075  004B  085A               	movf	??_main,w
  5076  004C  0021               	movlb	1	; select bank1
  5077  004D  00DF               	movwf	main@I2C_ADDRESS_FADELED0^(0+128)
  5078                           
  5079                           ;main.c: 184: uint16_t iCounter=0;
  5080  004E  01E1               	clrf	main@iCounter^(0+128)
  5081  004F  01E2               	clrf	(main@iCounter+1)^(0+128)
  5082                           
  5083                           ;main.c: 185: uint16_t iMSByte;
  5084                           ;main.c: 186: uint16_t iLSByte;
  5085                           ;main.c: 187: const uint16_t iResetValue=100;
  5086                           ;main.c: 188: uint16_t iLoopCounter=0;
  5087  0050  01E7               	clrf	main@iLoopCounter^(0+128)
  5088  0051  01E8               	clrf	(main@iLoopCounter+1)^(0+128)
  5089                           
  5090                           ;main.c: 189: uint8_t iChangeCount=0;
  5091  0052  01E3               	clrf	main@iChangeCount^(0+128)
  5092                           
  5093                           ;main.c: 190: int faderValue;
  5094                           ;main.c: 191: uint8_t fader8bitValue;
  5095                           ;main.c: 192: uint8_t prevFader8bitValue;
  5096                           ;main.c: 193: uint8_t POT0Value;
  5097                           ;main.c: 194: uint8_t POT1Value;
  5098                           ;main.c: 195: uint8_t DACDataValue;
  5099                           ;main.c: 196: double dFader8bitValue;
  5100                           ;main.c: 197: int LoadDebounceCount=0;
  5101  0053  01DB               	clrf	main@LoadDebounceCount^(0+128)
  5102  0054  01DC               	clrf	(main@LoadDebounceCount+1)^(0+128)
  5103                           
  5104                           ;main.c: 198: int SaveDebounceCount=0;
  5105  0055  01DD               	clrf	main@SaveDebounceCount^(0+128)
  5106  0056  01DE               	clrf	(main@SaveDebounceCount+1)^(0+128)
  5107                           
  5108                           ;main.c: 200: I2C1_MESSAGE_STATUS readStatus=0;
  5109  0057  01E0               	clrf	main@readStatus^(0+128)
  5110                           
  5111                           ;main.c: 203: SYSTEM_Initialize();
  5112  0058  318E  26AF  3180   	fcall	_SYSTEM_Initialize
  5113                           
  5114                           ;main.c: 204: initDAC528();
  5115  005B  318E  26EC  3180   	fcall	_initDAC528
  5116                           
  5117                           ;main.c: 205: LED7SegSetup();
  5118  005E  318E  26BB  3180   	fcall	_LED7SegSetup
  5119                           
  5120                           ;main.c: 210: (INTCONbits.GIE = 1);
  5121  0061  178B               	bsf	11,7	;volatile
  5122                           
  5123                           ;main.c: 213: (INTCONbits.PEIE = 1);
  5124  0062  170B               	bsf	11,6	;volatile
  5125                           
  5126                           ;main.c: 222: for(int fx=0;fx<4;fx++){
  5127  0063  0021               	movlb	1	; select bank1
  5128  0064  01EA               	clrf	main@fx^(0+128)
  5129  0065  01EB               	clrf	(main@fx+1)^(0+128)
  5130  0066  086B               	movf	(main@fx+1)^(0+128),w
  5131  0067  3A80               	xorlw	128
  5132  0068  0020               	movlb	0	; select bank0
  5133  0069  00DA               	movwf	??_main
  5134  006A  3080               	movlw	128
  5135  006B  025A               	subwf	??_main,w
  5136  006C  1D03               	skipz
  5137  006D  2871               	goto	u3305
  5138  006E  3004               	movlw	4
  5139  006F  0021               	movlb	1	; select bank1
  5140  0070  026A               	subwf	main@fx^(0+128),w
  5141  0071                     u3305:	
  5142  0071  1803               	btfsc	3,0
  5143  0072  28BC               	goto	l3675
  5144  0073                     l3665:	
  5145                           
  5146                           ;main.c: 223: faderValue=ADCC_GetSingleConversion(fx);
  5147  0073  0021               	movlb	1	; select bank1
  5148  0074  086A               	movf	main@fx^(0+128),w
  5149  0075  318E  26D8  3180   	fcall	_ADCC_GetSingleConversion
  5150  0078  0020               	movlb	0	; select bank0
  5151  0079  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5152  007A  0021               	movlb	1	; select bank1
  5153  007B  00ED               	movwf	(main@faderValue+1)^(0+128)
  5154  007C  0020               	movlb	0	; select bank0
  5155  007D  0820               	movf	?_ADCC_GetSingleConversion,w
  5156  007E  0021               	movlb	1	; select bank1
  5157  007F  00EC               	movwf	main@faderValue^(0+128)
  5158                           
  5159                           ;main.c: 224: byteFaderValue[fx]=255-(faderValue>>2);
  5160  0080  086D               	movf	(main@faderValue+1)^(0+128),w
  5161  0081  0020               	movlb	0	; select bank0
  5162  0082  00DB               	movwf	??_main+1
  5163  0083  0021               	movlb	1	; select bank1
  5164  0084  086C               	movf	main@faderValue^(0+128),w
  5165  0085  0020               	movlb	0	; select bank0
  5166  0086  00DA               	movwf	??_main
  5167  0087  0D5B               	rlf	??_main+1,w
  5168  0088  0CDB               	rrf	??_main+1,f
  5169  0089  0CDA               	rrf	??_main,f
  5170  008A  0D5B               	rlf	??_main+1,w
  5171  008B  0CDB               	rrf	??_main+1,f
  5172  008C  0CDA               	rrf	??_main,f
  5173  008D  085A               	movf	??_main,w
  5174  008E  3AFF               	xorlw	255
  5175  008F  3E01               	addlw	1
  5176  0090  3EFF               	addlw	255
  5177  0091  00DC               	movwf	??_main+2
  5178  0092  0021               	movlb	1	; select bank1
  5179  0093  086A               	movf	main@fx^(0+128),w
  5180  0094  3ECF               	addlw	(low (_byteFaderValue| 0))& (0+255)
  5181  0095  0086               	movwf	6
  5182  0096  0187               	clrf	7
  5183  0097  0020               	movlb	0	; select bank0
  5184  0098  085C               	movf	??_main+2,w
  5185  0099  0081               	movwf	1
  5186                           
  5187                           ;main.c: 225: prevByteFaderValue[fx]= byteFaderValue[fx];
  5188  009A  0021               	movlb	1	; select bank1
  5189  009B  086A               	movf	main@fx^(0+128),w
  5190  009C  3ECF               	addlw	(low (_byteFaderValue| 0))& (0+255)
  5191  009D  0086               	movwf	6
  5192  009E  0187               	clrf	7
  5193  009F  0801               	movf	1,w
  5194  00A0  0020               	movlb	0	; select bank0
  5195  00A1  00DA               	movwf	??_main
  5196  00A2  0021               	movlb	1	; select bank1
  5197  00A3  086A               	movf	main@fx^(0+128),w
  5198  00A4  3EC4               	addlw	(low (_prevByteFaderValue| 0))& (0+255)
  5199  00A5  0086               	movwf	6
  5200  00A6  0187               	clrf	7
  5201  00A7  0020               	movlb	0	; select bank0
  5202  00A8  085A               	movf	??_main,w
  5203  00A9  0081               	movwf	1
  5204  00AA  3001               	movlw	1
  5205  00AB  0021               	movlb	1	; select bank1
  5206  00AC  07EA               	addwf	main@fx^(0+128),f
  5207  00AD  3000               	movlw	0
  5208  00AE  3DEB               	addwfc	(main@fx+1)^(0+128),f
  5209  00AF  086B               	movf	(main@fx+1)^(0+128),w
  5210  00B0  3A80               	xorlw	128
  5211  00B1  0020               	movlb	0	; select bank0
  5212  00B2  00DA               	movwf	??_main
  5213  00B3  3080               	movlw	128
  5214  00B4  025A               	subwf	??_main,w
  5215  00B5  1D03               	skipz
  5216  00B6  28BA               	goto	u3315
  5217  00B7  3004               	movlw	4
  5218  00B8  0021               	movlb	1	; select bank1
  5219  00B9  026A               	subwf	main@fx^(0+128),w
  5220  00BA                     u3315:	
  5221  00BA  1C03               	skipc
  5222  00BB  2873               	goto	l3665
  5223  00BC                     l3675:	
  5224                           
  5225                           ;main.c: 226: }
  5226                           ;main.c: 227: blinkyLoop(10);
  5227  00BC  300A               	movlw	10
  5228  00BD  0020               	movlb	0	; select bank0
  5229  00BE  00B1               	movwf	blinkyLoop@maxLoops
  5230  00BF  3000               	movlw	0
  5231  00C0  00B2               	movwf	blinkyLoop@maxLoops+1
  5232  00C1  3186  2696  3180   	fcall	_blinkyLoop
  5233                           
  5234                           ;main.c: 232: PORTB |= 0x0F;
  5235  00C4  300F               	movlw	15
  5236  00C5  0020               	movlb	0	; select bank0
  5237  00C6  00DA               	movwf	??_main
  5238  00C7  085A               	movf	??_main,w
  5239  00C8  048D               	iorwf	13,f	;volatile
  5240                           
  5241                           ;main.c: 233: PORTC |= 0xE0;
  5242  00C9  30E0               	movlw	224
  5243  00CA  00DA               	movwf	??_main
  5244  00CB  085A               	movf	??_main,w
  5245  00CC  048E               	iorwf	14,f	;volatile
  5246                           
  5247                           ;main.c: 234: ODCONB &= 0xF0;
  5248  00CD  30F0               	movlw	240
  5249  00CE  00DA               	movwf	??_main
  5250  00CF  085A               	movf	??_main,w
  5251  00D0  003E               	movlb	30	; select bank30
  5252  00D1  05C5               	andwf	69,f	;volatile
  5253                           
  5254                           ;main.c: 235: ODCONC &= 0x1F;
  5255  00D2  301F               	movlw	31
  5256  00D3  0020               	movlb	0	; select bank0
  5257  00D4  00DA               	movwf	??_main
  5258  00D5  085A               	movf	??_main,w
  5259  00D6  003E               	movlb	30	; select bank30
  5260  00D7  05D0               	andwf	80,f	;volatile
  5261  00D8                     l3685:	
  5262                           ;main.c: 237: while (1) {
  5263                           
  5264                           
  5265                           ;main.c: 238: iLoopCounter++;
  5266  00D8  3001               	movlw	1
  5267  00D9  0021               	movlb	1	; select bank1
  5268  00DA  07E7               	addwf	main@iLoopCounter^(0+128),f
  5269  00DB  3000               	movlw	0
  5270  00DC  3DE8               	addwfc	(main@iLoopCounter+1)^(0+128),f
  5271                           
  5272                           ;main.c: 239: if (iResetValue<=iLoopCounter) iLoopCounter=0;
  5273  00DD  3020               	movlw	low (main@iResetValue| (0+32768))
  5274  00DE  0084               	movwf	4
  5275  00DF  3090               	movlw	high (main@iResetValue| (0+32768))
  5276  00E0  0085               	movwf	5
  5277  00E1  3F00               	moviw [0]fsr0
  5278  00E2  0020               	movlb	0	; select bank0
  5279  00E3  00DA               	movwf	??_main
  5280  00E4  3F01               	moviw [1]fsr0
  5281  00E5  00DB               	movwf	??_main+1
  5282  00E6  085B               	movf	??_main+1,w
  5283  00E7  0021               	movlb	1	; select bank1
  5284  00E8  0268               	subwf	(main@iLoopCounter+1)^(0+128),w
  5285  00E9  1D03               	skipz
  5286  00EA  28EF               	goto	u3325
  5287  00EB  0020               	movlb	0	; select bank0
  5288  00EC  085A               	movf	??_main,w
  5289  00ED  0021               	movlb	1	; select bank1
  5290  00EE  0267               	subwf	main@iLoopCounter^(0+128),w
  5291  00EF                     u3325:	
  5292  00EF  1C03               	skipc
  5293  00F0  28F3               	goto	l471
  5294  00F1  01E7               	clrf	main@iLoopCounter^(0+128)
  5295  00F2  01E8               	clrf	(main@iLoopCounter+1)^(0+128)
  5296  00F3                     l471:	
  5297                           
  5298                           ;main.c: 242: {
  5299                           ;main.c: 244: for(int fx=0;fx<4;fx++){
  5300  00F3  01EE               	clrf	main@fx_888^(0+128)
  5301  00F4  01EF               	clrf	(main@fx_888+1)^(0+128)
  5302  00F5  086F               	movf	(main@fx_888+1)^(0+128),w
  5303  00F6  3A80               	xorlw	128
  5304  00F7  0020               	movlb	0	; select bank0
  5305  00F8  00DA               	movwf	??_main
  5306  00F9  3080               	movlw	128
  5307  00FA  025A               	subwf	??_main,w
  5308  00FB  1D03               	skipz
  5309  00FC  2900               	goto	u3335
  5310  00FD  3004               	movlw	4
  5311  00FE  0021               	movlb	1	; select bank1
  5312  00FF  026E               	subwf	main@fx_888^(0+128),w
  5313  0100                     u3335:	
  5314  0100  1803               	btfsc	3,0
  5315  0101  2980               	goto	l3711
  5316  0102                     l3695:	
  5317                           
  5318                           ;main.c: 245: faderValue=ADCC_GetSingleConversion(fx);
  5319  0102  0021               	movlb	1	; select bank1
  5320  0103  086E               	movf	main@fx_888^(0+128),w
  5321  0104  318E  26D8  3180   	fcall	_ADCC_GetSingleConversion
  5322  0107  0020               	movlb	0	; select bank0
  5323  0108  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5324  0109  0021               	movlb	1	; select bank1
  5325  010A  00ED               	movwf	(main@faderValue+1)^(0+128)
  5326  010B  0020               	movlb	0	; select bank0
  5327  010C  0820               	movf	?_ADCC_GetSingleConversion,w
  5328  010D  0021               	movlb	1	; select bank1
  5329  010E  00EC               	movwf	main@faderValue^(0+128)
  5330                           
  5331                           ;main.c: 246: byteFaderValue[fx]=255-(faderValue>>2);
  5332  010F  086D               	movf	(main@faderValue+1)^(0+128),w
  5333  0110  0020               	movlb	0	; select bank0
  5334  0111  00DB               	movwf	??_main+1
  5335  0112  0021               	movlb	1	; select bank1
  5336  0113  086C               	movf	main@faderValue^(0+128),w
  5337  0114  0020               	movlb	0	; select bank0
  5338  0115  00DA               	movwf	??_main
  5339  0116  0D5B               	rlf	??_main+1,w
  5340  0117  0CDB               	rrf	??_main+1,f
  5341  0118  0CDA               	rrf	??_main,f
  5342  0119  0D5B               	rlf	??_main+1,w
  5343  011A  0CDB               	rrf	??_main+1,f
  5344  011B  0CDA               	rrf	??_main,f
  5345  011C  085A               	movf	??_main,w
  5346  011D  3AFF               	xorlw	255
  5347  011E  3E01               	addlw	1
  5348  011F  3EFF               	addlw	255
  5349  0120  00DC               	movwf	??_main+2
  5350  0121  0021               	movlb	1	; select bank1
  5351  0122  086E               	movf	main@fx_888^(0+128),w
  5352  0123  3ECF               	addlw	(low (_byteFaderValue| 0))& (0+255)
  5353  0124  0086               	movwf	6
  5354  0125  0187               	clrf	7
  5355  0126  0020               	movlb	0	; select bank0
  5356  0127  085C               	movf	??_main+2,w
  5357  0128  0081               	movwf	1
  5358                           
  5359                           ;main.c: 247: fader8bitValue=(byteFaderValue[fx]+prevByteFaderValue[fx])/2;
  5360  0129  3002               	movlw	2
  5361  012A  00A0               	movwf	___awdiv@divisor
  5362  012B  3000               	movlw	0
  5363  012C  00A1               	movwf	___awdiv@divisor+1
  5364  012D  0021               	movlb	1	; select bank1
  5365  012E  086E               	movf	main@fx_888^(0+128),w
  5366  012F  3EC4               	addlw	(low (_prevByteFaderValue| 0))& (0+255)
  5367  0130  0086               	movwf	6
  5368  0131  0187               	clrf	7
  5369  0132  086E               	movf	main@fx_888^(0+128),w
  5370  0133  3ECF               	addlw	(low (_byteFaderValue| 0))& (0+255)
  5371  0134  0084               	movwf	4
  5372  0135  0185               	clrf	5
  5373  0136  0800               	movf	0,w
  5374  0137  0701               	addwf	1,w
  5375  0138  0020               	movlb	0	; select bank0
  5376  0139  00A2               	movwf	___awdiv@dividend
  5377  013A  01A3               	clrf	___awdiv@dividend+1
  5378  013B  0DA3               	rlf	___awdiv@dividend+1,f
  5379  013C  3187  273F  3180   	fcall	___awdiv
  5380  013F  0020               	movlb	0	; select bank0
  5381  0140  0820               	movf	?___awdiv,w
  5382  0141  00DA               	movwf	??_main
  5383  0142  085A               	movf	??_main,w
  5384  0143  0021               	movlb	1	; select bank1
  5385  0144  00E9               	movwf	main@fader8bitValue^(0+128)
  5386                           
  5387                           ;main.c: 248: writeDAC528(fx+4,fader8bitValue);
  5388  0145  086E               	movf	main@fx_888^(0+128),w
  5389  0146  3E04               	addlw	4
  5390  0147  0020               	movlb	0	; select bank0
  5391  0148  00D5               	movwf	writeDAC528@dacNumber
  5392  0149  3000               	movlw	0
  5393  014A  0021               	movlb	1	; select bank1
  5394  014B  3D6F               	addwfc	(main@fx_888+1)^(0+128),w
  5395  014C  0020               	movlb	0	; select bank0
  5396  014D  00D6               	movwf	writeDAC528@dacNumber+1
  5397  014E  0021               	movlb	1	; select bank1
  5398  014F  0869               	movf	main@fader8bitValue^(0+128),w
  5399  0150  0020               	movlb	0	; select bank0
  5400  0151  00DA               	movwf	??_main
  5401  0152  085A               	movf	??_main,w
  5402  0153  00D7               	movwf	writeDAC528@dacData
  5403  0154  3187  27D0  3180   	fcall	_writeDAC528
  5404                           
  5405                           ;main.c: 249: prevByteFaderValue[fx]= byteFaderValue[fx];
  5406  0157  0021               	movlb	1	; select bank1
  5407  0158  086E               	movf	main@fx_888^(0+128),w
  5408  0159  3ECF               	addlw	(low (_byteFaderValue| 0))& (0+255)
  5409  015A  0086               	movwf	6
  5410  015B  0187               	clrf	7
  5411  015C  0801               	movf	1,w
  5412  015D  0020               	movlb	0	; select bank0
  5413  015E  00DA               	movwf	??_main
  5414  015F  0021               	movlb	1	; select bank1
  5415  0160  086E               	movf	main@fx_888^(0+128),w
  5416  0161  3EC4               	addlw	(low (_prevByteFaderValue| 0))& (0+255)
  5417  0162  0086               	movwf	6
  5418  0163  0187               	clrf	7
  5419  0164  0020               	movlb	0	; select bank0
  5420  0165  085A               	movf	??_main,w
  5421  0166  0081               	movwf	1
  5422                           
  5423                           ;main.c: 250: delay(10);
  5424  0167  300A               	movlw	10
  5425  0168  00A6               	movwf	delay@delaytime
  5426  0169  3000               	movlw	0
  5427  016A  00A7               	movwf	delay@delaytime+1
  5428  016B  3186  26EC  3180   	fcall	_delay
  5429  016E  3001               	movlw	1
  5430  016F  0021               	movlb	1	; select bank1
  5431  0170  07EE               	addwf	main@fx_888^(0+128),f
  5432  0171  3000               	movlw	0
  5433  0172  3DEF               	addwfc	(main@fx_888+1)^(0+128),f
  5434  0173  086F               	movf	(main@fx_888+1)^(0+128),w
  5435  0174  3A80               	xorlw	128
  5436  0175  0020               	movlb	0	; select bank0
  5437  0176  00DA               	movwf	??_main
  5438  0177  3080               	movlw	128
  5439  0178  025A               	subwf	??_main,w
  5440  0179  1D03               	skipz
  5441  017A  297E               	goto	u3345
  5442  017B  3004               	movlw	4
  5443  017C  0021               	movlb	1	; select bank1
  5444  017D  026E               	subwf	main@fx_888^(0+128),w
  5445  017E                     u3345:	
  5446  017E  1C03               	skipc
  5447  017F  2902               	goto	l3695
  5448  0180                     l3711:	
  5449                           
  5450                           ;main.c: 251: }
  5451                           ;main.c: 254: delay(10);
  5452  0180  300A               	movlw	10
  5453  0181  0020               	movlb	0	; select bank0
  5454  0182  00A6               	movwf	delay@delaytime
  5455  0183  3000               	movlw	0
  5456  0184  00A7               	movwf	delay@delaytime+1
  5457  0185  3186  26EC  3180   	fcall	_delay
  5458                           
  5459                           ;main.c: 255: faderValue=ADCC_GetSingleConversion(POT0);
  5460  0188  3004               	movlw	4
  5461  0189  318E  26D8  3180   	fcall	_ADCC_GetSingleConversion
  5462  018C  0020               	movlb	0	; select bank0
  5463  018D  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5464  018E  0021               	movlb	1	; select bank1
  5465  018F  00ED               	movwf	(main@faderValue+1)^(0+128)
  5466  0190  0020               	movlb	0	; select bank0
  5467  0191  0820               	movf	?_ADCC_GetSingleConversion,w
  5468  0192  0021               	movlb	1	; select bank1
  5469  0193  00EC               	movwf	main@faderValue^(0+128)
  5470                           
  5471                           ;main.c: 256: faderValue=1023-faderValue;
  5472  0194  096C               	comf	main@faderValue^(0+128),w
  5473  0195  0020               	movlb	0	; select bank0
  5474  0196  00DA               	movwf	??_main
  5475  0197  0021               	movlb	1	; select bank1
  5476  0198  096D               	comf	(main@faderValue+1)^(0+128),w
  5477  0199  0020               	movlb	0	; select bank0
  5478  019A  00DB               	movwf	??_main+1
  5479  019B  0ADA               	incf	??_main,f
  5480  019C  1903               	skipnz
  5481  019D  0ADB               	incf	??_main+1,f
  5482  019E  085A               	movf	??_main,w
  5483  019F  3EFF               	addlw	255
  5484  01A0  0021               	movlb	1	; select bank1
  5485  01A1  00EC               	movwf	main@faderValue^(0+128)
  5486  01A2  3003               	movlw	3
  5487  01A3  0020               	movlb	0	; select bank0
  5488  01A4  3D5B               	addwfc	??_main+1,w
  5489  01A5  0021               	movlb	1	; select bank1
  5490  01A6  00ED               	movwf	(main@faderValue+1)^(0+128)
  5491                           
  5492                           ;main.c: 258: POT0Value=faderValue/102.3;
  5493  01A7  086D               	movf	(main@faderValue+1)^(0+128),w
  5494  01A8  0020               	movlb	0	; select bank0
  5495  01A9  00A9               	movwf	___awtoft@c+1
  5496  01AA  0021               	movlb	1	; select bank1
  5497  01AB  086C               	movf	main@faderValue^(0+128),w
  5498  01AC  0020               	movlb	0	; select bank0
  5499  01AD  00A8               	movwf	___awtoft@c
  5500  01AE  318F  2783  3180   	fcall	___awtoft
  5501  01B1  0020               	movlb	0	; select bank0
  5502  01B2  0828               	movf	?___awtoft,w
  5503  01B3  00B1               	movwf	___ftdiv@f1
  5504  01B4  0829               	movf	?___awtoft+1,w
  5505  01B5  00B2               	movwf	___ftdiv@f1+1
  5506  01B6  082A               	movf	?___awtoft+2,w
  5507  01B7  00B3               	movwf	___ftdiv@f1+2
  5508  01B8  309A               	movlw	154
  5509  01B9  00AE               	movwf	___ftdiv@f2
  5510  01BA  30CC               	movlw	204
  5511  01BB  00AF               	movwf	___ftdiv@f2+1
  5512  01BC  3042               	movlw	66
  5513  01BD  00B0               	movwf	___ftdiv@f2+2
  5514  01BE  3185  2501  3180   	fcall	___ftdiv
  5515  01C1  0020               	movlb	0	; select bank0
  5516  01C2  082E               	movf	?___ftdiv,w
  5517  01C3  00BE               	movwf	___fttol@f1
  5518  01C4  082F               	movf	?___ftdiv+1,w
  5519  01C5  00BF               	movwf	___fttol@f1+1
  5520  01C6  0830               	movf	?___ftdiv+2,w
  5521  01C7  00C0               	movwf	___fttol@f1+2
  5522  01C8  3185  25AA  3180   	fcall	___fttol
  5523  01CB  0020               	movlb	0	; select bank0
  5524  01CC  083E               	movf	?___fttol,w
  5525  01CD  00DA               	movwf	??_main
  5526  01CE  085A               	movf	??_main,w
  5527  01CF  0021               	movlb	1	; select bank1
  5528  01D0  00E5               	movwf	main@POT0Value^(0+128)
  5529                           
  5530                           ;main.c: 259: delay(10);
  5531  01D1  300A               	movlw	10
  5532  01D2  0020               	movlb	0	; select bank0
  5533  01D3  00A6               	movwf	delay@delaytime
  5534  01D4  3000               	movlw	0
  5535  01D5  00A7               	movwf	delay@delaytime+1
  5536  01D6  3186  26EC  3180   	fcall	_delay
  5537                           
  5538                           ;main.c: 260: faderValue=ADCC_GetSingleConversion(POT1);
  5539  01D9  3005               	movlw	5
  5540  01DA  318E  26D8  3180   	fcall	_ADCC_GetSingleConversion
  5541  01DD  0020               	movlb	0	; select bank0
  5542  01DE  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5543  01DF  0021               	movlb	1	; select bank1
  5544  01E0  00ED               	movwf	(main@faderValue+1)^(0+128)
  5545  01E1  0020               	movlb	0	; select bank0
  5546  01E2  0820               	movf	?_ADCC_GetSingleConversion,w
  5547  01E3  0021               	movlb	1	; select bank1
  5548  01E4  00EC               	movwf	main@faderValue^(0+128)
  5549                           
  5550                           ;main.c: 261: faderValue=1023-faderValue;
  5551  01E5  096C               	comf	main@faderValue^(0+128),w
  5552  01E6  0020               	movlb	0	; select bank0
  5553  01E7  00DA               	movwf	??_main
  5554  01E8  0021               	movlb	1	; select bank1
  5555  01E9  096D               	comf	(main@faderValue+1)^(0+128),w
  5556  01EA  0020               	movlb	0	; select bank0
  5557  01EB  00DB               	movwf	??_main+1
  5558  01EC  0ADA               	incf	??_main,f
  5559  01ED  1903               	skipnz
  5560  01EE  0ADB               	incf	??_main+1,f
  5561  01EF  085A               	movf	??_main,w
  5562  01F0  3EFF               	addlw	255
  5563  01F1  0021               	movlb	1	; select bank1
  5564  01F2  00EC               	movwf	main@faderValue^(0+128)
  5565  01F3  3003               	movlw	3
  5566  01F4  0020               	movlb	0	; select bank0
  5567  01F5  3D5B               	addwfc	??_main+1,w
  5568  01F6  0021               	movlb	1	; select bank1
  5569  01F7  00ED               	movwf	(main@faderValue+1)^(0+128)
  5570                           
  5571                           ;main.c: 262: POT1Value=faderValue/102.3;
  5572  01F8  086D               	movf	(main@faderValue+1)^(0+128),w
  5573  01F9  0020               	movlb	0	; select bank0
  5574  01FA  00A9               	movwf	___awtoft@c+1
  5575  01FB  0021               	movlb	1	; select bank1
  5576  01FC  086C               	movf	main@faderValue^(0+128),w
  5577  01FD  0020               	movlb	0	; select bank0
  5578  01FE  00A8               	movwf	___awtoft@c
  5579  01FF  318F  2783  3180   	fcall	___awtoft
  5580  0202  0020               	movlb	0	; select bank0
  5581  0203  0828               	movf	?___awtoft,w
  5582  0204  00B1               	movwf	___ftdiv@f1
  5583  0205  0829               	movf	?___awtoft+1,w
  5584  0206  00B2               	movwf	___ftdiv@f1+1
  5585  0207  082A               	movf	?___awtoft+2,w
  5586  0208  00B3               	movwf	___ftdiv@f1+2
  5587  0209  309A               	movlw	154
  5588  020A  00AE               	movwf	___ftdiv@f2
  5589  020B  30CC               	movlw	204
  5590  020C  00AF               	movwf	___ftdiv@f2+1
  5591  020D  3042               	movlw	66
  5592  020E  00B0               	movwf	___ftdiv@f2+2
  5593  020F  3185  2501  3180   	fcall	___ftdiv
  5594  0212  0020               	movlb	0	; select bank0
  5595  0213  082E               	movf	?___ftdiv,w
  5596  0214  00BE               	movwf	___fttol@f1
  5597  0215  082F               	movf	?___ftdiv+1,w
  5598  0216  00BF               	movwf	___fttol@f1+1
  5599  0217  0830               	movf	?___ftdiv+2,w
  5600  0218  00C0               	movwf	___fttol@f1+2
  5601  0219  3185  25AA  3180   	fcall	___fttol
  5602  021C  0020               	movlb	0	; select bank0
  5603  021D  083E               	movf	?___fttol,w
  5604  021E  00DA               	movwf	??_main
  5605  021F  085A               	movf	??_main,w
  5606  0220  0021               	movlb	1	; select bank1
  5607  0221  00E6               	movwf	main@POT1Value^(0+128)
  5608                           
  5609                           ;main.c: 263: }
  5610                           ;main.c: 326: if (prevFader8bitValue!=fader8bitValue) {
  5611  0222  0864               	movf	main@prevFader8bitValue^(0+128),w
  5612  0223  0669               	xorwf	main@fader8bitValue^(0+128),w
  5613  0224  1903               	skipnz
  5614  0225  2A2C               	goto	l3729
  5615                           
  5616                           ;main.c: 327: iChangeCount++;
  5617  0226  3001               	movlw	1
  5618  0227  0020               	movlb	0	; select bank0
  5619  0228  00DA               	movwf	??_main
  5620  0229  085A               	movf	??_main,w
  5621  022A  0021               	movlb	1	; select bank1
  5622  022B  07E3               	addwf	main@iChangeCount^(0+128),f
  5623  022C                     l3729:	
  5624                           
  5625                           ;main.c: 329: }
  5626                           ;main.c: 330: prevFader8bitValue=fader8bitValue;
  5627  022C  0869               	movf	main@fader8bitValue^(0+128),w
  5628  022D  0020               	movlb	0	; select bank0
  5629  022E  00DA               	movwf	??_main
  5630  022F  085A               	movf	??_main,w
  5631  0230  0021               	movlb	1	; select bank1
  5632  0231  00E4               	movwf	main@prevFader8bitValue^(0+128)
  5633                           
  5634                           ;main.c: 333: iCounter++;
  5635  0232  3001               	movlw	1
  5636  0233  07E1               	addwf	main@iCounter^(0+128),f
  5637  0234  3000               	movlw	0
  5638  0235  3DE2               	addwfc	(main@iCounter+1)^(0+128),f
  5639                           
  5640                           ;main.c: 334: if (fader8bitValue<252)
  5641  0236  30FC               	movlw	252
  5642  0237  0269               	subwf	main@fader8bitValue^(0+128),w
  5643  0238  1803               	skipnc
  5644  0239  2A4C               	goto	l3737
  5645                           
  5646                           ;main.c: 335: delay(1*(255-fader8bitValue));
  5647  023A  0869               	movf	main@fader8bitValue^(0+128),w
  5648  023B  0020               	movlb	0	; select bank0
  5649  023C  00DA               	movwf	??_main
  5650  023D  01DB               	clrf	??_main+1
  5651  023E  09DA               	comf	??_main,f
  5652  023F  09DB               	comf	??_main+1,f
  5653  0240  0ADA               	incf	??_main,f
  5654  0241  1903               	skipnz
  5655  0242  0ADB               	incf	??_main+1,f
  5656  0243  085A               	movf	??_main,w
  5657  0244  3EFF               	addlw	255
  5658  0245  00A6               	movwf	delay@delaytime
  5659  0246  3000               	movlw	0
  5660  0247  3D5B               	addwfc	??_main+1,w
  5661  0248  00A7               	movwf	delay@delaytime+1
  5662  0249  3186  26EC  3180   	fcall	_delay
  5663  024C                     l3737:	
  5664                           
  5665                           ;main.c: 341: LED7SegDisplayValueByDigit(POT1Value,POT0Value);
  5666  024C  0021               	movlb	1	; select bank1
  5667  024D  0866               	movf	main@POT1Value^(0+128),w
  5668  024E  0020               	movlb	0	; select bank0
  5669  024F  00DA               	movwf	??_main
  5670  0250  01DB               	clrf	??_main+1
  5671  0251  085A               	movf	??_main,w
  5672  0252  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  5673  0253  085B               	movf	??_main+1,w
  5674  0254  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  5675  0255  0021               	movlb	1	; select bank1
  5676  0256  0865               	movf	main@POT0Value^(0+128),w
  5677  0257  0020               	movlb	0	; select bank0
  5678  0258  00DC               	movwf	??_main+2
  5679  0259  01DD               	clrf	??_main+3
  5680  025A  085C               	movf	??_main+2,w
  5681  025B  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  5682  025C  085D               	movf	??_main+3,w
  5683  025D  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  5684  025E  318F  27C9  3180   	fcall	_LED7SegDisplayValueByDigit
  5685  0261  28D8               	goto	l3685
  5686  0262                     __end_of_main:	
  5687                           
  5688                           	psect	text1
  5689  07D0                     __ptext1:	
  5690 ;; *************** function _writeDAC528 *****************
  5691 ;; Defined at:
  5692 ;;		line 59 in file "VCAMIX_SPI_Master.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;  dacNumber       2   53[BANK0 ] int 
  5695 ;;  dacData         1   55[BANK0 ] unsigned char 
  5696 ;; Auto vars:     Size  Location     Type
  5697 ;;  wkDacNumber     1   57[BANK0 ] unsigned char 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5707 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;Total ram usage:        5 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:    6
  5714 ;; This function calls:
  5715 ;;		_putByte
  5716 ;; This function is called by:
  5717 ;;		_main
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           
  5722                           ;psect for function _writeDAC528
  5723  07D0                     _writeDAC528:	
  5724                           
  5725                           ;VCAMIX_SPI_Master.c: 60: uint8_t wkDacNumber=0;
  5726                           
  5727                           ;incstack = 0
  5728                           ; Regs used in _writeDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5729  07D0  0020               	movlb	0	; select bank0
  5730  07D1  01D9               	clrf	writeDAC528@wkDacNumber
  5731                           
  5732                           ;VCAMIX_SPI_Master.c: 61: wkDacNumber=cPowerOfTwo[dacNumber];
  5733  07D2  0856               	movf	writeDAC528@dacNumber+1,w
  5734  07D3  0085               	movwf	5
  5735  07D4  0855               	movf	writeDAC528@dacNumber,w
  5736  07D5  0084               	movwf	4
  5737  07D6  3584               	lslf	4,f
  5738  07D7  0D85               	rlf	5,f
  5739  07D8  3000               	movlw	low (_cPowerOfTwo| (0+32768))
  5740  07D9  0784               	addwf	4,f
  5741  07DA  3090               	movlw	high (_cPowerOfTwo| (0+32768))
  5742  07DB  3D85               	addwfc	5,f
  5743  07DC  0800               	movf	0,w	;code access
  5744  07DD  00D8               	movwf	??_writeDAC528
  5745  07DE  0858               	movf	??_writeDAC528,w
  5746  07DF  00D9               	movwf	writeDAC528@wkDacNumber
  5747                           
  5748                           ;VCAMIX_SPI_Master.c: 72: PORTA &= 0x7F ;
  5749  07E0  307F               	movlw	127
  5750  07E1  00D8               	movwf	??_writeDAC528
  5751  07E2  0858               	movf	??_writeDAC528,w
  5752  07E3  058C               	andwf	12,f	;volatile
  5753                           
  5754                           ;VCAMIX_SPI_Master.c: 74: putByte(wkDacNumber,0);
  5755  07E4  3000               	movlw	0
  5756  07E5  00CC               	movwf	putByte@clockPin
  5757  07E6  00CD               	movwf	putByte@clockPin+1
  5758  07E7  0859               	movf	writeDAC528@wkDacNumber,w
  5759  07E8  3183  2398  3187   	fcall	_putByte
  5760                           
  5761                           ;VCAMIX_SPI_Master.c: 76: putByte(dacData,0);
  5762  07EB  3000               	movlw	0
  5763  07EC  0020               	movlb	0	; select bank0
  5764  07ED  00CC               	movwf	putByte@clockPin
  5765  07EE  00CD               	movwf	putByte@clockPin+1
  5766  07EF  0857               	movf	writeDAC528@dacData,w
  5767  07F0  3183  2398         	fcall	_putByte
  5768                           
  5769                           ;VCAMIX_SPI_Master.c: 79: PORTA |= 0x80 ;
  5770  07F2  0020               	movlb	0	; select bank0
  5771  07F3  178C               	bsf	12,7	;volatile
  5772  07F4  0008               	return
  5773  07F5                     __end_of_writeDAC528:	
  5774                           
  5775                           	psect	text2
  5776  0EEC                     __ptext2:	
  5777 ;; *************** function _initDAC528 *****************
  5778 ;; Defined at:
  5779 ;;		line 44 in file "VCAMIX_SPI_Master.c"
  5780 ;; Parameters:    Size  Location     Type
  5781 ;;		None
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  1    wreg      void 
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5797 ;;Total ram usage:        1 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    6
  5800 ;; This function calls:
  5801 ;;		_putByte
  5802 ;; This function is called by:
  5803 ;;		_main
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _initDAC528
  5809  0EEC                     _initDAC528:	
  5810                           
  5811                           ;VCAMIX_SPI_Master.c: 49: PORTA &= 0x7F ;
  5812                           
  5813                           ;incstack = 0
  5814                           ; Regs used in _initDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5815  0EEC  307F               	movlw	127
  5816  0EED  0020               	movlb	0	; select bank0
  5817  0EEE  00D5               	movwf	??_initDAC528
  5818  0EEF  0855               	movf	??_initDAC528,w
  5819  0EF0  058C               	andwf	12,f	;volatile
  5820                           
  5821                           ;VCAMIX_SPI_Master.c: 51: putByte(0x00,0);
  5822  0EF1  3000               	movlw	0
  5823  0EF2  00CC               	movwf	putByte@clockPin
  5824  0EF3  00CD               	movwf	putByte@clockPin+1
  5825  0EF4  3000               	movlw	0
  5826  0EF5  3183  2398  318E   	fcall	_putByte
  5827                           
  5828                           ;VCAMIX_SPI_Master.c: 53: putByte(0xFF,0);
  5829  0EF8  3000               	movlw	0
  5830  0EF9  0020               	movlb	0	; select bank0
  5831  0EFA  00CC               	movwf	putByte@clockPin
  5832  0EFB  00CD               	movwf	putByte@clockPin+1
  5833  0EFC  30FF               	movlw	255
  5834  0EFD  3183  2398         	fcall	_putByte
  5835                           
  5836                           ;VCAMIX_SPI_Master.c: 56: PORTA |= 0x80 ;
  5837  0EFF  0020               	movlb	0	; select bank0
  5838  0F00  178C               	bsf	12,7	;volatile
  5839  0F01  0008               	return
  5840  0F02                     __end_of_initDAC528:	
  5841                           
  5842                           	psect	text3
  5843  0398                     __ptext3:	
  5844 ;; *************** function _putByte *****************
  5845 ;; Defined at:
  5846 ;;		line 14 in file "VCAMIX_SPI_Master.c"
  5847 ;; Parameters:    Size  Location     Type
  5848 ;;  data            1    wreg     unsigned char 
  5849 ;;  clockPin        2   44[BANK0 ] int 
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;  data            1   50[BANK0 ] unsigned char 
  5852 ;;  i               1   52[BANK0 ] unsigned char 
  5853 ;;  mask            1   51[BANK0 ] unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : 0/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:        9 bytes
  5868 ;; Hardware stack levels used:    1
  5869 ;; Hardware stack levels required when called:    5
  5870 ;; This function calls:
  5871 ;;		___awtoft
  5872 ;;		___ftmul
  5873 ;;		___fttol
  5874 ;; This function is called by:
  5875 ;;		_initDAC528
  5876 ;;		_writeDAC528
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           
  5881                           ;psect for function _putByte
  5882  0398                     _putByte:	
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _putByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5886                           ;putByte@data stored from wreg
  5887  0398  0020               	movlb	0	; select bank0
  5888  0399  00D2               	movwf	putByte@data
  5889                           
  5890                           ;VCAMIX_SPI_Master.c: 15: uint8_t i = 8;
  5891  039A  3008               	movlw	8
  5892  039B  00CE               	movwf	??_putByte
  5893  039C  084E               	movf	??_putByte,w
  5894  039D  00D4               	movwf	putByte@i
  5895  039E                     l674:	
  5896                           ;VCAMIX_SPI_Master.c: 16: uint8_t mask;
  5897                           ;VCAMIX_SPI_Master.c: 17: while(i > 0) {
  5898                           
  5899  039E  0854               	movf	putByte@i,w
  5900  039F  1903               	btfsc	3,2
  5901  03A0  0008               	return
  5902                           
  5903                           ;VCAMIX_SPI_Master.c: 18: mask = 0x01 << (i - 1);
  5904  03A1  3001               	movlw	1
  5905  03A2  00CE               	movwf	??_putByte
  5906  03A3  0854               	movf	putByte@i,w
  5907  03A4  3EFF               	addlw	-1
  5908  03A5  0A89               	incf	9,f
  5909  03A6  2BA8               	goto	u2044
  5910  03A7                     u2045:	
  5911  03A7  35CE               	lslf	??_putByte,f
  5912  03A8                     u2044:	
  5913  03A8  0B89               	decfsz	9,f
  5914  03A9  2BA7               	goto	u2045
  5915  03AA  084E               	movf	??_putByte,w
  5916  03AB  00CF               	movwf	??_putByte+1
  5917  03AC  084F               	movf	??_putByte+1,w
  5918  03AD  00D3               	movwf	putByte@mask
  5919                           
  5920                           ;VCAMIX_SPI_Master.c: 20: PORTB &= 0xBF ;
  5921  03AE  30BF               	movlw	191
  5922  03AF  00CE               	movwf	??_putByte
  5923  03B0  084E               	movf	??_putByte,w
  5924  03B1  058D               	andwf	13,f	;volatile
  5925                           
  5926                           ;VCAMIX_SPI_Master.c: 22: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  5927  03B2  3010               	movlw	low (_clockMicroTime| (0+32768))
  5928  03B3  0084               	movwf	4
  5929  03B4  3090               	movlw	high (_clockMicroTime| (0+32768))
  5930  03B5  0085               	movwf	5
  5931  03B6  3F00               	moviw [0]fsr0
  5932  03B7  00A8               	movwf	___awtoft@c
  5933  03B8  3F01               	moviw [1]fsr0
  5934  03B9  00A9               	movwf	___awtoft@c+1
  5935  03BA  318F  2783  3183   	fcall	___awtoft
  5936  03BD  0020               	movlb	0	; select bank0
  5937  03BE  0828               	movf	?___awtoft,w
  5938  03BF  00B1               	movwf	___ftmul@f2
  5939  03C0  0829               	movf	?___awtoft+1,w
  5940  03C1  00B2               	movwf	___ftmul@f2+1
  5941  03C2  082A               	movf	?___awtoft+2,w
  5942  03C3  00B3               	movwf	___ftmul@f2+2
  5943  03C4  3000               	movlw	0
  5944  03C5  00AE               	movwf	___ftmul@f1
  5945  03C6  3000               	movlw	0
  5946  03C7  00AF               	movwf	___ftmul@f1+1
  5947  03C8  3041               	movlw	65
  5948  03C9  00B0               	movwf	___ftmul@f1+2
  5949  03CA  3184  244D  3183   	fcall	___ftmul
  5950  03CD  0020               	movlb	0	; select bank0
  5951  03CE  082E               	movf	?___ftmul,w
  5952  03CF  00BE               	movwf	___fttol@f1
  5953  03D0  082F               	movf	?___ftmul+1,w
  5954  03D1  00BF               	movwf	___fttol@f1+1
  5955  03D2  0830               	movf	?___ftmul+2,w
  5956  03D3  00C0               	movwf	___fttol@f1+2
  5957  03D4  3185  25AA  3183   	fcall	___fttol
  5958  03D7  0020               	movlb	0	; select bank0
  5959  03D8  083E               	movf	?___fttol,w
  5960  03D9  00CE               	movwf	??_putByte
  5961  03DA  083F               	movf	?___fttol+1,w
  5962  03DB  00CF               	movwf	??_putByte+1
  5963  03DC  0840               	movf	?___fttol+2,w
  5964  03DD  00D0               	movwf	??_putByte+2
  5965  03DE  0841               	movf	?___fttol+3,w
  5966  03DF  00D1               	movwf	??_putByte+3
  5967                           
  5968                           ;VCAMIX_SPI_Master.c: 23: if (data & mask){
  5969  03E0  0020               	movlb	0	; select bank0
  5970  03E1  0852               	movf	putByte@data,w
  5971  03E2  0553               	andwf	putByte@mask,w
  5972  03E3  1903               	btfsc	3,2
  5973  03E4  2BE7               	goto	l2627
  5974                           
  5975                           ;VCAMIX_SPI_Master.c: 25: PORTB |= 0x80 ;
  5976  03E5  178D               	bsf	13,7	;volatile
  5977                           
  5978                           ;VCAMIX_SPI_Master.c: 26: }else{
  5979  03E6  2BEB               	goto	l2629
  5980  03E7                     l2627:	
  5981                           
  5982                           ;VCAMIX_SPI_Master.c: 28: PORTB &= 0x7F ;
  5983  03E7  307F               	movlw	127
  5984  03E8  00CE               	movwf	??_putByte
  5985  03E9  084E               	movf	??_putByte,w
  5986  03EA  058D               	andwf	13,f	;volatile
  5987  03EB                     l2629:	
  5988                           
  5989                           ;VCAMIX_SPI_Master.c: 29: }
  5990                           ;VCAMIX_SPI_Master.c: 31: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  5991  03EB  3010               	movlw	low (_clockMicroTime| (0+32768))
  5992  03EC  0084               	movwf	4
  5993  03ED  3090               	movlw	high (_clockMicroTime| (0+32768))
  5994  03EE  0085               	movwf	5
  5995  03EF  3F00               	moviw [0]fsr0
  5996  03F0  00A8               	movwf	___awtoft@c
  5997  03F1  3F01               	moviw [1]fsr0
  5998  03F2  00A9               	movwf	___awtoft@c+1
  5999  03F3  318F  2783  3183   	fcall	___awtoft
  6000  03F6  0020               	movlb	0	; select bank0
  6001  03F7  0828               	movf	?___awtoft,w
  6002  03F8  00B1               	movwf	___ftmul@f2
  6003  03F9  0829               	movf	?___awtoft+1,w
  6004  03FA  00B2               	movwf	___ftmul@f2+1
  6005  03FB  082A               	movf	?___awtoft+2,w
  6006  03FC  00B3               	movwf	___ftmul@f2+2
  6007  03FD  3000               	movlw	0
  6008  03FE  00AE               	movwf	___ftmul@f1
  6009  03FF  3000               	movlw	0
  6010  0400  00AF               	movwf	___ftmul@f1+1
  6011  0401  3041               	movlw	65
  6012  0402  00B0               	movwf	___ftmul@f1+2
  6013  0403  3184  244D  3183   	fcall	___ftmul
  6014  0406  0020               	movlb	0	; select bank0
  6015  0407  082E               	movf	?___ftmul,w
  6016  0408  00BE               	movwf	___fttol@f1
  6017  0409  082F               	movf	?___ftmul+1,w
  6018  040A  00BF               	movwf	___fttol@f1+1
  6019  040B  0830               	movf	?___ftmul+2,w
  6020  040C  00C0               	movwf	___fttol@f1+2
  6021  040D  3185  25AA  3183   	fcall	___fttol
  6022  0410  0020               	movlb	0	; select bank0
  6023  0411  083E               	movf	?___fttol,w
  6024  0412  00CE               	movwf	??_putByte
  6025  0413  083F               	movf	?___fttol+1,w
  6026  0414  00CF               	movwf	??_putByte+1
  6027  0415  0840               	movf	?___fttol+2,w
  6028  0416  00D0               	movwf	??_putByte+2
  6029  0417  0841               	movf	?___fttol+3,w
  6030  0418  00D1               	movwf	??_putByte+3
  6031                           
  6032                           ;VCAMIX_SPI_Master.c: 33: PORTB |= 0x40 ;
  6033  0419  0020               	movlb	0	; select bank0
  6034  041A  170D               	bsf	13,6	;volatile
  6035                           
  6036                           ;VCAMIX_SPI_Master.c: 35: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  6037  041B  3010               	movlw	low (_clockMicroTime| (0+32768))
  6038  041C  0084               	movwf	4
  6039  041D  3090               	movlw	high (_clockMicroTime| (0+32768))
  6040  041E  0085               	movwf	5
  6041  041F  3F00               	moviw [0]fsr0
  6042  0420  00A8               	movwf	___awtoft@c
  6043  0421  3F01               	moviw [1]fsr0
  6044  0422  00A9               	movwf	___awtoft@c+1
  6045  0423  318F  2783  3183   	fcall	___awtoft
  6046  0426  0020               	movlb	0	; select bank0
  6047  0427  0828               	movf	?___awtoft,w
  6048  0428  00B1               	movwf	___ftmul@f2
  6049  0429  0829               	movf	?___awtoft+1,w
  6050  042A  00B2               	movwf	___ftmul@f2+1
  6051  042B  082A               	movf	?___awtoft+2,w
  6052  042C  00B3               	movwf	___ftmul@f2+2
  6053  042D  3000               	movlw	0
  6054  042E  00AE               	movwf	___ftmul@f1
  6055  042F  3000               	movlw	0
  6056  0430  00AF               	movwf	___ftmul@f1+1
  6057  0431  3041               	movlw	65
  6058  0432  00B0               	movwf	___ftmul@f1+2
  6059  0433  3184  244D  3183   	fcall	___ftmul
  6060  0436  0020               	movlb	0	; select bank0
  6061  0437  082E               	movf	?___ftmul,w
  6062  0438  00BE               	movwf	___fttol@f1
  6063  0439  082F               	movf	?___ftmul+1,w
  6064  043A  00BF               	movwf	___fttol@f1+1
  6065  043B  0830               	movf	?___ftmul+2,w
  6066  043C  00C0               	movwf	___fttol@f1+2
  6067  043D  3185  25AA  3183   	fcall	___fttol
  6068  0440  0020               	movlb	0	; select bank0
  6069  0441  083E               	movf	?___fttol,w
  6070  0442  00CE               	movwf	??_putByte
  6071  0443  083F               	movf	?___fttol+1,w
  6072  0444  00CF               	movwf	??_putByte+1
  6073  0445  0840               	movf	?___fttol+2,w
  6074  0446  00D0               	movwf	??_putByte+2
  6075  0447  0841               	movf	?___fttol+3,w
  6076  0448  00D1               	movwf	??_putByte+3
  6077                           
  6078                           ;VCAMIX_SPI_Master.c: 36: --i;
  6079  0449  3001               	movlw	1
  6080  044A  0020               	movlb	0	; select bank0
  6081  044B  02D4               	subwf	putByte@i,f
  6082  044C  2B9E               	goto	l674
  6083  044D                     __end_of_putByte:	
  6084                           
  6085                           	psect	text4
  6086  05AA                     __ptext4:	
  6087 ;; *************** function ___fttol *****************
  6088 ;; Defined at:
  6089 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  6090 ;; Parameters:    Size  Location     Type
  6091 ;;  f1              3   30[BANK0 ] float 
  6092 ;; Auto vars:     Size  Location     Type
  6093 ;;  lval            4   39[BANK0 ] unsigned long 
  6094 ;;  exp1            1   43[BANK0 ] unsigned char 
  6095 ;;  sign1           1   38[BANK0 ] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  4   30[BANK0 ] long 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0
  6100 ;; Tracked objects:
  6101 ;;		On entry : 0/0
  6102 ;;		On exit  : 0/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6106 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6108 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;Total ram usage:       14 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    3
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_main
  6116 ;;		_putByte
  6117 ;;		_LED7SegDisplayValue
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           
  6122                           ;psect for function ___fttol
  6123  05AA                     ___fttol:	
  6124                           
  6125                           ;incstack = 0
  6126                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6127  05AA  0020               	movlb	0	; select bank0
  6128  05AB  083E               	movf	___fttol@f1,w
  6129  05AC  00C2               	movwf	??___fttol
  6130  05AD  083F               	movf	___fttol@f1+1,w
  6131  05AE  00C3               	movwf	??___fttol+1
  6132  05AF  0840               	movf	___fttol@f1+2,w
  6133  05B0  00C4               	movwf	??___fttol+2
  6134  05B1  1003               	clrc
  6135  05B2  0D43               	rlf	??___fttol+1,w
  6136  05B3  0D44               	rlf	??___fttol+2,w
  6137  05B4  00C5               	movwf	??___fttol+3
  6138  05B5  0845               	movf	??___fttol+3,w
  6139  05B6  00CB               	movwf	___fttol@exp1
  6140  05B7  084B               	movf	___fttol@exp1,w
  6141  05B8  1D03               	btfss	3,2
  6142  05B9  2DC3               	goto	l2433
  6143  05BA  3000               	movlw	0
  6144  05BB  00C1               	movwf	?___fttol+3
  6145  05BC  3000               	movlw	0
  6146  05BD  00C0               	movwf	?___fttol+2
  6147  05BE  3000               	movlw	0
  6148  05BF  00BF               	movwf	?___fttol+1
  6149  05C0  3000               	movlw	0
  6150  05C1  00BE               	movwf	?___fttol
  6151  05C2  0008               	return
  6152  05C3                     l2433:	
  6153  05C3  083E               	movf	___fttol@f1,w
  6154  05C4  00C2               	movwf	??___fttol
  6155  05C5  083F               	movf	___fttol@f1+1,w
  6156  05C6  00C3               	movwf	??___fttol+1
  6157  05C7  0840               	movf	___fttol@f1+2,w
  6158  05C8  00C4               	movwf	??___fttol+2
  6159  05C9  3017               	movlw	23
  6160  05CA                     u1835:	
  6161  05CA  36C4               	lsrf	??___fttol+2,f
  6162  05CB  0CC3               	rrf	??___fttol+1,f
  6163  05CC  0CC2               	rrf	??___fttol,f
  6164  05CD  0B89               	decfsz	9,f
  6165  05CE  2DCA               	goto	u1835
  6166  05CF  0842               	movf	??___fttol,w
  6167  05D0  00C5               	movwf	??___fttol+3
  6168  05D1  0845               	movf	??___fttol+3,w
  6169  05D2  00C6               	movwf	___fttol@sign1
  6170  05D3  17BF               	bsf	___fttol@f1+1,7
  6171  05D4  30FF               	movlw	255
  6172  05D5  05BE               	andwf	___fttol@f1,f
  6173  05D6  30FF               	movlw	255
  6174  05D7  05BF               	andwf	___fttol@f1+1,f
  6175  05D8  3000               	movlw	0
  6176  05D9  05C0               	andwf	___fttol@f1+2,f
  6177  05DA  083E               	movf	___fttol@f1,w
  6178  05DB  00C7               	movwf	___fttol@lval
  6179  05DC  083F               	movf	___fttol@f1+1,w
  6180  05DD  00C8               	movwf	___fttol@lval+1
  6181  05DE  0840               	movf	___fttol@f1+2,w
  6182  05DF  00C9               	movwf	___fttol@lval+2
  6183  05E0  01CA               	clrf	___fttol@lval+3
  6184  05E1  308E               	movlw	142
  6185  05E2  02CB               	subwf	___fttol@exp1,f
  6186  05E3  1FCB               	btfss	___fttol@exp1,7
  6187  05E4  2E01               	goto	l2453
  6188  05E5  084B               	movf	___fttol@exp1,w
  6189  05E6  3A80               	xorlw	128
  6190  05E7  3E8F               	addlw	143
  6191  05E8  1803               	skipnc
  6192  05E9  2DF3               	goto	l2451
  6193  05EA  3000               	movlw	0
  6194  05EB  00C1               	movwf	?___fttol+3
  6195  05EC  3000               	movlw	0
  6196  05ED  00C0               	movwf	?___fttol+2
  6197  05EE  3000               	movlw	0
  6198  05EF  00BF               	movwf	?___fttol+1
  6199  05F0  3000               	movlw	0
  6200  05F1  00BE               	movwf	?___fttol
  6201  05F2  0008               	return
  6202  05F3                     l2451:	
  6203  05F3  3001               	movlw	1
  6204  05F4                     u1865:	
  6205  05F4  36CA               	lsrf	___fttol@lval+3,f
  6206  05F5  0CC9               	rrf	___fttol@lval+2,f
  6207  05F6  0CC8               	rrf	___fttol@lval+1,f
  6208  05F7  0CC7               	rrf	___fttol@lval,f
  6209  05F8  0B89               	decfsz	9,f
  6210  05F9  2DF4               	goto	u1865
  6211  05FA  3001               	movlw	1
  6212  05FB  00C2               	movwf	??___fttol
  6213  05FC  0842               	movf	??___fttol,w
  6214  05FD  07CB               	addwf	___fttol@exp1,f
  6215  05FE  1903               	btfsc	3,2
  6216  05FF  2E1A               	goto	l2461
  6217  0600  2DF3               	goto	l2451
  6218  0601                     l2453:	
  6219  0601  3018               	movlw	24
  6220  0602  024B               	subwf	___fttol@exp1,w
  6221  0603  1C03               	skipc
  6222  0604  2E17               	goto	l1019
  6223  0605  3000               	movlw	0
  6224  0606  00C1               	movwf	?___fttol+3
  6225  0607  3000               	movlw	0
  6226  0608  00C0               	movwf	?___fttol+2
  6227  0609  3000               	movlw	0
  6228  060A  00BF               	movwf	?___fttol+1
  6229  060B  3000               	movlw	0
  6230  060C  00BE               	movwf	?___fttol
  6231  060D  0008               	return
  6232  060E                     l2459:	
  6233  060E  3001               	movlw	1
  6234  060F                     u1895:	
  6235  060F  35C7               	lslf	___fttol@lval,f
  6236  0610  0DC8               	rlf	___fttol@lval+1,f
  6237  0611  0DC9               	rlf	___fttol@lval+2,f
  6238  0612  0DCA               	rlf	___fttol@lval+3,f
  6239  0613  0B89               	decfsz	9,f
  6240  0614  2E0F               	goto	u1895
  6241  0615  3001               	movlw	1
  6242  0616  02CB               	subwf	___fttol@exp1,f
  6243  0617                     l1019:	
  6244  0617  084B               	movf	___fttol@exp1,w
  6245  0618  1D03               	btfss	3,2
  6246  0619  2E0E               	goto	l2459
  6247  061A                     l2461:	
  6248  061A  0846               	movf	___fttol@sign1,w
  6249  061B  1903               	btfsc	3,2
  6250  061C  2E28               	goto	l2465
  6251  061D  09C7               	comf	___fttol@lval,f
  6252  061E  09C8               	comf	___fttol@lval+1,f
  6253  061F  09C9               	comf	___fttol@lval+2,f
  6254  0620  09CA               	comf	___fttol@lval+3,f
  6255  0621  0AC7               	incf	___fttol@lval,f
  6256  0622  1903               	skipnz
  6257  0623  0AC8               	incf	___fttol@lval+1,f
  6258  0624  1903               	skipnz
  6259  0625  0AC9               	incf	___fttol@lval+2,f
  6260  0626  1903               	skipnz
  6261  0627  0ACA               	incf	___fttol@lval+3,f
  6262  0628                     l2465:	
  6263  0628  084A               	movf	___fttol@lval+3,w
  6264  0629  00C1               	movwf	?___fttol+3
  6265  062A  0849               	movf	___fttol@lval+2,w
  6266  062B  00C0               	movwf	?___fttol+2
  6267  062C  0848               	movf	___fttol@lval+1,w
  6268  062D  00BF               	movwf	?___fttol+1
  6269  062E  0847               	movf	___fttol@lval,w
  6270  062F  00BE               	movwf	?___fttol
  6271  0630  0008               	return
  6272  0631                     __end_of___fttol:	
  6273                           
  6274                           	psect	text5
  6275  044D                     __ptext5:	
  6276 ;; *************** function ___ftmul *****************
  6277 ;; Defined at:
  6278 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  f1              3   14[BANK0 ] float 
  6281 ;;  f2              3   17[BANK0 ] float 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  6284 ;;  sign            1   29[BANK0 ] unsigned char 
  6285 ;;  cntr            1   28[BANK0 ] unsigned char 
  6286 ;;  exp             1   24[BANK0 ] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  3   14[BANK0 ] float 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0, pclath, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6296 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6300 ;;Total ram usage:       16 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    4
  6303 ;; This function calls:
  6304 ;;		___ftpack
  6305 ;; This function is called by:
  6306 ;;		_putByte
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           
  6311                           ;psect for function ___ftmul
  6312  044D                     ___ftmul:	
  6313                           
  6314                           ;incstack = 0
  6315                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6316  044D  0020               	movlb	0	; select bank0
  6317  044E  082E               	movf	___ftmul@f1,w
  6318  044F  00B4               	movwf	??___ftmul
  6319  0450  082F               	movf	___ftmul@f1+1,w
  6320  0451  00B5               	movwf	??___ftmul+1
  6321  0452  0830               	movf	___ftmul@f1+2,w
  6322  0453  00B6               	movwf	??___ftmul+2
  6323  0454  1003               	clrc
  6324  0455  0D35               	rlf	??___ftmul+1,w
  6325  0456  0D36               	rlf	??___ftmul+2,w
  6326  0457  00B7               	movwf	??___ftmul+3
  6327  0458  0837               	movf	??___ftmul+3,w
  6328  0459  00B8               	movwf	___ftmul@exp
  6329  045A  0838               	movf	___ftmul@exp,w
  6330  045B  1D03               	btfss	3,2
  6331  045C  2C64               	goto	l2383
  6332  045D  3000               	movlw	0
  6333  045E  00AE               	movwf	?___ftmul
  6334  045F  3000               	movlw	0
  6335  0460  00AF               	movwf	?___ftmul+1
  6336  0461  3000               	movlw	0
  6337  0462  00B0               	movwf	?___ftmul+2
  6338  0463  0008               	return
  6339  0464                     l2383:	
  6340  0464  0831               	movf	___ftmul@f2,w
  6341  0465  00B4               	movwf	??___ftmul
  6342  0466  0832               	movf	___ftmul@f2+1,w
  6343  0467  00B5               	movwf	??___ftmul+1
  6344  0468  0833               	movf	___ftmul@f2+2,w
  6345  0469  00B6               	movwf	??___ftmul+2
  6346  046A  1003               	clrc
  6347  046B  0D35               	rlf	??___ftmul+1,w
  6348  046C  0D36               	rlf	??___ftmul+2,w
  6349  046D  00B7               	movwf	??___ftmul+3
  6350  046E  0837               	movf	??___ftmul+3,w
  6351  046F  00BD               	movwf	___ftmul@sign
  6352  0470  083D               	movf	___ftmul@sign,w
  6353  0471  1D03               	btfss	3,2
  6354  0472  2C7A               	goto	l2389
  6355  0473  3000               	movlw	0
  6356  0474  00AE               	movwf	?___ftmul
  6357  0475  3000               	movlw	0
  6358  0476  00AF               	movwf	?___ftmul+1
  6359  0477  3000               	movlw	0
  6360  0478  00B0               	movwf	?___ftmul+2
  6361  0479  0008               	return
  6362  047A                     l2389:	
  6363  047A  083D               	movf	___ftmul@sign,w
  6364  047B  3E7B               	addlw	123
  6365  047C  00B4               	movwf	??___ftmul
  6366  047D  0834               	movf	??___ftmul,w
  6367  047E  07B8               	addwf	___ftmul@exp,f
  6368  047F  082E               	movf	___ftmul@f1,w
  6369  0480  00B4               	movwf	??___ftmul
  6370  0481  082F               	movf	___ftmul@f1+1,w
  6371  0482  00B5               	movwf	??___ftmul+1
  6372  0483  0830               	movf	___ftmul@f1+2,w
  6373  0484  00B6               	movwf	??___ftmul+2
  6374  0485  3010               	movlw	16
  6375  0486                     u1725:	
  6376  0486  36B6               	lsrf	??___ftmul+2,f
  6377  0487  0CB5               	rrf	??___ftmul+1,f
  6378  0488  0CB4               	rrf	??___ftmul,f
  6379  0489  0B89               	decfsz	9,f
  6380  048A  2C86               	goto	u1725
  6381  048B  0834               	movf	??___ftmul,w
  6382  048C  00B7               	movwf	??___ftmul+3
  6383  048D  0837               	movf	??___ftmul+3,w
  6384  048E  00BD               	movwf	___ftmul@sign
  6385  048F  0831               	movf	___ftmul@f2,w
  6386  0490  00B4               	movwf	??___ftmul
  6387  0491  0832               	movf	___ftmul@f2+1,w
  6388  0492  00B5               	movwf	??___ftmul+1
  6389  0493  0833               	movf	___ftmul@f2+2,w
  6390  0494  00B6               	movwf	??___ftmul+2
  6391  0495  3010               	movlw	16
  6392  0496                     u1735:	
  6393  0496  36B6               	lsrf	??___ftmul+2,f
  6394  0497  0CB5               	rrf	??___ftmul+1,f
  6395  0498  0CB4               	rrf	??___ftmul,f
  6396  0499  0B89               	decfsz	9,f
  6397  049A  2C96               	goto	u1735
  6398  049B  0834               	movf	??___ftmul,w
  6399  049C  00B7               	movwf	??___ftmul+3
  6400  049D  0837               	movf	??___ftmul+3,w
  6401  049E  06BD               	xorwf	___ftmul@sign,f
  6402  049F  3080               	movlw	128
  6403  04A0  00B4               	movwf	??___ftmul
  6404  04A1  0834               	movf	??___ftmul,w
  6405  04A2  05BD               	andwf	___ftmul@sign,f
  6406  04A3  17AF               	bsf	___ftmul@f1+1,7
  6407  04A4  17B2               	bsf	___ftmul@f2+1,7
  6408  04A5  30FF               	movlw	255
  6409  04A6  05B1               	andwf	___ftmul@f2,f
  6410  04A7  30FF               	movlw	255
  6411  04A8  05B2               	andwf	___ftmul@f2+1,f
  6412  04A9  3000               	movlw	0
  6413  04AA  05B3               	andwf	___ftmul@f2+2,f
  6414  04AB  3000               	movlw	0
  6415  04AC  00B9               	movwf	___ftmul@f3_as_product
  6416  04AD  3000               	movlw	0
  6417  04AE  00BA               	movwf	___ftmul@f3_as_product+1
  6418  04AF  3000               	movlw	0
  6419  04B0  00BB               	movwf	___ftmul@f3_as_product+2
  6420  04B1  3007               	movlw	7
  6421  04B2  00B4               	movwf	??___ftmul
  6422  04B3  0834               	movf	??___ftmul,w
  6423  04B4  00BC               	movwf	___ftmul@cntr
  6424  04B5                     l2401:	
  6425  04B5  1C2E               	btfss	___ftmul@f1,0
  6426  04B6  2CBD               	goto	l2405
  6427  04B7  0831               	movf	___ftmul@f2,w
  6428  04B8  07B9               	addwf	___ftmul@f3_as_product,f
  6429  04B9  0832               	movf	___ftmul@f2+1,w
  6430  04BA  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  6431  04BB  0833               	movf	___ftmul@f2+2,w
  6432  04BC  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  6433  04BD                     l2405:	
  6434  04BD  3001               	movlw	1
  6435  04BE                     u1755:	
  6436  04BE  36B0               	lsrf	___ftmul@f1+2,f
  6437  04BF  0CAF               	rrf	___ftmul@f1+1,f
  6438  04C0  0CAE               	rrf	___ftmul@f1,f
  6439  04C1  0B89               	decfsz	9,f
  6440  04C2  2CBE               	goto	u1755
  6441  04C3  3001               	movlw	1
  6442  04C4                     u1765:	
  6443  04C4  35B1               	lslf	___ftmul@f2,f
  6444  04C5  0DB2               	rlf	___ftmul@f2+1,f
  6445  04C6  0DB3               	rlf	___ftmul@f2+2,f
  6446  04C7  0B89               	decfsz	9,f
  6447  04C8  2CC4               	goto	u1765
  6448  04C9  3001               	movlw	1
  6449  04CA  02BC               	subwf	___ftmul@cntr,f
  6450  04CB  1D03               	btfss	3,2
  6451  04CC  2CB5               	goto	l2401
  6452  04CD  3009               	movlw	9
  6453  04CE  00B4               	movwf	??___ftmul
  6454  04CF  0834               	movf	??___ftmul,w
  6455  04D0  00BC               	movwf	___ftmul@cntr
  6456  04D1                     l2413:	
  6457  04D1  1C2E               	btfss	___ftmul@f1,0
  6458  04D2  2CD9               	goto	l2417
  6459  04D3  0831               	movf	___ftmul@f2,w
  6460  04D4  07B9               	addwf	___ftmul@f3_as_product,f
  6461  04D5  0832               	movf	___ftmul@f2+1,w
  6462  04D6  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  6463  04D7  0833               	movf	___ftmul@f2+2,w
  6464  04D8  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  6465  04D9                     l2417:	
  6466  04D9  3001               	movlw	1
  6467  04DA                     u1795:	
  6468  04DA  36B0               	lsrf	___ftmul@f1+2,f
  6469  04DB  0CAF               	rrf	___ftmul@f1+1,f
  6470  04DC  0CAE               	rrf	___ftmul@f1,f
  6471  04DD  0B89               	decfsz	9,f
  6472  04DE  2CDA               	goto	u1795
  6473  04DF  3001               	movlw	1
  6474  04E0                     u1805:	
  6475  04E0  36BB               	lsrf	___ftmul@f3_as_product+2,f
  6476  04E1  0CBA               	rrf	___ftmul@f3_as_product+1,f
  6477  04E2  0CB9               	rrf	___ftmul@f3_as_product,f
  6478  04E3  0B89               	decfsz	9,f
  6479  04E4  2CE0               	goto	u1805
  6480  04E5  3001               	movlw	1
  6481  04E6  02BC               	subwf	___ftmul@cntr,f
  6482  04E7  1D03               	btfss	3,2
  6483  04E8  2CD1               	goto	l2413
  6484  04E9  0839               	movf	___ftmul@f3_as_product,w
  6485  04EA  00A0               	movwf	___ftpack@arg
  6486  04EB  083A               	movf	___ftmul@f3_as_product+1,w
  6487  04EC  00A1               	movwf	___ftpack@arg+1
  6488  04ED  083B               	movf	___ftmul@f3_as_product+2,w
  6489  04EE  00A2               	movwf	___ftpack@arg+2
  6490  04EF  0838               	movf	___ftmul@exp,w
  6491  04F0  00B4               	movwf	??___ftmul
  6492  04F1  0834               	movf	??___ftmul,w
  6493  04F2  00A3               	movwf	___ftpack@exp
  6494  04F3  083D               	movf	___ftmul@sign,w
  6495  04F4  00B5               	movwf	??___ftmul+1
  6496  04F5  0835               	movf	??___ftmul+1,w
  6497  04F6  00A4               	movwf	___ftpack@sign
  6498  04F7  3186  2631         	fcall	___ftpack
  6499  04F9  0020               	movlb	0	; select bank0
  6500  04FA  0820               	movf	?___ftpack,w
  6501  04FB  00AE               	movwf	?___ftmul
  6502  04FC  0821               	movf	?___ftpack+1,w
  6503  04FD  00AF               	movwf	?___ftmul+1
  6504  04FE  0822               	movf	?___ftpack+2,w
  6505  04FF  00B0               	movwf	?___ftmul+2
  6506  0500  0008               	return
  6507  0501                     __end_of___ftmul:	
  6508                           
  6509                           	psect	text6
  6510  0F83                     __ptext6:	
  6511 ;; *************** function ___awtoft *****************
  6512 ;; Defined at:
  6513 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;  c               2    8[BANK0 ] int 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  sign            1   13[BANK0 ] unsigned char 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  3    8[BANK0 ] float 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, pclath, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6527 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;Total ram usage:        6 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    4
  6534 ;; This function calls:
  6535 ;;		___ftpack
  6536 ;; This function is called by:
  6537 ;;		_main
  6538 ;;		_putByte
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           
  6543                           ;psect for function ___awtoft
  6544  0F83                     ___awtoft:	
  6545                           
  6546                           ;incstack = 0
  6547                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6548  0F83  0020               	movlb	0	; select bank0
  6549  0F84  01AD               	clrf	___awtoft@sign
  6550  0F85  1FA9               	btfss	___awtoft@c+1,7
  6551  0F86  2F8E               	goto	l2373
  6552  0F87  09A8               	comf	___awtoft@c,f
  6553  0F88  09A9               	comf	___awtoft@c+1,f
  6554  0F89  0AA8               	incf	___awtoft@c,f
  6555  0F8A  1903               	skipnz
  6556  0F8B  0AA9               	incf	___awtoft@c+1,f
  6557  0F8C  01AD               	clrf	___awtoft@sign
  6558  0F8D  0AAD               	incf	___awtoft@sign,f
  6559  0F8E                     l2373:	
  6560  0F8E  0828               	movf	___awtoft@c,w
  6561  0F8F  00A0               	movwf	___ftpack@arg
  6562  0F90  0829               	movf	___awtoft@c+1,w
  6563  0F91  00A1               	movwf	___ftpack@arg+1
  6564  0F92  01A2               	clrf	___ftpack@arg+2
  6565  0F93  308E               	movlw	142
  6566  0F94  00AB               	movwf	??___awtoft
  6567  0F95  082B               	movf	??___awtoft,w
  6568  0F96  00A3               	movwf	___ftpack@exp
  6569  0F97  082D               	movf	___awtoft@sign,w
  6570  0F98  00AC               	movwf	??___awtoft+1
  6571  0F99  082C               	movf	??___awtoft+1,w
  6572  0F9A  00A4               	movwf	___ftpack@sign
  6573  0F9B  3186  2631         	fcall	___ftpack
  6574  0F9D  0020               	movlb	0	; select bank0
  6575  0F9E  0820               	movf	?___ftpack,w
  6576  0F9F  00A8               	movwf	?___awtoft
  6577  0FA0  0821               	movf	?___ftpack+1,w
  6578  0FA1  00A9               	movwf	?___awtoft+1
  6579  0FA2  0822               	movf	?___ftpack+2,w
  6580  0FA3  00AA               	movwf	?___awtoft+2
  6581  0FA4  0008               	return
  6582  0FA5                     __end_of___awtoft:	
  6583                           
  6584                           	psect	text7
  6585  0696                     __ptext7:	
  6586 ;; *************** function _blinkyLoop *****************
  6587 ;; Defined at:
  6588 ;;		line 143 in file "main.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  maxLoops        2   17[BANK0 ] int 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  loopCount       2   22[BANK0 ] int 
  6593 ;;  delayTime       2   20[BANK0 ] int 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      void 
  6596 ;; Registers used:
  6597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6606 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;Total ram usage:        7 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    5
  6610 ;; This function calls:
  6611 ;;		___wmul
  6612 ;;		_delay
  6613 ;; This function is called by:
  6614 ;;		_main
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           
  6619                           ;psect for function _blinkyLoop
  6620  0696                     _blinkyLoop:	
  6621                           
  6622                           ;main.c: 144: int loopCount=maxLoops;
  6623                           
  6624                           ;incstack = 0
  6625                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6626  0696  0020               	movlb	0	; select bank0
  6627  0697  0832               	movf	blinkyLoop@maxLoops+1,w
  6628  0698  00B7               	movwf	blinkyLoop@loopCount+1
  6629  0699  0831               	movf	blinkyLoop@maxLoops,w
  6630  069A  00B6               	movwf	blinkyLoop@loopCount
  6631                           
  6632                           ;main.c: 145: int delayTime;
  6633                           ;main.c: 147: ODCONB &= 0xF0;
  6634  069B  30F0               	movlw	240
  6635  069C  00B3               	movwf	??_blinkyLoop
  6636  069D  0833               	movf	??_blinkyLoop,w
  6637  069E  003E               	movlb	30	; select bank30
  6638  069F  05C5               	andwf	69,f	;volatile
  6639                           
  6640                           ;main.c: 148: ODCONC &= 0x1F;
  6641  06A0  301F               	movlw	31
  6642  06A1  0020               	movlb	0	; select bank0
  6643  06A2  00B3               	movwf	??_blinkyLoop
  6644  06A3  0833               	movf	??_blinkyLoop,w
  6645  06A4  003E               	movlb	30	; select bank30
  6646  06A5  05D0               	andwf	80,f	;volatile
  6647  06A6                     l3575:	
  6648                           ;main.c: 149: while(loopCount>0){
  6649                           
  6650  06A6  0020               	movlb	0	; select bank0
  6651  06A7  0837               	movf	blinkyLoop@loopCount+1,w
  6652  06A8  3A80               	xorlw	128
  6653  06A9  00B3               	movwf	??_blinkyLoop
  6654  06AA  3080               	movlw	128
  6655  06AB  0233               	subwf	??_blinkyLoop,w
  6656  06AC  1D03               	skipz
  6657  06AD  2EB0               	goto	u3255
  6658  06AE  3001               	movlw	1
  6659  06AF  0236               	subwf	blinkyLoop@loopCount,w
  6660  06B0                     u3255:	
  6661  06B0  1C03               	btfss	3,0
  6662  06B1  2EE0               	goto	l3577
  6663                           
  6664                           ;main.c: 150: delayTime=loopCount*400;
  6665  06B2  0020               	movlb	0	; select bank0
  6666  06B3  0837               	movf	blinkyLoop@loopCount+1,w
  6667  06B4  00A1               	movwf	___wmul@multiplier+1
  6668  06B5  0836               	movf	blinkyLoop@loopCount,w
  6669  06B6  00A0               	movwf	___wmul@multiplier
  6670  06B7  3090               	movlw	144
  6671  06B8  00A2               	movwf	___wmul@multiplicand
  6672  06B9  3001               	movlw	1
  6673  06BA  00A3               	movwf	___wmul@multiplicand+1
  6674  06BB  318F  274B  3186   	fcall	___wmul
  6675  06BE  0020               	movlb	0	; select bank0
  6676  06BF  0821               	movf	?___wmul+1,w
  6677  06C0  00B5               	movwf	blinkyLoop@delayTime+1
  6678  06C1  0820               	movf	?___wmul,w
  6679  06C2  00B4               	movwf	blinkyLoop@delayTime
  6680                           
  6681                           ;main.c: 153: LATB |= 0x0F;
  6682  06C3  300F               	movlw	15
  6683  06C4  00B3               	movwf	??_blinkyLoop
  6684  06C5  0833               	movf	??_blinkyLoop,w
  6685  06C6  0497               	iorwf	23,f	;volatile
  6686                           
  6687                           ;main.c: 156: delay(delayTime);
  6688  06C7  0835               	movf	blinkyLoop@delayTime+1,w
  6689  06C8  00A7               	movwf	delay@delaytime+1
  6690  06C9  0834               	movf	blinkyLoop@delayTime,w
  6691  06CA  00A6               	movwf	delay@delaytime
  6692  06CB  3186  26EC  3186   	fcall	_delay
  6693                           
  6694                           ;main.c: 158: LATB &= 0xF0;
  6695  06CE  30F0               	movlw	240
  6696  06CF  0020               	movlb	0	; select bank0
  6697  06D0  00B3               	movwf	??_blinkyLoop
  6698  06D1  0833               	movf	??_blinkyLoop,w
  6699  06D2  0597               	andwf	23,f	;volatile
  6700                           
  6701                           ;main.c: 161: delay(delayTime);
  6702  06D3  0835               	movf	blinkyLoop@delayTime+1,w
  6703  06D4  00A7               	movwf	delay@delaytime+1
  6704  06D5  0834               	movf	blinkyLoop@delayTime,w
  6705  06D6  00A6               	movwf	delay@delaytime
  6706  06D7  3186  26EC  3186   	fcall	_delay
  6707                           
  6708                           ;main.c: 163: loopCount--;
  6709  06DA  30FF               	movlw	255
  6710  06DB  0020               	movlb	0	; select bank0
  6711  06DC  07B6               	addwf	blinkyLoop@loopCount,f
  6712  06DD  30FF               	movlw	255
  6713  06DE  3DB7               	addwfc	blinkyLoop@loopCount+1,f
  6714  06DF  2EA6               	goto	l3575
  6715  06E0                     l3577:	
  6716                           
  6717                           ;main.c: 164: }
  6718                           ;main.c: 165: LATB |= 0x0F;
  6719  06E0  300F               	movlw	15
  6720  06E1  0020               	movlb	0	; select bank0
  6721  06E2  00B3               	movwf	??_blinkyLoop
  6722  06E3  0833               	movf	??_blinkyLoop,w
  6723  06E4  0497               	iorwf	23,f	;volatile
  6724                           
  6725                           ;main.c: 167: delay(5000);
  6726  06E5  3088               	movlw	136
  6727  06E6  00A6               	movwf	delay@delaytime
  6728  06E7  3013               	movlw	19
  6729  06E8  00A7               	movwf	delay@delaytime+1
  6730  06E9  3186  26EC         	fcall	_delay
  6731  06EB  0008               	return
  6732  06EC                     __end_of_blinkyLoop:	
  6733                           ;main.c: 168: return;
  6734                           
  6735                           
  6736                           	psect	text8
  6737  0501                     __ptext8:	
  6738 ;; *************** function ___ftdiv *****************
  6739 ;; Defined at:
  6740 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  f2              3   14[BANK0 ] float 
  6743 ;;  f1              3   17[BANK0 ] float 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  f3              3   25[BANK0 ] float 
  6746 ;;  sign            1   29[BANK0 ] unsigned char 
  6747 ;;  exp             1   28[BANK0 ] unsigned char 
  6748 ;;  cntr            1   24[BANK0 ] unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  3   14[BANK0 ] float 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0, pclath, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6758 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;Total ram usage:       16 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    4
  6765 ;; This function calls:
  6766 ;;		___ftpack
  6767 ;; This function is called by:
  6768 ;;		_main
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           
  6773                           ;psect for function ___ftdiv
  6774  0501                     ___ftdiv:	
  6775                           
  6776                           ;incstack = 0
  6777                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6778  0501  0020               	movlb	0	; select bank0
  6779  0502  0831               	movf	___ftdiv@f1,w
  6780  0503  00B4               	movwf	??___ftdiv
  6781  0504  0832               	movf	___ftdiv@f1+1,w
  6782  0505  00B5               	movwf	??___ftdiv+1
  6783  0506  0833               	movf	___ftdiv@f1+2,w
  6784  0507  00B6               	movwf	??___ftdiv+2
  6785  0508  1003               	clrc
  6786  0509  0D35               	rlf	??___ftdiv+1,w
  6787  050A  0D36               	rlf	??___ftdiv+2,w
  6788  050B  00B7               	movwf	??___ftdiv+3
  6789  050C  0837               	movf	??___ftdiv+3,w
  6790  050D  00BC               	movwf	___ftdiv@exp
  6791  050E  083C               	movf	___ftdiv@exp,w
  6792  050F  1D03               	btfss	3,2
  6793  0510  2D18               	goto	l2949
  6794  0511  3000               	movlw	0
  6795  0512  00AE               	movwf	?___ftdiv
  6796  0513  3000               	movlw	0
  6797  0514  00AF               	movwf	?___ftdiv+1
  6798  0515  3000               	movlw	0
  6799  0516  00B0               	movwf	?___ftdiv+2
  6800  0517  0008               	return
  6801  0518                     l2949:	
  6802  0518  082E               	movf	___ftdiv@f2,w
  6803  0519  00B4               	movwf	??___ftdiv
  6804  051A  082F               	movf	___ftdiv@f2+1,w
  6805  051B  00B5               	movwf	??___ftdiv+1
  6806  051C  0830               	movf	___ftdiv@f2+2,w
  6807  051D  00B6               	movwf	??___ftdiv+2
  6808  051E  1003               	clrc
  6809  051F  0D35               	rlf	??___ftdiv+1,w
  6810  0520  0D36               	rlf	??___ftdiv+2,w
  6811  0521  00B7               	movwf	??___ftdiv+3
  6812  0522  0837               	movf	??___ftdiv+3,w
  6813  0523  00BD               	movwf	___ftdiv@sign
  6814  0524  083D               	movf	___ftdiv@sign,w
  6815  0525  1D03               	btfss	3,2
  6816  0526  2D2E               	goto	l2955
  6817  0527  3000               	movlw	0
  6818  0528  00AE               	movwf	?___ftdiv
  6819  0529  3000               	movlw	0
  6820  052A  00AF               	movwf	?___ftdiv+1
  6821  052B  3000               	movlw	0
  6822  052C  00B0               	movwf	?___ftdiv+2
  6823  052D  0008               	return
  6824  052E                     l2955:	
  6825  052E  3000               	movlw	0
  6826  052F  00B9               	movwf	___ftdiv@f3
  6827  0530  3000               	movlw	0
  6828  0531  00BA               	movwf	___ftdiv@f3+1
  6829  0532  3000               	movlw	0
  6830  0533  00BB               	movwf	___ftdiv@f3+2
  6831  0534  3089               	movlw	137
  6832  0535  073D               	addwf	___ftdiv@sign,w
  6833  0536  00B4               	movwf	??___ftdiv
  6834  0537  0834               	movf	??___ftdiv,w
  6835  0538  02BC               	subwf	___ftdiv@exp,f
  6836  0539  0831               	movf	___ftdiv@f1,w
  6837  053A  00B4               	movwf	??___ftdiv
  6838  053B  0832               	movf	___ftdiv@f1+1,w
  6839  053C  00B5               	movwf	??___ftdiv+1
  6840  053D  0833               	movf	___ftdiv@f1+2,w
  6841  053E  00B6               	movwf	??___ftdiv+2
  6842  053F  3010               	movlw	16
  6843  0540                     u2425:	
  6844  0540  36B6               	lsrf	??___ftdiv+2,f
  6845  0541  0CB5               	rrf	??___ftdiv+1,f
  6846  0542  0CB4               	rrf	??___ftdiv,f
  6847  0543  0B89               	decfsz	9,f
  6848  0544  2D40               	goto	u2425
  6849  0545  0834               	movf	??___ftdiv,w
  6850  0546  00B7               	movwf	??___ftdiv+3
  6851  0547  0837               	movf	??___ftdiv+3,w
  6852  0548  00BD               	movwf	___ftdiv@sign
  6853  0549  082E               	movf	___ftdiv@f2,w
  6854  054A  00B4               	movwf	??___ftdiv
  6855  054B  082F               	movf	___ftdiv@f2+1,w
  6856  054C  00B5               	movwf	??___ftdiv+1
  6857  054D  0830               	movf	___ftdiv@f2+2,w
  6858  054E  00B6               	movwf	??___ftdiv+2
  6859  054F  3010               	movlw	16
  6860  0550                     u2435:	
  6861  0550  36B6               	lsrf	??___ftdiv+2,f
  6862  0551  0CB5               	rrf	??___ftdiv+1,f
  6863  0552  0CB4               	rrf	??___ftdiv,f
  6864  0553  0B89               	decfsz	9,f
  6865  0554  2D50               	goto	u2435
  6866  0555  0834               	movf	??___ftdiv,w
  6867  0556  00B7               	movwf	??___ftdiv+3
  6868  0557  0837               	movf	??___ftdiv+3,w
  6869  0558  06BD               	xorwf	___ftdiv@sign,f
  6870  0559  3080               	movlw	128
  6871  055A  00B4               	movwf	??___ftdiv
  6872  055B  0834               	movf	??___ftdiv,w
  6873  055C  05BD               	andwf	___ftdiv@sign,f
  6874  055D  17B2               	bsf	___ftdiv@f1+1,7
  6875  055E  30FF               	movlw	255
  6876  055F  05B1               	andwf	___ftdiv@f1,f
  6877  0560  30FF               	movlw	255
  6878  0561  05B2               	andwf	___ftdiv@f1+1,f
  6879  0562  3000               	movlw	0
  6880  0563  05B3               	andwf	___ftdiv@f1+2,f
  6881  0564  17AF               	bsf	___ftdiv@f2+1,7
  6882  0565  30FF               	movlw	255
  6883  0566  05AE               	andwf	___ftdiv@f2,f
  6884  0567  30FF               	movlw	255
  6885  0568  05AF               	andwf	___ftdiv@f2+1,f
  6886  0569  3000               	movlw	0
  6887  056A  05B0               	andwf	___ftdiv@f2+2,f
  6888  056B  3018               	movlw	24
  6889  056C  00B4               	movwf	??___ftdiv
  6890  056D  0834               	movf	??___ftdiv,w
  6891  056E  00B8               	movwf	___ftdiv@cntr
  6892  056F                     l2969:	
  6893  056F  3001               	movlw	1
  6894  0570                     u2445:	
  6895  0570  35B9               	lslf	___ftdiv@f3,f
  6896  0571  0DBA               	rlf	___ftdiv@f3+1,f
  6897  0572  0DBB               	rlf	___ftdiv@f3+2,f
  6898  0573  0B89               	decfsz	9,f
  6899  0574  2D70               	goto	u2445
  6900  0575  0830               	movf	___ftdiv@f2+2,w
  6901  0576  0233               	subwf	___ftdiv@f1+2,w
  6902  0577  1D03               	skipz
  6903  0578  2D7F               	goto	u2455
  6904  0579  082F               	movf	___ftdiv@f2+1,w
  6905  057A  0232               	subwf	___ftdiv@f1+1,w
  6906  057B  1D03               	skipz
  6907  057C  2D7F               	goto	u2455
  6908  057D  082E               	movf	___ftdiv@f2,w
  6909  057E  0231               	subwf	___ftdiv@f1,w
  6910  057F                     u2455:	
  6911  057F  1C03               	skipc
  6912  0580  2D88               	goto	l2977
  6913  0581  082E               	movf	___ftdiv@f2,w
  6914  0582  02B1               	subwf	___ftdiv@f1,f
  6915  0583  082F               	movf	___ftdiv@f2+1,w
  6916  0584  3BB2               	subwfb	___ftdiv@f1+1,f
  6917  0585  0830               	movf	___ftdiv@f2+2,w
  6918  0586  3BB3               	subwfb	___ftdiv@f1+2,f
  6919  0587  1439               	bsf	___ftdiv@f3,0
  6920  0588                     l2977:	
  6921  0588  3001               	movlw	1
  6922  0589                     u2465:	
  6923  0589  35B1               	lslf	___ftdiv@f1,f
  6924  058A  0DB2               	rlf	___ftdiv@f1+1,f
  6925  058B  0DB3               	rlf	___ftdiv@f1+2,f
  6926  058C  0B89               	decfsz	9,f
  6927  058D  2D89               	goto	u2465
  6928  058E  3001               	movlw	1
  6929  058F  02B8               	subwf	___ftdiv@cntr,f
  6930  0590  1D03               	btfss	3,2
  6931  0591  2D6F               	goto	l2969
  6932  0592  0839               	movf	___ftdiv@f3,w
  6933  0593  00A0               	movwf	___ftpack@arg
  6934  0594  083A               	movf	___ftdiv@f3+1,w
  6935  0595  00A1               	movwf	___ftpack@arg+1
  6936  0596  083B               	movf	___ftdiv@f3+2,w
  6937  0597  00A2               	movwf	___ftpack@arg+2
  6938  0598  083C               	movf	___ftdiv@exp,w
  6939  0599  00B4               	movwf	??___ftdiv
  6940  059A  0834               	movf	??___ftdiv,w
  6941  059B  00A3               	movwf	___ftpack@exp
  6942  059C  083D               	movf	___ftdiv@sign,w
  6943  059D  00B5               	movwf	??___ftdiv+1
  6944  059E  0835               	movf	??___ftdiv+1,w
  6945  059F  00A4               	movwf	___ftpack@sign
  6946  05A0  3186  2631         	fcall	___ftpack
  6947  05A2  0020               	movlb	0	; select bank0
  6948  05A3  0820               	movf	?___ftpack,w
  6949  05A4  00AE               	movwf	?___ftdiv
  6950  05A5  0821               	movf	?___ftpack+1,w
  6951  05A6  00AF               	movwf	?___ftdiv+1
  6952  05A7  0822               	movf	?___ftpack+2,w
  6953  05A8  00B0               	movwf	?___ftdiv+2
  6954  05A9  0008               	return
  6955  05AA                     __end_of___ftdiv:	
  6956                           
  6957                           	psect	text9
  6958  0631                     __ptext9:	
  6959 ;; *************** function ___ftpack *****************
  6960 ;; Defined at:
  6961 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  arg             3    0[BANK0 ] unsigned um
  6964 ;;  exp             1    3[BANK0 ] unsigned char 
  6965 ;;  sign            1    4[BANK0 ] unsigned char 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  3    0[BANK0 ] float 
  6970 ;; Registers used:
  6971 ;;		wreg, status,2, status,0
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6977 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;Total ram usage:        8 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    3
  6984 ;; This function calls:
  6985 ;;		Nothing
  6986 ;; This function is called by:
  6987 ;;		___awtoft
  6988 ;;		___ftdiv
  6989 ;;		___ftmul
  6990 ;;		___lwtoft
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function ___ftpack
  6996  0631                     ___ftpack:	
  6997                           
  6998                           ;incstack = 0
  6999                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7000  0631  0020               	movlb	0	; select bank0
  7001  0632  0823               	movf	___ftpack@exp,w
  7002  0633  1903               	btfsc	3,2
  7003  0634  2E3A               	goto	l2331
  7004  0635  0822               	movf	___ftpack@arg+2,w
  7005  0636  0421               	iorwf	___ftpack@arg+1,w
  7006  0637  0420               	iorwf	___ftpack@arg,w
  7007  0638  1D03               	skipz
  7008  0639  2E4B               	goto	l2337
  7009  063A                     l2331:	
  7010  063A  3000               	movlw	0
  7011  063B  00A0               	movwf	?___ftpack
  7012  063C  3000               	movlw	0
  7013  063D  00A1               	movwf	?___ftpack+1
  7014  063E  3000               	movlw	0
  7015  063F  00A2               	movwf	?___ftpack+2
  7016  0640  0008               	return
  7017  0641                     l2335:	
  7018  0641  3001               	movlw	1
  7019  0642  00A5               	movwf	??___ftpack
  7020  0643  0825               	movf	??___ftpack,w
  7021  0644  07A3               	addwf	___ftpack@exp,f
  7022  0645  3001               	movlw	1
  7023  0646                     u1585:	
  7024  0646  36A2               	lsrf	___ftpack@arg+2,f
  7025  0647  0CA1               	rrf	___ftpack@arg+1,f
  7026  0648  0CA0               	rrf	___ftpack@arg,f
  7027  0649  0B89               	decfsz	9,f
  7028  064A  2E46               	goto	u1585
  7029  064B                     l2337:	
  7030  064B  30FE               	movlw	254
  7031  064C  0522               	andwf	___ftpack@arg+2,w
  7032  064D  1903               	btfsc	3,2
  7033  064E  2E64               	goto	l928
  7034  064F  2E41               	goto	l2335
  7035  0650                     l2339:	
  7036  0650  3001               	movlw	1
  7037  0651  00A5               	movwf	??___ftpack
  7038  0652  0825               	movf	??___ftpack,w
  7039  0653  07A3               	addwf	___ftpack@exp,f
  7040  0654  3001               	movlw	1
  7041  0655  07A0               	addwf	___ftpack@arg,f
  7042  0656  3000               	movlw	0
  7043  0657  1803               	skipnc
  7044  0658  3001               	movlw	1
  7045  0659  07A1               	addwf	___ftpack@arg+1,f
  7046  065A  3000               	movlw	0
  7047  065B  1803               	skipnc
  7048  065C  3001               	movlw	1
  7049  065D  07A2               	addwf	___ftpack@arg+2,f
  7050  065E  3001               	movlw	1
  7051  065F                     u1605:	
  7052  065F  36A2               	lsrf	___ftpack@arg+2,f
  7053  0660  0CA1               	rrf	___ftpack@arg+1,f
  7054  0661  0CA0               	rrf	___ftpack@arg,f
  7055  0662  0B89               	decfsz	9,f
  7056  0663  2E5F               	goto	u1605
  7057  0664                     l928:	
  7058  0664  30FF               	movlw	255
  7059  0665  0522               	andwf	___ftpack@arg+2,w
  7060  0666  1903               	btfsc	3,2
  7061  0667  2E71               	goto	l2347
  7062  0668  2E50               	goto	l2339
  7063  0669                     l2345:	
  7064  0669  3001               	movlw	1
  7065  066A  02A3               	subwf	___ftpack@exp,f
  7066  066B  3001               	movlw	1
  7067  066C                     u1625:	
  7068  066C  35A0               	lslf	___ftpack@arg,f
  7069  066D  0DA1               	rlf	___ftpack@arg+1,f
  7070  066E  0DA2               	rlf	___ftpack@arg+2,f
  7071  066F  0B89               	decfsz	9,f
  7072  0670  2E6C               	goto	u1625
  7073  0671                     l2347:	
  7074  0671  1BA1               	btfsc	___ftpack@arg+1,7
  7075  0672  2E77               	goto	l935
  7076  0673  3002               	movlw	2
  7077  0674  0223               	subwf	___ftpack@exp,w
  7078  0675  1803               	skipnc
  7079  0676  2E69               	goto	l2345
  7080  0677                     l935:	
  7081  0677  1823               	btfsc	___ftpack@exp,0
  7082  0678  2E7F               	goto	l936
  7083  0679  30FF               	movlw	255
  7084  067A  05A0               	andwf	___ftpack@arg,f
  7085  067B  307F               	movlw	127
  7086  067C  05A1               	andwf	___ftpack@arg+1,f
  7087  067D  30FF               	movlw	255
  7088  067E  05A2               	andwf	___ftpack@arg+2,f
  7089  067F                     l936:	
  7090  067F  1003               	clrc
  7091  0680  0CA3               	rrf	___ftpack@exp,f
  7092  0681  0823               	movf	___ftpack@exp,w
  7093  0682  00A5               	movwf	??___ftpack
  7094  0683  01A6               	clrf	??___ftpack+1
  7095  0684  01A7               	clrf	??___ftpack+2
  7096  0685  3010               	movlw	16
  7097  0686                     u1665:	
  7098  0686  35A5               	lslf	??___ftpack,f
  7099  0687  0DA6               	rlf	??___ftpack+1,f
  7100  0688  0DA7               	rlf	??___ftpack+2,f
  7101  0689  0B89               	decfsz	9,f
  7102  068A  2E86               	goto	u1665
  7103  068B  0825               	movf	??___ftpack,w
  7104  068C  04A0               	iorwf	___ftpack@arg,f
  7105  068D  0826               	movf	??___ftpack+1,w
  7106  068E  04A1               	iorwf	___ftpack@arg+1,f
  7107  068F  0827               	movf	??___ftpack+2,w
  7108  0690  04A2               	iorwf	___ftpack@arg+2,f
  7109  0691  0824               	movf	___ftpack@sign,w
  7110  0692  1903               	btfsc	3,2
  7111  0693  0008               	return
  7112  0694  17A2               	bsf	___ftpack@arg+2,7
  7113  0695  0008               	return
  7114  0696                     __end_of___ftpack:	
  7115                           
  7116                           	psect	text10
  7117  073F                     __ptext10:	
  7118 ;; *************** function ___awdiv *****************
  7119 ;; Defined at:
  7120 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  divisor         2    0[BANK0 ] int 
  7123 ;;  dividend        2    2[BANK0 ] int 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  quotient        2    7[BANK0 ] int 
  7126 ;;  sign            1    6[BANK0 ] unsigned char 
  7127 ;;  counter         1    5[BANK0 ] unsigned char 
  7128 ;; Return value:  Size  Location     Type
  7129 ;;                  2    0[BANK0 ] int 
  7130 ;; Registers used:
  7131 ;;		wreg, status,2, status,0
  7132 ;; Tracked objects:
  7133 ;;		On entry : 0/0
  7134 ;;		On exit  : 0/0
  7135 ;;		Unchanged: 0/0
  7136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7141 ;;Total ram usage:        9 bytes
  7142 ;; Hardware stack levels used:    1
  7143 ;; Hardware stack levels required when called:    3
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_main
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           
  7152                           ;psect for function ___awdiv
  7153  073F                     ___awdiv:	
  7154                           
  7155                           ;incstack = 0
  7156                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7157  073F  0020               	movlb	0	; select bank0
  7158  0740  01A6               	clrf	___awdiv@sign
  7159  0741  1FA1               	btfss	___awdiv@divisor+1,7
  7160  0742  2F4A               	goto	l2907
  7161  0743  09A0               	comf	___awdiv@divisor,f
  7162  0744  09A1               	comf	___awdiv@divisor+1,f
  7163  0745  0AA0               	incf	___awdiv@divisor,f
  7164  0746  1903               	skipnz
  7165  0747  0AA1               	incf	___awdiv@divisor+1,f
  7166  0748  01A6               	clrf	___awdiv@sign
  7167  0749  0AA6               	incf	___awdiv@sign,f
  7168  074A                     l2907:	
  7169  074A  1FA3               	btfss	___awdiv@dividend+1,7
  7170  074B  2F55               	goto	l2913
  7171  074C  09A2               	comf	___awdiv@dividend,f
  7172  074D  09A3               	comf	___awdiv@dividend+1,f
  7173  074E  0AA2               	incf	___awdiv@dividend,f
  7174  074F  1903               	skipnz
  7175  0750  0AA3               	incf	___awdiv@dividend+1,f
  7176  0751  3001               	movlw	1
  7177  0752  00A4               	movwf	??___awdiv
  7178  0753  0824               	movf	??___awdiv,w
  7179  0754  06A6               	xorwf	___awdiv@sign,f
  7180  0755                     l2913:	
  7181  0755  01A7               	clrf	___awdiv@quotient
  7182  0756  01A8               	clrf	___awdiv@quotient+1
  7183  0757  0820               	movf	___awdiv@divisor,w
  7184  0758  0421               	iorwf	___awdiv@divisor+1,w
  7185  0759  1903               	btfsc	3,2
  7186  075A  2F84               	goto	l2935
  7187  075B  01A5               	clrf	___awdiv@counter
  7188  075C  0AA5               	incf	___awdiv@counter,f
  7189  075D                     l2923:	
  7190  075D  1BA1               	btfsc	___awdiv@divisor+1,7
  7191  075E  2F69               	goto	l2925
  7192  075F  3001               	movlw	1
  7193  0760                     u2335:	
  7194  0760  35A0               	lslf	___awdiv@divisor,f
  7195  0761  0DA1               	rlf	___awdiv@divisor+1,f
  7196  0762  0B89               	decfsz	9,f
  7197  0763  2F60               	goto	u2335
  7198  0764  3001               	movlw	1
  7199  0765  00A4               	movwf	??___awdiv
  7200  0766  0824               	movf	??___awdiv,w
  7201  0767  07A5               	addwf	___awdiv@counter,f
  7202  0768  2F5D               	goto	l2923
  7203  0769                     l2925:	
  7204  0769  3001               	movlw	1
  7205  076A                     u2355:	
  7206  076A  35A7               	lslf	___awdiv@quotient,f
  7207  076B  0DA8               	rlf	___awdiv@quotient+1,f
  7208  076C  0B89               	decfsz	9,f
  7209  076D  2F6A               	goto	u2355
  7210  076E  0821               	movf	___awdiv@divisor+1,w
  7211  076F  0223               	subwf	___awdiv@dividend+1,w
  7212  0770  1D03               	skipz
  7213  0771  2F74               	goto	u2365
  7214  0772  0820               	movf	___awdiv@divisor,w
  7215  0773  0222               	subwf	___awdiv@dividend,w
  7216  0774                     u2365:	
  7217  0774  1C03               	skipc
  7218  0775  2F7B               	goto	l2931
  7219  0776  0820               	movf	___awdiv@divisor,w
  7220  0777  02A2               	subwf	___awdiv@dividend,f
  7221  0778  0821               	movf	___awdiv@divisor+1,w
  7222  0779  3BA3               	subwfb	___awdiv@dividend+1,f
  7223  077A  1427               	bsf	___awdiv@quotient,0
  7224  077B                     l2931:	
  7225  077B  3001               	movlw	1
  7226  077C                     u2375:	
  7227  077C  36A1               	lsrf	___awdiv@divisor+1,f
  7228  077D  0CA0               	rrf	___awdiv@divisor,f
  7229  077E  0B89               	decfsz	9,f
  7230  077F  2F7C               	goto	u2375
  7231  0780  3001               	movlw	1
  7232  0781  02A5               	subwf	___awdiv@counter,f
  7233  0782  1D03               	btfss	3,2
  7234  0783  2F69               	goto	l2925
  7235  0784                     l2935:	
  7236  0784  0826               	movf	___awdiv@sign,w
  7237  0785  1903               	btfsc	3,2
  7238  0786  2F8C               	goto	l2939
  7239  0787  09A7               	comf	___awdiv@quotient,f
  7240  0788  09A8               	comf	___awdiv@quotient+1,f
  7241  0789  0AA7               	incf	___awdiv@quotient,f
  7242  078A  1903               	skipnz
  7243  078B  0AA8               	incf	___awdiv@quotient+1,f
  7244  078C                     l2939:	
  7245  078C  0828               	movf	___awdiv@quotient+1,w
  7246  078D  00A1               	movwf	?___awdiv+1
  7247  078E  0827               	movf	___awdiv@quotient,w
  7248  078F  00A0               	movwf	?___awdiv
  7249  0790  0008               	return
  7250  0791                     __end_of___awdiv:	
  7251                           
  7252                           	psect	text11
  7253  0EAF                     __ptext11:	
  7254 ;; *************** function _SYSTEM_Initialize *****************
  7255 ;; Defined at:
  7256 ;;		line 83 in file "mcc_generated_files/mcc.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0, pclath, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    4
  7277 ;; This function calls:
  7278 ;;		_ADCC_Initialize
  7279 ;;		_I2C1_Initialize
  7280 ;;		_OSCILLATOR_Initialize
  7281 ;;		_PIN_MANAGER_Initialize
  7282 ;; This function is called by:
  7283 ;;		_main
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function _SYSTEM_Initialize
  7289  0EAF                     _SYSTEM_Initialize:	
  7290                           
  7291                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  7292                           
  7293                           ;incstack = 0
  7294                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7295  0EAF  3187  2791  318E   	fcall	_PIN_MANAGER_Initialize
  7296                           
  7297                           ;mcc.c: 87: OSCILLATOR_Initialize();
  7298  0EB2  318E  26A6  318E   	fcall	_OSCILLATOR_Initialize
  7299                           
  7300                           ;mcc.c: 88: I2C1_Initialize();
  7301  0EB5  318F  2719  318E   	fcall	_I2C1_Initialize
  7302                           
  7303                           ;mcc.c: 89: ADCC_Initialize();
  7304  0EB8  318F  2730         	fcall	_ADCC_Initialize
  7305  0EBA  0008               	return
  7306  0EBB                     __end_of_SYSTEM_Initialize:	
  7307                           
  7308                           	psect	text12
  7309  0791                     __ptext12:	
  7310 ;; *************** function _PIN_MANAGER_Initialize *****************
  7311 ;; Defined at:
  7312 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;		None
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  state           1    0[BANK0 ] unsigned char 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  1    wreg      void 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;Total ram usage:        1 bytes
  7331 ;; Hardware stack levels used:    1
  7332 ;; Hardware stack levels required when called:    3
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		_SYSTEM_Initialize
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           
  7341                           ;psect for function _PIN_MANAGER_Initialize
  7342  0791                     _PIN_MANAGER_Initialize:	
  7343                           
  7344                           ;pin_manager.c: 57: LATA = 0x00;
  7345                           
  7346                           ;incstack = 0
  7347                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  7348  0791  0020               	movlb	0	; select bank0
  7349  0792  0196               	clrf	22	;volatile
  7350                           
  7351                           ;pin_manager.c: 58: LATB = 0x00;
  7352  0793  0197               	clrf	23	;volatile
  7353                           
  7354                           ;pin_manager.c: 59: LATC = 0x00;
  7355  0794  0198               	clrf	24	;volatile
  7356                           
  7357                           ;pin_manager.c: 64: TRISA = 0x7F;
  7358  0795  307F               	movlw	127
  7359  0796  0091               	movwf	17	;volatile
  7360                           
  7361                           ;pin_manager.c: 65: TRISB = 0x30;
  7362  0797  3030               	movlw	48
  7363  0798  0092               	movwf	18	;volatile
  7364                           
  7365                           ;pin_manager.c: 66: TRISC = 0x1D;
  7366  0799  301D               	movlw	29
  7367  079A  0093               	movwf	19	;volatile
  7368                           
  7369                           ;pin_manager.c: 71: ANSELC = 0xE7;
  7370  079B  30E7               	movlw	231
  7371  079C  003E               	movlb	30	; select bank30
  7372  079D  00CE               	movwf	78	;volatile
  7373                           
  7374                           ;pin_manager.c: 72: ANSELB = 0xCF;
  7375  079E  30CF               	movlw	207
  7376  079F  00C3               	movwf	67	;volatile
  7377                           
  7378                           ;pin_manager.c: 73: ANSELA = 0xFF;
  7379  07A0  30FF               	movlw	255
  7380  07A1  00B8               	movwf	56	;volatile
  7381                           
  7382                           ;pin_manager.c: 78: WPUE = 0x00;
  7383  07A2  01E5               	clrf	101	;volatile
  7384                           
  7385                           ;pin_manager.c: 79: WPUB = 0x30;
  7386  07A3  3030               	movlw	48
  7387  07A4  00C4               	movwf	68	;volatile
  7388                           
  7389                           ;pin_manager.c: 80: WPUA = 0x00;
  7390  07A5  01B9               	clrf	57	;volatile
  7391                           
  7392                           ;pin_manager.c: 81: WPUC = 0x00;
  7393  07A6  01CF               	clrf	79	;volatile
  7394                           
  7395                           ;pin_manager.c: 86: ODCONA = 0x00;
  7396  07A7  01BA               	clrf	58	;volatile
  7397                           
  7398                           ;pin_manager.c: 87: ODCONB = 0x00;
  7399  07A8  01C5               	clrf	69	;volatile
  7400                           
  7401                           ;pin_manager.c: 88: ODCONC = 0x00;
  7402  07A9  01D0               	clrf	80	;volatile
  7403                           
  7404                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  7405  07AA  3000               	movlw	0
  7406  07AB  1B8B               	btfsc	11,7	;volatile
  7407  07AC  3001               	movlw	1
  7408  07AD  0020               	movlb	0	; select bank0
  7409  07AE  00A0               	movwf	PIN_MANAGER_Initialize@state
  7410                           
  7411                           ;pin_manager.c: 96: GIE = 0;
  7412  07AF  138B               	bcf	11,7	;volatile
  7413                           
  7414                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  7415  07B0  3055               	movlw	85
  7416  07B1  003D               	movlb	29	; select bank29
  7417  07B2  008F               	movwf	15	;volsfr
  7418                           
  7419                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  7420  07B3  30AA               	movlw	170
  7421  07B4  008F               	movwf	15	;volsfr
  7422                           
  7423                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  7424  07B5  100F               	bcf	15,0	;volsfr
  7425                           
  7426                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  7427  07B6  0846               	movf	70,w	;volatile
  7428  07B7  39E0               	andlw	-32
  7429  07B8  3813               	iorlw	19
  7430  07B9  00C6               	movwf	70	;volatile
  7431                           
  7432                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  7433  07BA  0845               	movf	69,w	;volatile
  7434  07BB  39E0               	andlw	-32
  7435  07BC  3814               	iorlw	20
  7436  07BD  00C5               	movwf	69	;volatile
  7437                           
  7438                           ;pin_manager.c: 103: RC3PPS = 0x15;
  7439  07BE  3015               	movlw	21
  7440  07BF  003E               	movlb	30	; select bank30
  7441  07C0  00A3               	movwf	35	;volatile
  7442                           
  7443                           ;pin_manager.c: 104: RC4PPS = 0x14;
  7444  07C1  3014               	movlw	20
  7445  07C2  00A4               	movwf	36	;volatile
  7446                           
  7447                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  7448  07C3  3055               	movlw	85
  7449  07C4  003D               	movlb	29	; select bank29
  7450  07C5  008F               	movwf	15	;volsfr
  7451                           
  7452                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  7453  07C6  30AA               	movlw	170
  7454  07C7  008F               	movwf	15	;volsfr
  7455                           
  7456                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  7457  07C8  140F               	bsf	15,0	;volsfr
  7458                           
  7459                           ;pin_manager.c: 110: GIE = state;
  7460  07C9  0020               	movlb	0	; select bank0
  7461  07CA  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  7462  07CB  2FCE               	goto	u3190
  7463  07CC  178B               	bsf	11,7	;volatile
  7464  07CD  0008               	return
  7465  07CE                     u3190:	
  7466  07CE  138B               	bcf	11,7	;volatile
  7467  07CF  0008               	return
  7468  07D0                     __end_of_PIN_MANAGER_Initialize:	
  7469                           
  7470                           	psect	text13
  7471  0EA6                     __ptext13:	
  7472 ;; *************** function _OSCILLATOR_Initialize *****************
  7473 ;; Defined at:
  7474 ;;		line 92 in file "mcc_generated_files/mcc.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;		None
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;Total ram usage:        0 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    3
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_SYSTEM_Initialize
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           
  7503                           ;psect for function _OSCILLATOR_Initialize
  7504  0EA6                     _OSCILLATOR_Initialize:	
  7505                           
  7506                           ;mcc.c: 95: OSCCON1 = 0x60;
  7507                           
  7508                           ;incstack = 0
  7509                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7510  0EA6  3060               	movlw	96
  7511  0EA7  0031               	movlb	17	; select bank17
  7512  0EA8  008D               	movwf	13	;volatile
  7513                           
  7514                           ;mcc.c: 97: OSCCON3 = 0x00;
  7515  0EA9  018F               	clrf	15	;volatile
  7516                           
  7517                           ;mcc.c: 99: OSCEN = 0x00;
  7518  0EAA  0191               	clrf	17	;volatile
  7519                           
  7520                           ;mcc.c: 101: OSCFRQ = 0x06;
  7521  0EAB  3006               	movlw	6
  7522  0EAC  0093               	movwf	19	;volatile
  7523                           
  7524                           ;mcc.c: 103: OSCTUNE = 0x00;
  7525  0EAD  0192               	clrf	18	;volatile
  7526  0EAE  0008               	return
  7527  0EAF                     __end_of_OSCILLATOR_Initialize:	
  7528                           
  7529                           	psect	text14
  7530  0F19                     __ptext14:	
  7531 ;; *************** function _I2C1_Initialize *****************
  7532 ;; Defined at:
  7533 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;		None
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      void 
  7540 ;; Registers used:
  7541 ;;		wreg, status,2
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7549 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7550 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7551 ;;Total ram usage:        1 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; Hardware stack levels required when called:    3
  7554 ;; This function calls:
  7555 ;;		Nothing
  7556 ;; This function is called by:
  7557 ;;		_SYSTEM_Initialize
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           
  7562                           ;psect for function _I2C1_Initialize
  7563  0F19                     _I2C1_Initialize:	
  7564                           
  7565                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  7566                           
  7567                           ;incstack = 0
  7568                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  7569  0F19  306D               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7570  0F1A  0020               	movlb	0	; select bank0
  7571  0F1B  00A0               	movwf	??_I2C1_Initialize
  7572  0F1C  0820               	movf	??_I2C1_Initialize,w
  7573  0F1D  00DF               	movwf	low ((_i2c1_object| 0+1))
  7574                           
  7575                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  7576  0F1E  306D               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7577  0F1F  00A0               	movwf	??_I2C1_Initialize
  7578  0F20  0820               	movf	??_I2C1_Initialize,w
  7579  0F21  00DE               	movwf	_i2c1_object
  7580                           
  7581                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  7582  0F22  14E0               	bsf	_i2c1_object+2,1
  7583                           
  7584                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  7585  0F23  1060               	bcf	_i2c1_object+2,0
  7586                           
  7587                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  7588  0F24  01E2               	clrf	_i2c1_object+4
  7589                           
  7590                           ;i2c1.c: 208: SSP1STAT = 0x00;
  7591  0F25  0023               	movlb	3	; select bank3
  7592  0F26  018F               	clrf	15	;volatile
  7593                           
  7594                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  7595  0F27  3028               	movlw	40
  7596  0F28  0090               	movwf	16	;volatile
  7597                           
  7598                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  7599  0F29  0192               	clrf	18	;volatile
  7600                           
  7601                           ;i2c1.c: 214: SSP1ADD = 0x13;
  7602  0F2A  3013               	movlw	19
  7603  0F2B  008D               	movwf	13	;volatile
  7604                           
  7605                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  7606  0F2C  002E               	movlb	14	; select bank14
  7607  0F2D  100F               	bcf	15,0	;volatile
  7608                           
  7609                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  7610  0F2E  1419               	bsf	25,0	;volatile
  7611  0F2F  0008               	return
  7612  0F30                     __end_of_I2C1_Initialize:	
  7613                           
  7614                           	psect	text15
  7615  0F30                     __ptext15:	
  7616 ;; *************** function _ADCC_Initialize *****************
  7617 ;; Defined at:
  7618 ;;		line 62 in file "mcc_generated_files/adcc.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7636 ;;Total ram usage:        0 bytes
  7637 ;; Hardware stack levels used:    1
  7638 ;; Hardware stack levels required when called:    3
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_SYSTEM_Initialize
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           
  7647                           ;psect for function _ADCC_Initialize
  7648  0F30                     _ADCC_Initialize:	
  7649                           
  7650                           ;adcc.c: 66: ADCON1 = 0x00;
  7651                           
  7652                           ;incstack = 0
  7653                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  7654  0F30  0021               	movlb	1	; select bank1
  7655  0F31  0194               	clrf	20	;volatile
  7656                           
  7657                           ;adcc.c: 68: ADCON2 = 0x03;
  7658  0F32  3003               	movlw	3
  7659  0F33  0095               	movwf	21	;volatile
  7660                           
  7661                           ;adcc.c: 70: ADCON3 = 0x00;
  7662  0F34  0196               	clrf	22	;volatile
  7663                           
  7664                           ;adcc.c: 72: ADACT = 0x00;
  7665  0F35  0199               	clrf	25	;volatile
  7666                           
  7667                           ;adcc.c: 74: ADSTAT = 0x00;
  7668  0F36  0197               	clrf	23	;volatile
  7669                           
  7670                           ;adcc.c: 76: ADCLK = 0x13;
  7671  0F37  3013               	movlw	19
  7672  0F38  0098               	movwf	24	;volatile
  7673                           
  7674                           ;adcc.c: 78: ADREF = 0x00;
  7675  0F39  019A               	clrf	26	;volatile
  7676                           
  7677                           ;adcc.c: 80: ADCAP = 0x00;
  7678  0F3A  019B               	clrf	27	;volatile
  7679                           
  7680                           ;adcc.c: 82: ADPRE = 0x00;
  7681  0F3B  019C               	clrf	28	;volatile
  7682                           
  7683                           ;adcc.c: 84: ADACQ = 0x04;
  7684  0F3C  3004               	movlw	4
  7685  0F3D  009D               	movwf	29	;volatile
  7686                           
  7687                           ;adcc.c: 86: ADPCH = 0x00;
  7688  0F3E  019E               	clrf	30	;volatile
  7689                           
  7690                           ;adcc.c: 88: ADRPT = 0x00;
  7691  0F3F  0022               	movlb	2	; select bank2
  7692  0F40  018D               	clrf	13	;volatile
  7693                           
  7694                           ;adcc.c: 90: ADLTHL = 0x00;
  7695  0F41  018E               	clrf	14	;volatile
  7696                           
  7697                           ;adcc.c: 92: ADLTHH = 0x00;
  7698  0F42  018F               	clrf	15	;volatile
  7699                           
  7700                           ;adcc.c: 94: ADUTHL = 0x00;
  7701  0F43  0190               	clrf	16	;volatile
  7702                           
  7703                           ;adcc.c: 96: ADUTHH = 0x00;
  7704  0F44  0191               	clrf	17	;volatile
  7705                           
  7706                           ;adcc.c: 98: ADSTPTL = 0x00;
  7707  0F45  0192               	clrf	18	;volatile
  7708                           
  7709                           ;adcc.c: 100: ADSTPTH = 0x00;
  7710  0F46  0193               	clrf	19	;volatile
  7711                           
  7712                           ;adcc.c: 103: ADCON0 = 0x84;
  7713  0F47  3084               	movlw	132
  7714  0F48  0021               	movlb	1	; select bank1
  7715  0F49  0093               	movwf	19	;volatile
  7716  0F4A  0008               	return
  7717  0F4B                     __end_of_ADCC_Initialize:	
  7718                           
  7719                           	psect	text16
  7720  0EBB                     __ptext16:	
  7721 ;; *************** function _LED7SegSetup *****************
  7722 ;; Defined at:
  7723 ;;		line 31 in file "LED7Seg.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;		None
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;		None
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  1    wreg      void 
  7730 ;; Registers used:
  7731 ;;		None
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;Total ram usage:        0 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:    3
  7744 ;; This function calls:
  7745 ;;		Nothing
  7746 ;; This function is called by:
  7747 ;;		_main
  7748 ;; This function uses a non-reentrant model
  7749 ;;
  7750                           
  7751                           
  7752                           ;psect for function _LED7SegSetup
  7753  0EBB                     _LED7SegSetup:	
  7754                           
  7755                           ;incstack = 0
  7756                           ; Regs used in _LED7SegSetup: []
  7757                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
  7758  0EBB  003E               	movlb	30	; select bank30
  7759  0EBC  12CE               	bcf	78,5	;volatile
  7760                           
  7761                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
  7762  0EBD  0020               	movlb	0	; select bank0
  7763  0EBE  1293               	bcf	19,5	;volatile
  7764                           
  7765                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
  7766  0EBF  003E               	movlb	30	; select bank30
  7767  0EC0  134E               	bcf	78,6	;volatile
  7768                           
  7769                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
  7770  0EC1  0020               	movlb	0	; select bank0
  7771  0EC2  1313               	bcf	19,6	;volatile
  7772                           
  7773                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
  7774  0EC3  003E               	movlb	30	; select bank30
  7775  0EC4  13CE               	bcf	78,7	;volatile
  7776                           
  7777                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
  7778  0EC5  0020               	movlb	0	; select bank0
  7779  0EC6  1393               	bcf	19,7	;volatile
  7780  0EC7  0008               	return
  7781  0EC8                     __end_of_LED7SegSetup:	
  7782                           
  7783                           	psect	text17
  7784  0FC9                     __ptext17:	
  7785 ;; *************** function _LED7SegDisplayValueByDigit *****************
  7786 ;; Defined at:
  7787 ;;		line 95 in file "LED7Seg.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  iTensDigit      2   20[BANK0 ] unsigned int 
  7790 ;;  iUnitsDigit     2   22[BANK0 ] unsigned int 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;  iTensCode       2   24[BANK0 ] unsigned int 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  1    wreg      void 
  7795 ;; Registers used:
  7796 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7802 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7803 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;Total ram usage:        6 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; Hardware stack levels required when called:    7
  7809 ;; This function calls:
  7810 ;;		_LED7SegShiftOutPulseClock
  7811 ;; This function is called by:
  7812 ;;		_main
  7813 ;;		_LED7SegDisplayValue
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817                           
  7818                           ;psect for function _LED7SegDisplayValueByDigit
  7819  0FC9                     _LED7SegDisplayValueByDigit:	
  7820                           
  7821                           ;LED7Seg.c: 99: if(iUnitsDigit>9) iUnitsDigit=9;
  7822                           
  7823                           ;LED7Seg.c: 96: unsigned int iTensCode;
  7824                           ;LED7Seg.c: 98: if(0>iUnitsDigit) iUnitsDigit=0;
  7825                           
  7826                           ;incstack = 0
  7827                           ; Regs used in _LED7SegDisplayValueByDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7828  0FC9  3000               	movlw	0
  7829  0FCA  0020               	movlb	0	; select bank0
  7830  0FCB  0237               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit+1,w
  7831  0FCC  300A               	movlw	10
  7832  0FCD  1903               	skipnz
  7833  0FCE  0236               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit,w
  7834  0FCF  1C03               	skipc
  7835  0FD0  2FD5               	goto	l3593
  7836  0FD1  3009               	movlw	9
  7837  0FD2  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  7838  0FD3  3000               	movlw	0
  7839  0FD4  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  7840  0FD5                     l3593:	
  7841                           ;LED7Seg.c: 101: if(0>iTensDigit) iTensDigit=0;
  7842                           
  7843                           
  7844                           ;LED7Seg.c: 102: if(iTensDigit>9) iTensDigit=9;
  7845  0FD5  3000               	movlw	0
  7846  0FD6  0235               	subwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
  7847  0FD7  300A               	movlw	10
  7848  0FD8  1903               	skipnz
  7849  0FD9  0234               	subwf	LED7SegDisplayValueByDigit@iTensDigit,w
  7850  0FDA  1C03               	skipc
  7851  0FDB  2FE0               	goto	l3597
  7852  0FDC  3009               	movlw	9
  7853  0FDD  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  7854  0FDE  3000               	movlw	0
  7855  0FDF  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  7856  0FE0                     l3597:	
  7857                           
  7858                           ;LED7Seg.c: 104: iTensCode=segdisp[iTensDigit];
  7859  0FE0  3534               	lslf	LED7SegDisplayValueByDigit@iTensDigit,w
  7860  0FE1  3EA0               	addlw	(low (_segdisp| 0))& (0+255)
  7861  0FE2  0086               	movwf	6
  7862  0FE3  0187               	clrf	7
  7863  0FE4  3F40               	moviw [0]fsr1
  7864  0FE5  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
  7865  0FE6  3F41               	moviw [1]fsr1
  7866  0FE7  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
  7867                           
  7868                           ;LED7Seg.c: 105: if(0==iTensDigit) iTensCode=255;
  7869  0FE8  0834               	movf	LED7SegDisplayValueByDigit@iTensDigit,w
  7870  0FE9  0435               	iorwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
  7871  0FEA  1D03               	btfss	3,2
  7872  0FEB  2FF0               	goto	l3603
  7873  0FEC  30FF               	movlw	255
  7874  0FED  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
  7875  0FEE  3000               	movlw	0
  7876  0FEF  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
  7877  0FF0                     l3603:	
  7878                           
  7879                           ;LED7Seg.c: 107: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
  7880  0FF0  3536               	lslf	LED7SegDisplayValueByDigit@iUnitsDigit,w
  7881  0FF1  3EA0               	addlw	(low (_segdisp| 0))& (0+255)
  7882  0FF2  0086               	movwf	6
  7883  0FF3  0187               	clrf	7
  7884  0FF4  0801               	movf	1,w
  7885  0FF5  318F  2767  318F   	fcall	_LED7SegShiftOutPulseClock
  7886                           
  7887                           ;LED7Seg.c: 108: LED7SegShiftOutPulseClock( iTensCode );
  7888  0FF8  0020               	movlb	0	; select bank0
  7889  0FF9  0838               	movf	LED7SegDisplayValueByDigit@iTensCode,w
  7890  0FFA  318F  2767         	fcall	_LED7SegShiftOutPulseClock
  7891                           
  7892                           ;LED7Seg.c: 110: do { LATCbits.LATC5 = 1; } while(0);
  7893  0FFC  0020               	movlb	0	; select bank0
  7894  0FFD  1698               	bsf	24,5	;volatile
  7895                           
  7896                           ;LED7Seg.c: 111: do { LATCbits.LATC5 = 0; } while(0);
  7897  0FFE  1298               	bcf	24,5	;volatile
  7898  0FFF  0008               	return
  7899  1000                     __end_of_LED7SegDisplayValueByDigit:	
  7900                           
  7901                           	psect	text18
  7902  0F67                     __ptext18:	
  7903 ;; *************** function _LED7SegShiftOutPulseClock *****************
  7904 ;; Defined at:
  7905 ;;		line 69 in file "LED7Seg.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  val             1    wreg     unsigned char 
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;  val             1   18[BANK0 ] unsigned char 
  7910 ;;  i               1   19[BANK0 ] unsigned char 
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7923 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7924 ;;Total ram usage:        3 bytes
  7925 ;; Hardware stack levels used:    1
  7926 ;; Hardware stack levels required when called:    6
  7927 ;; This function calls:
  7928 ;;		_LED7SegPinWrite
  7929 ;;		_LED7SegPulseClock
  7930 ;; This function is called by:
  7931 ;;		_LED7SegDisplayValueByDigit
  7932 ;;		_LED7SegBlankDisplay
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           
  7937                           ;psect for function _LED7SegShiftOutPulseClock
  7938  0F67                     _LED7SegShiftOutPulseClock:	
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7942                           ;LED7SegShiftOutPulseClock@val stored from wreg
  7943  0F67  0020               	movlb	0	; select bank0
  7944  0F68  00B2               	movwf	LED7SegShiftOutPulseClock@val
  7945                           
  7946                           ;LED7Seg.c: 71: char i;
  7947                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
  7948  0F69  01B3               	clrf	LED7SegShiftOutPulseClock@i
  7949  0F6A                     L1:	
  7950  0F6A  3008               	movlw	8
  7951  0F6B  0233               	subwf	LED7SegShiftOutPulseClock@i,w
  7952  0F6C  1803               	btfsc	3,0
  7953  0F6D  0008               	return
  7954                           
  7955                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
  7956  0F6E  3001               	movlw	1
  7957  0F6F  00B1               	movwf	??_LED7SegShiftOutPulseClock
  7958  0F70  0A33               	incf	LED7SegShiftOutPulseClock@i,w
  7959  0F71  2F73               	goto	u3224
  7960  0F72                     u3225:	
  7961  0F72  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
  7962  0F73                     u3224:	
  7963  0F73  0B89               	decfsz	9,f
  7964  0F74  2F72               	goto	u3225
  7965  0F75  0831               	movf	??_LED7SegShiftOutPulseClock,w
  7966  0F76  0532               	andwf	LED7SegShiftOutPulseClock@val,w
  7967  0F77  318E  269D  318F   	fcall	_LED7SegPinWrite
  7968                           
  7969                           ;LED7Seg.c: 77: LED7SegPulseClock();
  7970  0F7A  3187  27F5  318F   	fcall	_LED7SegPulseClock
  7971  0F7D  3001               	movlw	1
  7972  0F7E  0020               	movlb	0	; select bank0
  7973  0F7F  00B1               	movwf	??_LED7SegShiftOutPulseClock
  7974  0F80  0831               	movf	??_LED7SegShiftOutPulseClock,w
  7975  0F81  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
  7976  0F82  2F6A               	goto	L1
  7977  0F83                     __end_of_LED7SegShiftOutPulseClock:	
  7978                           
  7979                           	psect	text19
  7980  07F5                     __ptext19:	
  7981 ;; *************** function _LED7SegPulseClock *****************
  7982 ;; Defined at:
  7983 ;;		line 60 in file "LED7Seg.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;		None
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;		None
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;Total ram usage:        0 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; Hardware stack levels required when called:    5
  8004 ;; This function calls:
  8005 ;;		_delay
  8006 ;; This function is called by:
  8007 ;;		_LED7SegShiftOutPulseClock
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           
  8012                           ;psect for function _LED7SegPulseClock
  8013  07F5                     _LED7SegPulseClock:	
  8014                           
  8015                           ;incstack = 0
  8016                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8017                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
  8018  07F5  0020               	movlb	0	; select bank0
  8019  07F6  1718               	bsf	24,6	;volatile
  8020                           
  8021                           ;LED7Seg.c: 64: delay(1);
  8022  07F7  3001               	movlw	1
  8023  07F8  00A6               	movwf	delay@delaytime
  8024  07F9  3000               	movlw	0
  8025  07FA  00A7               	movwf	delay@delaytime+1
  8026  07FB  3186  26EC         	fcall	_delay
  8027                           
  8028                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
  8029  07FD  0020               	movlb	0	; select bank0
  8030  07FE  1318               	bcf	24,6	;volatile
  8031  07FF  0008               	return
  8032  0800                     __end_of_LED7SegPulseClock:	
  8033                           
  8034                           	psect	text20
  8035  06EC                     __ptext20:	
  8036 ;; *************** function _delay *****************
  8037 ;; Defined at:
  8038 ;;		line 135 in file "main.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  delaytime       2    6[BANK0 ] int 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  counter         4   13[BANK0 ] long 
  8043 ;;  adjustedDela    4    9[BANK0 ] long 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;Total ram usage:       11 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    4
  8060 ;; This function calls:
  8061 ;;		___wmul
  8062 ;; This function is called by:
  8063 ;;		_blinkyLoop
  8064 ;;		_main
  8065 ;;		_LED7SegPulseClock
  8066 ;;		_LED7SegLoop
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           
  8071                           ;psect for function _delay
  8072  06EC                     _delay:	
  8073                           
  8074                           ;main.c: 136: long counter = 0;
  8075                           
  8076                           ;incstack = 0
  8077                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8078  06EC  3000               	movlw	0
  8079  06ED  0020               	movlb	0	; select bank0
  8080  06EE  00B0               	movwf	delay@counter+3
  8081  06EF  3000               	movlw	0
  8082  06F0  00AF               	movwf	delay@counter+2
  8083  06F1  3000               	movlw	0
  8084  06F2  00AE               	movwf	delay@counter+1
  8085  06F3  3000               	movlw	0
  8086  06F4  00AD               	movwf	delay@counter
  8087                           
  8088                           ;main.c: 137: long adjustedDelaytime=delaytime*cMstrClkAdjust;
  8089  06F5  0827               	movf	delay@delaytime+1,w
  8090  06F6  00A1               	movwf	___wmul@multiplier+1
  8091  06F7  0826               	movf	delay@delaytime,w
  8092  06F8  00A0               	movwf	___wmul@multiplier
  8093  06F9  3022               	movlw	low (_cMstrClkAdjust| (0+32768))
  8094  06FA  0084               	movwf	4
  8095  06FB  3090               	movlw	high (_cMstrClkAdjust| (0+32768))
  8096  06FC  0085               	movwf	5
  8097  06FD  3F00               	moviw [0]fsr0
  8098  06FE  00A2               	movwf	___wmul@multiplicand
  8099  06FF  3F01               	moviw [1]fsr0
  8100  0700  00A3               	movwf	___wmul@multiplicand+1
  8101  0701  318F  274B  3186   	fcall	___wmul
  8102  0704  0020               	movlb	0	; select bank0
  8103  0705  0820               	movf	?___wmul,w
  8104  0706  00A9               	movwf	delay@adjustedDelaytime
  8105  0707  0821               	movf	?___wmul+1,w
  8106  0708  00AA               	movwf	delay@adjustedDelaytime+1
  8107  0709  0D89               	rlf	9,f
  8108  070A  3B89               	subwfb	9,f
  8109  070B  0989               	comf	9,f
  8110  070C  00AB               	movwf	delay@adjustedDelaytime+2
  8111  070D  00AC               	movwf	delay@adjustedDelaytime+3
  8112                           
  8113                           ;main.c: 138: if (0<delaytime)
  8114  070E  0827               	movf	delay@delaytime+1,w
  8115  070F  3A80               	xorlw	128
  8116  0710  00A8               	movwf	??_delay
  8117  0711  3080               	movlw	128
  8118  0712  0228               	subwf	??_delay,w
  8119  0713  1D03               	skipz
  8120  0714  2F17               	goto	u3165
  8121  0715  3001               	movlw	1
  8122  0716  0226               	subwf	delay@delaytime,w
  8123  0717                     u3165:	
  8124  0717  1C03               	skipc
  8125  0718  0008               	return
  8126                           
  8127                           ;main.c: 139: for (counter = 0; counter<adjustedDelaytime; counter++);
  8128  0719  3000               	movlw	0
  8129  071A  0020               	movlb	0	; select bank0
  8130  071B  00B0               	movwf	delay@counter+3
  8131  071C  3000               	movlw	0
  8132  071D  00AF               	movwf	delay@counter+2
  8133  071E  3000               	movlw	0
  8134  071F  00AE               	movwf	delay@counter+1
  8135  0720  3000               	movlw	0
  8136  0721  00AD               	movwf	delay@counter
  8137  0722                     l452:	
  8138  0722  0830               	movf	delay@counter+3,w
  8139  0723  3A80               	xorlw	128
  8140  0724  00A8               	movwf	??_delay
  8141  0725  082C               	movf	delay@adjustedDelaytime+3,w
  8142  0726  3A80               	xorlw	128
  8143  0727  0228               	subwf	??_delay,w
  8144  0728  1D03               	skipz
  8145  0729  2F34               	goto	u3173
  8146  072A  082B               	movf	delay@adjustedDelaytime+2,w
  8147  072B  022F               	subwf	delay@counter+2,w
  8148  072C  1D03               	skipz
  8149  072D  2F34               	goto	u3173
  8150  072E  082A               	movf	delay@adjustedDelaytime+1,w
  8151  072F  022E               	subwf	delay@counter+1,w
  8152  0730  1D03               	skipz
  8153  0731  2F34               	goto	u3173
  8154  0732  0829               	movf	delay@adjustedDelaytime,w
  8155  0733  022D               	subwf	delay@counter,w
  8156  0734                     u3173:	
  8157  0734  1803               	btfsc	3,0
  8158  0735  0008               	return
  8159  0736  3001               	movlw	1
  8160  0737  07AD               	addwf	delay@counter,f
  8161  0738  3000               	movlw	0
  8162  0739  3DAE               	addwfc	delay@counter+1,f
  8163  073A  3000               	movlw	0
  8164  073B  3DAF               	addwfc	delay@counter+2,f
  8165  073C  3000               	movlw	0
  8166  073D  3DB0               	addwfc	delay@counter+3,f
  8167  073E  2F22               	goto	l452
  8168  073F                     __end_of_delay:	
  8169                           
  8170                           	psect	text21
  8171  0F4B                     __ptext21:	
  8172 ;; *************** function ___wmul *****************
  8173 ;; Defined at:
  8174 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8177 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8178 ;; Auto vars:     Size  Location     Type
  8179 ;;  product         2    4[BANK0 ] unsigned int 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  2    0[BANK0 ] unsigned int 
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8189 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8192 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8193 ;;Total ram usage:        6 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    3
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_delay
  8200 ;;		_blinkyLoop
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           
  8205                           ;psect for function ___wmul
  8206  0F4B                     ___wmul:	
  8207                           
  8208                           ;incstack = 0
  8209                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8210  0F4B  0020               	movlb	0	; select bank0
  8211  0F4C  01A4               	clrf	___wmul@product
  8212  0F4D  01A5               	clrf	___wmul@product+1
  8213  0F4E                     l3419:	
  8214  0F4E  1C20               	btfss	___wmul@multiplier,0
  8215  0F4F  2F54               	goto	l767
  8216  0F50  0822               	movf	___wmul@multiplicand,w
  8217  0F51  07A4               	addwf	___wmul@product,f
  8218  0F52  0823               	movf	___wmul@multiplicand+1,w
  8219  0F53  3DA5               	addwfc	___wmul@product+1,f
  8220  0F54                     l767:	
  8221  0F54  3001               	movlw	1
  8222  0F55                     u3135:	
  8223  0F55  35A2               	lslf	___wmul@multiplicand,f
  8224  0F56  0DA3               	rlf	___wmul@multiplicand+1,f
  8225  0F57  0B89               	decfsz	9,f
  8226  0F58  2F55               	goto	u3135
  8227  0F59  3001               	movlw	1
  8228  0F5A                     u3145:	
  8229  0F5A  36A1               	lsrf	___wmul@multiplier+1,f
  8230  0F5B  0CA0               	rrf	___wmul@multiplier,f
  8231  0F5C  0B89               	decfsz	9,f
  8232  0F5D  2F5A               	goto	u3145
  8233  0F5E  0820               	movf	___wmul@multiplier,w
  8234  0F5F  0421               	iorwf	___wmul@multiplier+1,w
  8235  0F60  1D03               	btfss	3,2
  8236  0F61  2F4E               	goto	l3419
  8237  0F62  0825               	movf	___wmul@product+1,w
  8238  0F63  00A1               	movwf	?___wmul+1
  8239  0F64  0824               	movf	___wmul@product,w
  8240  0F65  00A0               	movwf	?___wmul
  8241  0F66  0008               	return
  8242  0F67                     __end_of___wmul:	
  8243                           
  8244                           	psect	text22
  8245  0E9D                     __ptext22:	
  8246 ;; *************** function _LED7SegPinWrite *****************
  8247 ;; Defined at:
  8248 ;;		line 48 in file "LED7Seg.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  val             1    wreg     unsigned char 
  8251 ;; Auto vars:     Size  Location     Type
  8252 ;;  val             1    0[BANK0 ] unsigned char 
  8253 ;; Return value:  Size  Location     Type
  8254 ;;                  1    wreg      void 
  8255 ;; Registers used:
  8256 ;;		wreg, status,2, status,0
  8257 ;; Tracked objects:
  8258 ;;		On entry : 0/0
  8259 ;;		On exit  : 0/0
  8260 ;;		Unchanged: 0/0
  8261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8265 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8266 ;;Total ram usage:        1 bytes
  8267 ;; Hardware stack levels used:    1
  8268 ;; Hardware stack levels required when called:    3
  8269 ;; This function calls:
  8270 ;;		Nothing
  8271 ;; This function is called by:
  8272 ;;		_LED7SegShiftOutPulseClock
  8273 ;; This function uses a non-reentrant model
  8274 ;;
  8275                           
  8276                           
  8277                           ;psect for function _LED7SegPinWrite
  8278  0E9D                     _LED7SegPinWrite:	
  8279                           
  8280                           ;incstack = 0
  8281                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
  8282                           ;LED7SegPinWrite@val stored from wreg
  8283  0E9D  0020               	movlb	0	; select bank0
  8284  0E9E  00A0               	movwf	LED7SegPinWrite@val
  8285                           
  8286                           ;LED7Seg.c: 50: if (val){
  8287  0E9F  0820               	movf	LED7SegPinWrite@val,w
  8288  0EA0  1903               	btfsc	3,2
  8289  0EA1  2EA4               	goto	l610
  8290                           
  8291                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
  8292  0EA2  1798               	bsf	24,7	;volatile
  8293                           
  8294                           ;LED7Seg.c: 53: } else {
  8295  0EA3  0008               	return
  8296  0EA4                     l610:	
  8297                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
  8298                           
  8299  0EA4  1398               	bcf	24,7	;volatile
  8300  0EA5  0008               	return
  8301  0EA6                     __end_of_LED7SegPinWrite:	
  8302                           
  8303                           	psect	text23
  8304  0ED8                     __ptext23:	
  8305 ;; *************** function _ADCC_GetSingleConversion *****************
  8306 ;; Defined at:
  8307 ;;		line 132 in file "mcc_generated_files/adcc.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  channel         1    wreg     enum E14259
  8310 ;; Auto vars:     Size  Location     Type
  8311 ;;  channel         1    3[BANK0 ] enum E14259
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  2    0[BANK0 ] unsigned int 
  8314 ;; Registers used:
  8315 ;;		wreg
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8321 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8324 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8325 ;;Total ram usage:        4 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    3
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_main
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           
  8336                           ;psect for function _ADCC_GetSingleConversion
  8337  0ED8                     _ADCC_GetSingleConversion:	
  8338                           
  8339                           ;incstack = 0
  8340                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  8341                           ;ADCC_GetSingleConversion@channel stored from wreg
  8342  0ED8  0020               	movlb	0	; select bank0
  8343  0ED9  00A3               	movwf	ADCC_GetSingleConversion@channel
  8344                           
  8345                           ;adcc.c: 135: ADPCH = channel;
  8346  0EDA  0823               	movf	ADCC_GetSingleConversion@channel,w
  8347  0EDB  0021               	movlb	1	; select bank1
  8348  0EDC  009E               	movwf	30	;volatile
  8349                           
  8350                           ;adcc.c: 138: ADCON0bits.ADON = 1;
  8351  0EDD  1793               	bsf	19,7	;volatile
  8352                           
  8353                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
  8354  0EDE  1313               	bcf	19,6	;volatile
  8355                           
  8356                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
  8357  0EDF  1413               	bsf	19,0	;volatile
  8358                           
  8359                           ;adcc.c: 147: __nop();
  8360  0EE0  0000               	nop
  8361  0EE1                     l163:	
  8362                           ;adcc.c: 151: {
  8363                           
  8364                           ;adcc.c: 150: while (ADCON0bits.ADGO)
  8365                           
  8366  0EE1  0021               	movlb	1	; select bank1
  8367  0EE2  1813               	btfsc	19,0	;volatile
  8368  0EE3  2EE1               	goto	l163
  8369                           
  8370                           ;adcc.c: 152: }
  8371                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8372  0EE4  080D               	movf	13,w	;volatile
  8373  0EE5  0020               	movlb	0	; select bank0
  8374  0EE6  00A1               	movwf	?_ADCC_GetSingleConversion+1
  8375  0EE7  0021               	movlb	1	; select bank1
  8376  0EE8  080C               	movf	12,w	;volatile
  8377  0EE9  0020               	movlb	0	; select bank0
  8378  0EEA  00A0               	movwf	?_ADCC_GetSingleConversion
  8379  0EEB  0008               	return
  8380  0EEC                     __end_of_ADCC_GetSingleConversion:	
  8381                           
  8382                           	psect	intentry
  8383  0004                     __pintentry:	
  8384 ;; *************** function _INTERRUPT_InterruptManager *****************
  8385 ;; Defined at:
  8386 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;		None
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8404 ;;Total ram usage:        1 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    2
  8407 ;; This function calls:
  8408 ;;		_I2C1_BusCollisionISR
  8409 ;;		_I2C1_ISR
  8410 ;; This function is called by:
  8411 ;;		Interrupt level 1
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415  0004                     _INTERRUPT_InterruptManager:	
  8416                           
  8417                           ;incstack = 0
  8418  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8419                           
  8420                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8421  0005  3180               	pagesel	$
  8422  0006  0020               	movlb	0	; select bank0
  8423  0007  087F               	movf	127,w
  8424  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  8425                           
  8426                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
  8427  0009  1F0B               	btfss	11,6	;volatile
  8428  000A  2813               	goto	i1l394
  8429  000B  002E               	movlb	14	; select bank14
  8430  000C  1899               	btfsc	25,1	;volatile
  8431  000D  1C8F               	btfss	15,1	;volatile
  8432  000E  2813               	goto	i1l394
  8433                           
  8434                           ;interrupt_manager.c: 55: {
  8435                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
  8436  000F  3180  2003  3180   	fcall	_I2C1_BusCollisionISR
  8437                           
  8438                           ;interrupt_manager.c: 57: }
  8439  0012  281B               	goto	i1l398
  8440  0013                     i1l394:	
  8441                           
  8442                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
  8443  0013  1F0B               	btfss	11,6	;volatile
  8444  0014  281B               	goto	i1l398
  8445  0015  002E               	movlb	14	; select bank14
  8446  0016  1819               	btfsc	25,0	;volatile
  8447  0017  1C0F               	btfss	15,0	;volatile
  8448  0018  281B               	goto	i1l398
  8449                           
  8450                           ;interrupt_manager.c: 59: {
  8451                           ;interrupt_manager.c: 60: I2C1_ISR();
  8452  0019  3182  2262         	fcall	_I2C1_ISR
  8453  001B                     i1l398:	
  8454                           ;interrupt_manager.c: 62: else
  8455                           ;interrupt_manager.c: 63: {
  8456                           
  8457                           ;interrupt_manager.c: 61: }
  8458                           
  8459  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  8460  001C  0020               	movlb	0	; select bank0
  8461  001D  00FF               	movwf	127
  8462  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8463  001F  0009               	retfie
  8464  0020                     __end_of_INTERRUPT_InterruptManager:	
  8465                           
  8466                           	psect	text25
  8467  0262                     __ptext25:	
  8468 ;; *************** function _I2C1_ISR *****************
  8469 ;; Defined at:
  8470 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;		None
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;		None
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;Total ram usage:        4 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    1
  8491 ;; This function calls:
  8492 ;;		_I2C1_FunctionComplete
  8493 ;;		_I2C1_Stop
  8494 ;; This function is called by:
  8495 ;;		_INTERRUPT_InterruptManager
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _I2C1_ISR
  8501  0262                     _I2C1_ISR:	
  8502                           
  8503                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  8504                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  8505                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  8506                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  8507                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
  8508                           
  8509                           ;incstack = 0
  8510                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8511  0262  002E               	movlb	14	; select bank14
  8512  0263  100F               	bcf	15,0	;volatile
  8513                           
  8514                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  8515  0264  0023               	movlb	3	; select bank3
  8516  0265  1F90               	btfss	16,7	;volatile
  8517  0266  2B8D               	goto	i1l2787
  8518                           
  8519                           ;i2c1.c: 246: {
  8520                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  8521  0267  1390               	bcf	16,7	;volatile
  8522                           
  8523                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  8524  0268  01F4               	clrf	_i2c1_state
  8525                           
  8526                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  8527  0269  0871               	movf	_p_i2c1_current,w
  8528  026A  3E02               	addlw	2
  8529  026B  0086               	movwf	6
  8530  026C  0187               	clrf	7
  8531  026D  0801               	movf	1,w
  8532  026E  0086               	movwf	6
  8533  026F  0187               	clrf	7
  8534  0270  0181               	clrf	1
  8535  0271  0A81               	incf	1,f
  8536                           
  8537                           ;i2c1.c: 253: p_i2c1_current = (0);
  8538  0272  01F1               	clrf	_p_i2c1_current
  8539                           
  8540                           ;i2c1.c: 255: return;
  8541  0273  0008               	return
  8542  0274                     i1l292:	
  8543                           ;i2c1.c: 260: {
  8544                           ;i2c1.c: 261: case S_MASTER_IDLE:
  8545                           
  8546                           ;i2c1.c: 256: }
  8547                           ;i2c1.c: 259: switch(i2c1_state)
  8548                           
  8549                           
  8550                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  8551  0274  0020               	movlb	0	; select bank0
  8552  0275  18E0               	btfsc	_i2c1_object+2,1
  8553  0276  0008               	return
  8554                           
  8555                           ;i2c1.c: 264: {
  8556                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  8557  0277  085F               	movf	low ((_i2c1_object| 0+1)),w
  8558  0278  00F9               	movwf	??_I2C1_ISR
  8559  0279  0879               	movf	??_I2C1_ISR,w
  8560  027A  00F1               	movwf	_p_i2c1_current
  8561                           
  8562                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  8563  027B  085F               	movf	low ((_i2c1_object| 0+1)),w
  8564  027C  0086               	movwf	6
  8565  027D  0187               	clrf	7
  8566  027E  0801               	movf	1,w
  8567  027F  00F9               	movwf	??_I2C1_ISR
  8568  0280  0879               	movf	??_I2C1_ISR,w
  8569  0281  00F3               	movwf	_i2c1_trb_count
  8570                           
  8571                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  8572  0282  085F               	movf	low ((_i2c1_object| 0+1)),w
  8573  0283  0086               	movwf	6
  8574  0284  0187               	clrf	7
  8575  0285  3F41               	moviw [1]fsr1
  8576  0286  00F2               	movwf	_p_i2c1_trb_current
  8577                           
  8578                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  8579  0287  3003               	movlw	3
  8580  0288  00F9               	movwf	??_I2C1_ISR
  8581  0289  0879               	movf	??_I2C1_ISR,w
  8582  028A  07DF               	addwf	low ((_i2c1_object| 0+1)),f
  8583                           
  8584                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  8585  028B  085F               	movf	low ((_i2c1_object| 0+1)),w
  8586  028C  3A70               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  8587  028D  1D03               	skipz
  8588  028E  2A93               	goto	i1l2675
  8589                           
  8590                           ;i2c1.c: 274: {
  8591                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  8592  028F  306D               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  8593  0290  00F9               	movwf	??_I2C1_ISR
  8594  0291  0879               	movf	??_I2C1_ISR,w
  8595  0292  00DF               	movwf	low ((_i2c1_object| 0+1))
  8596  0293                     i1l2675:	
  8597                           
  8598                           ;i2c1.c: 277: }
  8599                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  8600  0293  1060               	bcf	_i2c1_object+2,0
  8601                           
  8602                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  8603  0294  085F               	movf	low ((_i2c1_object| 0+1)),w
  8604  0295  065E               	xorwf	_i2c1_object,w
  8605  0296  1903               	btfsc	3,2
  8606                           
  8607                           ;i2c1.c: 285: {
  8608                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  8609  0297  14E0               	bsf	_i2c1_object+2,1
  8610                           
  8611                           ;i2c1.c: 288: }
  8612                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  8613  0298  0023               	movlb	3	; select bank3
  8614  0299  1411               	bsf	17,0	;volatile
  8615                           
  8616                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  8617  029A  3002               	movlw	2
  8618  029B  00F9               	movwf	??_I2C1_ISR
  8619  029C  0879               	movf	??_I2C1_ISR,w
  8620  029D  00F4               	movwf	_i2c1_state
  8621                           
  8622                           ;i2c1.c: 295: }
  8623                           ;i2c1.c: 297: break;
  8624  029E  0008               	return
  8625  029F                     i1l297:	
  8626                           ;i2c1.c: 299: case S_MASTER_RESTART:
  8627                           
  8628                           
  8629                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  8630  029F  0023               	movlb	3	; select bank3
  8631  02A0  1491               	bsf	17,1	;volatile
  8632                           
  8633                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  8634  02A1  3002               	movlw	2
  8635  02A2  00F9               	movwf	??_I2C1_ISR
  8636  02A3  0879               	movf	??_I2C1_ISR,w
  8637  02A4  00F4               	movwf	_i2c1_state
  8638                           
  8639                           ;i2c1.c: 309: break;
  8640  02A5  0008               	return
  8641  02A6                     i1l298:	
  8642                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  8643                           
  8644                           
  8645                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  8646  02A6  0023               	movlb	3	; select bank3
  8647  02A7  1F11               	btfss	17,6	;volatile
  8648  02A8  2AB2               	goto	i1l2687
  8649                           
  8650                           ;i2c1.c: 314: {
  8651                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  8652  02A9  3001               	movlw	1
  8653  02AA  00F9               	movwf	??_I2C1_ISR
  8654  02AB  0879               	movf	??_I2C1_ISR,w
  8655  02AC  0020               	movlb	0	; select bank0
  8656  02AD  07E2               	addwf	_i2c1_object+4,f
  8657                           
  8658                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8659  02AE  3004               	movlw	4
  8660  02AF  318F  2702         	fcall	_I2C1_Stop
  8661                           
  8662                           ;i2c1.c: 317: }
  8663  02B1  0008               	return
  8664  02B2                     i1l2687:	
  8665                           
  8666                           ;i2c1.c: 318: else
  8667                           ;i2c1.c: 319: {
  8668                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  8669  02B2  0876               	movf	I2C1_ISR@i2c_address+1,w
  8670  02B3  00FA               	movwf	??_I2C1_ISR+1
  8671  02B4  0875               	movf	I2C1_ISR@i2c_address,w
  8672  02B5  00F9               	movwf	??_I2C1_ISR
  8673  02B6  36FA               	lsrf	??_I2C1_ISR+1,f
  8674  02B7  0CF9               	rrf	??_I2C1_ISR,f
  8675  02B8  0879               	movf	??_I2C1_ISR,w
  8676  02B9  0023               	movlb	3	; select bank3
  8677  02BA  008C               	movwf	12	;volatile
  8678                           
  8679                           ;i2c1.c: 324: if(i2c_address & 0x01)
  8680  02BB  1C75               	btfss	I2C1_ISR@i2c_address,0
  8681  02BC  2AC2               	goto	i1l2693
  8682                           
  8683                           ;i2c1.c: 325: {
  8684                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  8685  02BD  300B               	movlw	11
  8686  02BE  00F9               	movwf	??_I2C1_ISR
  8687  02BF  0879               	movf	??_I2C1_ISR,w
  8688  02C0  00F4               	movwf	_i2c1_state
  8689                           
  8690                           ;i2c1.c: 329: }
  8691  02C1  0008               	return
  8692  02C2                     i1l2693:	
  8693                           
  8694                           ;i2c1.c: 330: else
  8695                           ;i2c1.c: 331: {
  8696                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  8697  02C2  3003               	movlw	3
  8698  02C3  00F9               	movwf	??_I2C1_ISR
  8699  02C4  0879               	movf	??_I2C1_ISR,w
  8700  02C5  00F4               	movwf	_i2c1_state
  8701                           
  8702                           ;i2c1.c: 334: }
  8703                           ;i2c1.c: 335: }
  8704                           ;i2c1.c: 337: break;
  8705  02C6  0008               	return
  8706  02C7                     i1l303:	
  8707                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  8708                           
  8709                           
  8710                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  8711  02C7  0023               	movlb	3	; select bank3
  8712  02C8  1F11               	btfss	17,6	;volatile
  8713  02C9  2AD3               	goto	i1l304
  8714                           
  8715                           ;i2c1.c: 342: {
  8716                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  8717  02CA  3001               	movlw	1
  8718  02CB  00F9               	movwf	??_I2C1_ISR
  8719  02CC  0879               	movf	??_I2C1_ISR,w
  8720  02CD  0020               	movlb	0	; select bank0
  8721  02CE  07E2               	addwf	_i2c1_object+4,f
  8722                           
  8723                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8724  02CF  3004               	movlw	4
  8725  02D0  318F  2702         	fcall	_I2C1_Stop
  8726                           
  8727                           ;i2c1.c: 345: }
  8728  02D2  0008               	return
  8729  02D3                     i1l304:	
  8730                           
  8731                           ;i2c1.c: 346: else
  8732                           ;i2c1.c: 347: {
  8733                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  8734  02D3  1491               	bsf	17,1	;volatile
  8735                           
  8736                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  8737  02D4  0876               	movf	I2C1_ISR@i2c_address+1,w
  8738  02D5  00FA               	movwf	??_I2C1_ISR+1
  8739  02D6  0875               	movf	I2C1_ISR@i2c_address,w
  8740  02D7  00F9               	movwf	??_I2C1_ISR
  8741  02D8  087A               	movf	??_I2C1_ISR+1,w
  8742  02D9  00F9               	movwf	??_I2C1_ISR
  8743  02DA  01FA               	clrf	??_I2C1_ISR+1
  8744  02DB  3006               	movlw	6
  8745  02DC  0579               	andwf	??_I2C1_ISR,w
  8746  02DD  00FB               	movwf	??_I2C1_ISR+2
  8747  02DE  3000               	movlw	0
  8748  02DF  057A               	andwf	??_I2C1_ISR+1,w
  8749  02E0  00FC               	movwf	??_I2C1_ISR+3
  8750  02E1  30F0               	movlw	240
  8751  02E2  047B               	iorwf	??_I2C1_ISR+2,w
  8752  02E3  00F5               	movwf	I2C1_ISR@i2c_address
  8753  02E4  3000               	movlw	0
  8754  02E5  047C               	iorwf	??_I2C1_ISR+3,w
  8755  02E6  00F6               	movwf	I2C1_ISR@i2c_address+1
  8756                           
  8757                           ;i2c1.c: 357: i2c_address |= 0x0001;
  8758  02E7  1475               	bsf	I2C1_ISR@i2c_address,0
  8759                           
  8760                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  8761  02E8  0020               	movlb	0	; select bank0
  8762  02E9  01EB               	clrf	I2C1_ISR@i2c_10bit_address_restart
  8763  02EA  0AEB               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  8764                           
  8765                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  8766  02EB  3002               	movlw	2
  8767  02EC  00F9               	movwf	??_I2C1_ISR
  8768  02ED  0879               	movf	??_I2C1_ISR,w
  8769  02EE  00F4               	movwf	_i2c1_state
  8770                           
  8771                           ;i2c1.c: 364: }
  8772                           ;i2c1.c: 366: break;
  8773  02EF  0008               	return
  8774  02F0                     i1l2707:	
  8775                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  8776                           
  8777                           
  8778                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  8779  02F0  0020               	movlb	0	; select bank0
  8780  02F1  036B               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  8781  02F2  1903               	btfsc	3,2
  8782  02F3  2B05               	goto	i1l2727
  8783                           
  8784                           ;i2c1.c: 382: {
  8785                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  8786  02F4  0872               	movf	_p_i2c1_trb_current,w
  8787  02F5  0086               	movwf	6
  8788  02F6  0187               	clrf	7
  8789  02F7  3F40               	moviw [0]fsr1
  8790  02F8  00F5               	movwf	I2C1_ISR@i2c_address
  8791  02F9  3F41               	moviw [1]fsr1
  8792  02FA  00F6               	movwf	I2C1_ISR@i2c_address+1
  8793                           
  8794                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  8795  02FB  0872               	movf	_p_i2c1_trb_current,w
  8796  02FC  0086               	movwf	6
  8797  02FD  0187               	clrf	7
  8798  02FE  3F43               	moviw [3]fsr1
  8799  02FF  00F0               	movwf	I2C1_ISR@pi2c_buf_ptr
  8800                           
  8801                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  8802  0300  0872               	movf	_p_i2c1_trb_current,w
  8803  0301  0086               	movwf	6
  8804  0302  0187               	clrf	7
  8805  0303  3F42               	moviw [2]fsr1
  8806  0304  00EC               	movwf	I2C1_ISR@i2c_bytes_left
  8807  0305                     i1l2727:	
  8808                           ;i2c1.c: 407: }
  8809                           ;i2c1.c: 408: }
  8810                           
  8811                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  8812                           
  8813                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  8814                           
  8815                           ;i2c1.c: 400: else
  8816                           ;i2c1.c: 401: {
  8817                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  8818                           
  8819                           ;i2c1.c: 399: }
  8820                           
  8821                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  8822                           
  8823                           ;i2c1.c: 393: {
  8824                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  8825                           
  8826                           ;i2c1.c: 391: {
  8827                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  8828                           
  8829                           ;i2c1.c: 387: }
  8830                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  8831                           
  8832                           
  8833                           ;i2c1.c: 409: else
  8834                           ;i2c1.c: 410: {
  8835                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  8836  0305  0875               	movf	I2C1_ISR@i2c_address,w
  8837  0306  0023               	movlb	3	; select bank3
  8838  0307  008C               	movwf	12	;volatile
  8839                           
  8840                           ;i2c1.c: 413: if(i2c_address & 0x01)
  8841  0308  1C75               	btfss	I2C1_ISR@i2c_address,0
  8842  0309  2B0F               	goto	i1l2733
  8843                           
  8844                           ;i2c1.c: 414: {
  8845                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  8846  030A  3005               	movlw	5
  8847  030B  00F9               	movwf	??_I2C1_ISR
  8848  030C  0879               	movf	??_I2C1_ISR,w
  8849  030D  00F4               	movwf	_i2c1_state
  8850                           
  8851                           ;i2c1.c: 417: }
  8852  030E  0008               	return
  8853  030F                     i1l2733:	
  8854                           
  8855                           ;i2c1.c: 418: else
  8856                           ;i2c1.c: 419: {
  8857                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  8858  030F  3003               	movlw	3
  8859  0310  00F9               	movwf	??_I2C1_ISR
  8860  0311  0879               	movf	??_I2C1_ISR,w
  8861  0312  00F4               	movwf	_i2c1_state
  8862                           
  8863                           ;i2c1.c: 422: }
  8864                           ;i2c1.c: 423: }
  8865                           ;i2c1.c: 424: break;
  8866  0313  0008               	return
  8867  0314                     i1l314:	
  8868                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  8869                           
  8870                           
  8871                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  8872  0314  0023               	movlb	3	; select bank3
  8873  0315  1F11               	btfss	17,6	;volatile
  8874  0316  2B22               	goto	i1l2741
  8875                           
  8876                           ;i2c1.c: 430: {
  8877                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  8878  0317  3001               	movlw	1
  8879  0318  00F9               	movwf	??_I2C1_ISR
  8880  0319  0879               	movf	??_I2C1_ISR,w
  8881  031A  0020               	movlb	0	; select bank0
  8882  031B  07E2               	addwf	_i2c1_object+4,f
  8883                           
  8884                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  8885  031C  0023               	movlb	3	; select bank3
  8886  031D  1311               	bcf	17,6	;volatile
  8887                           
  8888                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  8889  031E  3005               	movlw	5
  8890  031F  318F  2702         	fcall	_I2C1_Stop
  8891                           
  8892                           ;i2c1.c: 440: }
  8893  0321  0008               	return
  8894  0322                     i1l2741:	
  8895                           
  8896                           ;i2c1.c: 441: else
  8897                           ;i2c1.c: 442: {
  8898                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  8899  0322  3001               	movlw	1
  8900  0323  0020               	movlb	0	; select bank0
  8901  0324  02EC               	subwf	I2C1_ISR@i2c_bytes_left,f
  8902  0325  0A6C               	incf	I2C1_ISR@i2c_bytes_left,w
  8903  0326  1D03               	btfss	3,2
  8904  0327  2B3B               	goto	i1l2749
  8905                           
  8906                           ;i2c1.c: 445: {
  8907                           ;i2c1.c: 449: p_i2c1_trb_current++;
  8908  0328  3004               	movlw	4
  8909  0329  00F9               	movwf	??_I2C1_ISR
  8910  032A  0879               	movf	??_I2C1_ISR,w
  8911  032B  07F2               	addwf	_p_i2c1_trb_current,f
  8912                           
  8913                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  8914  032C  3001               	movlw	1
  8915  032D  02F3               	subwf	_i2c1_trb_count,f
  8916  032E  1D03               	btfss	3,2
  8917  032F  2B34               	goto	i1l318
  8918                           
  8919                           ;i2c1.c: 453: {
  8920                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  8921  0330  3000               	movlw	0
  8922  0331  318F  2702         	fcall	_I2C1_Stop
  8923                           
  8924                           ;i2c1.c: 455: }
  8925  0333  0008               	return
  8926  0334                     i1l318:	
  8927                           
  8928                           ;i2c1.c: 456: else
  8929                           ;i2c1.c: 457: {
  8930                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  8931  0334  0023               	movlb	3	; select bank3
  8932  0335  1491               	bsf	17,1	;volatile
  8933                           
  8934                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  8935  0336  3002               	movlw	2
  8936  0337  00F9               	movwf	??_I2C1_ISR
  8937  0338  0879               	movf	??_I2C1_ISR,w
  8938  0339  00F4               	movwf	_i2c1_state
  8939                           
  8940                           ;i2c1.c: 469: }
  8941                           ;i2c1.c: 470: }
  8942  033A  0008               	return
  8943  033B                     i1l2749:	
  8944                           
  8945                           ;i2c1.c: 471: else
  8946                           ;i2c1.c: 472: {
  8947                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  8948  033B  0870               	movf	I2C1_ISR@pi2c_buf_ptr,w
  8949  033C  0086               	movwf	6
  8950  033D  0187               	clrf	7
  8951  033E  0801               	movf	1,w
  8952  033F  0023               	movlb	3	; select bank3
  8953  0340  008C               	movwf	12	;volatile
  8954  0341  3001               	movlw	1
  8955  0342  00F9               	movwf	??_I2C1_ISR
  8956  0343  0879               	movf	??_I2C1_ISR,w
  8957  0344  07F0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  8958                           
  8959                           ;i2c1.c: 475: }
  8960                           ;i2c1.c: 476: }
  8961                           ;i2c1.c: 477: break;
  8962  0345  0008               	return
  8963  0346                     i1l321:	
  8964                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  8965                           
  8966                           
  8967                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  8968  0346  0023               	movlb	3	; select bank3
  8969  0347  1F11               	btfss	17,6	;volatile
  8970  0348  2B54               	goto	i1l322
  8971                           
  8972                           ;i2c1.c: 483: {
  8973                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  8974  0349  3001               	movlw	1
  8975  034A  00F9               	movwf	??_I2C1_ISR
  8976  034B  0879               	movf	??_I2C1_ISR,w
  8977  034C  0020               	movlb	0	; select bank0
  8978  034D  07E2               	addwf	_i2c1_object+4,f
  8979                           
  8980                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8981  034E  3004               	movlw	4
  8982  034F  318F  2702         	fcall	_I2C1_Stop
  8983                           
  8984                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  8985  0351  0023               	movlb	3	; select bank3
  8986  0352  1311               	bcf	17,6	;volatile
  8987                           
  8988                           ;i2c1.c: 493: }
  8989  0353  0008               	return
  8990  0354                     i1l322:	
  8991                           
  8992                           ;i2c1.c: 494: else
  8993                           ;i2c1.c: 495: {
  8994                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  8995  0354  1591               	bsf	17,3	;volatile
  8996                           
  8997                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  8998  0355  3008               	movlw	8
  8999  0356  00F9               	movwf	??_I2C1_ISR
  9000  0357  0879               	movf	??_I2C1_ISR,w
  9001  0358  00F4               	movwf	_i2c1_state
  9002                           
  9003                           ;i2c1.c: 498: }
  9004                           ;i2c1.c: 499: break;
  9005  0359  0008               	return
  9006  035A                     i1l2761:	
  9007                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  9008                           
  9009                           
  9010                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  9011  035A  3008               	movlw	8
  9012  035B  00F9               	movwf	??_I2C1_ISR
  9013  035C  0879               	movf	??_I2C1_ISR,w
  9014  035D  00F4               	movwf	_i2c1_state
  9015                           
  9016                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  9017  035E  0023               	movlb	3	; select bank3
  9018  035F  1591               	bsf	17,3	;volatile
  9019                           
  9020                           ;i2c1.c: 511: break;
  9021  0360  0008               	return
  9022  0361                     i1l2765:	
  9023                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  9024                           
  9025                           
  9026                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  9027  0361  0023               	movlb	3	; select bank3
  9028  0362  080C               	movf	12,w	;volatile
  9029  0363  00F9               	movwf	??_I2C1_ISR
  9030  0364  0870               	movf	I2C1_ISR@pi2c_buf_ptr,w
  9031  0365  0086               	movwf	6
  9032  0366  0187               	clrf	7
  9033  0367  0879               	movf	??_I2C1_ISR,w
  9034  0368  0081               	movwf	1
  9035  0369  3001               	movlw	1
  9036  036A  00F9               	movwf	??_I2C1_ISR
  9037  036B  0879               	movf	??_I2C1_ISR,w
  9038  036C  07F0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  9039                           
  9040                           ;i2c1.c: 519: if(--i2c_bytes_left)
  9041  036D  3001               	movlw	1
  9042  036E  0020               	movlb	0	; select bank0
  9043  036F  02EC               	subwf	I2C1_ISR@i2c_bytes_left,f
  9044  0370  1903               	btfsc	3,2
  9045  0371  2B79               	goto	i1l326
  9046                           
  9047                           ;i2c1.c: 520: {
  9048                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  9049  0372  0023               	movlb	3	; select bank3
  9050  0373  1291               	bcf	17,5	;volatile
  9051                           
  9052                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  9053  0374  3006               	movlw	6
  9054  0375  00F9               	movwf	??_I2C1_ISR
  9055  0376  0879               	movf	??_I2C1_ISR,w
  9056  0377  00F4               	movwf	_i2c1_state
  9057                           
  9058                           ;i2c1.c: 530: }
  9059  0378  2B7D               	goto	i1l2777
  9060  0379                     i1l326:	
  9061                           
  9062                           ;i2c1.c: 531: else
  9063                           ;i2c1.c: 532: {
  9064                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  9065  0379  0023               	movlb	3	; select bank3
  9066  037A  1691               	bsf	17,5	;volatile
  9067                           
  9068                           ;i2c1.c: 538: I2C1_FunctionComplete();
  9069  037B  318E  26C8         	fcall	_I2C1_FunctionComplete
  9070  037D                     i1l2777:	
  9071                           
  9072                           ;i2c1.c: 539: }
  9073                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  9074  037D  0023               	movlb	3	; select bank3
  9075  037E  1611               	bsf	17,4	;volatile
  9076                           
  9077                           ;i2c1.c: 543: break;
  9078  037F  0008               	return
  9079  0380                     i1l2779:	
  9080                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  9081                           
  9082                           
  9083                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  9084                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9085  0380  3000               	movlw	0
  9086  0381  318F  2702         	fcall	_I2C1_Stop
  9087                           
  9088                           ;i2c1.c: 550: break;
  9089  0383  0008               	return
  9090  0384                     i1l2781:	
  9091                           ;i2c1.c: 552: default:
  9092                           
  9093                           
  9094                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  9095  0384  3001               	movlw	1
  9096  0385  00F9               	movwf	??_I2C1_ISR
  9097  0386  0879               	movf	??_I2C1_ISR,w
  9098  0387  0020               	movlb	0	; select bank0
  9099  0388  07E2               	addwf	_i2c1_object+4,f
  9100                           
  9101                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  9102  0389  3006               	movlw	6
  9103  038A  318F  2702         	fcall	_I2C1_Stop
  9104                           
  9105                           ;i2c1.c: 560: }
  9106                           
  9107                           ;i2c1.c: 558: break;
  9108  038C  0008               	return
  9109  038D                     i1l2787:	
  9110  038D  0874               	movf	_i2c1_state,w
  9111                           
  9112                           ; Switch size 1, requested type "space"
  9113                           ; Number of cases is 11, Range of values is 0 to 11
  9114                           ; switch strategies available:
  9115                           ; Name         Instructions Cycles
  9116                           ; direct_byte           30     6 (fixed)
  9117                           ; simple_byte           34    18 (average)
  9118                           ; jumptable            260     6 (fixed)
  9119                           ;	Chosen strategy is direct_byte
  9120  038E  0084               	movwf	4
  9121  038F  300C               	movlw	12
  9122  0390  0204               	subwf	4,w
  9123  0391  1803               	skipnc
  9124  0392  2B84               	goto	i1l2781
  9125  0393  3188               	movlp	high i1S3809
  9126  0394  3504               	lslf	4,w
  9127  0395  3E00               	addlw	low i1S3809
  9128  0396  0082               	movwf	2
  9129  0397  0008               	return
  9130  0398                     __end_of_I2C1_ISR:	
  9131                           
  9132                           	psect	swtext1
  9133  0800                     __pswtext1:	
  9134  0800                     i1S3809:	
  9135  0800  3182  2A74         	ljmp	i1l292
  9136  0802  3182  2A9F         	ljmp	i1l297
  9137  0804  3182  2AF0         	ljmp	i1l2707
  9138  0806  3183  2B14         	ljmp	i1l314
  9139  0808  3183  2B80         	ljmp	i1l2779
  9140  080A  3183  2B46         	ljmp	i1l321
  9141  080C  3183  2B5A         	ljmp	i1l2761
  9142  080E  3183  2B80         	ljmp	i1l2779
  9143  0810  3183  2B61         	ljmp	i1l2765
  9144  0812  3183  2B84         	ljmp	i1l2781
  9145  0814  3182  2AA6         	ljmp	i1l298
  9146  0816  3182  2AC7         	ljmp	i1l303
  9147                           
  9148                           	psect	text26
  9149  0F02                     __ptext26:	
  9150 ;; *************** function _I2C1_Stop *****************
  9151 ;; Defined at:
  9152 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;  completion_c    1    wreg     enum E14260
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;  completion_c    1    1[COMMON] enum E14260
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9170 ;;Total ram usage:        2 bytes
  9171 ;; Hardware stack levels used:    1
  9172 ;; This function calls:
  9173 ;;		Nothing
  9174 ;; This function is called by:
  9175 ;;		_I2C1_ISR
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           
  9180                           ;psect for function _I2C1_Stop
  9181  0F02                     _I2C1_Stop:	
  9182                           
  9183                           ;incstack = 0
  9184                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  9185                           ;I2C1_Stop@completion_code stored from wreg
  9186  0F02  00F8               	movwf	I2C1_Stop@completion_code
  9187                           
  9188                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  9189  0F03  0023               	movlb	3	; select bank3
  9190  0F04  1511               	bsf	17,2	;volatile
  9191                           
  9192                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  9193  0F05  0871               	movf	_p_i2c1_current,w
  9194  0F06  3E02               	addlw	2
  9195  0F07  0086               	movwf	6
  9196  0F08  0187               	clrf	7
  9197  0F09  0801               	movf	1,w
  9198  0F0A  1903               	btfsc	3,2
  9199  0F0B  2F17               	goto	i1l2573
  9200                           
  9201                           ;i2c1.c: 588: {
  9202                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  9203  0F0C  0878               	movf	I2C1_Stop@completion_code,w
  9204  0F0D  00F7               	movwf	??_I2C1_Stop
  9205  0F0E  0871               	movf	_p_i2c1_current,w
  9206  0F0F  3E02               	addlw	2
  9207  0F10  0086               	movwf	6
  9208  0F11  0187               	clrf	7
  9209  0F12  0801               	movf	1,w
  9210  0F13  0086               	movwf	6
  9211  0F14  0187               	clrf	7
  9212  0F15  0877               	movf	??_I2C1_Stop,w
  9213  0F16  0081               	movwf	1
  9214  0F17                     i1l2573:	
  9215                           
  9216                           ;i2c1.c: 591: }
  9217                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  9218  0F17  01F4               	clrf	_i2c1_state
  9219  0F18  0008               	return
  9220  0F19                     __end_of_I2C1_Stop:	
  9221                           
  9222                           	psect	text27
  9223  0EC8                     __ptext27:	
  9224 ;; *************** function _I2C1_FunctionComplete *****************
  9225 ;; Defined at:
  9226 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;		None
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;		None
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  1    wreg      void 
  9233 ;; Registers used:
  9234 ;;		wreg, status,2, status,0
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;Total ram usage:        1 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_I2C1_ISR
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           
  9254                           ;psect for function _I2C1_FunctionComplete
  9255  0EC8                     _I2C1_FunctionComplete:	
  9256                           
  9257                           ;i2c1.c: 567: p_i2c1_trb_current++;
  9258                           
  9259                           ;incstack = 0
  9260                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  9261  0EC8  3004               	movlw	4
  9262  0EC9  00F7               	movwf	??_I2C1_FunctionComplete
  9263  0ECA  0877               	movf	??_I2C1_FunctionComplete,w
  9264  0ECB  07F2               	addwf	_p_i2c1_trb_current,f
  9265                           
  9266                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  9267  0ECC  3001               	movlw	1
  9268  0ECD  02F3               	subwf	_i2c1_trb_count,f
  9269  0ECE  1D03               	btfss	3,2
  9270  0ECF  2ED5               	goto	i1l333
  9271                           
  9272                           ;i2c1.c: 571: {
  9273                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  9274  0ED0  3004               	movlw	4
  9275  0ED1  00F7               	movwf	??_I2C1_FunctionComplete
  9276  0ED2  0877               	movf	??_I2C1_FunctionComplete,w
  9277  0ED3  00F4               	movwf	_i2c1_state
  9278                           
  9279                           ;i2c1.c: 573: }
  9280  0ED4  0008               	return
  9281  0ED5                     i1l333:	
  9282                           
  9283                           ;i2c1.c: 574: else
  9284                           ;i2c1.c: 575: {
  9285                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  9286  0ED5  01F4               	clrf	_i2c1_state
  9287  0ED6  0AF4               	incf	_i2c1_state,f
  9288  0ED7  0008               	return
  9289  0ED8                     __end_of_I2C1_FunctionComplete:	
  9290                           
  9291                           	psect	text28
  9292  0003                     __ptext28:	
  9293 ;; *************** function _I2C1_BusCollisionISR *****************
  9294 ;; Defined at:
  9295 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;		None
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;		None
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      void 
  9302 ;; Registers used:
  9303 ;;		None
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;Total ram usage:        0 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; This function calls:
  9316 ;;		Nothing
  9317 ;; This function is called by:
  9318 ;;		_INTERRUPT_InterruptManager
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322                           
  9323                           ;psect for function _I2C1_BusCollisionISR
  9324  0003                     _I2C1_BusCollisionISR:	
  9325                           
  9326                           ;incstack = 0
  9327                           ; Regs used in _I2C1_BusCollisionISR: []
  9328  0003  0008               	return
  9329  0004                     __end_of_I2C1_BusCollisionISR:	
  9330  007E                     btemp	set	126	;btemp
  9331  007E                     int$flags	set	126
  9332  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    36
    Data        36
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     62      80
    BANK1            80     21      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S374$pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    S386$pTrFlag	PTR enum E14260 size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 4
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 
		 -> byteFaderValue(BANK1[4]), 

    S386$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S397$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S397$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_writeDAC528
    _writeDAC528->_putByte
    _initDAC528->_putByte
    _putByte->___fttol
    ___fttol->___ftdiv
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    _blinkyLoop->_delay
    ___ftdiv->___awtoft
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED7SegDisplayValueByDigit->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   21990
                                             58 BANK0      4     4      0
                                              0 BANK1     21    21      0
           _ADCC_GetSingleConversion
         _LED7SegDisplayValueByDigit
                       _LED7SegSetup
                  _SYSTEM_Initialize
                            ___awdiv
                           ___awtoft
                            ___ftdiv
                            ___fttol
                         _blinkyLoop
                              _delay
                         _initDAC528
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _writeDAC528                                          5     2      3    5442
                                             53 BANK0      5     2      3
                            _putByte
 ---------------------------------------------------------------------------------
 (1) _initDAC528                                           1     1      0    5268
                                             53 BANK0      1     1      0
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _putByte                                              9     7      2    5268
                                             44 BANK0      9     7      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     623
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2315
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2027
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    1872
                                             17 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2163
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1671
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     406
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegDisplayValueByDigit                           6     2      4    1872
                                             20 BANK0      6     2      4
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (2) _LED7SegShiftOutPulseClock                            3     3      0    1408
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegPulseClock                                    0     0      0    1247
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1247
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LED7SegDisplayValueByDigit
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
   _LED7SegSetup
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___awdiv
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _blinkyLoop
     ___wmul
     _delay
       ___wmul
   _delay
     ___wmul
   _initDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _writeDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     15      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Aug 22 07:26:40 2018

                                    _b 0063                                      _c 00CD  
                                    _d 00C8                                      _e 00CB  
                                    pc 0002                            __CFG_CP$OFF 0000  
                         ___awdiv@sign 0026             __size_of_LED7SegPulseClock 000B  
           MYI2C_Write2LEDBytes@F14477 00B4                    ___wmul@multiplicand 0022  
                                  l163 0EE1                                    l610 0EA4  
                                  l452 0722                                    l471 00F3  
                                  l674 039E                                    l767 0F54  
                                  l935 0677                                    l936 067F  
                                  l928 0664                                    _GIE 005F  
                         __CFG_CPD$OFF 0000                           __CFG_BORV$LO 0000  
                                  wreg 0009                           __CFG_LVP$OFF 0000  
                         __CFG_ZCD$OFF 0000                           ___ftdiv@cntr 0038  
                     __end_of_I2C1_ISR 0398                           ___ftdiv@sign 003D  
                                 l1019 0617                                   l2401 04B5  
                                 l2331 063A                                   l2413 04D1  
                                 l2405 04BD                                   l2335 0641  
                                 l2345 0669                                   l2337 064B  
                                 l2417 04D9                                   l2433 05C3  
                                 l2347 0671                                   l2339 0650  
                                 l2451 05F3                                   l2373 0F8E  
                                 l2461 061A                                   l2453 0601  
                                 l2383 0464                                   l2465 0628  
                                 l3419 0F4E                                   l3603 0FF0  
                                 l2459 060E                                   l2627 03E7  
                                 l2389 047A                                   l2629 03EB  
                                 l3711 0180                                   l2913 0755  
                                 l2931 077B                                   l2923 075D  
                                 l2907 074A                                   l2925 0769  
                                 l2935 0784                                   l3575 06A6  
                                 l3593 0FD5                                   l3577 06E0  
                                 l3737 024C                                   l3729 022C  
                                 l3665 0073                                   l2939 078C  
                                 l2955 052E                                   l3675 00BC  
                                 l3597 0FE0                                   l2949 0518  
                                 l3685 00D8                                   l3695 0102  
                                 l2977 0588                                   l2969 056F  
                                 u2044 03A8                                   u2045 03A7  
                                 _LATA 0016                                   _LATB 0017  
                                 _LATC 0018                                   u1605 065F  
                                 u3135 0F55                                   u2335 0760  
                                 u3224 0F73                                   u3145 0F5A  
                                 u3225 0F72                                   u1625 066C  
                                 u2425 0540                                   u3305 0071  
                                 u2355 076A                                   u2435 0550  
                                 u3315 00BA                                   u3173 0734  
                                 u3165 0717                                   u2365 0774  
                                 u2445 0570                                   u1805 04E0  
                                 u1725 0486                                   u3325 00EF  
                                 u3190 07CE                                   u2375 077C  
                                 u2455 057F                                   u3255 06B0  
                                 u1735 0496                                   u3335 0100  
                                 u1665 0686                                   u1585 0646  
                                 u2465 0589                                   u3345 017E  
                                 u1755 04BE                                   u1835 05CA  
                                 u1765 04C4                                   u1865 05F4  
                                 u1795 04DA                                   u1895 060F  
                                 _WPUA 0F39                                   _WPUB 0F44  
                                 _WPUC 0F4F                                   _WPUE 0F65  
                         __CFG_WRT$OFF 0000                          __CFG_FCMEN$ON 0000  
                                 _main 0048                           ___ftpack@arg 0020  
                         ___ftpack@exp 0023                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   _twoK 1016  
                                 btemp 007E                           main@iCounter 00E1  
 LED7SegDisplayValueByDigit@iTensDigit 0034                          __CFG_BOREN$ON 0000  
              __end_of_LED7SegPinWrite 0EA6                                   start 0020  
                          _writeDAC528 07D0                          __CFG_CSWEN$ON 0000  
                        __CFG_MCLRE$ON 0000                           ___ftmul@cntr 003C  
                         ___ftmul@sign 003D                           ___fttol@exp1 004B  
                         ___fttol@lval 0047                             _i2c1_state 0074  
       __size_of_OSCILLATOR_Initialize 0009          __end_of_OSCILLATOR_Initialize 0EAF  
                                _ADACQ 009D                                  _ADACT 0099  
                                _ADCAP 009B                                  ?_main 0077  
                                _ADCLK 0098                                  _ADCNT 010C  
                                _ADPCH 009E                                  _ADREF 009A  
                      __end_of___awdiv 0791                      __end_of_I2C1_Stop 0F19  
                                _ADPRE 009C                          __CFG_WDTE$OFF 0000  
                                _ADRPT 010D                        __end_of___ftdiv 05AA  
                      __end_of___ftmul 0501                        ___awdiv@divisor 0020  
                      __end_of___fttol 0631                         __CFG_DEBUG$OFF 0000  
                                i1l303 02C7                                  i1l304 02D3  
                                i1l321 0346                                  i1l322 0354  
                                i1l314 0314                                  i1l333 0ED5  
                                i1l326 0379                                  i1l318 0334  
                                i1l292 0274                                  i1l297 029F  
                                i1l298 02A6                                  i1l394 0013  
                                i1l398 001B                        ___awdiv@counter 0025  
                                _OSCEN 0891                                  _PORTA 000C  
                                _PORTB 000D                                  _PORTC 000E  
                                _TRISA 0011                                  _TRISB 0012  
                                _TRISC 0013                        __end_of_datapin 101C  
         __end_of_I2C1_BusCollisionISR 0004                      ??_I2C1_Initialize 0020  
                        ___awtoft@sign 002D                                  _delay 06EC  
                        ___ftpack@sign 0024                                  _speed 1018  
                      __end_of_putByte 044D                                  status 0003  
                                wtemp0 007E                             _iLEDs0_LSB 0069  
                           _iLEDs0_MSB 006A                             _iLEDs1_LSB 0067  
                           _iLEDs1_MSB 0068                   __end_of_LED7SegSetup 0EC8  
                      __initialization 0022                           __end_of_main 0262  
                         __end_of_twoK 1018            ?_INTERRUPT_InterruptManager 0077  
                  _lineSettleMicroTime 1012                            _i2c1_object 005E  
                               ??_main 005A                          ___fttol@sign1 0046  
          ??_LED7SegShiftOutPulseClock 0031                        putByte@clockPin 004C  
LED7SegDisplayValueByDigit@iUnitsDigit 0036                                 ?_delay 0026  
                               _ADACCH 0091                                 _ADACCL 0090  
                               _ADCON0 0093                                 _ADCON1 0094  
                               _ADCON2 0095                                 _ADCON3 0096  
                               _ADERRH 0117                                 _ADERRL 0116  
                               i1S3809 0800                                 _ADLTHH 010F  
                               _ADLTHL 010E                                 _ADRESH 008D  
                               _ADRESL 008C                                 _ADSTAT 0097  
                               _ADUTHH 0111                       ___awdiv@dividend 0022  
                               _ADUTHL 0110                       __end_of___awtoft 0FA5  
                               _ANSELA 0F38                                 _ANSELB 0F43  
                               _ANSELC 0F4E                       __end_of___ftpack 0696  
                   __CFG_RSTOSC$HFINT1 0000                                 _RC3PPS 0F23  
                               _RC4PPS 0F24                                 _ODCONA 0F3A  
                               _ODCONB 0F45                                 _ODCONC 0F50  
                               i1l2707 02F0                                 i1l2573 0F17  
                               i1l2741 0322                                 i1l2733 030F  
                               i1l2727 0305                                 i1l2761 035A  
                               i1l2675 0293                                 i1l2781 0384  
                               i1l2765 0361                                 i1l2749 033B  
                               i1l2693 02C2                                 i1l2687 02B2  
                               i1l2777 037D                         __CFG_WDTCCS$SC 0000  
                               i1l2779 0380                                 i1l2787 038D  
                               _OSCFRQ 0893                  main@SaveDebounceCount 00DD  
                     ?_LED7SegPinWrite 0077                         __CFG_PWRTE$OFF 0000  
                     __end_of_clockpin 101E                         _p_i2c1_current 0071  
                               ___wmul 0F4B                              ??___awdiv 0024  
                       __CFG_STVREN$ON 0000                              ??___ftdiv 0034  
                            ??___ftmul 0034                              ??___fttol 0042  
                     __end_of_latchpin 1020                              ?_I2C1_ISR 0077  
                     ___awdiv@quotient 0027                                 main@fx 00EA  
                ___ftmul@f3_as_product 0039                        _ADCC_Initialize 0F30  
                            ??_putByte 004E      __size_of_ADCC_GetSingleConversion 0014  
            ?_ADCC_GetSingleConversion 0020                      _SYSTEM_Initialize 0EAF  
            _LED7SegShiftOutPulseClock 0F67                __end_of__initialization 0044  
                   ?_SYSTEM_Initialize 0077                             ___ftdiv@f1 0031  
                           ___ftdiv@f2 002E                             ___ftdiv@f3 0039  
                       _i2c1_trb_count 0073                         _byteFaderValue 00CF  
                           ___awtoft@c 0028                             ___ftmul@f1 002E  
                           ___ftmul@f2 0031                  _I2C1_FunctionComplete 0EC8  
                 _I2C1_BusCollisionISR 0003                             ___fttol@f1 003E  
                       __pcstackCOMMON 0077                           __pidataBANK1 0FA5  
                  ??_SYSTEM_Initialize 0021               main@I2C_ADDRESS_FADELED0 00DF  
                        __end_of_delay 073F                         main@faderValue 00EC  
                        __end_of_speed 101A                             ??_I2C1_ISR 0079  
                   main@fader8bitValue 00E9                                ??_delay 0028  
            __end_of_SYSTEM_Initialize 0EBB                             __pbssBANK0 005E  
                           __pbssBANK1 00C4                  __size_of_LED7SegSetup 000D  
           LED7SegShiftOutPulseClock@i 0033                           ?_writeDAC528 0055  
                ?_I2C1_BusCollisionISR 0077                         _SSP1DATPPSbits 0EC6  
                           __pmaintext 0048                                ?___wmul 0020  
                      __CFG_PPS1WAY$ON 0000                __end_of_ADCC_Initialize 0F4B  
                           __pintentry 0004                        _I2C1_Initialize 0F19  
                              _ADFLTRH 0115                                _ADFLTRL 0114  
                           _blinkyLoop 0696                                _ADPREVH 008F  
                              _ADPREVL 008E                              ?___awtoft 0028  
                            ?___ftpack 0020                                _ADSTPTH 0113  
                              _ADSTPTL 0112                         _SSP1CLKPPSbits 0EC5  
                              _OSCCON1 088D                                _OSCCON3 088F  
                            _I2C1_Stop 0F02                                _OSCTUNE 0892  
                         _LED7SegSetup 0EBB                  main@LoadDebounceCount 00DB  
                              _SSP1ADD 018D                                _PPSLOCK 0E8F  
                              _SSP1BUF 018C                             _initDAC528 0EEC  
                       main@readStatus 00E0                    __end_of_cPowerOfTwo 1010  
               ?_I2C1_FunctionComplete 0077                     _p_i2c1_trb_current 0072  
                 __CFG_SCANE$available 0000                                ___awdiv 073F  
                              ___ftdiv 0501                        __size_of___wmul 001C  
                              ___ftmul 044D                                ___fttol 05AA  
                   writeDAC528@dacData 0057                             ??___awtoft 002B  
                           ??___ftpack 0025                                _datapin 101A  
                              __ptext1 07D0                                __ptext2 0EEC  
                              __ptext3 0398                                __ptext4 05AA  
                              __ptext5 044D                                __ptext6 0F83  
                              __ptext7 0696                                __ptext8 0501  
                              __ptext9 0631                  _OSCILLATOR_Initialize 0EA6  
                              _segdisp 00A0               ??_PIN_MANAGER_Initialize 0020  
                           ?_I2C1_Stop 0077                                _putByte 0398  
           __size_of_SYSTEM_Initialize 000C                   I2C1_ISR@pi2c_buf_ptr 0070  
                              clrloop0 0E92                   end_of_initialization 0044  
         ??_LED7SegDisplayValueByDigit 0038                                init_ram 0E97  
                              initloop 0E98                 ??_I2C1_BusCollisionISR 0077  
              __end_of_I2C1_Initialize 0F30                      __end_of_toggleDly 1016  
                     ?_ADCC_Initialize 0077       __end_of_ADCC_GetSingleConversion 0EEC  
                          ?_blinkyLoop 0031                  __CFG_WDTCPS$WDTCPS_31 0000  
                    __size_of_I2C1_ISR 0136    __size_of_LED7SegDisplayValueByDigit 0037  
                            _TRISCbits 0013                            _cPowerOfTwo 1000  
                     __CFG_FEXTOSC$OFF 0000                            putByte@data 0052  
                      main@iResetValue 1020                            ?_initDAC528 0077  
                          putByte@mask 0053      I2C1_ISR@i2c_10bit_address_restart 006B  
                           main@fx_888 00EE                            ___ftdiv@exp 003C  
                          ___ftmul@exp 0038                   __size_of_writeDAC528 0025  
               delay@adjustedDelaytime 0029               __size_of_LED7SegPinWrite 0009  
                       __end_of___wmul 0F67                I2C1_MasterWrite@trBlock 00D7  
             I2C1_Stop@completion_code 0078                 ?_OSCILLATOR_Initialize 0077  
                       _clockMicroTime 1010            __end_of_lineSettleMicroTime 1014  
                  start_initialization 0022                            ??_I2C1_Stop 0077  
      __size_of_PIN_MANAGER_Initialize 003F                    __size_of_blinkyLoop 0056  
                     ?_I2C1_Initialize 0077                       __CFG_LPBOREN$OFF 0000  
                             ??___wmul 0024                            __pdataBANK1 00A0  
               __end_of_clockMicroTime 1012                    __size_of_initDAC528 0016  
                    __size_of___awtoft 0022               _ADCC_GetSingleConversion 0ED8  
                    __size_of___ftpack 0065                __end_ofmain@iResetValue 1022  
                          __pbssCOMMON 0070                              ___latbits 0002  
                        __pcstackBANK0 0020                          __pcstackBANK1 00DB  
                        _i2c1_tr_queue 006D                    blinkyLoop@delayTime 0034  
   __end_of_LED7SegDisplayValueByDigit 1000             _LED7SegDisplayValueByDigit 0FC9  
                 writeDAC528@dacNumber 0055                ??_I2C1_FunctionComplete 0077  
               _PIN_MANAGER_Initialize 0791        ADCC_GetSingleConversion@channel 0023  
                             ?___awdiv 0020                               ?___ftdiv 002E  
                             ?___ftmul 002E                               ?___fttol 003E  
                             _I2C1_ISR 0262           ??_INTERRUPT_InterruptManager 007D  
                            __pswtext1 0800                     LED7SegPinWrite@val 0020  
               main@prevFader8bitValue 00E4                      ??_LED7SegPinWrite 0020  
                  blinkyLoop@loopCount 0036                               ?_putByte 004C  
                         _wkFaderValue 0066                         __size_of_delay 0053  
                         delay@counter 002D                 I2C1_MasterRead@trBlock 00D3  
                       ___wmul@product 0024                       main@iChangeCount 00E3  
                             _LATCbits 0018                              clear_ram0 0E91  
                   _prevByteFaderValue 00C4                               _PIE3bits 0719  
  __size_of_INTERRUPT_InterruptManager 001C                               _PIR3bits 070F  
  LED7SegDisplayValueByDigit@iTensCode 0038                               _SSP1CON1 0190  
                             _SSP1CON3 0192                               _SSP1STAT 018F  
                         ??_blinkyLoop 0033                              _toggleDly 1014  
                           _ADCON0bits 0093                             _ADCON1bits 0094  
                           _ADCON2bits 0095                             _ADCON3bits 0096  
                    ___wmul@multiplier 0020                           ??_initDAC528 0055  
                   __end_of_blinkyLoop 06EC                             _ADSTATbits 0097  
        __size_of_I2C1_BusCollisionISR 0001                 I2C1_ISR@i2c_bytes_left 006C  
              ??_OSCILLATOR_Initialize 0020                       __size_of___awdiv 0052  
                       delay@delaytime 0026                       __size_of___ftdiv 00A9  
                     __size_of___ftmul 00B4                       __size_of___fttol 0087  
                             ___awtoft 0F83                               ___ftpack 0631  
                   __end_of_initDAC528 0F02                      _LED7SegPulseClock 07F5  
                           _ANSELCbits 0F4E                     ?_LED7SegPulseClock 0077  
             __size_of_ADCC_Initialize 001B                    I2C1_ISR@i2c_address 0075  
                             __ptext10 073F                               __ptext11 0EAF  
                             __ptext20 06EC                               __ptext12 0791  
                             __ptext21 0F4B                               __ptext13 0EA6  
                             __ptext22 0E9D                               __ptext14 0F19  
                             __ptext23 0ED8                               __ptext15 0F30  
                             __ptext16 0EBB                               __ptext25 0262  
                             __ptext17 0FC9                               __ptext26 0F02  
                             __ptext18 0F67                               __ptext27 0EC8  
                             __ptext19 07F5                               __ptext28 0003  
                   blinkyLoop@maxLoops 0031                           _SSP1CON1bits 0190  
                         _SSP1CON2bits 0191                               _clockpin 101C  
                     __size_of_putByte 00B5                    ??_LED7SegPulseClock 0031  
                             _latchpin 101E                          __size_of_main 021A  
                        ??_writeDAC528 0058                   __CFG_WDTCWS$WDTCWS_7 0000  
               writeDAC528@wkDacNumber 0059             ??_ADCC_GetSingleConversion 0023  
                             int$flags 007E     __end_of_INTERRUPT_InterruptManager 0020  
           _INTERRUPT_InterruptManager 0004              __end_of_LED7SegPulseClock 0800  
   __size_of_LED7SegShiftOutPulseClock 001C             ?_LED7SegShiftOutPulseClock 0077  
          PIN_MANAGER_Initialize@state 0020           LED7SegShiftOutPulseClock@val 0032  
                       _cMstrClkAdjust 1022                             _INTCONbits 000B  
                        ?_LED7SegSetup 0077                         __pstringtext10 1020  
                       __pstringtext11 1022                               intlevel1 0000  
          ?_LED7SegDisplayValueByDigit 0034                ?_PIN_MANAGER_Initialize 0077  
                    __CFG_CLKOUTEN$OFF 0000         __size_of_I2C1_FunctionComplete 0010  
        __end_of_I2C1_FunctionComplete 0ED8                            _PPSLOCKbits 0E8F  
                             putByte@i 0054                        _LED7SegPinWrite 0E9D  
                  __end_of_writeDAC528 07F5                 __end_of_cMstrClkAdjust 1024  
             __size_of_I2C1_Initialize 0017                          __pstringtext1 1000  
                        __pstringtext2 1010                          __pstringtext3 1012  
                        __pstringtext4 1014                          __pstringtext5 1016  
                        __pstringtext6 1018                          __pstringtext7 101A  
                        __pstringtext8 101C                          __pstringtext9 101E  
    __end_of_LED7SegShiftOutPulseClock 0F83                          main@POT0Value 00E5  
                        main@POT1Value 00E6                         ??_LED7SegSetup 0020  
                     main@iLoopCounter 00E7         __end_of_PIN_MANAGER_Initialize 07D0  
                    ??_ADCC_Initialize 0020                     __size_of_I2C1_Stop 0017  
