

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Aug 16 07:35:28 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	inittext,global,class=CODE,delta=2
    19                           	psect	clrtext,global,class=CODE,delta=2
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    24                           	psect	text1,local,class=CODE,merge=1,delta=2
    25                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text4,local,class=CODE,merge=1,delta=2
    28                           	psect	swtext1,local,class=CONST,delta=2
    29                           	psect	text5,local,class=CODE,merge=1,delta=2
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	swtext2,local,class=CONST,delta=2
    58                           	psect	text33,local,class=CODE,merge=1,delta=2
    59                           	psect	text34,local,class=CODE,merge=1,delta=2
    60                           	psect	text35,local,class=CODE,merge=1,delta=2
    61                           	dabs	1,0x7E,2
    62  0000                     
    63                           ; Version 1.45
    64                           ; Generated 16/11/2017 GMT
    65                           ; 
    66                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC16F18855 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     	;# 
    98  0001                     	;# 
    99  0002                     	;# 
   100  0003                     	;# 
   101  0004                     	;# 
   102  0005                     	;# 
   103  0006                     	;# 
   104  0007                     	;# 
   105  0008                     	;# 
   106  0009                     	;# 
   107  000A                     	;# 
   108  000B                     	;# 
   109  000C                     	;# 
   110  000D                     	;# 
   111  000E                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0013                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  001C                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0093                     	;# 
   135  0094                     	;# 
   136  0095                     	;# 
   137  0096                     	;# 
   138  0097                     	;# 
   139  0098                     	;# 
   140  0099                     	;# 
   141  009A                     	;# 
   142  009B                     	;# 
   143  009C                     	;# 
   144  009D                     	;# 
   145  009E                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0110                     	;# 
   152  0110                     	;# 
   153  0111                     	;# 
   154  0112                     	;# 
   155  0112                     	;# 
   156  0113                     	;# 
   157  0114                     	;# 
   158  0114                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0116                     	;# 
   162  0117                     	;# 
   163  0119                     	;# 
   164  0119                     	;# 
   165  0119                     	;# 
   166  011A                     	;# 
   167  011A                     	;# 
   168  011A                     	;# 
   169  011B                     	;# 
   170  011B                     	;# 
   171  011B                     	;# 
   172  011B                     	;# 
   173  011B                     	;# 
   174  011C                     	;# 
   175  011C                     	;# 
   176  011C                     	;# 
   177  011D                     	;# 
   178  011D                     	;# 
   179  011D                     	;# 
   180  011E                     	;# 
   181  011E                     	;# 
   182  011E                     	;# 
   183  011F                     	;# 
   184  011F                     	;# 
   185  011F                     	;# 
   186  011F                     	;# 
   187  011F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190  018E                     	;# 
   191  018F                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0196                     	;# 
   196  0197                     	;# 
   197  0198                     	;# 
   198  0199                     	;# 
   199  019A                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  020C                     	;# 
   203  020C                     	;# 
   204  020D                     	;# 
   205  020E                     	;# 
   206  020F                     	;# 
   207  020F                     	;# 
   208  0210                     	;# 
   209  0210                     	;# 
   210  0211                     	;# 
   211  0211                     	;# 
   212  0212                     	;# 
   213  0212                     	;# 
   214  0213                     	;# 
   215  0214                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0218                     	;# 
   223  0218                     	;# 
   224  0219                     	;# 
   225  021A                     	;# 
   226  021B                     	;# 
   227  021B                     	;# 
   228  021C                     	;# 
   229  021C                     	;# 
   230  021D                     	;# 
   231  021D                     	;# 
   232  021E                     	;# 
   233  021F                     	;# 
   234  028C                     	;# 
   235  028C                     	;# 
   236  028D                     	;# 
   237  028D                     	;# 
   238  028E                     	;# 
   239  028F                     	;# 
   240  0290                     	;# 
   241  0290                     	;# 
   242  0291                     	;# 
   243  0292                     	;# 
   244  0292                     	;# 
   245  0293                     	;# 
   246  0293                     	;# 
   247  0294                     	;# 
   248  0295                     	;# 
   249  0296                     	;# 
   250  0296                     	;# 
   251  0297                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  029B                     	;# 
   258  029C                     	;# 
   259  029C                     	;# 
   260  029D                     	;# 
   261  030C                     	;# 
   262  030C                     	;# 
   263  030D                     	;# 
   264  030E                     	;# 
   265  030F                     	;# 
   266  0310                     	;# 
   267  0310                     	;# 
   268  0311                     	;# 
   269  0312                     	;# 
   270  0313                     	;# 
   271  0314                     	;# 
   272  0314                     	;# 
   273  0315                     	;# 
   274  0316                     	;# 
   275  0317                     	;# 
   276  0318                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031A                     	;# 
   280  031B                     	;# 
   281  031C                     	;# 
   282  031C                     	;# 
   283  031D                     	;# 
   284  031E                     	;# 
   285  031F                     	;# 
   286  038C                     	;# 
   287  038D                     	;# 
   288  038E                     	;# 
   289  0390                     	;# 
   290  0391                     	;# 
   291  0392                     	;# 
   292  040C                     	;# 
   293  040D                     	;# 
   294  040E                     	;# 
   295  040F                     	;# 
   296  0410                     	;# 
   297  0411                     	;# 
   298  0416                     	;# 
   299  0416                     	;# 
   300  0417                     	;# 
   301  0418                     	;# 
   302  0418                     	;# 
   303  0419                     	;# 
   304  041A                     	;# 
   305  041A                     	;# 
   306  041B                     	;# 
   307  041C                     	;# 
   308  041C                     	;# 
   309  041D                     	;# 
   310  041E                     	;# 
   311  041F                     	;# 
   312  048C                     	;# 
   313  048C                     	;# 
   314  048D                     	;# 
   315  048E                     	;# 
   316  048F                     	;# 
   317  048F                     	;# 
   318  0490                     	;# 
   319  0491                     	;# 
   320  0492                     	;# 
   321  0492                     	;# 
   322  0493                     	;# 
   323  0494                     	;# 
   324  0495                     	;# 
   325  0495                     	;# 
   326  0496                     	;# 
   327  0497                     	;# 
   328  0498                     	;# 
   329  0499                     	;# 
   330  049A                     	;# 
   331  049B                     	;# 
   332  049C                     	;# 
   333  049D                     	;# 
   334  050C                     	;# 
   335  050C                     	;# 
   336  050D                     	;# 
   337  050E                     	;# 
   338  050F                     	;# 
   339  050F                     	;# 
   340  0510                     	;# 
   341  0511                     	;# 
   342  0512                     	;# 
   343  0512                     	;# 
   344  0513                     	;# 
   345  0514                     	;# 
   346  0515                     	;# 
   347  0515                     	;# 
   348  0516                     	;# 
   349  0517                     	;# 
   350  0518                     	;# 
   351  0519                     	;# 
   352  051A                     	;# 
   353  051B                     	;# 
   354  051C                     	;# 
   355  051D                     	;# 
   356  058C                     	;# 
   357  058C                     	;# 
   358  058D                     	;# 
   359  058E                     	;# 
   360  058F                     	;# 
   361  058F                     	;# 
   362  0590                     	;# 
   363  0591                     	;# 
   364  0592                     	;# 
   365  0593                     	;# 
   366  060C                     	;# 
   367  060D                     	;# 
   368  060E                     	;# 
   369  060F                     	;# 
   370  0610                     	;# 
   371  0611                     	;# 
   372  0612                     	;# 
   373  0613                     	;# 
   374  0614                     	;# 
   375  0616                     	;# 
   376  0617                     	;# 
   377  0618                     	;# 
   378  0619                     	;# 
   379  061A                     	;# 
   380  061B                     	;# 
   381  061C                     	;# 
   382  061D                     	;# 
   383  061E                     	;# 
   384  068C                     	;# 
   385  068D                     	;# 
   386  068E                     	;# 
   387  068F                     	;# 
   388  0690                     	;# 
   389  0691                     	;# 
   390  0692                     	;# 
   391  0693                     	;# 
   392  0694                     	;# 
   393  070C                     	;# 
   394  070D                     	;# 
   395  070E                     	;# 
   396  070F                     	;# 
   397  0710                     	;# 
   398  0711                     	;# 
   399  0712                     	;# 
   400  0713                     	;# 
   401  0714                     	;# 
   402  0716                     	;# 
   403  0717                     	;# 
   404  0718                     	;# 
   405  0719                     	;# 
   406  071A                     	;# 
   407  071B                     	;# 
   408  071C                     	;# 
   409  071D                     	;# 
   410  071E                     	;# 
   411  0796                     	;# 
   412  0797                     	;# 
   413  0798                     	;# 
   414  0799                     	;# 
   415  079A                     	;# 
   416  079B                     	;# 
   417  080C                     	;# 
   418  080D                     	;# 
   419  080E                     	;# 
   420  080F                     	;# 
   421  0810                     	;# 
   422  0811                     	;# 
   423  0812                     	;# 
   424  0813                     	;# 
   425  0814                     	;# 
   426  081A                     	;# 
   427  081B                     	;# 
   428  081C                     	;# 
   429  081D                     	;# 
   430  081E                     	;# 
   431  081F                     	;# 
   432  088C                     	;# 
   433  088D                     	;# 
   434  088E                     	;# 
   435  088F                     	;# 
   436  0890                     	;# 
   437  0891                     	;# 
   438  0892                     	;# 
   439  0893                     	;# 
   440  0895                     	;# 
   441  0896                     	;# 
   442  0897                     	;# 
   443  0898                     	;# 
   444  0899                     	;# 
   445  089A                     	;# 
   446  089B                     	;# 
   447  090C                     	;# 
   448  090E                     	;# 
   449  090F                     	;# 
   450  091F                     	;# 
   451  091F                     	;# 
   452  098F                     	;# 
   453  098F                     	;# 
   454  0990                     	;# 
   455  0991                     	;# 
   456  0992                     	;# 
   457  0993                     	;# 
   458  0994                     	;# 
   459  0995                     	;# 
   460  0996                     	;# 
   461  0997                     	;# 
   462  0E0F                     	;# 
   463  0E10                     	;# 
   464  0E11                     	;# 
   465  0E12                     	;# 
   466  0E13                     	;# 
   467  0E14                     	;# 
   468  0E15                     	;# 
   469  0E16                     	;# 
   470  0E17                     	;# 
   471  0E18                     	;# 
   472  0E19                     	;# 
   473  0E1A                     	;# 
   474  0E1B                     	;# 
   475  0E1C                     	;# 
   476  0E1D                     	;# 
   477  0E1E                     	;# 
   478  0E1F                     	;# 
   479  0E20                     	;# 
   480  0E21                     	;# 
   481  0E22                     	;# 
   482  0E23                     	;# 
   483  0E24                     	;# 
   484  0E25                     	;# 
   485  0E26                     	;# 
   486  0E27                     	;# 
   487  0E28                     	;# 
   488  0E29                     	;# 
   489  0E2A                     	;# 
   490  0E2B                     	;# 
   491  0E2C                     	;# 
   492  0E2D                     	;# 
   493  0E2E                     	;# 
   494  0E2F                     	;# 
   495  0E30                     	;# 
   496  0E31                     	;# 
   497  0E32                     	;# 
   498  0E33                     	;# 
   499  0E34                     	;# 
   500  0E35                     	;# 
   501  0E36                     	;# 
   502  0E37                     	;# 
   503  0E8F                     	;# 
   504  0E90                     	;# 
   505  0E91                     	;# 
   506  0E92                     	;# 
   507  0E93                     	;# 
   508  0E94                     	;# 
   509  0E95                     	;# 
   510  0E96                     	;# 
   511  0E97                     	;# 
   512  0E9C                     	;# 
   513  0E9D                     	;# 
   514  0E9E                     	;# 
   515  0EA1                     	;# 
   516  0EA2                     	;# 
   517  0EA3                     	;# 
   518  0EA4                     	;# 
   519  0EA5                     	;# 
   520  0EA9                     	;# 
   521  0EAA                     	;# 
   522  0EAB                     	;# 
   523  0EAC                     	;# 
   524  0EB1                     	;# 
   525  0EB2                     	;# 
   526  0EB3                     	;# 
   527  0EB8                     	;# 
   528  0EB9                     	;# 
   529  0EBA                     	;# 
   530  0EBB                     	;# 
   531  0EBC                     	;# 
   532  0EBD                     	;# 
   533  0EBE                     	;# 
   534  0EC3                     	;# 
   535  0EC5                     	;# 
   536  0EC6                     	;# 
   537  0EC7                     	;# 
   538  0EC8                     	;# 
   539  0EC9                     	;# 
   540  0ECA                     	;# 
   541  0ECB                     	;# 
   542  0ECC                     	;# 
   543  0F10                     	;# 
   544  0F11                     	;# 
   545  0F12                     	;# 
   546  0F13                     	;# 
   547  0F14                     	;# 
   548  0F15                     	;# 
   549  0F16                     	;# 
   550  0F17                     	;# 
   551  0F18                     	;# 
   552  0F19                     	;# 
   553  0F1A                     	;# 
   554  0F1B                     	;# 
   555  0F1C                     	;# 
   556  0F1D                     	;# 
   557  0F1E                     	;# 
   558  0F1F                     	;# 
   559  0F20                     	;# 
   560  0F21                     	;# 
   561  0F22                     	;# 
   562  0F23                     	;# 
   563  0F24                     	;# 
   564  0F25                     	;# 
   565  0F26                     	;# 
   566  0F27                     	;# 
   567  0F38                     	;# 
   568  0F39                     	;# 
   569  0F3A                     	;# 
   570  0F3B                     	;# 
   571  0F3C                     	;# 
   572  0F3D                     	;# 
   573  0F3E                     	;# 
   574  0F3F                     	;# 
   575  0F40                     	;# 
   576  0F41                     	;# 
   577  0F43                     	;# 
   578  0F44                     	;# 
   579  0F45                     	;# 
   580  0F46                     	;# 
   581  0F47                     	;# 
   582  0F48                     	;# 
   583  0F49                     	;# 
   584  0F4A                     	;# 
   585  0F4B                     	;# 
   586  0F4C                     	;# 
   587  0F4E                     	;# 
   588  0F4F                     	;# 
   589  0F50                     	;# 
   590  0F51                     	;# 
   591  0F52                     	;# 
   592  0F53                     	;# 
   593  0F54                     	;# 
   594  0F55                     	;# 
   595  0F56                     	;# 
   596  0F57                     	;# 
   597  0F65                     	;# 
   598  0F68                     	;# 
   599  0F69                     	;# 
   600  0F6A                     	;# 
   601  0F6B                     	;# 
   602  0FE4                     	;# 
   603  0FE5                     	;# 
   604  0FE6                     	;# 
   605  0FE7                     	;# 
   606  0FE8                     	;# 
   607  0FE9                     	;# 
   608  0FEA                     	;# 
   609  0FEB                     	;# 
   610  0FED                     	;# 
   611  0FEE                     	;# 
   612  0FEF                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0008                     	;# 
   622  0009                     	;# 
   623  000A                     	;# 
   624  000B                     	;# 
   625  000C                     	;# 
   626  000D                     	;# 
   627  000E                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0016                     	;# 
   633  0017                     	;# 
   634  0018                     	;# 
   635  001C                     	;# 
   636  001C                     	;# 
   637  001D                     	;# 
   638  001D                     	;# 
   639  001E                     	;# 
   640  001F                     	;# 
   641  008C                     	;# 
   642  008C                     	;# 
   643  008D                     	;# 
   644  008E                     	;# 
   645  008E                     	;# 
   646  008F                     	;# 
   647  0090                     	;# 
   648  0090                     	;# 
   649  0091                     	;# 
   650  0093                     	;# 
   651  0094                     	;# 
   652  0095                     	;# 
   653  0096                     	;# 
   654  0097                     	;# 
   655  0098                     	;# 
   656  0099                     	;# 
   657  009A                     	;# 
   658  009B                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  010C                     	;# 
   663  010D                     	;# 
   664  010E                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  0110                     	;# 
   668  0110                     	;# 
   669  0111                     	;# 
   670  0112                     	;# 
   671  0112                     	;# 
   672  0113                     	;# 
   673  0114                     	;# 
   674  0114                     	;# 
   675  0115                     	;# 
   676  0116                     	;# 
   677  0116                     	;# 
   678  0117                     	;# 
   679  0119                     	;# 
   680  0119                     	;# 
   681  0119                     	;# 
   682  011A                     	;# 
   683  011A                     	;# 
   684  011A                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011B                     	;# 
   689  011B                     	;# 
   690  011C                     	;# 
   691  011C                     	;# 
   692  011C                     	;# 
   693  011D                     	;# 
   694  011D                     	;# 
   695  011D                     	;# 
   696  011E                     	;# 
   697  011E                     	;# 
   698  011E                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  011F                     	;# 
   703  011F                     	;# 
   704  018C                     	;# 
   705  018D                     	;# 
   706  018E                     	;# 
   707  018F                     	;# 
   708  0190                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0196                     	;# 
   712  0197                     	;# 
   713  0198                     	;# 
   714  0199                     	;# 
   715  019A                     	;# 
   716  019B                     	;# 
   717  019C                     	;# 
   718  020C                     	;# 
   719  020C                     	;# 
   720  020D                     	;# 
   721  020E                     	;# 
   722  020F                     	;# 
   723  020F                     	;# 
   724  0210                     	;# 
   725  0210                     	;# 
   726  0211                     	;# 
   727  0211                     	;# 
   728  0212                     	;# 
   729  0212                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0215                     	;# 
   733  0215                     	;# 
   734  0216                     	;# 
   735  0216                     	;# 
   736  0217                     	;# 
   737  0217                     	;# 
   738  0218                     	;# 
   739  0218                     	;# 
   740  0219                     	;# 
   741  021A                     	;# 
   742  021B                     	;# 
   743  021B                     	;# 
   744  021C                     	;# 
   745  021C                     	;# 
   746  021D                     	;# 
   747  021D                     	;# 
   748  021E                     	;# 
   749  021F                     	;# 
   750  028C                     	;# 
   751  028C                     	;# 
   752  028D                     	;# 
   753  028D                     	;# 
   754  028E                     	;# 
   755  028F                     	;# 
   756  0290                     	;# 
   757  0290                     	;# 
   758  0291                     	;# 
   759  0292                     	;# 
   760  0292                     	;# 
   761  0293                     	;# 
   762  0293                     	;# 
   763  0294                     	;# 
   764  0295                     	;# 
   765  0296                     	;# 
   766  0296                     	;# 
   767  0297                     	;# 
   768  0298                     	;# 
   769  0298                     	;# 
   770  0299                     	;# 
   771  0299                     	;# 
   772  029A                     	;# 
   773  029B                     	;# 
   774  029C                     	;# 
   775  029C                     	;# 
   776  029D                     	;# 
   777  030C                     	;# 
   778  030C                     	;# 
   779  030D                     	;# 
   780  030E                     	;# 
   781  030F                     	;# 
   782  0310                     	;# 
   783  0310                     	;# 
   784  0311                     	;# 
   785  0312                     	;# 
   786  0313                     	;# 
   787  0314                     	;# 
   788  0314                     	;# 
   789  0315                     	;# 
   790  0316                     	;# 
   791  0317                     	;# 
   792  0318                     	;# 
   793  0318                     	;# 
   794  0319                     	;# 
   795  031A                     	;# 
   796  031B                     	;# 
   797  031C                     	;# 
   798  031C                     	;# 
   799  031D                     	;# 
   800  031E                     	;# 
   801  031F                     	;# 
   802  038C                     	;# 
   803  038D                     	;# 
   804  038E                     	;# 
   805  0390                     	;# 
   806  0391                     	;# 
   807  0392                     	;# 
   808  040C                     	;# 
   809  040D                     	;# 
   810  040E                     	;# 
   811  040F                     	;# 
   812  0410                     	;# 
   813  0411                     	;# 
   814  0416                     	;# 
   815  0416                     	;# 
   816  0417                     	;# 
   817  0418                     	;# 
   818  0418                     	;# 
   819  0419                     	;# 
   820  041A                     	;# 
   821  041A                     	;# 
   822  041B                     	;# 
   823  041C                     	;# 
   824  041C                     	;# 
   825  041D                     	;# 
   826  041E                     	;# 
   827  041F                     	;# 
   828  048C                     	;# 
   829  048C                     	;# 
   830  048D                     	;# 
   831  048E                     	;# 
   832  048F                     	;# 
   833  048F                     	;# 
   834  0490                     	;# 
   835  0491                     	;# 
   836  0492                     	;# 
   837  0492                     	;# 
   838  0493                     	;# 
   839  0494                     	;# 
   840  0495                     	;# 
   841  0495                     	;# 
   842  0496                     	;# 
   843  0497                     	;# 
   844  0498                     	;# 
   845  0499                     	;# 
   846  049A                     	;# 
   847  049B                     	;# 
   848  049C                     	;# 
   849  049D                     	;# 
   850  050C                     	;# 
   851  050C                     	;# 
   852  050D                     	;# 
   853  050E                     	;# 
   854  050F                     	;# 
   855  050F                     	;# 
   856  0510                     	;# 
   857  0511                     	;# 
   858  0512                     	;# 
   859  0512                     	;# 
   860  0513                     	;# 
   861  0514                     	;# 
   862  0515                     	;# 
   863  0515                     	;# 
   864  0516                     	;# 
   865  0517                     	;# 
   866  0518                     	;# 
   867  0519                     	;# 
   868  051A                     	;# 
   869  051B                     	;# 
   870  051C                     	;# 
   871  051D                     	;# 
   872  058C                     	;# 
   873  058C                     	;# 
   874  058D                     	;# 
   875  058E                     	;# 
   876  058F                     	;# 
   877  058F                     	;# 
   878  0590                     	;# 
   879  0591                     	;# 
   880  0592                     	;# 
   881  0593                     	;# 
   882  060C                     	;# 
   883  060D                     	;# 
   884  060E                     	;# 
   885  060F                     	;# 
   886  0610                     	;# 
   887  0611                     	;# 
   888  0612                     	;# 
   889  0613                     	;# 
   890  0614                     	;# 
   891  0616                     	;# 
   892  0617                     	;# 
   893  0618                     	;# 
   894  0619                     	;# 
   895  061A                     	;# 
   896  061B                     	;# 
   897  061C                     	;# 
   898  061D                     	;# 
   899  061E                     	;# 
   900  068C                     	;# 
   901  068D                     	;# 
   902  068E                     	;# 
   903  068F                     	;# 
   904  0690                     	;# 
   905  0691                     	;# 
   906  0692                     	;# 
   907  0693                     	;# 
   908  0694                     	;# 
   909  070C                     	;# 
   910  070D                     	;# 
   911  070E                     	;# 
   912  070F                     	;# 
   913  0710                     	;# 
   914  0711                     	;# 
   915  0712                     	;# 
   916  0713                     	;# 
   917  0714                     	;# 
   918  0716                     	;# 
   919  0717                     	;# 
   920  0718                     	;# 
   921  0719                     	;# 
   922  071A                     	;# 
   923  071B                     	;# 
   924  071C                     	;# 
   925  071D                     	;# 
   926  071E                     	;# 
   927  0796                     	;# 
   928  0797                     	;# 
   929  0798                     	;# 
   930  0799                     	;# 
   931  079A                     	;# 
   932  079B                     	;# 
   933  080C                     	;# 
   934  080D                     	;# 
   935  080E                     	;# 
   936  080F                     	;# 
   937  0810                     	;# 
   938  0811                     	;# 
   939  0812                     	;# 
   940  0813                     	;# 
   941  0814                     	;# 
   942  081A                     	;# 
   943  081B                     	;# 
   944  081C                     	;# 
   945  081D                     	;# 
   946  081E                     	;# 
   947  081F                     	;# 
   948  088C                     	;# 
   949  088D                     	;# 
   950  088E                     	;# 
   951  088F                     	;# 
   952  0890                     	;# 
   953  0891                     	;# 
   954  0892                     	;# 
   955  0893                     	;# 
   956  0895                     	;# 
   957  0896                     	;# 
   958  0897                     	;# 
   959  0898                     	;# 
   960  0899                     	;# 
   961  089A                     	;# 
   962  089B                     	;# 
   963  090C                     	;# 
   964  090E                     	;# 
   965  090F                     	;# 
   966  091F                     	;# 
   967  091F                     	;# 
   968  098F                     	;# 
   969  098F                     	;# 
   970  0990                     	;# 
   971  0991                     	;# 
   972  0992                     	;# 
   973  0993                     	;# 
   974  0994                     	;# 
   975  0995                     	;# 
   976  0996                     	;# 
   977  0997                     	;# 
   978  0E0F                     	;# 
   979  0E10                     	;# 
   980  0E11                     	;# 
   981  0E12                     	;# 
   982  0E13                     	;# 
   983  0E14                     	;# 
   984  0E15                     	;# 
   985  0E16                     	;# 
   986  0E17                     	;# 
   987  0E18                     	;# 
   988  0E19                     	;# 
   989  0E1A                     	;# 
   990  0E1B                     	;# 
   991  0E1C                     	;# 
   992  0E1D                     	;# 
   993  0E1E                     	;# 
   994  0E1F                     	;# 
   995  0E20                     	;# 
   996  0E21                     	;# 
   997  0E22                     	;# 
   998  0E23                     	;# 
   999  0E24                     	;# 
  1000  0E25                     	;# 
  1001  0E26                     	;# 
  1002  0E27                     	;# 
  1003  0E28                     	;# 
  1004  0E29                     	;# 
  1005  0E2A                     	;# 
  1006  0E2B                     	;# 
  1007  0E2C                     	;# 
  1008  0E2D                     	;# 
  1009  0E2E                     	;# 
  1010  0E2F                     	;# 
  1011  0E30                     	;# 
  1012  0E31                     	;# 
  1013  0E32                     	;# 
  1014  0E33                     	;# 
  1015  0E34                     	;# 
  1016  0E35                     	;# 
  1017  0E36                     	;# 
  1018  0E37                     	;# 
  1019  0E8F                     	;# 
  1020  0E90                     	;# 
  1021  0E91                     	;# 
  1022  0E92                     	;# 
  1023  0E93                     	;# 
  1024  0E94                     	;# 
  1025  0E95                     	;# 
  1026  0E96                     	;# 
  1027  0E97                     	;# 
  1028  0E9C                     	;# 
  1029  0E9D                     	;# 
  1030  0E9E                     	;# 
  1031  0EA1                     	;# 
  1032  0EA2                     	;# 
  1033  0EA3                     	;# 
  1034  0EA4                     	;# 
  1035  0EA5                     	;# 
  1036  0EA9                     	;# 
  1037  0EAA                     	;# 
  1038  0EAB                     	;# 
  1039  0EAC                     	;# 
  1040  0EB1                     	;# 
  1041  0EB2                     	;# 
  1042  0EB3                     	;# 
  1043  0EB8                     	;# 
  1044  0EB9                     	;# 
  1045  0EBA                     	;# 
  1046  0EBB                     	;# 
  1047  0EBC                     	;# 
  1048  0EBD                     	;# 
  1049  0EBE                     	;# 
  1050  0EC3                     	;# 
  1051  0EC5                     	;# 
  1052  0EC6                     	;# 
  1053  0EC7                     	;# 
  1054  0EC8                     	;# 
  1055  0EC9                     	;# 
  1056  0ECA                     	;# 
  1057  0ECB                     	;# 
  1058  0ECC                     	;# 
  1059  0F10                     	;# 
  1060  0F11                     	;# 
  1061  0F12                     	;# 
  1062  0F13                     	;# 
  1063  0F14                     	;# 
  1064  0F15                     	;# 
  1065  0F16                     	;# 
  1066  0F17                     	;# 
  1067  0F18                     	;# 
  1068  0F19                     	;# 
  1069  0F1A                     	;# 
  1070  0F1B                     	;# 
  1071  0F1C                     	;# 
  1072  0F1D                     	;# 
  1073  0F1E                     	;# 
  1074  0F1F                     	;# 
  1075  0F20                     	;# 
  1076  0F21                     	;# 
  1077  0F22                     	;# 
  1078  0F23                     	;# 
  1079  0F24                     	;# 
  1080  0F25                     	;# 
  1081  0F26                     	;# 
  1082  0F27                     	;# 
  1083  0F38                     	;# 
  1084  0F39                     	;# 
  1085  0F3A                     	;# 
  1086  0F3B                     	;# 
  1087  0F3C                     	;# 
  1088  0F3D                     	;# 
  1089  0F3E                     	;# 
  1090  0F3F                     	;# 
  1091  0F40                     	;# 
  1092  0F41                     	;# 
  1093  0F43                     	;# 
  1094  0F44                     	;# 
  1095  0F45                     	;# 
  1096  0F46                     	;# 
  1097  0F47                     	;# 
  1098  0F48                     	;# 
  1099  0F49                     	;# 
  1100  0F4A                     	;# 
  1101  0F4B                     	;# 
  1102  0F4C                     	;# 
  1103  0F4E                     	;# 
  1104  0F4F                     	;# 
  1105  0F50                     	;# 
  1106  0F51                     	;# 
  1107  0F52                     	;# 
  1108  0F53                     	;# 
  1109  0F54                     	;# 
  1110  0F55                     	;# 
  1111  0F56                     	;# 
  1112  0F57                     	;# 
  1113  0F65                     	;# 
  1114  0F68                     	;# 
  1115  0F69                     	;# 
  1116  0F6A                     	;# 
  1117  0F6B                     	;# 
  1118  0FE4                     	;# 
  1119  0FE5                     	;# 
  1120  0FE6                     	;# 
  1121  0FE7                     	;# 
  1122  0FE8                     	;# 
  1123  0FE9                     	;# 
  1124  0FEA                     	;# 
  1125  0FEB                     	;# 
  1126  0FED                     	;# 
  1127  0FEE                     	;# 
  1128  0FEF                     	;# 
  1129  0000                     	;# 
  1130  0001                     	;# 
  1131  0002                     	;# 
  1132  0003                     	;# 
  1133  0004                     	;# 
  1134  0005                     	;# 
  1135  0006                     	;# 
  1136  0007                     	;# 
  1137  0008                     	;# 
  1138  0009                     	;# 
  1139  000A                     	;# 
  1140  000B                     	;# 
  1141  000C                     	;# 
  1142  000D                     	;# 
  1143  000E                     	;# 
  1144  0010                     	;# 
  1145  0011                     	;# 
  1146  0012                     	;# 
  1147  0013                     	;# 
  1148  0016                     	;# 
  1149  0017                     	;# 
  1150  0018                     	;# 
  1151  001C                     	;# 
  1152  001C                     	;# 
  1153  001D                     	;# 
  1154  001D                     	;# 
  1155  001E                     	;# 
  1156  001F                     	;# 
  1157  008C                     	;# 
  1158  008C                     	;# 
  1159  008D                     	;# 
  1160  008E                     	;# 
  1161  008E                     	;# 
  1162  008F                     	;# 
  1163  0090                     	;# 
  1164  0090                     	;# 
  1165  0091                     	;# 
  1166  0093                     	;# 
  1167  0094                     	;# 
  1168  0095                     	;# 
  1169  0096                     	;# 
  1170  0097                     	;# 
  1171  0098                     	;# 
  1172  0099                     	;# 
  1173  009A                     	;# 
  1174  009B                     	;# 
  1175  009C                     	;# 
  1176  009D                     	;# 
  1177  009E                     	;# 
  1178  010C                     	;# 
  1179  010D                     	;# 
  1180  010E                     	;# 
  1181  010E                     	;# 
  1182  010F                     	;# 
  1183  0110                     	;# 
  1184  0110                     	;# 
  1185  0111                     	;# 
  1186  0112                     	;# 
  1187  0112                     	;# 
  1188  0113                     	;# 
  1189  0114                     	;# 
  1190  0114                     	;# 
  1191  0115                     	;# 
  1192  0116                     	;# 
  1193  0116                     	;# 
  1194  0117                     	;# 
  1195  0119                     	;# 
  1196  0119                     	;# 
  1197  0119                     	;# 
  1198  011A                     	;# 
  1199  011A                     	;# 
  1200  011A                     	;# 
  1201  011B                     	;# 
  1202  011B                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011B                     	;# 
  1206  011C                     	;# 
  1207  011C                     	;# 
  1208  011C                     	;# 
  1209  011D                     	;# 
  1210  011D                     	;# 
  1211  011D                     	;# 
  1212  011E                     	;# 
  1213  011E                     	;# 
  1214  011E                     	;# 
  1215  011F                     	;# 
  1216  011F                     	;# 
  1217  011F                     	;# 
  1218  011F                     	;# 
  1219  011F                     	;# 
  1220  018C                     	;# 
  1221  018D                     	;# 
  1222  018E                     	;# 
  1223  018F                     	;# 
  1224  0190                     	;# 
  1225  0191                     	;# 
  1226  0192                     	;# 
  1227  0196                     	;# 
  1228  0197                     	;# 
  1229  0198                     	;# 
  1230  0199                     	;# 
  1231  019A                     	;# 
  1232  019B                     	;# 
  1233  019C                     	;# 
  1234  020C                     	;# 
  1235  020C                     	;# 
  1236  020D                     	;# 
  1237  020E                     	;# 
  1238  020F                     	;# 
  1239  020F                     	;# 
  1240  0210                     	;# 
  1241  0210                     	;# 
  1242  0211                     	;# 
  1243  0211                     	;# 
  1244  0212                     	;# 
  1245  0212                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0215                     	;# 
  1249  0215                     	;# 
  1250  0216                     	;# 
  1251  0216                     	;# 
  1252  0217                     	;# 
  1253  0217                     	;# 
  1254  0218                     	;# 
  1255  0218                     	;# 
  1256  0219                     	;# 
  1257  021A                     	;# 
  1258  021B                     	;# 
  1259  021B                     	;# 
  1260  021C                     	;# 
  1261  021C                     	;# 
  1262  021D                     	;# 
  1263  021D                     	;# 
  1264  021E                     	;# 
  1265  021F                     	;# 
  1266  028C                     	;# 
  1267  028C                     	;# 
  1268  028D                     	;# 
  1269  028D                     	;# 
  1270  028E                     	;# 
  1271  028F                     	;# 
  1272  0290                     	;# 
  1273  0290                     	;# 
  1274  0291                     	;# 
  1275  0292                     	;# 
  1276  0292                     	;# 
  1277  0293                     	;# 
  1278  0293                     	;# 
  1279  0294                     	;# 
  1280  0295                     	;# 
  1281  0296                     	;# 
  1282  0296                     	;# 
  1283  0297                     	;# 
  1284  0298                     	;# 
  1285  0298                     	;# 
  1286  0299                     	;# 
  1287  0299                     	;# 
  1288  029A                     	;# 
  1289  029B                     	;# 
  1290  029C                     	;# 
  1291  029C                     	;# 
  1292  029D                     	;# 
  1293  030C                     	;# 
  1294  030C                     	;# 
  1295  030D                     	;# 
  1296  030E                     	;# 
  1297  030F                     	;# 
  1298  0310                     	;# 
  1299  0310                     	;# 
  1300  0311                     	;# 
  1301  0312                     	;# 
  1302  0313                     	;# 
  1303  0314                     	;# 
  1304  0314                     	;# 
  1305  0315                     	;# 
  1306  0316                     	;# 
  1307  0317                     	;# 
  1308  0318                     	;# 
  1309  0318                     	;# 
  1310  0319                     	;# 
  1311  031A                     	;# 
  1312  031B                     	;# 
  1313  031C                     	;# 
  1314  031C                     	;# 
  1315  031D                     	;# 
  1316  031E                     	;# 
  1317  031F                     	;# 
  1318  038C                     	;# 
  1319  038D                     	;# 
  1320  038E                     	;# 
  1321  0390                     	;# 
  1322  0391                     	;# 
  1323  0392                     	;# 
  1324  040C                     	;# 
  1325  040D                     	;# 
  1326  040E                     	;# 
  1327  040F                     	;# 
  1328  0410                     	;# 
  1329  0411                     	;# 
  1330  0416                     	;# 
  1331  0416                     	;# 
  1332  0417                     	;# 
  1333  0418                     	;# 
  1334  0418                     	;# 
  1335  0419                     	;# 
  1336  041A                     	;# 
  1337  041A                     	;# 
  1338  041B                     	;# 
  1339  041C                     	;# 
  1340  041C                     	;# 
  1341  041D                     	;# 
  1342  041E                     	;# 
  1343  041F                     	;# 
  1344  048C                     	;# 
  1345  048C                     	;# 
  1346  048D                     	;# 
  1347  048E                     	;# 
  1348  048F                     	;# 
  1349  048F                     	;# 
  1350  0490                     	;# 
  1351  0491                     	;# 
  1352  0492                     	;# 
  1353  0492                     	;# 
  1354  0493                     	;# 
  1355  0494                     	;# 
  1356  0495                     	;# 
  1357  0495                     	;# 
  1358  0496                     	;# 
  1359  0497                     	;# 
  1360  0498                     	;# 
  1361  0499                     	;# 
  1362  049A                     	;# 
  1363  049B                     	;# 
  1364  049C                     	;# 
  1365  049D                     	;# 
  1366  050C                     	;# 
  1367  050C                     	;# 
  1368  050D                     	;# 
  1369  050E                     	;# 
  1370  050F                     	;# 
  1371  050F                     	;# 
  1372  0510                     	;# 
  1373  0511                     	;# 
  1374  0512                     	;# 
  1375  0512                     	;# 
  1376  0513                     	;# 
  1377  0514                     	;# 
  1378  0515                     	;# 
  1379  0515                     	;# 
  1380  0516                     	;# 
  1381  0517                     	;# 
  1382  0518                     	;# 
  1383  0519                     	;# 
  1384  051A                     	;# 
  1385  051B                     	;# 
  1386  051C                     	;# 
  1387  051D                     	;# 
  1388  058C                     	;# 
  1389  058C                     	;# 
  1390  058D                     	;# 
  1391  058E                     	;# 
  1392  058F                     	;# 
  1393  058F                     	;# 
  1394  0590                     	;# 
  1395  0591                     	;# 
  1396  0592                     	;# 
  1397  0593                     	;# 
  1398  060C                     	;# 
  1399  060D                     	;# 
  1400  060E                     	;# 
  1401  060F                     	;# 
  1402  0610                     	;# 
  1403  0611                     	;# 
  1404  0612                     	;# 
  1405  0613                     	;# 
  1406  0614                     	;# 
  1407  0616                     	;# 
  1408  0617                     	;# 
  1409  0618                     	;# 
  1410  0619                     	;# 
  1411  061A                     	;# 
  1412  061B                     	;# 
  1413  061C                     	;# 
  1414  061D                     	;# 
  1415  061E                     	;# 
  1416  068C                     	;# 
  1417  068D                     	;# 
  1418  068E                     	;# 
  1419  068F                     	;# 
  1420  0690                     	;# 
  1421  0691                     	;# 
  1422  0692                     	;# 
  1423  0693                     	;# 
  1424  0694                     	;# 
  1425  070C                     	;# 
  1426  070D                     	;# 
  1427  070E                     	;# 
  1428  070F                     	;# 
  1429  0710                     	;# 
  1430  0711                     	;# 
  1431  0712                     	;# 
  1432  0713                     	;# 
  1433  0714                     	;# 
  1434  0716                     	;# 
  1435  0717                     	;# 
  1436  0718                     	;# 
  1437  0719                     	;# 
  1438  071A                     	;# 
  1439  071B                     	;# 
  1440  071C                     	;# 
  1441  071D                     	;# 
  1442  071E                     	;# 
  1443  0796                     	;# 
  1444  0797                     	;# 
  1445  0798                     	;# 
  1446  0799                     	;# 
  1447  079A                     	;# 
  1448  079B                     	;# 
  1449  080C                     	;# 
  1450  080D                     	;# 
  1451  080E                     	;# 
  1452  080F                     	;# 
  1453  0810                     	;# 
  1454  0811                     	;# 
  1455  0812                     	;# 
  1456  0813                     	;# 
  1457  0814                     	;# 
  1458  081A                     	;# 
  1459  081B                     	;# 
  1460  081C                     	;# 
  1461  081D                     	;# 
  1462  081E                     	;# 
  1463  081F                     	;# 
  1464  088C                     	;# 
  1465  088D                     	;# 
  1466  088E                     	;# 
  1467  088F                     	;# 
  1468  0890                     	;# 
  1469  0891                     	;# 
  1470  0892                     	;# 
  1471  0893                     	;# 
  1472  0895                     	;# 
  1473  0896                     	;# 
  1474  0897                     	;# 
  1475  0898                     	;# 
  1476  0899                     	;# 
  1477  089A                     	;# 
  1478  089B                     	;# 
  1479  090C                     	;# 
  1480  090E                     	;# 
  1481  090F                     	;# 
  1482  091F                     	;# 
  1483  091F                     	;# 
  1484  098F                     	;# 
  1485  098F                     	;# 
  1486  0990                     	;# 
  1487  0991                     	;# 
  1488  0992                     	;# 
  1489  0993                     	;# 
  1490  0994                     	;# 
  1491  0995                     	;# 
  1492  0996                     	;# 
  1493  0997                     	;# 
  1494  0E0F                     	;# 
  1495  0E10                     	;# 
  1496  0E11                     	;# 
  1497  0E12                     	;# 
  1498  0E13                     	;# 
  1499  0E14                     	;# 
  1500  0E15                     	;# 
  1501  0E16                     	;# 
  1502  0E17                     	;# 
  1503  0E18                     	;# 
  1504  0E19                     	;# 
  1505  0E1A                     	;# 
  1506  0E1B                     	;# 
  1507  0E1C                     	;# 
  1508  0E1D                     	;# 
  1509  0E1E                     	;# 
  1510  0E1F                     	;# 
  1511  0E20                     	;# 
  1512  0E21                     	;# 
  1513  0E22                     	;# 
  1514  0E23                     	;# 
  1515  0E24                     	;# 
  1516  0E25                     	;# 
  1517  0E26                     	;# 
  1518  0E27                     	;# 
  1519  0E28                     	;# 
  1520  0E29                     	;# 
  1521  0E2A                     	;# 
  1522  0E2B                     	;# 
  1523  0E2C                     	;# 
  1524  0E2D                     	;# 
  1525  0E2E                     	;# 
  1526  0E2F                     	;# 
  1527  0E30                     	;# 
  1528  0E31                     	;# 
  1529  0E32                     	;# 
  1530  0E33                     	;# 
  1531  0E34                     	;# 
  1532  0E35                     	;# 
  1533  0E36                     	;# 
  1534  0E37                     	;# 
  1535  0E8F                     	;# 
  1536  0E90                     	;# 
  1537  0E91                     	;# 
  1538  0E92                     	;# 
  1539  0E93                     	;# 
  1540  0E94                     	;# 
  1541  0E95                     	;# 
  1542  0E96                     	;# 
  1543  0E97                     	;# 
  1544  0E9C                     	;# 
  1545  0E9D                     	;# 
  1546  0E9E                     	;# 
  1547  0EA1                     	;# 
  1548  0EA2                     	;# 
  1549  0EA3                     	;# 
  1550  0EA4                     	;# 
  1551  0EA5                     	;# 
  1552  0EA9                     	;# 
  1553  0EAA                     	;# 
  1554  0EAB                     	;# 
  1555  0EAC                     	;# 
  1556  0EB1                     	;# 
  1557  0EB2                     	;# 
  1558  0EB3                     	;# 
  1559  0EB8                     	;# 
  1560  0EB9                     	;# 
  1561  0EBA                     	;# 
  1562  0EBB                     	;# 
  1563  0EBC                     	;# 
  1564  0EBD                     	;# 
  1565  0EBE                     	;# 
  1566  0EC3                     	;# 
  1567  0EC5                     	;# 
  1568  0EC6                     	;# 
  1569  0EC7                     	;# 
  1570  0EC8                     	;# 
  1571  0EC9                     	;# 
  1572  0ECA                     	;# 
  1573  0ECB                     	;# 
  1574  0ECC                     	;# 
  1575  0F10                     	;# 
  1576  0F11                     	;# 
  1577  0F12                     	;# 
  1578  0F13                     	;# 
  1579  0F14                     	;# 
  1580  0F15                     	;# 
  1581  0F16                     	;# 
  1582  0F17                     	;# 
  1583  0F18                     	;# 
  1584  0F19                     	;# 
  1585  0F1A                     	;# 
  1586  0F1B                     	;# 
  1587  0F1C                     	;# 
  1588  0F1D                     	;# 
  1589  0F1E                     	;# 
  1590  0F1F                     	;# 
  1591  0F20                     	;# 
  1592  0F21                     	;# 
  1593  0F22                     	;# 
  1594  0F23                     	;# 
  1595  0F24                     	;# 
  1596  0F25                     	;# 
  1597  0F26                     	;# 
  1598  0F27                     	;# 
  1599  0F38                     	;# 
  1600  0F39                     	;# 
  1601  0F3A                     	;# 
  1602  0F3B                     	;# 
  1603  0F3C                     	;# 
  1604  0F3D                     	;# 
  1605  0F3E                     	;# 
  1606  0F3F                     	;# 
  1607  0F40                     	;# 
  1608  0F41                     	;# 
  1609  0F43                     	;# 
  1610  0F44                     	;# 
  1611  0F45                     	;# 
  1612  0F46                     	;# 
  1613  0F47                     	;# 
  1614  0F48                     	;# 
  1615  0F49                     	;# 
  1616  0F4A                     	;# 
  1617  0F4B                     	;# 
  1618  0F4C                     	;# 
  1619  0F4E                     	;# 
  1620  0F4F                     	;# 
  1621  0F50                     	;# 
  1622  0F51                     	;# 
  1623  0F52                     	;# 
  1624  0F53                     	;# 
  1625  0F54                     	;# 
  1626  0F55                     	;# 
  1627  0F56                     	;# 
  1628  0F57                     	;# 
  1629  0F65                     	;# 
  1630  0F68                     	;# 
  1631  0F69                     	;# 
  1632  0F6A                     	;# 
  1633  0F6B                     	;# 
  1634  0FE4                     	;# 
  1635  0FE5                     	;# 
  1636  0FE6                     	;# 
  1637  0FE7                     	;# 
  1638  0FE8                     	;# 
  1639  0FE9                     	;# 
  1640  0FEA                     	;# 
  1641  0FEB                     	;# 
  1642  0FED                     	;# 
  1643  0FEE                     	;# 
  1644  0FEF                     	;# 
  1645  0000                     	;# 
  1646  0001                     	;# 
  1647  0002                     	;# 
  1648  0003                     	;# 
  1649  0004                     	;# 
  1650  0005                     	;# 
  1651  0006                     	;# 
  1652  0007                     	;# 
  1653  0008                     	;# 
  1654  0009                     	;# 
  1655  000A                     	;# 
  1656  000B                     	;# 
  1657  000C                     	;# 
  1658  000D                     	;# 
  1659  000E                     	;# 
  1660  0010                     	;# 
  1661  0011                     	;# 
  1662  0012                     	;# 
  1663  0013                     	;# 
  1664  0016                     	;# 
  1665  0017                     	;# 
  1666  0018                     	;# 
  1667  001C                     	;# 
  1668  001C                     	;# 
  1669  001D                     	;# 
  1670  001D                     	;# 
  1671  001E                     	;# 
  1672  001F                     	;# 
  1673  008C                     	;# 
  1674  008C                     	;# 
  1675  008D                     	;# 
  1676  008E                     	;# 
  1677  008E                     	;# 
  1678  008F                     	;# 
  1679  0090                     	;# 
  1680  0090                     	;# 
  1681  0091                     	;# 
  1682  0093                     	;# 
  1683  0094                     	;# 
  1684  0095                     	;# 
  1685  0096                     	;# 
  1686  0097                     	;# 
  1687  0098                     	;# 
  1688  0099                     	;# 
  1689  009A                     	;# 
  1690  009B                     	;# 
  1691  009C                     	;# 
  1692  009D                     	;# 
  1693  009E                     	;# 
  1694  010C                     	;# 
  1695  010D                     	;# 
  1696  010E                     	;# 
  1697  010E                     	;# 
  1698  010F                     	;# 
  1699  0110                     	;# 
  1700  0110                     	;# 
  1701  0111                     	;# 
  1702  0112                     	;# 
  1703  0112                     	;# 
  1704  0113                     	;# 
  1705  0114                     	;# 
  1706  0114                     	;# 
  1707  0115                     	;# 
  1708  0116                     	;# 
  1709  0116                     	;# 
  1710  0117                     	;# 
  1711  0119                     	;# 
  1712  0119                     	;# 
  1713  0119                     	;# 
  1714  011A                     	;# 
  1715  011A                     	;# 
  1716  011A                     	;# 
  1717  011B                     	;# 
  1718  011B                     	;# 
  1719  011B                     	;# 
  1720  011B                     	;# 
  1721  011B                     	;# 
  1722  011C                     	;# 
  1723  011C                     	;# 
  1724  011C                     	;# 
  1725  011D                     	;# 
  1726  011D                     	;# 
  1727  011D                     	;# 
  1728  011E                     	;# 
  1729  011E                     	;# 
  1730  011E                     	;# 
  1731  011F                     	;# 
  1732  011F                     	;# 
  1733  011F                     	;# 
  1734  011F                     	;# 
  1735  011F                     	;# 
  1736  018C                     	;# 
  1737  018D                     	;# 
  1738  018E                     	;# 
  1739  018F                     	;# 
  1740  0190                     	;# 
  1741  0191                     	;# 
  1742  0192                     	;# 
  1743  0196                     	;# 
  1744  0197                     	;# 
  1745  0198                     	;# 
  1746  0199                     	;# 
  1747  019A                     	;# 
  1748  019B                     	;# 
  1749  019C                     	;# 
  1750  020C                     	;# 
  1751  020C                     	;# 
  1752  020D                     	;# 
  1753  020E                     	;# 
  1754  020F                     	;# 
  1755  020F                     	;# 
  1756  0210                     	;# 
  1757  0210                     	;# 
  1758  0211                     	;# 
  1759  0211                     	;# 
  1760  0212                     	;# 
  1761  0212                     	;# 
  1762  0213                     	;# 
  1763  0214                     	;# 
  1764  0215                     	;# 
  1765  0215                     	;# 
  1766  0216                     	;# 
  1767  0216                     	;# 
  1768  0217                     	;# 
  1769  0217                     	;# 
  1770  0218                     	;# 
  1771  0218                     	;# 
  1772  0219                     	;# 
  1773  021A                     	;# 
  1774  021B                     	;# 
  1775  021B                     	;# 
  1776  021C                     	;# 
  1777  021C                     	;# 
  1778  021D                     	;# 
  1779  021D                     	;# 
  1780  021E                     	;# 
  1781  021F                     	;# 
  1782  028C                     	;# 
  1783  028C                     	;# 
  1784  028D                     	;# 
  1785  028D                     	;# 
  1786  028E                     	;# 
  1787  028F                     	;# 
  1788  0290                     	;# 
  1789  0290                     	;# 
  1790  0291                     	;# 
  1791  0292                     	;# 
  1792  0292                     	;# 
  1793  0293                     	;# 
  1794  0293                     	;# 
  1795  0294                     	;# 
  1796  0295                     	;# 
  1797  0296                     	;# 
  1798  0296                     	;# 
  1799  0297                     	;# 
  1800  0298                     	;# 
  1801  0298                     	;# 
  1802  0299                     	;# 
  1803  0299                     	;# 
  1804  029A                     	;# 
  1805  029B                     	;# 
  1806  029C                     	;# 
  1807  029C                     	;# 
  1808  029D                     	;# 
  1809  030C                     	;# 
  1810  030C                     	;# 
  1811  030D                     	;# 
  1812  030E                     	;# 
  1813  030F                     	;# 
  1814  0310                     	;# 
  1815  0310                     	;# 
  1816  0311                     	;# 
  1817  0312                     	;# 
  1818  0313                     	;# 
  1819  0314                     	;# 
  1820  0314                     	;# 
  1821  0315                     	;# 
  1822  0316                     	;# 
  1823  0317                     	;# 
  1824  0318                     	;# 
  1825  0318                     	;# 
  1826  0319                     	;# 
  1827  031A                     	;# 
  1828  031B                     	;# 
  1829  031C                     	;# 
  1830  031C                     	;# 
  1831  031D                     	;# 
  1832  031E                     	;# 
  1833  031F                     	;# 
  1834  038C                     	;# 
  1835  038D                     	;# 
  1836  038E                     	;# 
  1837  0390                     	;# 
  1838  0391                     	;# 
  1839  0392                     	;# 
  1840  040C                     	;# 
  1841  040D                     	;# 
  1842  040E                     	;# 
  1843  040F                     	;# 
  1844  0410                     	;# 
  1845  0411                     	;# 
  1846  0416                     	;# 
  1847  0416                     	;# 
  1848  0417                     	;# 
  1849  0418                     	;# 
  1850  0418                     	;# 
  1851  0419                     	;# 
  1852  041A                     	;# 
  1853  041A                     	;# 
  1854  041B                     	;# 
  1855  041C                     	;# 
  1856  041C                     	;# 
  1857  041D                     	;# 
  1858  041E                     	;# 
  1859  041F                     	;# 
  1860  048C                     	;# 
  1861  048C                     	;# 
  1862  048D                     	;# 
  1863  048E                     	;# 
  1864  048F                     	;# 
  1865  048F                     	;# 
  1866  0490                     	;# 
  1867  0491                     	;# 
  1868  0492                     	;# 
  1869  0492                     	;# 
  1870  0493                     	;# 
  1871  0494                     	;# 
  1872  0495                     	;# 
  1873  0495                     	;# 
  1874  0496                     	;# 
  1875  0497                     	;# 
  1876  0498                     	;# 
  1877  0499                     	;# 
  1878  049A                     	;# 
  1879  049B                     	;# 
  1880  049C                     	;# 
  1881  049D                     	;# 
  1882  050C                     	;# 
  1883  050C                     	;# 
  1884  050D                     	;# 
  1885  050E                     	;# 
  1886  050F                     	;# 
  1887  050F                     	;# 
  1888  0510                     	;# 
  1889  0511                     	;# 
  1890  0512                     	;# 
  1891  0512                     	;# 
  1892  0513                     	;# 
  1893  0514                     	;# 
  1894  0515                     	;# 
  1895  0515                     	;# 
  1896  0516                     	;# 
  1897  0517                     	;# 
  1898  0518                     	;# 
  1899  0519                     	;# 
  1900  051A                     	;# 
  1901  051B                     	;# 
  1902  051C                     	;# 
  1903  051D                     	;# 
  1904  058C                     	;# 
  1905  058C                     	;# 
  1906  058D                     	;# 
  1907  058E                     	;# 
  1908  058F                     	;# 
  1909  058F                     	;# 
  1910  0590                     	;# 
  1911  0591                     	;# 
  1912  0592                     	;# 
  1913  0593                     	;# 
  1914  060C                     	;# 
  1915  060D                     	;# 
  1916  060E                     	;# 
  1917  060F                     	;# 
  1918  0610                     	;# 
  1919  0611                     	;# 
  1920  0612                     	;# 
  1921  0613                     	;# 
  1922  0614                     	;# 
  1923  0616                     	;# 
  1924  0617                     	;# 
  1925  0618                     	;# 
  1926  0619                     	;# 
  1927  061A                     	;# 
  1928  061B                     	;# 
  1929  061C                     	;# 
  1930  061D                     	;# 
  1931  061E                     	;# 
  1932  068C                     	;# 
  1933  068D                     	;# 
  1934  068E                     	;# 
  1935  068F                     	;# 
  1936  0690                     	;# 
  1937  0691                     	;# 
  1938  0692                     	;# 
  1939  0693                     	;# 
  1940  0694                     	;# 
  1941  070C                     	;# 
  1942  070D                     	;# 
  1943  070E                     	;# 
  1944  070F                     	;# 
  1945  0710                     	;# 
  1946  0711                     	;# 
  1947  0712                     	;# 
  1948  0713                     	;# 
  1949  0714                     	;# 
  1950  0716                     	;# 
  1951  0717                     	;# 
  1952  0718                     	;# 
  1953  0719                     	;# 
  1954  071A                     	;# 
  1955  071B                     	;# 
  1956  071C                     	;# 
  1957  071D                     	;# 
  1958  071E                     	;# 
  1959  0796                     	;# 
  1960  0797                     	;# 
  1961  0798                     	;# 
  1962  0799                     	;# 
  1963  079A                     	;# 
  1964  079B                     	;# 
  1965  080C                     	;# 
  1966  080D                     	;# 
  1967  080E                     	;# 
  1968  080F                     	;# 
  1969  0810                     	;# 
  1970  0811                     	;# 
  1971  0812                     	;# 
  1972  0813                     	;# 
  1973  0814                     	;# 
  1974  081A                     	;# 
  1975  081B                     	;# 
  1976  081C                     	;# 
  1977  081D                     	;# 
  1978  081E                     	;# 
  1979  081F                     	;# 
  1980  088C                     	;# 
  1981  088D                     	;# 
  1982  088E                     	;# 
  1983  088F                     	;# 
  1984  0890                     	;# 
  1985  0891                     	;# 
  1986  0892                     	;# 
  1987  0893                     	;# 
  1988  0895                     	;# 
  1989  0896                     	;# 
  1990  0897                     	;# 
  1991  0898                     	;# 
  1992  0899                     	;# 
  1993  089A                     	;# 
  1994  089B                     	;# 
  1995  090C                     	;# 
  1996  090E                     	;# 
  1997  090F                     	;# 
  1998  091F                     	;# 
  1999  091F                     	;# 
  2000  098F                     	;# 
  2001  098F                     	;# 
  2002  0990                     	;# 
  2003  0991                     	;# 
  2004  0992                     	;# 
  2005  0993                     	;# 
  2006  0994                     	;# 
  2007  0995                     	;# 
  2008  0996                     	;# 
  2009  0997                     	;# 
  2010  0E0F                     	;# 
  2011  0E10                     	;# 
  2012  0E11                     	;# 
  2013  0E12                     	;# 
  2014  0E13                     	;# 
  2015  0E14                     	;# 
  2016  0E15                     	;# 
  2017  0E16                     	;# 
  2018  0E17                     	;# 
  2019  0E18                     	;# 
  2020  0E19                     	;# 
  2021  0E1A                     	;# 
  2022  0E1B                     	;# 
  2023  0E1C                     	;# 
  2024  0E1D                     	;# 
  2025  0E1E                     	;# 
  2026  0E1F                     	;# 
  2027  0E20                     	;# 
  2028  0E21                     	;# 
  2029  0E22                     	;# 
  2030  0E23                     	;# 
  2031  0E24                     	;# 
  2032  0E25                     	;# 
  2033  0E26                     	;# 
  2034  0E27                     	;# 
  2035  0E28                     	;# 
  2036  0E29                     	;# 
  2037  0E2A                     	;# 
  2038  0E2B                     	;# 
  2039  0E2C                     	;# 
  2040  0E2D                     	;# 
  2041  0E2E                     	;# 
  2042  0E2F                     	;# 
  2043  0E30                     	;# 
  2044  0E31                     	;# 
  2045  0E32                     	;# 
  2046  0E33                     	;# 
  2047  0E34                     	;# 
  2048  0E35                     	;# 
  2049  0E36                     	;# 
  2050  0E37                     	;# 
  2051  0E8F                     	;# 
  2052  0E90                     	;# 
  2053  0E91                     	;# 
  2054  0E92                     	;# 
  2055  0E93                     	;# 
  2056  0E94                     	;# 
  2057  0E95                     	;# 
  2058  0E96                     	;# 
  2059  0E97                     	;# 
  2060  0E9C                     	;# 
  2061  0E9D                     	;# 
  2062  0E9E                     	;# 
  2063  0EA1                     	;# 
  2064  0EA2                     	;# 
  2065  0EA3                     	;# 
  2066  0EA4                     	;# 
  2067  0EA5                     	;# 
  2068  0EA9                     	;# 
  2069  0EAA                     	;# 
  2070  0EAB                     	;# 
  2071  0EAC                     	;# 
  2072  0EB1                     	;# 
  2073  0EB2                     	;# 
  2074  0EB3                     	;# 
  2075  0EB8                     	;# 
  2076  0EB9                     	;# 
  2077  0EBA                     	;# 
  2078  0EBB                     	;# 
  2079  0EBC                     	;# 
  2080  0EBD                     	;# 
  2081  0EBE                     	;# 
  2082  0EC3                     	;# 
  2083  0EC5                     	;# 
  2084  0EC6                     	;# 
  2085  0EC7                     	;# 
  2086  0EC8                     	;# 
  2087  0EC9                     	;# 
  2088  0ECA                     	;# 
  2089  0ECB                     	;# 
  2090  0ECC                     	;# 
  2091  0F10                     	;# 
  2092  0F11                     	;# 
  2093  0F12                     	;# 
  2094  0F13                     	;# 
  2095  0F14                     	;# 
  2096  0F15                     	;# 
  2097  0F16                     	;# 
  2098  0F17                     	;# 
  2099  0F18                     	;# 
  2100  0F19                     	;# 
  2101  0F1A                     	;# 
  2102  0F1B                     	;# 
  2103  0F1C                     	;# 
  2104  0F1D                     	;# 
  2105  0F1E                     	;# 
  2106  0F1F                     	;# 
  2107  0F20                     	;# 
  2108  0F21                     	;# 
  2109  0F22                     	;# 
  2110  0F23                     	;# 
  2111  0F24                     	;# 
  2112  0F25                     	;# 
  2113  0F26                     	;# 
  2114  0F27                     	;# 
  2115  0F38                     	;# 
  2116  0F39                     	;# 
  2117  0F3A                     	;# 
  2118  0F3B                     	;# 
  2119  0F3C                     	;# 
  2120  0F3D                     	;# 
  2121  0F3E                     	;# 
  2122  0F3F                     	;# 
  2123  0F40                     	;# 
  2124  0F41                     	;# 
  2125  0F43                     	;# 
  2126  0F44                     	;# 
  2127  0F45                     	;# 
  2128  0F46                     	;# 
  2129  0F47                     	;# 
  2130  0F48                     	;# 
  2131  0F49                     	;# 
  2132  0F4A                     	;# 
  2133  0F4B                     	;# 
  2134  0F4C                     	;# 
  2135  0F4E                     	;# 
  2136  0F4F                     	;# 
  2137  0F50                     	;# 
  2138  0F51                     	;# 
  2139  0F52                     	;# 
  2140  0F53                     	;# 
  2141  0F54                     	;# 
  2142  0F55                     	;# 
  2143  0F56                     	;# 
  2144  0F57                     	;# 
  2145  0F65                     	;# 
  2146  0F68                     	;# 
  2147  0F69                     	;# 
  2148  0F6A                     	;# 
  2149  0F6B                     	;# 
  2150  0FE4                     	;# 
  2151  0FE5                     	;# 
  2152  0FE6                     	;# 
  2153  0FE7                     	;# 
  2154  0FE8                     	;# 
  2155  0FE9                     	;# 
  2156  0FEA                     	;# 
  2157  0FEB                     	;# 
  2158  0FED                     	;# 
  2159  0FEE                     	;# 
  2160  0FEF                     	;# 
  2161  0000                     	;# 
  2162  0001                     	;# 
  2163  0002                     	;# 
  2164  0003                     	;# 
  2165  0004                     	;# 
  2166  0005                     	;# 
  2167  0006                     	;# 
  2168  0007                     	;# 
  2169  0008                     	;# 
  2170  0009                     	;# 
  2171  000A                     	;# 
  2172  000B                     	;# 
  2173  000C                     	;# 
  2174  000D                     	;# 
  2175  000E                     	;# 
  2176  0010                     	;# 
  2177  0011                     	;# 
  2178  0012                     	;# 
  2179  0013                     	;# 
  2180  0016                     	;# 
  2181  0017                     	;# 
  2182  0018                     	;# 
  2183  001C                     	;# 
  2184  001C                     	;# 
  2185  001D                     	;# 
  2186  001D                     	;# 
  2187  001E                     	;# 
  2188  001F                     	;# 
  2189  008C                     	;# 
  2190  008C                     	;# 
  2191  008D                     	;# 
  2192  008E                     	;# 
  2193  008E                     	;# 
  2194  008F                     	;# 
  2195  0090                     	;# 
  2196  0090                     	;# 
  2197  0091                     	;# 
  2198  0093                     	;# 
  2199  0094                     	;# 
  2200  0095                     	;# 
  2201  0096                     	;# 
  2202  0097                     	;# 
  2203  0098                     	;# 
  2204  0099                     	;# 
  2205  009A                     	;# 
  2206  009B                     	;# 
  2207  009C                     	;# 
  2208  009D                     	;# 
  2209  009E                     	;# 
  2210  010C                     	;# 
  2211  010D                     	;# 
  2212  010E                     	;# 
  2213  010E                     	;# 
  2214  010F                     	;# 
  2215  0110                     	;# 
  2216  0110                     	;# 
  2217  0111                     	;# 
  2218  0112                     	;# 
  2219  0112                     	;# 
  2220  0113                     	;# 
  2221  0114                     	;# 
  2222  0114                     	;# 
  2223  0115                     	;# 
  2224  0116                     	;# 
  2225  0116                     	;# 
  2226  0117                     	;# 
  2227  0119                     	;# 
  2228  0119                     	;# 
  2229  0119                     	;# 
  2230  011A                     	;# 
  2231  011A                     	;# 
  2232  011A                     	;# 
  2233  011B                     	;# 
  2234  011B                     	;# 
  2235  011B                     	;# 
  2236  011B                     	;# 
  2237  011B                     	;# 
  2238  011C                     	;# 
  2239  011C                     	;# 
  2240  011C                     	;# 
  2241  011D                     	;# 
  2242  011D                     	;# 
  2243  011D                     	;# 
  2244  011E                     	;# 
  2245  011E                     	;# 
  2246  011E                     	;# 
  2247  011F                     	;# 
  2248  011F                     	;# 
  2249  011F                     	;# 
  2250  011F                     	;# 
  2251  011F                     	;# 
  2252  018C                     	;# 
  2253  018D                     	;# 
  2254  018E                     	;# 
  2255  018F                     	;# 
  2256  0190                     	;# 
  2257  0191                     	;# 
  2258  0192                     	;# 
  2259  0196                     	;# 
  2260  0197                     	;# 
  2261  0198                     	;# 
  2262  0199                     	;# 
  2263  019A                     	;# 
  2264  019B                     	;# 
  2265  019C                     	;# 
  2266  020C                     	;# 
  2267  020C                     	;# 
  2268  020D                     	;# 
  2269  020E                     	;# 
  2270  020F                     	;# 
  2271  020F                     	;# 
  2272  0210                     	;# 
  2273  0210                     	;# 
  2274  0211                     	;# 
  2275  0211                     	;# 
  2276  0212                     	;# 
  2277  0212                     	;# 
  2278  0213                     	;# 
  2279  0214                     	;# 
  2280  0215                     	;# 
  2281  0215                     	;# 
  2282  0216                     	;# 
  2283  0216                     	;# 
  2284  0217                     	;# 
  2285  0217                     	;# 
  2286  0218                     	;# 
  2287  0218                     	;# 
  2288  0219                     	;# 
  2289  021A                     	;# 
  2290  021B                     	;# 
  2291  021B                     	;# 
  2292  021C                     	;# 
  2293  021C                     	;# 
  2294  021D                     	;# 
  2295  021D                     	;# 
  2296  021E                     	;# 
  2297  021F                     	;# 
  2298  028C                     	;# 
  2299  028C                     	;# 
  2300  028D                     	;# 
  2301  028D                     	;# 
  2302  028E                     	;# 
  2303  028F                     	;# 
  2304  0290                     	;# 
  2305  0290                     	;# 
  2306  0291                     	;# 
  2307  0292                     	;# 
  2308  0292                     	;# 
  2309  0293                     	;# 
  2310  0293                     	;# 
  2311  0294                     	;# 
  2312  0295                     	;# 
  2313  0296                     	;# 
  2314  0296                     	;# 
  2315  0297                     	;# 
  2316  0298                     	;# 
  2317  0298                     	;# 
  2318  0299                     	;# 
  2319  0299                     	;# 
  2320  029A                     	;# 
  2321  029B                     	;# 
  2322  029C                     	;# 
  2323  029C                     	;# 
  2324  029D                     	;# 
  2325  030C                     	;# 
  2326  030C                     	;# 
  2327  030D                     	;# 
  2328  030E                     	;# 
  2329  030F                     	;# 
  2330  0310                     	;# 
  2331  0310                     	;# 
  2332  0311                     	;# 
  2333  0312                     	;# 
  2334  0313                     	;# 
  2335  0314                     	;# 
  2336  0314                     	;# 
  2337  0315                     	;# 
  2338  0316                     	;# 
  2339  0317                     	;# 
  2340  0318                     	;# 
  2341  0318                     	;# 
  2342  0319                     	;# 
  2343  031A                     	;# 
  2344  031B                     	;# 
  2345  031C                     	;# 
  2346  031C                     	;# 
  2347  031D                     	;# 
  2348  031E                     	;# 
  2349  031F                     	;# 
  2350  038C                     	;# 
  2351  038D                     	;# 
  2352  038E                     	;# 
  2353  0390                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  040C                     	;# 
  2357  040D                     	;# 
  2358  040E                     	;# 
  2359  040F                     	;# 
  2360  0410                     	;# 
  2361  0411                     	;# 
  2362  0416                     	;# 
  2363  0416                     	;# 
  2364  0417                     	;# 
  2365  0418                     	;# 
  2366  0418                     	;# 
  2367  0419                     	;# 
  2368  041A                     	;# 
  2369  041A                     	;# 
  2370  041B                     	;# 
  2371  041C                     	;# 
  2372  041C                     	;# 
  2373  041D                     	;# 
  2374  041E                     	;# 
  2375  041F                     	;# 
  2376  048C                     	;# 
  2377  048C                     	;# 
  2378  048D                     	;# 
  2379  048E                     	;# 
  2380  048F                     	;# 
  2381  048F                     	;# 
  2382  0490                     	;# 
  2383  0491                     	;# 
  2384  0492                     	;# 
  2385  0492                     	;# 
  2386  0493                     	;# 
  2387  0494                     	;# 
  2388  0495                     	;# 
  2389  0495                     	;# 
  2390  0496                     	;# 
  2391  0497                     	;# 
  2392  0498                     	;# 
  2393  0499                     	;# 
  2394  049A                     	;# 
  2395  049B                     	;# 
  2396  049C                     	;# 
  2397  049D                     	;# 
  2398  050C                     	;# 
  2399  050C                     	;# 
  2400  050D                     	;# 
  2401  050E                     	;# 
  2402  050F                     	;# 
  2403  050F                     	;# 
  2404  0510                     	;# 
  2405  0511                     	;# 
  2406  0512                     	;# 
  2407  0512                     	;# 
  2408  0513                     	;# 
  2409  0514                     	;# 
  2410  0515                     	;# 
  2411  0515                     	;# 
  2412  0516                     	;# 
  2413  0517                     	;# 
  2414  0518                     	;# 
  2415  0519                     	;# 
  2416  051A                     	;# 
  2417  051B                     	;# 
  2418  051C                     	;# 
  2419  051D                     	;# 
  2420  058C                     	;# 
  2421  058C                     	;# 
  2422  058D                     	;# 
  2423  058E                     	;# 
  2424  058F                     	;# 
  2425  058F                     	;# 
  2426  0590                     	;# 
  2427  0591                     	;# 
  2428  0592                     	;# 
  2429  0593                     	;# 
  2430  060C                     	;# 
  2431  060D                     	;# 
  2432  060E                     	;# 
  2433  060F                     	;# 
  2434  0610                     	;# 
  2435  0611                     	;# 
  2436  0612                     	;# 
  2437  0613                     	;# 
  2438  0614                     	;# 
  2439  0616                     	;# 
  2440  0617                     	;# 
  2441  0618                     	;# 
  2442  0619                     	;# 
  2443  061A                     	;# 
  2444  061B                     	;# 
  2445  061C                     	;# 
  2446  061D                     	;# 
  2447  061E                     	;# 
  2448  068C                     	;# 
  2449  068D                     	;# 
  2450  068E                     	;# 
  2451  068F                     	;# 
  2452  0690                     	;# 
  2453  0691                     	;# 
  2454  0692                     	;# 
  2455  0693                     	;# 
  2456  0694                     	;# 
  2457  070C                     	;# 
  2458  070D                     	;# 
  2459  070E                     	;# 
  2460  070F                     	;# 
  2461  0710                     	;# 
  2462  0711                     	;# 
  2463  0712                     	;# 
  2464  0713                     	;# 
  2465  0714                     	;# 
  2466  0716                     	;# 
  2467  0717                     	;# 
  2468  0718                     	;# 
  2469  0719                     	;# 
  2470  071A                     	;# 
  2471  071B                     	;# 
  2472  071C                     	;# 
  2473  071D                     	;# 
  2474  071E                     	;# 
  2475  0796                     	;# 
  2476  0797                     	;# 
  2477  0798                     	;# 
  2478  0799                     	;# 
  2479  079A                     	;# 
  2480  079B                     	;# 
  2481  080C                     	;# 
  2482  080D                     	;# 
  2483  080E                     	;# 
  2484  080F                     	;# 
  2485  0810                     	;# 
  2486  0811                     	;# 
  2487  0812                     	;# 
  2488  0813                     	;# 
  2489  0814                     	;# 
  2490  081A                     	;# 
  2491  081B                     	;# 
  2492  081C                     	;# 
  2493  081D                     	;# 
  2494  081E                     	;# 
  2495  081F                     	;# 
  2496  088C                     	;# 
  2497  088D                     	;# 
  2498  088E                     	;# 
  2499  088F                     	;# 
  2500  0890                     	;# 
  2501  0891                     	;# 
  2502  0892                     	;# 
  2503  0893                     	;# 
  2504  0895                     	;# 
  2505  0896                     	;# 
  2506  0897                     	;# 
  2507  0898                     	;# 
  2508  0899                     	;# 
  2509  089A                     	;# 
  2510  089B                     	;# 
  2511  090C                     	;# 
  2512  090E                     	;# 
  2513  090F                     	;# 
  2514  091F                     	;# 
  2515  091F                     	;# 
  2516  098F                     	;# 
  2517  098F                     	;# 
  2518  0990                     	;# 
  2519  0991                     	;# 
  2520  0992                     	;# 
  2521  0993                     	;# 
  2522  0994                     	;# 
  2523  0995                     	;# 
  2524  0996                     	;# 
  2525  0997                     	;# 
  2526  0E0F                     	;# 
  2527  0E10                     	;# 
  2528  0E11                     	;# 
  2529  0E12                     	;# 
  2530  0E13                     	;# 
  2531  0E14                     	;# 
  2532  0E15                     	;# 
  2533  0E16                     	;# 
  2534  0E17                     	;# 
  2535  0E18                     	;# 
  2536  0E19                     	;# 
  2537  0E1A                     	;# 
  2538  0E1B                     	;# 
  2539  0E1C                     	;# 
  2540  0E1D                     	;# 
  2541  0E1E                     	;# 
  2542  0E1F                     	;# 
  2543  0E20                     	;# 
  2544  0E21                     	;# 
  2545  0E22                     	;# 
  2546  0E23                     	;# 
  2547  0E24                     	;# 
  2548  0E25                     	;# 
  2549  0E26                     	;# 
  2550  0E27                     	;# 
  2551  0E28                     	;# 
  2552  0E29                     	;# 
  2553  0E2A                     	;# 
  2554  0E2B                     	;# 
  2555  0E2C                     	;# 
  2556  0E2D                     	;# 
  2557  0E2E                     	;# 
  2558  0E2F                     	;# 
  2559  0E30                     	;# 
  2560  0E31                     	;# 
  2561  0E32                     	;# 
  2562  0E33                     	;# 
  2563  0E34                     	;# 
  2564  0E35                     	;# 
  2565  0E36                     	;# 
  2566  0E37                     	;# 
  2567  0E8F                     	;# 
  2568  0E90                     	;# 
  2569  0E91                     	;# 
  2570  0E92                     	;# 
  2571  0E93                     	;# 
  2572  0E94                     	;# 
  2573  0E95                     	;# 
  2574  0E96                     	;# 
  2575  0E97                     	;# 
  2576  0E9C                     	;# 
  2577  0E9D                     	;# 
  2578  0E9E                     	;# 
  2579  0EA1                     	;# 
  2580  0EA2                     	;# 
  2581  0EA3                     	;# 
  2582  0EA4                     	;# 
  2583  0EA5                     	;# 
  2584  0EA9                     	;# 
  2585  0EAA                     	;# 
  2586  0EAB                     	;# 
  2587  0EAC                     	;# 
  2588  0EB1                     	;# 
  2589  0EB2                     	;# 
  2590  0EB3                     	;# 
  2591  0EB8                     	;# 
  2592  0EB9                     	;# 
  2593  0EBA                     	;# 
  2594  0EBB                     	;# 
  2595  0EBC                     	;# 
  2596  0EBD                     	;# 
  2597  0EBE                     	;# 
  2598  0EC3                     	;# 
  2599  0EC5                     	;# 
  2600  0EC6                     	;# 
  2601  0EC7                     	;# 
  2602  0EC8                     	;# 
  2603  0EC9                     	;# 
  2604  0ECA                     	;# 
  2605  0ECB                     	;# 
  2606  0ECC                     	;# 
  2607  0F10                     	;# 
  2608  0F11                     	;# 
  2609  0F12                     	;# 
  2610  0F13                     	;# 
  2611  0F14                     	;# 
  2612  0F15                     	;# 
  2613  0F16                     	;# 
  2614  0F17                     	;# 
  2615  0F18                     	;# 
  2616  0F19                     	;# 
  2617  0F1A                     	;# 
  2618  0F1B                     	;# 
  2619  0F1C                     	;# 
  2620  0F1D                     	;# 
  2621  0F1E                     	;# 
  2622  0F1F                     	;# 
  2623  0F20                     	;# 
  2624  0F21                     	;# 
  2625  0F22                     	;# 
  2626  0F23                     	;# 
  2627  0F24                     	;# 
  2628  0F25                     	;# 
  2629  0F26                     	;# 
  2630  0F27                     	;# 
  2631  0F38                     	;# 
  2632  0F39                     	;# 
  2633  0F3A                     	;# 
  2634  0F3B                     	;# 
  2635  0F3C                     	;# 
  2636  0F3D                     	;# 
  2637  0F3E                     	;# 
  2638  0F3F                     	;# 
  2639  0F40                     	;# 
  2640  0F41                     	;# 
  2641  0F43                     	;# 
  2642  0F44                     	;# 
  2643  0F45                     	;# 
  2644  0F46                     	;# 
  2645  0F47                     	;# 
  2646  0F48                     	;# 
  2647  0F49                     	;# 
  2648  0F4A                     	;# 
  2649  0F4B                     	;# 
  2650  0F4C                     	;# 
  2651  0F4E                     	;# 
  2652  0F4F                     	;# 
  2653  0F50                     	;# 
  2654  0F51                     	;# 
  2655  0F52                     	;# 
  2656  0F53                     	;# 
  2657  0F54                     	;# 
  2658  0F55                     	;# 
  2659  0F56                     	;# 
  2660  0F57                     	;# 
  2661  0F65                     	;# 
  2662  0F68                     	;# 
  2663  0F69                     	;# 
  2664  0F6A                     	;# 
  2665  0F6B                     	;# 
  2666  0FE4                     	;# 
  2667  0FE5                     	;# 
  2668  0FE6                     	;# 
  2669  0FE7                     	;# 
  2670  0FE8                     	;# 
  2671  0FE9                     	;# 
  2672  0FEA                     	;# 
  2673  0FEB                     	;# 
  2674  0FED                     	;# 
  2675  0FEE                     	;# 
  2676  0FEF                     	;# 
  2677  0000                     	;# 
  2678  0001                     	;# 
  2679  0002                     	;# 
  2680  0003                     	;# 
  2681  0004                     	;# 
  2682  0005                     	;# 
  2683  0006                     	;# 
  2684  0007                     	;# 
  2685  0008                     	;# 
  2686  0009                     	;# 
  2687  000A                     	;# 
  2688  000B                     	;# 
  2689  000C                     	;# 
  2690  000D                     	;# 
  2691  000E                     	;# 
  2692  0010                     	;# 
  2693  0011                     	;# 
  2694  0012                     	;# 
  2695  0013                     	;# 
  2696  0016                     	;# 
  2697  0017                     	;# 
  2698  0018                     	;# 
  2699  001C                     	;# 
  2700  001C                     	;# 
  2701  001D                     	;# 
  2702  001D                     	;# 
  2703  001E                     	;# 
  2704  001F                     	;# 
  2705  008C                     	;# 
  2706  008C                     	;# 
  2707  008D                     	;# 
  2708  008E                     	;# 
  2709  008E                     	;# 
  2710  008F                     	;# 
  2711  0090                     	;# 
  2712  0090                     	;# 
  2713  0091                     	;# 
  2714  0093                     	;# 
  2715  0094                     	;# 
  2716  0095                     	;# 
  2717  0096                     	;# 
  2718  0097                     	;# 
  2719  0098                     	;# 
  2720  0099                     	;# 
  2721  009A                     	;# 
  2722  009B                     	;# 
  2723  009C                     	;# 
  2724  009D                     	;# 
  2725  009E                     	;# 
  2726  010C                     	;# 
  2727  010D                     	;# 
  2728  010E                     	;# 
  2729  010E                     	;# 
  2730  010F                     	;# 
  2731  0110                     	;# 
  2732  0110                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0112                     	;# 
  2736  0113                     	;# 
  2737  0114                     	;# 
  2738  0114                     	;# 
  2739  0115                     	;# 
  2740  0116                     	;# 
  2741  0116                     	;# 
  2742  0117                     	;# 
  2743  0119                     	;# 
  2744  0119                     	;# 
  2745  0119                     	;# 
  2746  011A                     	;# 
  2747  011A                     	;# 
  2748  011A                     	;# 
  2749  011B                     	;# 
  2750  011B                     	;# 
  2751  011B                     	;# 
  2752  011B                     	;# 
  2753  011B                     	;# 
  2754  011C                     	;# 
  2755  011C                     	;# 
  2756  011C                     	;# 
  2757  011D                     	;# 
  2758  011D                     	;# 
  2759  011D                     	;# 
  2760  011E                     	;# 
  2761  011E                     	;# 
  2762  011E                     	;# 
  2763  011F                     	;# 
  2764  011F                     	;# 
  2765  011F                     	;# 
  2766  011F                     	;# 
  2767  011F                     	;# 
  2768  018C                     	;# 
  2769  018D                     	;# 
  2770  018E                     	;# 
  2771  018F                     	;# 
  2772  0190                     	;# 
  2773  0191                     	;# 
  2774  0192                     	;# 
  2775  0196                     	;# 
  2776  0197                     	;# 
  2777  0198                     	;# 
  2778  0199                     	;# 
  2779  019A                     	;# 
  2780  019B                     	;# 
  2781  019C                     	;# 
  2782  020C                     	;# 
  2783  020C                     	;# 
  2784  020D                     	;# 
  2785  020E                     	;# 
  2786  020F                     	;# 
  2787  020F                     	;# 
  2788  0210                     	;# 
  2789  0210                     	;# 
  2790  0211                     	;# 
  2791  0211                     	;# 
  2792  0212                     	;# 
  2793  0212                     	;# 
  2794  0213                     	;# 
  2795  0214                     	;# 
  2796  0215                     	;# 
  2797  0215                     	;# 
  2798  0216                     	;# 
  2799  0216                     	;# 
  2800  0217                     	;# 
  2801  0217                     	;# 
  2802  0218                     	;# 
  2803  0218                     	;# 
  2804  0219                     	;# 
  2805  021A                     	;# 
  2806  021B                     	;# 
  2807  021B                     	;# 
  2808  021C                     	;# 
  2809  021C                     	;# 
  2810  021D                     	;# 
  2811  021D                     	;# 
  2812  021E                     	;# 
  2813  021F                     	;# 
  2814  028C                     	;# 
  2815  028C                     	;# 
  2816  028D                     	;# 
  2817  028D                     	;# 
  2818  028E                     	;# 
  2819  028F                     	;# 
  2820  0290                     	;# 
  2821  0290                     	;# 
  2822  0291                     	;# 
  2823  0292                     	;# 
  2824  0292                     	;# 
  2825  0293                     	;# 
  2826  0293                     	;# 
  2827  0294                     	;# 
  2828  0295                     	;# 
  2829  0296                     	;# 
  2830  0296                     	;# 
  2831  0297                     	;# 
  2832  0298                     	;# 
  2833  0298                     	;# 
  2834  0299                     	;# 
  2835  0299                     	;# 
  2836  029A                     	;# 
  2837  029B                     	;# 
  2838  029C                     	;# 
  2839  029C                     	;# 
  2840  029D                     	;# 
  2841  030C                     	;# 
  2842  030C                     	;# 
  2843  030D                     	;# 
  2844  030E                     	;# 
  2845  030F                     	;# 
  2846  0310                     	;# 
  2847  0310                     	;# 
  2848  0311                     	;# 
  2849  0312                     	;# 
  2850  0313                     	;# 
  2851  0314                     	;# 
  2852  0314                     	;# 
  2853  0315                     	;# 
  2854  0316                     	;# 
  2855  0317                     	;# 
  2856  0318                     	;# 
  2857  0318                     	;# 
  2858  0319                     	;# 
  2859  031A                     	;# 
  2860  031B                     	;# 
  2861  031C                     	;# 
  2862  031C                     	;# 
  2863  031D                     	;# 
  2864  031E                     	;# 
  2865  031F                     	;# 
  2866  038C                     	;# 
  2867  038D                     	;# 
  2868  038E                     	;# 
  2869  0390                     	;# 
  2870  0391                     	;# 
  2871  0392                     	;# 
  2872  040C                     	;# 
  2873  040D                     	;# 
  2874  040E                     	;# 
  2875  040F                     	;# 
  2876  0410                     	;# 
  2877  0411                     	;# 
  2878  0416                     	;# 
  2879  0416                     	;# 
  2880  0417                     	;# 
  2881  0418                     	;# 
  2882  0418                     	;# 
  2883  0419                     	;# 
  2884  041A                     	;# 
  2885  041A                     	;# 
  2886  041B                     	;# 
  2887  041C                     	;# 
  2888  041C                     	;# 
  2889  041D                     	;# 
  2890  041E                     	;# 
  2891  041F                     	;# 
  2892  048C                     	;# 
  2893  048C                     	;# 
  2894  048D                     	;# 
  2895  048E                     	;# 
  2896  048F                     	;# 
  2897  048F                     	;# 
  2898  0490                     	;# 
  2899  0491                     	;# 
  2900  0492                     	;# 
  2901  0492                     	;# 
  2902  0493                     	;# 
  2903  0494                     	;# 
  2904  0495                     	;# 
  2905  0495                     	;# 
  2906  0496                     	;# 
  2907  0497                     	;# 
  2908  0498                     	;# 
  2909  0499                     	;# 
  2910  049A                     	;# 
  2911  049B                     	;# 
  2912  049C                     	;# 
  2913  049D                     	;# 
  2914  050C                     	;# 
  2915  050C                     	;# 
  2916  050D                     	;# 
  2917  050E                     	;# 
  2918  050F                     	;# 
  2919  050F                     	;# 
  2920  0510                     	;# 
  2921  0511                     	;# 
  2922  0512                     	;# 
  2923  0512                     	;# 
  2924  0513                     	;# 
  2925  0514                     	;# 
  2926  0515                     	;# 
  2927  0515                     	;# 
  2928  0516                     	;# 
  2929  0517                     	;# 
  2930  0518                     	;# 
  2931  0519                     	;# 
  2932  051A                     	;# 
  2933  051B                     	;# 
  2934  051C                     	;# 
  2935  051D                     	;# 
  2936  058C                     	;# 
  2937  058C                     	;# 
  2938  058D                     	;# 
  2939  058E                     	;# 
  2940  058F                     	;# 
  2941  058F                     	;# 
  2942  0590                     	;# 
  2943  0591                     	;# 
  2944  0592                     	;# 
  2945  0593                     	;# 
  2946  060C                     	;# 
  2947  060D                     	;# 
  2948  060E                     	;# 
  2949  060F                     	;# 
  2950  0610                     	;# 
  2951  0611                     	;# 
  2952  0612                     	;# 
  2953  0613                     	;# 
  2954  0614                     	;# 
  2955  0616                     	;# 
  2956  0617                     	;# 
  2957  0618                     	;# 
  2958  0619                     	;# 
  2959  061A                     	;# 
  2960  061B                     	;# 
  2961  061C                     	;# 
  2962  061D                     	;# 
  2963  061E                     	;# 
  2964  068C                     	;# 
  2965  068D                     	;# 
  2966  068E                     	;# 
  2967  068F                     	;# 
  2968  0690                     	;# 
  2969  0691                     	;# 
  2970  0692                     	;# 
  2971  0693                     	;# 
  2972  0694                     	;# 
  2973  070C                     	;# 
  2974  070D                     	;# 
  2975  070E                     	;# 
  2976  070F                     	;# 
  2977  0710                     	;# 
  2978  0711                     	;# 
  2979  0712                     	;# 
  2980  0713                     	;# 
  2981  0714                     	;# 
  2982  0716                     	;# 
  2983  0717                     	;# 
  2984  0718                     	;# 
  2985  0719                     	;# 
  2986  071A                     	;# 
  2987  071B                     	;# 
  2988  071C                     	;# 
  2989  071D                     	;# 
  2990  071E                     	;# 
  2991  0796                     	;# 
  2992  0797                     	;# 
  2993  0798                     	;# 
  2994  0799                     	;# 
  2995  079A                     	;# 
  2996  079B                     	;# 
  2997  080C                     	;# 
  2998  080D                     	;# 
  2999  080E                     	;# 
  3000  080F                     	;# 
  3001  0810                     	;# 
  3002  0811                     	;# 
  3003  0812                     	;# 
  3004  0813                     	;# 
  3005  0814                     	;# 
  3006  081A                     	;# 
  3007  081B                     	;# 
  3008  081C                     	;# 
  3009  081D                     	;# 
  3010  081E                     	;# 
  3011  081F                     	;# 
  3012  088C                     	;# 
  3013  088D                     	;# 
  3014  088E                     	;# 
  3015  088F                     	;# 
  3016  0890                     	;# 
  3017  0891                     	;# 
  3018  0892                     	;# 
  3019  0893                     	;# 
  3020  0895                     	;# 
  3021  0896                     	;# 
  3022  0897                     	;# 
  3023  0898                     	;# 
  3024  0899                     	;# 
  3025  089A                     	;# 
  3026  089B                     	;# 
  3027  090C                     	;# 
  3028  090E                     	;# 
  3029  090F                     	;# 
  3030  091F                     	;# 
  3031  091F                     	;# 
  3032  098F                     	;# 
  3033  098F                     	;# 
  3034  0990                     	;# 
  3035  0991                     	;# 
  3036  0992                     	;# 
  3037  0993                     	;# 
  3038  0994                     	;# 
  3039  0995                     	;# 
  3040  0996                     	;# 
  3041  0997                     	;# 
  3042  0E0F                     	;# 
  3043  0E10                     	;# 
  3044  0E11                     	;# 
  3045  0E12                     	;# 
  3046  0E13                     	;# 
  3047  0E14                     	;# 
  3048  0E15                     	;# 
  3049  0E16                     	;# 
  3050  0E17                     	;# 
  3051  0E18                     	;# 
  3052  0E19                     	;# 
  3053  0E1A                     	;# 
  3054  0E1B                     	;# 
  3055  0E1C                     	;# 
  3056  0E1D                     	;# 
  3057  0E1E                     	;# 
  3058  0E1F                     	;# 
  3059  0E20                     	;# 
  3060  0E21                     	;# 
  3061  0E22                     	;# 
  3062  0E23                     	;# 
  3063  0E24                     	;# 
  3064  0E25                     	;# 
  3065  0E26                     	;# 
  3066  0E27                     	;# 
  3067  0E28                     	;# 
  3068  0E29                     	;# 
  3069  0E2A                     	;# 
  3070  0E2B                     	;# 
  3071  0E2C                     	;# 
  3072  0E2D                     	;# 
  3073  0E2E                     	;# 
  3074  0E2F                     	;# 
  3075  0E30                     	;# 
  3076  0E31                     	;# 
  3077  0E32                     	;# 
  3078  0E33                     	;# 
  3079  0E34                     	;# 
  3080  0E35                     	;# 
  3081  0E36                     	;# 
  3082  0E37                     	;# 
  3083  0E8F                     	;# 
  3084  0E90                     	;# 
  3085  0E91                     	;# 
  3086  0E92                     	;# 
  3087  0E93                     	;# 
  3088  0E94                     	;# 
  3089  0E95                     	;# 
  3090  0E96                     	;# 
  3091  0E97                     	;# 
  3092  0E9C                     	;# 
  3093  0E9D                     	;# 
  3094  0E9E                     	;# 
  3095  0EA1                     	;# 
  3096  0EA2                     	;# 
  3097  0EA3                     	;# 
  3098  0EA4                     	;# 
  3099  0EA5                     	;# 
  3100  0EA9                     	;# 
  3101  0EAA                     	;# 
  3102  0EAB                     	;# 
  3103  0EAC                     	;# 
  3104  0EB1                     	;# 
  3105  0EB2                     	;# 
  3106  0EB3                     	;# 
  3107  0EB8                     	;# 
  3108  0EB9                     	;# 
  3109  0EBA                     	;# 
  3110  0EBB                     	;# 
  3111  0EBC                     	;# 
  3112  0EBD                     	;# 
  3113  0EBE                     	;# 
  3114  0EC3                     	;# 
  3115  0EC5                     	;# 
  3116  0EC6                     	;# 
  3117  0EC7                     	;# 
  3118  0EC8                     	;# 
  3119  0EC9                     	;# 
  3120  0ECA                     	;# 
  3121  0ECB                     	;# 
  3122  0ECC                     	;# 
  3123  0F10                     	;# 
  3124  0F11                     	;# 
  3125  0F12                     	;# 
  3126  0F13                     	;# 
  3127  0F14                     	;# 
  3128  0F15                     	;# 
  3129  0F16                     	;# 
  3130  0F17                     	;# 
  3131  0F18                     	;# 
  3132  0F19                     	;# 
  3133  0F1A                     	;# 
  3134  0F1B                     	;# 
  3135  0F1C                     	;# 
  3136  0F1D                     	;# 
  3137  0F1E                     	;# 
  3138  0F1F                     	;# 
  3139  0F20                     	;# 
  3140  0F21                     	;# 
  3141  0F22                     	;# 
  3142  0F23                     	;# 
  3143  0F24                     	;# 
  3144  0F25                     	;# 
  3145  0F26                     	;# 
  3146  0F27                     	;# 
  3147  0F38                     	;# 
  3148  0F39                     	;# 
  3149  0F3A                     	;# 
  3150  0F3B                     	;# 
  3151  0F3C                     	;# 
  3152  0F3D                     	;# 
  3153  0F3E                     	;# 
  3154  0F3F                     	;# 
  3155  0F40                     	;# 
  3156  0F41                     	;# 
  3157  0F43                     	;# 
  3158  0F44                     	;# 
  3159  0F45                     	;# 
  3160  0F46                     	;# 
  3161  0F47                     	;# 
  3162  0F48                     	;# 
  3163  0F49                     	;# 
  3164  0F4A                     	;# 
  3165  0F4B                     	;# 
  3166  0F4C                     	;# 
  3167  0F4E                     	;# 
  3168  0F4F                     	;# 
  3169  0F50                     	;# 
  3170  0F51                     	;# 
  3171  0F52                     	;# 
  3172  0F53                     	;# 
  3173  0F54                     	;# 
  3174  0F55                     	;# 
  3175  0F56                     	;# 
  3176  0F57                     	;# 
  3177  0F65                     	;# 
  3178  0F68                     	;# 
  3179  0F69                     	;# 
  3180  0F6A                     	;# 
  3181  0F6B                     	;# 
  3182  0FE4                     	;# 
  3183  0FE5                     	;# 
  3184  0FE6                     	;# 
  3185  0FE7                     	;# 
  3186  0FE8                     	;# 
  3187  0FE9                     	;# 
  3188  0FEA                     	;# 
  3189  0FEB                     	;# 
  3190  0FED                     	;# 
  3191  0FEE                     	;# 
  3192  0FEF                     	;# 
  3193  0000                     	;# 
  3194  0001                     	;# 
  3195  0002                     	;# 
  3196  0003                     	;# 
  3197  0004                     	;# 
  3198  0005                     	;# 
  3199  0006                     	;# 
  3200  0007                     	;# 
  3201  0008                     	;# 
  3202  0009                     	;# 
  3203  000A                     	;# 
  3204  000B                     	;# 
  3205  000C                     	;# 
  3206  000D                     	;# 
  3207  000E                     	;# 
  3208  0010                     	;# 
  3209  0011                     	;# 
  3210  0012                     	;# 
  3211  0013                     	;# 
  3212  0016                     	;# 
  3213  0017                     	;# 
  3214  0018                     	;# 
  3215  001C                     	;# 
  3216  001C                     	;# 
  3217  001D                     	;# 
  3218  001D                     	;# 
  3219  001E                     	;# 
  3220  001F                     	;# 
  3221  008C                     	;# 
  3222  008C                     	;# 
  3223  008D                     	;# 
  3224  008E                     	;# 
  3225  008E                     	;# 
  3226  008F                     	;# 
  3227  0090                     	;# 
  3228  0090                     	;# 
  3229  0091                     	;# 
  3230  0093                     	;# 
  3231  0094                     	;# 
  3232  0095                     	;# 
  3233  0096                     	;# 
  3234  0097                     	;# 
  3235  0098                     	;# 
  3236  0099                     	;# 
  3237  009A                     	;# 
  3238  009B                     	;# 
  3239  009C                     	;# 
  3240  009D                     	;# 
  3241  009E                     	;# 
  3242  010C                     	;# 
  3243  010D                     	;# 
  3244  010E                     	;# 
  3245  010E                     	;# 
  3246  010F                     	;# 
  3247  0110                     	;# 
  3248  0110                     	;# 
  3249  0111                     	;# 
  3250  0112                     	;# 
  3251  0112                     	;# 
  3252  0113                     	;# 
  3253  0114                     	;# 
  3254  0114                     	;# 
  3255  0115                     	;# 
  3256  0116                     	;# 
  3257  0116                     	;# 
  3258  0117                     	;# 
  3259  0119                     	;# 
  3260  0119                     	;# 
  3261  0119                     	;# 
  3262  011A                     	;# 
  3263  011A                     	;# 
  3264  011A                     	;# 
  3265  011B                     	;# 
  3266  011B                     	;# 
  3267  011B                     	;# 
  3268  011B                     	;# 
  3269  011B                     	;# 
  3270  011C                     	;# 
  3271  011C                     	;# 
  3272  011C                     	;# 
  3273  011D                     	;# 
  3274  011D                     	;# 
  3275  011D                     	;# 
  3276  011E                     	;# 
  3277  011E                     	;# 
  3278  011E                     	;# 
  3279  011F                     	;# 
  3280  011F                     	;# 
  3281  011F                     	;# 
  3282  011F                     	;# 
  3283  011F                     	;# 
  3284  018C                     	;# 
  3285  018D                     	;# 
  3286  018E                     	;# 
  3287  018F                     	;# 
  3288  0190                     	;# 
  3289  0191                     	;# 
  3290  0192                     	;# 
  3291  0196                     	;# 
  3292  0197                     	;# 
  3293  0198                     	;# 
  3294  0199                     	;# 
  3295  019A                     	;# 
  3296  019B                     	;# 
  3297  019C                     	;# 
  3298  020C                     	;# 
  3299  020C                     	;# 
  3300  020D                     	;# 
  3301  020E                     	;# 
  3302  020F                     	;# 
  3303  020F                     	;# 
  3304  0210                     	;# 
  3305  0210                     	;# 
  3306  0211                     	;# 
  3307  0211                     	;# 
  3308  0212                     	;# 
  3309  0212                     	;# 
  3310  0213                     	;# 
  3311  0214                     	;# 
  3312  0215                     	;# 
  3313  0215                     	;# 
  3314  0216                     	;# 
  3315  0216                     	;# 
  3316  0217                     	;# 
  3317  0217                     	;# 
  3318  0218                     	;# 
  3319  0218                     	;# 
  3320  0219                     	;# 
  3321  021A                     	;# 
  3322  021B                     	;# 
  3323  021B                     	;# 
  3324  021C                     	;# 
  3325  021C                     	;# 
  3326  021D                     	;# 
  3327  021D                     	;# 
  3328  021E                     	;# 
  3329  021F                     	;# 
  3330  028C                     	;# 
  3331  028C                     	;# 
  3332  028D                     	;# 
  3333  028D                     	;# 
  3334  028E                     	;# 
  3335  028F                     	;# 
  3336  0290                     	;# 
  3337  0290                     	;# 
  3338  0291                     	;# 
  3339  0292                     	;# 
  3340  0292                     	;# 
  3341  0293                     	;# 
  3342  0293                     	;# 
  3343  0294                     	;# 
  3344  0295                     	;# 
  3345  0296                     	;# 
  3346  0296                     	;# 
  3347  0297                     	;# 
  3348  0298                     	;# 
  3349  0298                     	;# 
  3350  0299                     	;# 
  3351  0299                     	;# 
  3352  029A                     	;# 
  3353  029B                     	;# 
  3354  029C                     	;# 
  3355  029C                     	;# 
  3356  029D                     	;# 
  3357  030C                     	;# 
  3358  030C                     	;# 
  3359  030D                     	;# 
  3360  030E                     	;# 
  3361  030F                     	;# 
  3362  0310                     	;# 
  3363  0310                     	;# 
  3364  0311                     	;# 
  3365  0312                     	;# 
  3366  0313                     	;# 
  3367  0314                     	;# 
  3368  0314                     	;# 
  3369  0315                     	;# 
  3370  0316                     	;# 
  3371  0317                     	;# 
  3372  0318                     	;# 
  3373  0318                     	;# 
  3374  0319                     	;# 
  3375  031A                     	;# 
  3376  031B                     	;# 
  3377  031C                     	;# 
  3378  031C                     	;# 
  3379  031D                     	;# 
  3380  031E                     	;# 
  3381  031F                     	;# 
  3382  038C                     	;# 
  3383  038D                     	;# 
  3384  038E                     	;# 
  3385  0390                     	;# 
  3386  0391                     	;# 
  3387  0392                     	;# 
  3388  040C                     	;# 
  3389  040D                     	;# 
  3390  040E                     	;# 
  3391  040F                     	;# 
  3392  0410                     	;# 
  3393  0411                     	;# 
  3394  0416                     	;# 
  3395  0416                     	;# 
  3396  0417                     	;# 
  3397  0418                     	;# 
  3398  0418                     	;# 
  3399  0419                     	;# 
  3400  041A                     	;# 
  3401  041A                     	;# 
  3402  041B                     	;# 
  3403  041C                     	;# 
  3404  041C                     	;# 
  3405  041D                     	;# 
  3406  041E                     	;# 
  3407  041F                     	;# 
  3408  048C                     	;# 
  3409  048C                     	;# 
  3410  048D                     	;# 
  3411  048E                     	;# 
  3412  048F                     	;# 
  3413  048F                     	;# 
  3414  0490                     	;# 
  3415  0491                     	;# 
  3416  0492                     	;# 
  3417  0492                     	;# 
  3418  0493                     	;# 
  3419  0494                     	;# 
  3420  0495                     	;# 
  3421  0495                     	;# 
  3422  0496                     	;# 
  3423  0497                     	;# 
  3424  0498                     	;# 
  3425  0499                     	;# 
  3426  049A                     	;# 
  3427  049B                     	;# 
  3428  049C                     	;# 
  3429  049D                     	;# 
  3430  050C                     	;# 
  3431  050C                     	;# 
  3432  050D                     	;# 
  3433  050E                     	;# 
  3434  050F                     	;# 
  3435  050F                     	;# 
  3436  0510                     	;# 
  3437  0511                     	;# 
  3438  0512                     	;# 
  3439  0512                     	;# 
  3440  0513                     	;# 
  3441  0514                     	;# 
  3442  0515                     	;# 
  3443  0515                     	;# 
  3444  0516                     	;# 
  3445  0517                     	;# 
  3446  0518                     	;# 
  3447  0519                     	;# 
  3448  051A                     	;# 
  3449  051B                     	;# 
  3450  051C                     	;# 
  3451  051D                     	;# 
  3452  058C                     	;# 
  3453  058C                     	;# 
  3454  058D                     	;# 
  3455  058E                     	;# 
  3456  058F                     	;# 
  3457  058F                     	;# 
  3458  0590                     	;# 
  3459  0591                     	;# 
  3460  0592                     	;# 
  3461  0593                     	;# 
  3462  060C                     	;# 
  3463  060D                     	;# 
  3464  060E                     	;# 
  3465  060F                     	;# 
  3466  0610                     	;# 
  3467  0611                     	;# 
  3468  0612                     	;# 
  3469  0613                     	;# 
  3470  0614                     	;# 
  3471  0616                     	;# 
  3472  0617                     	;# 
  3473  0618                     	;# 
  3474  0619                     	;# 
  3475  061A                     	;# 
  3476  061B                     	;# 
  3477  061C                     	;# 
  3478  061D                     	;# 
  3479  061E                     	;# 
  3480  068C                     	;# 
  3481  068D                     	;# 
  3482  068E                     	;# 
  3483  068F                     	;# 
  3484  0690                     	;# 
  3485  0691                     	;# 
  3486  0692                     	;# 
  3487  0693                     	;# 
  3488  0694                     	;# 
  3489  070C                     	;# 
  3490  070D                     	;# 
  3491  070E                     	;# 
  3492  070F                     	;# 
  3493  0710                     	;# 
  3494  0711                     	;# 
  3495  0712                     	;# 
  3496  0713                     	;# 
  3497  0714                     	;# 
  3498  0716                     	;# 
  3499  0717                     	;# 
  3500  0718                     	;# 
  3501  0719                     	;# 
  3502  071A                     	;# 
  3503  071B                     	;# 
  3504  071C                     	;# 
  3505  071D                     	;# 
  3506  071E                     	;# 
  3507  0796                     	;# 
  3508  0797                     	;# 
  3509  0798                     	;# 
  3510  0799                     	;# 
  3511  079A                     	;# 
  3512  079B                     	;# 
  3513  080C                     	;# 
  3514  080D                     	;# 
  3515  080E                     	;# 
  3516  080F                     	;# 
  3517  0810                     	;# 
  3518  0811                     	;# 
  3519  0812                     	;# 
  3520  0813                     	;# 
  3521  0814                     	;# 
  3522  081A                     	;# 
  3523  081B                     	;# 
  3524  081C                     	;# 
  3525  081D                     	;# 
  3526  081E                     	;# 
  3527  081F                     	;# 
  3528  088C                     	;# 
  3529  088D                     	;# 
  3530  088E                     	;# 
  3531  088F                     	;# 
  3532  0890                     	;# 
  3533  0891                     	;# 
  3534  0892                     	;# 
  3535  0893                     	;# 
  3536  0895                     	;# 
  3537  0896                     	;# 
  3538  0897                     	;# 
  3539  0898                     	;# 
  3540  0899                     	;# 
  3541  089A                     	;# 
  3542  089B                     	;# 
  3543  090C                     	;# 
  3544  090E                     	;# 
  3545  090F                     	;# 
  3546  091F                     	;# 
  3547  091F                     	;# 
  3548  098F                     	;# 
  3549  098F                     	;# 
  3550  0990                     	;# 
  3551  0991                     	;# 
  3552  0992                     	;# 
  3553  0993                     	;# 
  3554  0994                     	;# 
  3555  0995                     	;# 
  3556  0996                     	;# 
  3557  0997                     	;# 
  3558  0E0F                     	;# 
  3559  0E10                     	;# 
  3560  0E11                     	;# 
  3561  0E12                     	;# 
  3562  0E13                     	;# 
  3563  0E14                     	;# 
  3564  0E15                     	;# 
  3565  0E16                     	;# 
  3566  0E17                     	;# 
  3567  0E18                     	;# 
  3568  0E19                     	;# 
  3569  0E1A                     	;# 
  3570  0E1B                     	;# 
  3571  0E1C                     	;# 
  3572  0E1D                     	;# 
  3573  0E1E                     	;# 
  3574  0E1F                     	;# 
  3575  0E20                     	;# 
  3576  0E21                     	;# 
  3577  0E22                     	;# 
  3578  0E23                     	;# 
  3579  0E24                     	;# 
  3580  0E25                     	;# 
  3581  0E26                     	;# 
  3582  0E27                     	;# 
  3583  0E28                     	;# 
  3584  0E29                     	;# 
  3585  0E2A                     	;# 
  3586  0E2B                     	;# 
  3587  0E2C                     	;# 
  3588  0E2D                     	;# 
  3589  0E2E                     	;# 
  3590  0E2F                     	;# 
  3591  0E30                     	;# 
  3592  0E31                     	;# 
  3593  0E32                     	;# 
  3594  0E33                     	;# 
  3595  0E34                     	;# 
  3596  0E35                     	;# 
  3597  0E36                     	;# 
  3598  0E37                     	;# 
  3599  0E8F                     	;# 
  3600  0E90                     	;# 
  3601  0E91                     	;# 
  3602  0E92                     	;# 
  3603  0E93                     	;# 
  3604  0E94                     	;# 
  3605  0E95                     	;# 
  3606  0E96                     	;# 
  3607  0E97                     	;# 
  3608  0E9C                     	;# 
  3609  0E9D                     	;# 
  3610  0E9E                     	;# 
  3611  0EA1                     	;# 
  3612  0EA2                     	;# 
  3613  0EA3                     	;# 
  3614  0EA4                     	;# 
  3615  0EA5                     	;# 
  3616  0EA9                     	;# 
  3617  0EAA                     	;# 
  3618  0EAB                     	;# 
  3619  0EAC                     	;# 
  3620  0EB1                     	;# 
  3621  0EB2                     	;# 
  3622  0EB3                     	;# 
  3623  0EB8                     	;# 
  3624  0EB9                     	;# 
  3625  0EBA                     	;# 
  3626  0EBB                     	;# 
  3627  0EBC                     	;# 
  3628  0EBD                     	;# 
  3629  0EBE                     	;# 
  3630  0EC3                     	;# 
  3631  0EC5                     	;# 
  3632  0EC6                     	;# 
  3633  0EC7                     	;# 
  3634  0EC8                     	;# 
  3635  0EC9                     	;# 
  3636  0ECA                     	;# 
  3637  0ECB                     	;# 
  3638  0ECC                     	;# 
  3639  0F10                     	;# 
  3640  0F11                     	;# 
  3641  0F12                     	;# 
  3642  0F13                     	;# 
  3643  0F14                     	;# 
  3644  0F15                     	;# 
  3645  0F16                     	;# 
  3646  0F17                     	;# 
  3647  0F18                     	;# 
  3648  0F19                     	;# 
  3649  0F1A                     	;# 
  3650  0F1B                     	;# 
  3651  0F1C                     	;# 
  3652  0F1D                     	;# 
  3653  0F1E                     	;# 
  3654  0F1F                     	;# 
  3655  0F20                     	;# 
  3656  0F21                     	;# 
  3657  0F22                     	;# 
  3658  0F23                     	;# 
  3659  0F24                     	;# 
  3660  0F25                     	;# 
  3661  0F26                     	;# 
  3662  0F27                     	;# 
  3663  0F38                     	;# 
  3664  0F39                     	;# 
  3665  0F3A                     	;# 
  3666  0F3B                     	;# 
  3667  0F3C                     	;# 
  3668  0F3D                     	;# 
  3669  0F3E                     	;# 
  3670  0F3F                     	;# 
  3671  0F40                     	;# 
  3672  0F41                     	;# 
  3673  0F43                     	;# 
  3674  0F44                     	;# 
  3675  0F45                     	;# 
  3676  0F46                     	;# 
  3677  0F47                     	;# 
  3678  0F48                     	;# 
  3679  0F49                     	;# 
  3680  0F4A                     	;# 
  3681  0F4B                     	;# 
  3682  0F4C                     	;# 
  3683  0F4E                     	;# 
  3684  0F4F                     	;# 
  3685  0F50                     	;# 
  3686  0F51                     	;# 
  3687  0F52                     	;# 
  3688  0F53                     	;# 
  3689  0F54                     	;# 
  3690  0F55                     	;# 
  3691  0F56                     	;# 
  3692  0F57                     	;# 
  3693  0F65                     	;# 
  3694  0F68                     	;# 
  3695  0F69                     	;# 
  3696  0F6A                     	;# 
  3697  0F6B                     	;# 
  3698  0FE4                     	;# 
  3699  0FE5                     	;# 
  3700  0FE6                     	;# 
  3701  0FE7                     	;# 
  3702  0FE8                     	;# 
  3703  0FE9                     	;# 
  3704  0FEA                     	;# 
  3705  0FEB                     	;# 
  3706  0FED                     	;# 
  3707  0FEE                     	;# 
  3708  0FEF                     	;# 
  3709                           
  3710                           	psect	idataBANK1
  3711  0EA6                     __pidataBANK1:	
  3712                           
  3713                           ;initializer for _segdisp
  3714  0EA6  3403               	retlw	3
  3715  0EA7  3400               	retlw	0
  3716  0EA8  349F               	retlw	159
  3717  0EA9  3400               	retlw	0
  3718  0EAA  3425               	retlw	37
  3719  0EAB  3400               	retlw	0
  3720  0EAC  340D               	retlw	13
  3721  0EAD  3400               	retlw	0
  3722  0EAE  3499               	retlw	153
  3723  0EAF  3400               	retlw	0
  3724  0EB0  3449               	retlw	73
  3725  0EB1  3400               	retlw	0
  3726  0EB2  3441               	retlw	65
  3727  0EB3  3400               	retlw	0
  3728  0EB4  341B               	retlw	27
  3729  0EB5  3400               	retlw	0
  3730  0EB6  3401               	retlw	1
  3731  0EB7  3400               	retlw	0
  3732  0EB8  3409               	retlw	9
  3733  0EB9  3400               	retlw	0
  3734                           
  3735                           ;initializer for MYI2C_Write2LEDBytes@F14460
  3736  0EBA  34A0               	retlw	160
  3737  0EBB  34A1               	retlw	161
  3738  0EBC  34A2               	retlw	162
  3739  0EBD  34A3               	retlw	163
  3740  0EBE  34A4               	retlw	164
  3741  0EBF  34A5               	retlw	165
  3742  0EC0  34A6               	retlw	166
  3743  0EC1  34A7               	retlw	167
  3744  0EC2  34A8               	retlw	168
  3745  0EC3  34A9               	retlw	169
  3746  0EC4  34AA               	retlw	170
  3747  0EC5  34AB               	retlw	171
  3748  0EC6  34AC               	retlw	172
  3749  0EC7  34AD               	retlw	173
  3750  0EC8  34AE               	retlw	174
  3751  0EC9  34AF               	retlw	175
  3752                           
  3753                           	psect	stringtext1
  3754  1000                     __pstringtext1:	
  3755  1000                     _toggleDly:	
  3756  1000  340A               	retlw	10
  3757  1001  3400               	retlw	0
  3758  1002                     __end_of_toggleDly:	
  3759                           
  3760                           	psect	stringtext2
  3761  1002                     __pstringtext2:	
  3762  1002                     _twoK:	
  3763  1002  3410               	retlw	16
  3764  1003  3427               	retlw	39
  3765  1004                     __end_of_twoK:	
  3766                           
  3767                           	psect	stringtext3
  3768  1004                     __pstringtext3:	
  3769  1004                     _speed:	
  3770  1004  3432               	retlw	50
  3771  1005  3400               	retlw	0
  3772  1006                     __end_of_speed:	
  3773                           
  3774                           	psect	stringtext4
  3775  1006                     __pstringtext4:	
  3776  1006                     _datapin:	
  3777  1006  3412               	retlw	18
  3778  1007  3400               	retlw	0
  3779  1008                     __end_of_datapin:	
  3780                           
  3781                           	psect	stringtext5
  3782  1008                     __pstringtext5:	
  3783  1008                     _clockpin:	
  3784  1008  3411               	retlw	17
  3785  1009  3400               	retlw	0
  3786  100A                     __end_of_clockpin:	
  3787                           
  3788                           	psect	stringtext6
  3789  100A                     __pstringtext6:	
  3790  100A                     _latchpin:	
  3791  100A  3410               	retlw	16
  3792  100B  3400               	retlw	0
  3793  100C                     __end_of_latchpin:	
  3794                           
  3795                           	psect	stringtext7
  3796  100C                     __pstringtext7:	
  3797  100C                     main@iResetValue:	
  3798  100C  3464               	retlw	100
  3799  100D  3400               	retlw	0
  3800  100E                     __end_ofmain@iResetValue:	
  3801                           
  3802                           	psect	stringtext8
  3803  100E                     __pstringtext8:	
  3804  100E                     _cMstrClkAdjust:	
  3805  100E  3420               	retlw	32
  3806  100F  3400               	retlw	0
  3807  1010                     __end_of_cMstrClkAdjust:	
  3808  0018                     _LATCbits	set	24
  3809  0013                     _TRISCbits	set	19
  3810  000E                     _PORTC	set	14
  3811  000D                     _PORTB	set	13
  3812  000B                     _INTCONbits	set	11
  3813  0013                     _TRISC	set	19
  3814  0012                     _TRISB	set	18
  3815  0011                     _TRISA	set	17
  3816  0018                     _LATC	set	24
  3817  0017                     _LATB	set	23
  3818  0016                     _LATA	set	22
  3819  005F                     _GIE	set	95
  3820  0094                     _ADCON1bits	set	148
  3821  008E                     _ADPREVL	set	142
  3822  008F                     _ADPREVH	set	143
  3823  0097                     _ADSTATbits	set	151
  3824  0090                     _ADACCL	set	144
  3825  0091                     _ADACCH	set	145
  3826  0095                     _ADCON2bits	set	149
  3827  0096                     _ADCON3bits	set	150
  3828  008C                     _ADRESL	set	140
  3829  008D                     _ADRESH	set	141
  3830  0093                     _ADCON0bits	set	147
  3831  0093                     _ADCON0	set	147
  3832  009E                     _ADPCH	set	158
  3833  009D                     _ADACQ	set	157
  3834  009C                     _ADPRE	set	156
  3835  009B                     _ADCAP	set	155
  3836  009A                     _ADREF	set	154
  3837  0098                     _ADCLK	set	152
  3838  0097                     _ADSTAT	set	151
  3839  0099                     _ADACT	set	153
  3840  0096                     _ADCON3	set	150
  3841  0095                     _ADCON2	set	149
  3842  0094                     _ADCON1	set	148
  3843  0116                     _ADERRL	set	278
  3844  0117                     _ADERRH	set	279
  3845  0114                     _ADFLTRL	set	276
  3846  0115                     _ADFLTRH	set	277
  3847  010C                     _ADCNT	set	268
  3848  0113                     _ADSTPTH	set	275
  3849  0112                     _ADSTPTL	set	274
  3850  0111                     _ADUTHH	set	273
  3851  0110                     _ADUTHL	set	272
  3852  010F                     _ADLTHH	set	271
  3853  010E                     _ADLTHL	set	270
  3854  010D                     _ADRPT	set	269
  3855  018C                     _SSP1BUF	set	396
  3856  0191                     _SSP1CON2bits	set	401
  3857  0190                     _SSP1CON1bits	set	400
  3858  018D                     _SSP1ADD	set	397
  3859  0192                     _SSP1CON3	set	402
  3860  0190                     _SSP1CON1	set	400
  3861  018F                     _SSP1STAT	set	399
  3862  0719                     _PIE3bits	set	1817
  3863  070F                     _PIR3bits	set	1807
  3864  0892                     _OSCTUNE	set	2194
  3865  0893                     _OSCFRQ	set	2195
  3866  0891                     _OSCEN	set	2193
  3867  088F                     _OSCCON3	set	2191
  3868  088D                     _OSCCON1	set	2189
  3869  0EC5                     _SSP1CLKPPSbits	set	3781
  3870  0EC6                     _SSP1DATPPSbits	set	3782
  3871  0E8F                     _PPSLOCKbits	set	3727
  3872  0E8F                     _PPSLOCK	set	3727
  3873  0F4E                     _ANSELCbits	set	3918
  3874  0F24                     _RC4PPS	set	3876
  3875  0F23                     _RC3PPS	set	3875
  3876  0F50                     _ODCONC	set	3920
  3877  0F45                     _ODCONB	set	3909
  3878  0F3A                     _ODCONA	set	3898
  3879  0F4F                     _WPUC	set	3919
  3880  0F39                     _WPUA	set	3897
  3881  0F44                     _WPUB	set	3908
  3882  0F65                     _WPUE	set	3941
  3883  0F38                     _ANSELA	set	3896
  3884  0F43                     _ANSELB	set	3907
  3885  0F4E                     _ANSELC	set	3918
  3886                           
  3887                           ; #config settings
  3888  0000                     
  3889                           	psect	cinit
  3890  0022                     start_initialization:	
  3891  0022                     __initialization:	
  3892                           
  3893                           ; Initialize objects allocated to BANK1
  3894  0022  30A6               	movlw	low __pidataBANK1
  3895  0023  0084               	movwf	4
  3896  0024  308E               	movlw	(high __pidataBANK1)| (0+128)
  3897  0025  0085               	movwf	5
  3898  0026  30A0               	movlw	low __pdataBANK1
  3899  0027  0086               	movwf	6
  3900  0028  3000               	movlw	high __pdataBANK1
  3901  0029  0087               	movwf	7
  3902  002A  3024               	movlw	36
  3903  002B  318D  2574  3180   	fcall	init_ram
  3904                           
  3905                           ; Clear objects allocated to COMMON
  3906  002E  01F0               	clrf	__pbssCOMMON& (0+127)
  3907  002F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  3908  0030  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  3909  0031  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  3910  0032  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  3911  0033  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  3912  0034  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  3913                           
  3914                           ; Clear objects allocated to BANK0
  3915  0035  3062               	movlw	low __pbssBANK0
  3916  0036  0084               	movwf	4
  3917  0037  3000               	movlw	high __pbssBANK0
  3918  0038  0085               	movwf	5
  3919  0039  300D               	movlw	13
  3920  003A  318D  256E  3180   	fcall	clear_ram0
  3921                           
  3922                           ; Clear objects allocated to BANK1
  3923  003D  30C4               	movlw	low __pbssBANK1
  3924  003E  0084               	movwf	4
  3925  003F  3000               	movlw	high __pbssBANK1
  3926  0040  0085               	movwf	5
  3927  0041  301C               	movlw	28
  3928  0042  318D  256E         	fcall	clear_ram0
  3929  0044                     end_of_initialization:	
  3930                           ;End of C runtime variable initialization code
  3931                           
  3932  0044                     __end_of__initialization:	
  3933  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3934  0045  0020               	movlb	0
  3935  0046  3181  2983         	ljmp	_main	;jump to C main() function
  3936                           
  3937                           	psect	bssCOMMON
  3938  0070                     __pbssCOMMON:	
  3939  0070                     I2C1_ISR@i2c_bytes_left:	
  3940  0070                     	ds	1
  3941  0071                     I2C1_ISR@pi2c_buf_ptr:	
  3942  0071                     	ds	1
  3943  0072                     _p_i2c1_current:	
  3944  0072                     	ds	1
  3945  0073                     _p_i2c1_trb_current:	
  3946  0073                     	ds	1
  3947  0074                     _i2c1_trb_count:	
  3948  0074                     	ds	1
  3949  0075                     I2C1_ISR@i2c_address:	
  3950  0075                     	ds	2
  3951                           
  3952                           	psect	bssBANK0
  3953  0062                     __pbssBANK0:	
  3954  0062                     _i2c1_object:	
  3955  0062                     	ds	5
  3956  0067                     _wkFaderValue:	
  3957  0067                     	ds	1
  3958  0068                     _iLEDs1_LSB:	
  3959  0068                     	ds	1
  3960  0069                     _iLEDs1_MSB:	
  3961  0069                     	ds	1
  3962  006A                     I2C1_ISR@i2c_10bit_address_restart:	
  3963  006A                     	ds	1
  3964  006B                     _i2c1_state:	
  3965  006B                     	ds	1
  3966  006C                     _i2c1_tr_queue:	
  3967  006C                     	ds	3
  3968                           
  3969                           	psect	bssBANK1
  3970  00C4                     __pbssBANK1:	
  3971  00C4                     _d:	
  3972  00C4                     	ds	3
  3973  00C7                     _b:	
  3974  00C7                     	ds	3
  3975  00CA                     _e:	
  3976  00CA                     	ds	2
  3977  00CC                     _c:	
  3978  00CC                     	ds	2
  3979  00CE                     _iLEDs0_LSB:	
  3980  00CE                     	ds	1
  3981  00CF                     _iLEDs0_MSB:	
  3982  00CF                     	ds	1
  3983  00D0                     _byteFaderValue:	
  3984  00D0                     	ds	8
  3985  00D8                     I2C1_MasterRead@trBlock:	
  3986  00D8                     	ds	4
  3987  00DC                     I2C1_MasterWrite@trBlock:	
  3988  00DC                     	ds	4
  3989                           
  3990                           	psect	dataBANK1
  3991  00A0                     __pdataBANK1:	
  3992  00A0                     _segdisp:	
  3993  00A0                     	ds	20
  3994  00B4                     MYI2C_Write2LEDBytes@F14460:	
  3995  00B4                     	ds	16
  3996                           
  3997                           	psect	inittext
  3998  0D74                     init_ram:	
  3999  0D74  00FE               	movwf	126
  4000  0D75                     initloop:	
  4001  0D75  0012               	moviw fsr0++
  4002  0D76  001E               	movwi fsr1++
  4003  0D77  0BFE               	decfsz	126,f
  4004  0D78  2D75               	goto	initloop
  4005  0D79  3400               	retlw	0
  4006                           
  4007                           	psect	clrtext
  4008  0D6E                     clear_ram0:	
  4009                           ;	Called with FSR0 containing the base address, and
  4010                           ;	WREG with the size to clear
  4011                           
  4012  0D6E  0064               	clrwdt	;clear the watchdog before getting into this loop
  4013  0D6F                     clrloop0:	
  4014  0D6F  0180               	clrf	0	;clear RAM location pointed to by FSR
  4015  0D70  3101               	addfsr 0,1
  4016  0D71  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4017  0D72  2D6F               	goto	clrloop0	;have we reached the end yet?
  4018  0D73  3400               	retlw	0	;all done for this memory range, return
  4019                           
  4020                           	psect	cstackBANK1
  4021  00E0                     __pcstackBANK1:	
  4022  00E0                     main@iCounter:	
  4023                           
  4024                           ; 2 bytes @ 0x0
  4025  00E0                     	ds	2
  4026  00E2                     _main$1598:	
  4027                           
  4028                           ; 2 bytes @ 0x2
  4029  00E2                     	ds	2
  4030  00E4                     main@iChangeCount:	
  4031                           
  4032                           ; 1 bytes @ 0x4
  4033  00E4                     	ds	1
  4034  00E5                     main@prevFader8bitValue:	
  4035                           
  4036                           ; 1 bytes @ 0x5
  4037  00E5                     	ds	1
  4038  00E6                     main@readStatus:	
  4039                           
  4040                           ; 1 bytes @ 0x6
  4041  00E6                     	ds	1
  4042  00E7                     main@iLoopCounter:	
  4043                           
  4044                           ; 2 bytes @ 0x7
  4045  00E7                     	ds	2
  4046  00E9                     main@I2C_ADDRESS_FADELED0:	
  4047                           
  4048                           ; 1 bytes @ 0x9
  4049  00E9                     	ds	1
  4050  00EA                     main@faderValue:	
  4051                           
  4052                           ; 2 bytes @ 0xA
  4053  00EA                     	ds	2
  4054  00EC                     main@fader8bitValue:	
  4055                           
  4056                           ; 1 bytes @ 0xC
  4057  00EC                     	ds	1
  4058  00ED                     main@ndx:	
  4059                           
  4060                           ; 2 bytes @ 0xD
  4061  00ED                     	ds	2
  4062                           
  4063                           	psect	cstackCOMMON
  4064  0077                     __pcstackCOMMON:	
  4065  0077                     ?_OSCILLATOR_Initialize:	
  4066  0077                     ?_I2C1_Initialize:	
  4067                           ; 1 bytes @ 0x0
  4068                           
  4069  0077                     ?_ADCC_Initialize:	
  4070                           ; 1 bytes @ 0x0
  4071                           
  4072  0077                     ?_I2C1_Stop:	
  4073                           ; 1 bytes @ 0x0
  4074                           
  4075  0077                     ??_I2C1_Stop:	
  4076                           ; 1 bytes @ 0x0
  4077                           
  4078  0077                     ?_I2C1_FunctionComplete:	
  4079                           ; 1 bytes @ 0x0
  4080                           
  4081  0077                     ??_I2C1_FunctionComplete:	
  4082                           ; 1 bytes @ 0x0
  4083                           
  4084  0077                     ?_LED7SegSetup:	
  4085                           ; 1 bytes @ 0x0
  4086                           
  4087  0077                     ?_LED7SegLoop:	
  4088                           ; 1 bytes @ 0x0
  4089                           
  4090  0077                     ?_MYI2C_ReadFaders:	
  4091                           ; 1 bytes @ 0x0
  4092                           
  4093  0077                     ?_PIN_MANAGER_Initialize:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096  0077                     ?_SYSTEM_Initialize:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  0077                     ?_I2C1_ISR:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  0077                     ?_I2C1_BusCollisionISR:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0077                     ??_I2C1_BusCollisionISR:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0077                     ?_INTERRUPT_InterruptManager:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111  0077                     ?_main:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114  0077                     ?_LED7SegPinWrite:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0077                     ?_LED7SegPulseClock:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0077                     ?_LED7SegShiftOutPulseClock:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0077                     ?_LED7SegBlankDisplay:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126                           
  4127                           ; 1 bytes @ 0x0
  4128  0077                     	ds	1
  4129  0078                     I2C1_Stop@completion_code:	
  4130                           
  4131                           ; 1 bytes @ 0x1
  4132  0078                     	ds	1
  4133  0079                     ??_I2C1_ISR:	
  4134                           
  4135                           ; 1 bytes @ 0x2
  4136  0079                     	ds	4
  4137  007D                     ??_INTERRUPT_InterruptManager:	
  4138                           
  4139                           ; 1 bytes @ 0x6
  4140  007D                     	ds	1
  4141                           
  4142                           	psect	cstackBANK0
  4143  0020                     __pcstackBANK0:	
  4144  0020                     ??_OSCILLATOR_Initialize:	
  4145  0020                     ??_I2C1_Initialize:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148  0020                     ??_ADCC_Initialize:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0020                     ?_I2C1_MasterWriteTRBBuild:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0020                     ?_I2C1_MasterTRBInsert:	
  4155                           ; 1 bytes @ 0x0
  4156                           
  4157  0020                     ?_I2C1_MasterReadTRBBuild:	
  4158                           ; 1 bytes @ 0x0
  4159                           
  4160  0020                     ??_LED7SegSetup:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0020                     ?_UpdateLEDsFromValue:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0020                     ??_PIN_MANAGER_Initialize:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0020                     ??_LED7SegPinWrite:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0020                     ?_ADCC_GetSingleConversion:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0020                     ?___wmul:	
  4176                           ; 2 bytes @ 0x0
  4177                           
  4178  0020                     ?___lwdiv:	
  4179                           ; 2 bytes @ 0x0
  4180                           
  4181  0020                     ?___lwmod:	
  4182                           ; 2 bytes @ 0x0
  4183                           
  4184  0020                     ?___ftpack:	
  4185                           ; 2 bytes @ 0x0
  4186                           
  4187  0020                     PIN_MANAGER_Initialize@state:	
  4188                           ; 3 bytes @ 0x0
  4189                           
  4190  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  4191                           ; 1 bytes @ 0x0
  4192                           
  4193  0020                     I2C1_MasterReadTRBBuild@pdata:	
  4194                           ; 1 bytes @ 0x0
  4195                           
  4196  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0020                     UpdateLEDsFromValue@inValue:	
  4200                           ; 1 bytes @ 0x0
  4201                           
  4202  0020                     LED7SegPinWrite@val:	
  4203                           ; 1 bytes @ 0x0
  4204                           
  4205  0020                     ___wmul@multiplier:	
  4206                           ; 1 bytes @ 0x0
  4207                           
  4208  0020                     ___lwdiv@divisor:	
  4209                           ; 2 bytes @ 0x0
  4210                           
  4211  0020                     ___lwmod@divisor:	
  4212                           ; 2 bytes @ 0x0
  4213                           
  4214  0020                     ___ftpack@arg:	
  4215                           ; 2 bytes @ 0x0
  4216                           
  4217                           
  4218                           ; 3 bytes @ 0x0
  4219  0020                     	ds	1
  4220  0021                     ??_UpdateLEDsFromValue:	
  4221  0021                     ??_SYSTEM_Initialize:	
  4222                           ; 1 bytes @ 0x1
  4223                           
  4224  0021                     I2C1_MasterTRBInsert@pflag:	
  4225                           ; 1 bytes @ 0x1
  4226                           
  4227  0021                     I2C1_MasterReadTRBBuild@length:	
  4228                           ; 1 bytes @ 0x1
  4229                           
  4230  0021                     I2C1_MasterWriteTRBBuild@length:	
  4231                           ; 1 bytes @ 0x1
  4232                           
  4233                           
  4234                           ; 1 bytes @ 0x1
  4235  0021                     	ds	1
  4236  0022                     ??_I2C1_MasterTRBInsert:	
  4237  0022                     UpdateLEDsFromValue@inFaderNum:	
  4238                           ; 1 bytes @ 0x2
  4239                           
  4240  0022                     I2C1_MasterReadTRBBuild@address:	
  4241                           ; 1 bytes @ 0x2
  4242                           
  4243  0022                     I2C1_MasterWriteTRBBuild@address:	
  4244                           ; 2 bytes @ 0x2
  4245                           
  4246  0022                     ___wmul@multiplicand:	
  4247                           ; 2 bytes @ 0x2
  4248                           
  4249  0022                     ___lwdiv@dividend:	
  4250                           ; 2 bytes @ 0x2
  4251                           
  4252  0022                     ___lwmod@dividend:	
  4253                           ; 2 bytes @ 0x2
  4254                           
  4255                           
  4256                           ; 2 bytes @ 0x2
  4257  0022                     	ds	1
  4258  0023                     ??_ADCC_GetSingleConversion:	
  4259  0023                     ADCC_GetSingleConversion@channel:	
  4260                           ; 1 bytes @ 0x3
  4261                           
  4262  0023                     I2C1_MasterTRBInsert@count:	
  4263                           ; 1 bytes @ 0x3
  4264                           
  4265  0023                     UpdateLEDsFromValue@wkOnFlag:	
  4266                           ; 1 bytes @ 0x3
  4267                           
  4268  0023                     ___ftpack@exp:	
  4269                           ; 1 bytes @ 0x3
  4270                           
  4271                           
  4272                           ; 1 bytes @ 0x3
  4273  0023                     	ds	1
  4274  0024                     ??_I2C1_MasterWriteTRBBuild:	
  4275  0024                     ??_I2C1_MasterReadTRBBuild:	
  4276                           ; 1 bytes @ 0x4
  4277                           
  4278  0024                     ??___wmul:	
  4279                           ; 1 bytes @ 0x4
  4280                           
  4281  0024                     ??___lwdiv:	
  4282                           ; 1 bytes @ 0x4
  4283                           
  4284  0024                     ??___lwmod:	
  4285                           ; 1 bytes @ 0x4
  4286                           
  4287  0024                     UpdateLEDsFromValue@wkBrightFlag:	
  4288                           ; 1 bytes @ 0x4
  4289                           
  4290  0024                     ___ftpack@sign:	
  4291                           ; 1 bytes @ 0x4
  4292                           
  4293  0024                     ___wmul@product:	
  4294                           ; 1 bytes @ 0x4
  4295                           
  4296                           
  4297                           ; 2 bytes @ 0x4
  4298  0024                     	ds	1
  4299  0025                     ??___ftpack:	
  4300  0025                     ___lwmod@counter:	
  4301                           ; 1 bytes @ 0x5
  4302                           
  4303  0025                     ___lwdiv@quotient:	
  4304                           ; 1 bytes @ 0x5
  4305                           
  4306                           
  4307                           ; 2 bytes @ 0x5
  4308  0025                     	ds	1
  4309  0026                     ?_delay:	
  4310  0026                     I2C1_MasterReadTRBBuild@ptrb:	
  4311                           ; 1 bytes @ 0x6
  4312                           
  4313  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  4314                           ; 1 bytes @ 0x6
  4315                           
  4316  0026                     delay@delaytime:	
  4317                           ; 1 bytes @ 0x6
  4318                           
  4319                           
  4320                           ; 2 bytes @ 0x6
  4321  0026                     	ds	1
  4322  0027                     ??_MYI2C_ReadFaders:	
  4323  0027                     ?_I2C1_MasterWrite:	
  4324                           ; 1 bytes @ 0x7
  4325                           
  4326  0027                     I2C1_MasterWrite@length:	
  4327                           ; 1 bytes @ 0x7
  4328                           
  4329  0027                     ___lwdiv@counter:	
  4330                           ; 1 bytes @ 0x7
  4331                           
  4332                           
  4333                           ; 1 bytes @ 0x7
  4334  0027                     	ds	1
  4335  0028                     ??_delay:	
  4336  0028                     ?___lbtoft:	
  4337                           ; 1 bytes @ 0x8
  4338                           
  4339  0028                     ?___lwtoft:	
  4340                           ; 3 bytes @ 0x8
  4341                           
  4342  0028                     I2C1_MasterWrite@address:	
  4343                           ; 3 bytes @ 0x8
  4344                           
  4345  0028                     ___lwtoft@c:	
  4346                           ; 2 bytes @ 0x8
  4347                           
  4348                           
  4349                           ; 2 bytes @ 0x8
  4350  0028                     	ds	1
  4351  0029                     delay@adjustedDelaytime:	
  4352                           
  4353                           ; 4 bytes @ 0x9
  4354  0029                     	ds	1
  4355  002A                     I2C1_MasterWrite@pflag:	
  4356                           
  4357                           ; 1 bytes @ 0xA
  4358  002A                     	ds	1
  4359  002B                     ??_I2C1_MasterWrite:	
  4360  002B                     ??___lbtoft:	
  4361                           ; 1 bytes @ 0xB
  4362                           
  4363  002B                     ??___lwtoft:	
  4364                           ; 1 bytes @ 0xB
  4365                           
  4366  002B                     MYI2C_ReadFaders@dataAddress:	
  4367                           ; 1 bytes @ 0xB
  4368                           
  4369                           
  4370                           ; 2 bytes @ 0xB
  4371  002B                     	ds	2
  4372  002D                     I2C1_MasterWrite@pdata:	
  4373  002D                     MYI2C_ReadFaders@timeOut:	
  4374                           ; 1 bytes @ 0xD
  4375                           
  4376  002D                     delay@counter:	
  4377                           ; 2 bytes @ 0xD
  4378                           
  4379                           
  4380                           ; 4 bytes @ 0xD
  4381  002D                     	ds	1
  4382  002E                     ?_MYI2C_Write2LEDBytes:	
  4383  002E                     MYI2C_Write2LEDBytes@MSBWriteByte:	
  4384                           ; 1 bytes @ 0xE
  4385                           
  4386                           
  4387                           ; 1 bytes @ 0xE
  4388  002E                     	ds	1
  4389  002F                     MYI2C_ReadFaders@slaveDeviceAddress:	
  4390  002F                     MYI2C_Write2LEDBytes@LSBWriteByte:	
  4391                           ; 1 bytes @ 0xF
  4392                           
  4393  002F                     ___lbtoft@c:	
  4394                           ; 1 bytes @ 0xF
  4395                           
  4396                           
  4397                           ; 1 bytes @ 0xF
  4398  002F                     	ds	1
  4399  0030                     ??_MYI2C_Write2LEDBytes:	
  4400  0030                     ?___ftdiv:	
  4401                           ; 1 bytes @ 0x10
  4402                           
  4403  0030                     MYI2C_ReadFaders@pointerByte:	
  4404                           ; 3 bytes @ 0x10
  4405                           
  4406  0030                     ___ftdiv@f2:	
  4407                           ; 1 bytes @ 0x10
  4408                           
  4409                           
  4410                           ; 3 bytes @ 0x10
  4411  0030                     	ds	1
  4412  0031                     ?_blinkyLoop:	
  4413  0031                     ??_LED7SegPulseClock:	
  4414                           ; 1 bytes @ 0x11
  4415                           
  4416  0031                     ??_LED7SegShiftOutPulseClock:	
  4417                           ; 1 bytes @ 0x11
  4418                           
  4419  0031                     blinkyLoop@maxLoops:	
  4420                           ; 1 bytes @ 0x11
  4421                           
  4422  0031                     MYI2C_ReadFaders@readTRB:	
  4423                           ; 2 bytes @ 0x11
  4424                           
  4425                           
  4426                           ; 8 bytes @ 0x11
  4427  0031                     	ds	1
  4428  0032                     LED7SegShiftOutPulseClock@val:	
  4429                           
  4430                           ; 1 bytes @ 0x12
  4431  0032                     	ds	1
  4432  0033                     ??_blinkyLoop:	
  4433  0033                     LED7SegShiftOutPulseClock@i:	
  4434                           ; 1 bytes @ 0x13
  4435                           
  4436  0033                     ___ftdiv@f1:	
  4437                           ; 1 bytes @ 0x13
  4438                           
  4439                           
  4440                           ; 3 bytes @ 0x13
  4441  0033                     	ds	1
  4442  0034                     ??_LED7SegBlankDisplay:	
  4443  0034                     blinkyLoop@delayTime:	
  4444                           ; 1 bytes @ 0x14
  4445                           
  4446  0034                     MYI2C_Write2LEDBytes@sourceData:	
  4447                           ; 2 bytes @ 0x14
  4448                           
  4449                           
  4450                           ; 16 bytes @ 0x14
  4451  0034                     	ds	2
  4452  0036                     ??___ftdiv:	
  4453  0036                     blinkyLoop@loopCount:	
  4454                           ; 1 bytes @ 0x16
  4455                           
  4456                           
  4457                           ; 2 bytes @ 0x16
  4458  0036                     	ds	3
  4459  0039                     MYI2C_ReadFaders@status:	
  4460                           
  4461                           ; 1 bytes @ 0x19
  4462  0039                     	ds	1
  4463  003A                     ___ftdiv@cntr:	
  4464                           
  4465                           ; 1 bytes @ 0x1A
  4466  003A                     	ds	1
  4467  003B                     ___ftdiv@f3:	
  4468                           
  4469                           ; 3 bytes @ 0x1B
  4470  003B                     	ds	3
  4471  003E                     ___ftdiv@exp:	
  4472                           
  4473                           ; 1 bytes @ 0x1E
  4474  003E                     	ds	1
  4475  003F                     ___ftdiv@sign:	
  4476                           
  4477                           ; 1 bytes @ 0x1F
  4478  003F                     	ds	1
  4479  0040                     ?___fttol:	
  4480  0040                     ___fttol@f1:	
  4481                           ; 4 bytes @ 0x20
  4482                           
  4483                           
  4484                           ; 3 bytes @ 0x20
  4485  0040                     	ds	4
  4486  0044                     ??___fttol:	
  4487  0044                     MYI2C_Write2LEDBytes@dataAddress:	
  4488                           ; 1 bytes @ 0x24
  4489                           
  4490                           
  4491                           ; 2 bytes @ 0x24
  4492  0044                     	ds	2
  4493  0046                     MYI2C_Write2LEDBytes@pD:	
  4494                           
  4495                           ; 1 bytes @ 0x26
  4496  0046                     	ds	1
  4497  0047                     MYI2C_Write2LEDBytes@nCount:	
  4498                           
  4499                           ; 2 bytes @ 0x27
  4500  0047                     	ds	1
  4501  0048                     ___fttol@sign1:	
  4502                           
  4503                           ; 1 bytes @ 0x28
  4504  0048                     	ds	1
  4505  0049                     MYI2C_Write2LEDBytes@slaveDeviceAddress:	
  4506  0049                     ___fttol@lval:	
  4507                           ; 1 bytes @ 0x29
  4508                           
  4509                           
  4510                           ; 4 bytes @ 0x29
  4511  0049                     	ds	1
  4512  004A                     MYI2C_Write2LEDBytes@counter:	
  4513                           
  4514                           ; 2 bytes @ 0x2A
  4515  004A                     	ds	2
  4516  004C                     MYI2C_Write2LEDBytes@timeOut:	
  4517                           
  4518                           ; 2 bytes @ 0x2C
  4519  004C                     	ds	1
  4520  004D                     ___fttol@exp1:	
  4521                           
  4522                           ; 1 bytes @ 0x2D
  4523  004D                     	ds	1
  4524  004E                     ?_LED7SegDisplayValue:	
  4525  004E                     MYI2C_Write2LEDBytes@pointerByte:	
  4526                           ; 1 bytes @ 0x2E
  4527                           
  4528  004E                     LED7SegDisplayValue@iTwoDigitNumber:	
  4529                           ; 1 bytes @ 0x2E
  4530                           
  4531                           
  4532                           ; 2 bytes @ 0x2E
  4533  004E                     	ds	1
  4534  004F                     MYI2C_Write2LEDBytes@writeBuffer:	
  4535                           
  4536                           ; 3 bytes @ 0x2F
  4537  004F                     	ds	1
  4538  0050                     ??_LED7SegDisplayValue:	
  4539  0050                     LED7SegDisplayValue@iUnitsDigit:	
  4540                           ; 1 bytes @ 0x30
  4541                           
  4542                           
  4543                           ; 2 bytes @ 0x30
  4544  0050                     	ds	2
  4545  0052                     MYI2C_Write2LEDBytes@status:	
  4546  0052                     LED7SegDisplayValue@iTensCode:	
  4547                           ; 1 bytes @ 0x32
  4548                           
  4549                           
  4550                           ; 2 bytes @ 0x32
  4551  0052                     	ds	2
  4552  0054                     LED7SegDisplayValue@iTensDigit:	
  4553                           
  4554                           ; 2 bytes @ 0x34
  4555  0054                     	ds	2
  4556  0056                     ??_LED7SegLoop:	
  4557                           
  4558                           ; 1 bytes @ 0x36
  4559  0056                     	ds	1
  4560  0057                     LED7SegLoop@d:	
  4561                           
  4562                           ; 2 bytes @ 0x37
  4563  0057                     	ds	2
  4564  0059                     LED7SegLoop@d_1042:	
  4565                           
  4566                           ; 2 bytes @ 0x39
  4567  0059                     	ds	2
  4568  005B                     LED7SegLoop@d_1043:	
  4569                           
  4570                           ; 2 bytes @ 0x3B
  4571  005B                     	ds	2
  4572  005D                     LED7SegLoop@z:	
  4573                           
  4574                           ; 2 bytes @ 0x3D
  4575  005D                     	ds	2
  4576  005F                     ??_main:	
  4577                           
  4578                           ; 1 bytes @ 0x3F
  4579  005F                     	ds	3
  4580                           
  4581                           	psect	maintext
  4582  0183                     __pmaintext:	
  4583 ;;
  4584 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  4585 ;;
  4586 ;; *************** function _main *****************
  4587 ;; Defined at:
  4588 ;;		line 141 in file "main.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;		None
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  ndx             2   13[BANK1 ] int 
  4593 ;;  faderValue      2   10[BANK1 ] int 
  4594 ;;  iLoopCounter    2    7[BANK1 ] unsigned int 
  4595 ;;  iCounter        2    0[BANK1 ] unsigned int 
  4596 ;;  iLSByte         2    0        unsigned int 
  4597 ;;  iMSByte         2    0        unsigned int 
  4598 ;;  fader8bitVal    1   12[BANK1 ] unsigned char 
  4599 ;;  I2C_ADDRESS_    1    9[BANK1 ] unsigned char 
  4600 ;;  readStatus      1    6[BANK1 ] enum E14267
  4601 ;;  prevFader8bi    1    5[BANK1 ] unsigned char 
  4602 ;;  iChangeCount    1    4[BANK1 ] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : B1F/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Totals:         0       3      15       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;Total ram usage:       18 bytes
  4617 ;; Hardware stack levels required when called:    9
  4618 ;; This function calls:
  4619 ;;		_ADCC_GetSingleConversion
  4620 ;;		_LED7SegDisplayValue
  4621 ;;		_LED7SegLoop
  4622 ;;		_LED7SegSetup
  4623 ;;		_MYI2C_ReadFaders
  4624 ;;		_MYI2C_Write2LEDBytes
  4625 ;;		_SYSTEM_Initialize
  4626 ;;		_UpdateLEDsFromValue
  4627 ;;		___ftdiv
  4628 ;;		___fttol
  4629 ;;		___lbtoft
  4630 ;;		_blinkyLoop
  4631 ;;		_delay
  4632 ;; This function is called by:
  4633 ;;		Startup code after reset
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           
  4638                           ;psect for function _main
  4639  0183                     _main:	
  4640                           
  4641                           ;main.c: 143: uint8_t I2C_ADDRESS_FADELED0 = 0x10;
  4642                           
  4643                           ;incstack = 0
  4644                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4645  0183  3010               	movlw	16
  4646  0184  0020               	movlb	0	; select bank0
  4647  0185  00DF               	movwf	??_main
  4648  0186  085F               	movf	??_main,w
  4649  0187  0021               	movlb	1	; select bank1
  4650  0188  00E9               	movwf	main@I2C_ADDRESS_FADELED0^(0+128)
  4651                           
  4652                           ;main.c: 144: uint16_t iCounter=0;
  4653  0189  01E0               	clrf	main@iCounter^(0+128)
  4654  018A  01E1               	clrf	(main@iCounter+1)^(0+128)
  4655                           
  4656                           ;main.c: 145: uint16_t iMSByte;
  4657                           ;main.c: 146: uint16_t iLSByte;
  4658                           ;main.c: 147: const uint16_t iResetValue=100;
  4659                           ;main.c: 148: uint16_t iLoopCounter=0;
  4660  018B  01E7               	clrf	main@iLoopCounter^(0+128)
  4661  018C  01E8               	clrf	(main@iLoopCounter+1)^(0+128)
  4662                           
  4663                           ;main.c: 149: uint8_t iChangeCount=0;
  4664  018D  01E4               	clrf	main@iChangeCount^(0+128)
  4665                           
  4666                           ;main.c: 150: int faderValue;
  4667                           ;main.c: 151: uint8_t fader8bitValue;
  4668                           ;main.c: 152: uint8_t prevFader8bitValue;
  4669                           ;main.c: 154: I2C1_MESSAGE_STATUS readStatus=0;
  4670  018E  01E6               	clrf	main@readStatus^(0+128)
  4671                           
  4672                           ;main.c: 157: SYSTEM_Initialize();
  4673  018F  318D  25A2  3181   	fcall	_SYSTEM_Initialize
  4674                           
  4675                           ;main.c: 159: LED7SegSetup();
  4676  0192  3187  27F1  3181   	fcall	_LED7SegSetup
  4677                           
  4678                           ;main.c: 164: (INTCONbits.GIE = 1);
  4679  0195  178B               	bsf	11,7	;volatile
  4680                           
  4681                           ;main.c: 167: (INTCONbits.PEIE = 1);
  4682  0196  170B               	bsf	11,6	;volatile
  4683                           
  4684                           ;main.c: 176: faderValue=ADCC_GetSingleConversion(FADER0);
  4685  0197  3000               	movlw	0
  4686  0198  318D  25C0  3181   	fcall	_ADCC_GetSingleConversion
  4687  019B  0020               	movlb	0	; select bank0
  4688  019C  0821               	movf	?_ADCC_GetSingleConversion+1,w
  4689  019D  0021               	movlb	1	; select bank1
  4690  019E  00EB               	movwf	(main@faderValue+1)^(0+128)
  4691  019F  0020               	movlb	0	; select bank0
  4692  01A0  0820               	movf	?_ADCC_GetSingleConversion,w
  4693  01A1  0021               	movlb	1	; select bank1
  4694  01A2  00EA               	movwf	main@faderValue^(0+128)
  4695                           
  4696                           ;main.c: 177: prevFader8bitValue=faderValue>>2;
  4697  01A3  086B               	movf	(main@faderValue+1)^(0+128),w
  4698  01A4  0020               	movlb	0	; select bank0
  4699  01A5  00E0               	movwf	??_main+1
  4700  01A6  0021               	movlb	1	; select bank1
  4701  01A7  086A               	movf	main@faderValue^(0+128),w
  4702  01A8  0020               	movlb	0	; select bank0
  4703  01A9  00DF               	movwf	??_main
  4704  01AA  0D60               	rlf	??_main+1,w
  4705  01AB  0CE0               	rrf	??_main+1,f
  4706  01AC  0CDF               	rrf	??_main,f
  4707  01AD  0D60               	rlf	??_main+1,w
  4708  01AE  0CE0               	rrf	??_main+1,f
  4709  01AF  0CDF               	rrf	??_main,f
  4710  01B0  085F               	movf	??_main,w
  4711  01B1  00E1               	movwf	??_main+2
  4712  01B2  0861               	movf	??_main+2,w
  4713  01B3  0021               	movlb	1	; select bank1
  4714  01B4  00E5               	movwf	main@prevFader8bitValue^(0+128)
  4715                           
  4716                           ;main.c: 179: blinkyLoop(10);
  4717  01B5  300A               	movlw	10
  4718  01B6  0020               	movlb	0	; select bank0
  4719  01B7  00B1               	movwf	blinkyLoop@maxLoops
  4720  01B8  3000               	movlw	0
  4721  01B9  00B2               	movwf	blinkyLoop@maxLoops+1
  4722  01BA  3186  26E5  3181   	fcall	_blinkyLoop
  4723                           
  4724                           ;main.c: 182: LED7SegLoop();
  4725  01BD  3183  23A2  3181   	fcall	_LED7SegLoop
  4726  01C0                     l3315:	
  4727                           ;main.c: 184: while (1) {
  4728                           
  4729                           
  4730                           ;main.c: 185: iLoopCounter++;
  4731  01C0  3001               	movlw	1
  4732  01C1  0021               	movlb	1	; select bank1
  4733  01C2  07E7               	addwf	main@iLoopCounter^(0+128),f
  4734  01C3  3000               	movlw	0
  4735  01C4  3DE8               	addwfc	(main@iLoopCounter+1)^(0+128),f
  4736                           
  4737                           ;main.c: 186: if (iResetValue<=iLoopCounter) iLoopCounter=0;
  4738  01C5  300C               	movlw	low (main@iResetValue| (0+32768))
  4739  01C6  0084               	movwf	4
  4740  01C7  3090               	movlw	high (main@iResetValue| (0+32768))
  4741  01C8  0085               	movwf	5
  4742  01C9  3F00               	moviw [0]fsr0
  4743  01CA  0020               	movlb	0	; select bank0
  4744  01CB  00DF               	movwf	??_main
  4745  01CC  3F01               	moviw [1]fsr0
  4746  01CD  00E0               	movwf	??_main+1
  4747  01CE  0860               	movf	??_main+1,w
  4748  01CF  0021               	movlb	1	; select bank1
  4749  01D0  0268               	subwf	(main@iLoopCounter+1)^(0+128),w
  4750  01D1  1D03               	skipz
  4751  01D2  29D7               	goto	u2915
  4752  01D3  0020               	movlb	0	; select bank0
  4753  01D4  085F               	movf	??_main,w
  4754  01D5  0021               	movlb	1	; select bank1
  4755  01D6  0267               	subwf	main@iLoopCounter^(0+128),w
  4756  01D7                     u2915:	
  4757  01D7  1C03               	skipc
  4758  01D8  29DB               	goto	l3321
  4759  01D9  01E7               	clrf	main@iLoopCounter^(0+128)
  4760  01DA  01E8               	clrf	(main@iLoopCounter+1)^(0+128)
  4761  01DB                     l3321:	
  4762                           
  4763                           ;main.c: 189: {
  4764                           ;main.c: 190: faderValue=ADCC_GetSingleConversion(FADER0);
  4765  01DB  3000               	movlw	0
  4766  01DC  318D  25C0  3181   	fcall	_ADCC_GetSingleConversion
  4767  01DF  0020               	movlb	0	; select bank0
  4768  01E0  0821               	movf	?_ADCC_GetSingleConversion+1,w
  4769  01E1  0021               	movlb	1	; select bank1
  4770  01E2  00EB               	movwf	(main@faderValue+1)^(0+128)
  4771  01E3  0020               	movlb	0	; select bank0
  4772  01E4  0820               	movf	?_ADCC_GetSingleConversion,w
  4773  01E5  0021               	movlb	1	; select bank1
  4774  01E6  00EA               	movwf	main@faderValue^(0+128)
  4775                           
  4776                           ;main.c: 191: fader8bitValue=faderValue>>2;
  4777  01E7  086B               	movf	(main@faderValue+1)^(0+128),w
  4778  01E8  0020               	movlb	0	; select bank0
  4779  01E9  00E0               	movwf	??_main+1
  4780  01EA  0021               	movlb	1	; select bank1
  4781  01EB  086A               	movf	main@faderValue^(0+128),w
  4782  01EC  0020               	movlb	0	; select bank0
  4783  01ED  00DF               	movwf	??_main
  4784  01EE  0D60               	rlf	??_main+1,w
  4785  01EF  0CE0               	rrf	??_main+1,f
  4786  01F0  0CDF               	rrf	??_main,f
  4787  01F1  0D60               	rlf	??_main+1,w
  4788  01F2  0CE0               	rrf	??_main+1,f
  4789  01F3  0CDF               	rrf	??_main,f
  4790  01F4  085F               	movf	??_main,w
  4791  01F5  00E1               	movwf	??_main+2
  4792  01F6  0861               	movf	??_main+2,w
  4793  01F7  0021               	movlb	1	; select bank1
  4794  01F8  00EC               	movwf	main@fader8bitValue^(0+128)
  4795                           
  4796                           ;main.c: 192: }
  4797                           ;main.c: 194: faderValue=byteFaderValue[0];
  4798  01F9  0850               	movf	_byteFaderValue^(0+128),w	;volatile
  4799  01FA  0020               	movlb	0	; select bank0
  4800  01FB  00DF               	movwf	??_main
  4801  01FC  01E0               	clrf	??_main+1
  4802  01FD  085F               	movf	??_main,w
  4803  01FE  0021               	movlb	1	; select bank1
  4804  01FF  00EA               	movwf	main@faderValue^(0+128)
  4805  0200  0020               	movlb	0	; select bank0
  4806  0201  0860               	movf	??_main+1,w
  4807  0202  0021               	movlb	1	; select bank1
  4808  0203  00EB               	movwf	(main@faderValue+1)^(0+128)
  4809                           
  4810                           ;main.c: 223: readStatus = MYI2C_ReadFaders(I2C_ADDRESS_FADELED0);
  4811  0204  0869               	movf	main@I2C_ADDRESS_FADELED0^(0+128),w
  4812  0205  3187  2747  3181   	fcall	_MYI2C_ReadFaders
  4813  0208  0020               	movlb	0	; select bank0
  4814  0209  00DF               	movwf	??_main
  4815  020A  085F               	movf	??_main,w
  4816  020B  0021               	movlb	1	; select bank1
  4817  020C  00E6               	movwf	main@readStatus^(0+128)
  4818                           
  4819                           ;main.c: 225: if(readStatus==I2C1_MESSAGE_COMPLETE)
  4820  020D  0866               	movf	main@readStatus^(0+128),w
  4821  020E  1D03               	btfss	3,2
  4822  020F  2A51               	goto	l3345
  4823                           
  4824                           ;main.c: 226: {
  4825                           ;main.c: 228: for(int ndx=0;ndx<8;ndx++){
  4826  0210  01ED               	clrf	main@ndx^(0+128)
  4827  0211  01EE               	clrf	(main@ndx+1)^(0+128)
  4828  0212  086E               	movf	(main@ndx+1)^(0+128),w
  4829  0213  3A80               	xorlw	128
  4830  0214  0020               	movlb	0	; select bank0
  4831  0215  00DF               	movwf	??_main
  4832  0216  3080               	movlw	128
  4833  0217  025F               	subwf	??_main,w
  4834  0218  1D03               	skipz
  4835  0219  2A1D               	goto	u2935
  4836  021A  3008               	movlw	8
  4837  021B  0021               	movlb	1	; select bank1
  4838  021C  026D               	subwf	main@ndx^(0+128),w
  4839  021D                     u2935:	
  4840  021D  1803               	btfsc	3,0
  4841  021E  2A40               	goto	l3343
  4842  021F                     l3337:	
  4843                           
  4844                           ;main.c: 229: UpdateLEDsFromValue(ndx,byteFaderValue[ndx]);
  4845  021F  0021               	movlb	1	; select bank1
  4846  0220  086D               	movf	main@ndx^(0+128),w
  4847  0221  3ED0               	addlw	(low (_byteFaderValue| 0))& (0+255)
  4848  0222  0086               	movwf	6
  4849  0223  0187               	clrf	7
  4850  0224  0801               	movf	1,w
  4851  0225  0020               	movlb	0	; select bank0
  4852  0226  00DF               	movwf	??_main
  4853  0227  085F               	movf	??_main,w
  4854  0228  00A0               	movwf	UpdateLEDsFromValue@inValue
  4855  0229  0021               	movlb	1	; select bank1
  4856  022A  086D               	movf	main@ndx^(0+128),w
  4857  022B  3182  22AE  3181   	fcall	_UpdateLEDsFromValue
  4858  022E  3001               	movlw	1
  4859  022F  0021               	movlb	1	; select bank1
  4860  0230  07ED               	addwf	main@ndx^(0+128),f
  4861  0231  3000               	movlw	0
  4862  0232  3DEE               	addwfc	(main@ndx+1)^(0+128),f
  4863  0233  086E               	movf	(main@ndx+1)^(0+128),w
  4864  0234  3A80               	xorlw	128
  4865  0235  0020               	movlb	0	; select bank0
  4866  0236  00DF               	movwf	??_main
  4867  0237  3080               	movlw	128
  4868  0238  025F               	subwf	??_main,w
  4869  0239  1D03               	skipz
  4870  023A  2A3E               	goto	u2945
  4871  023B  3008               	movlw	8
  4872  023C  0021               	movlb	1	; select bank1
  4873  023D  026D               	subwf	main@ndx^(0+128),w
  4874  023E                     u2945:	
  4875  023E  1C03               	skipc
  4876  023F  2A1F               	goto	l3337
  4877  0240                     l3343:	
  4878                           
  4879                           ;main.c: 230: }
  4880                           ;main.c: 232: MYI2C_Write2LEDBytes(I2C_ADDRESS_FADELED0,iLEDs0_MSB,iLEDs0_LSB);
  4881  0240  0021               	movlb	1	; select bank1
  4882  0241  084F               	movf	_iLEDs0_MSB^(0+128),w
  4883  0242  0020               	movlb	0	; select bank0
  4884  0243  00DF               	movwf	??_main
  4885  0244  085F               	movf	??_main,w
  4886  0245  00AE               	movwf	MYI2C_Write2LEDBytes@MSBWriteByte
  4887  0246  0021               	movlb	1	; select bank1
  4888  0247  084E               	movf	_iLEDs0_LSB^(0+128),w
  4889  0248  0020               	movlb	0	; select bank0
  4890  0249  00E0               	movwf	??_main+1
  4891  024A  0860               	movf	??_main+1,w
  4892  024B  00AF               	movwf	MYI2C_Write2LEDBytes@LSBWriteByte
  4893  024C  0021               	movlb	1	; select bank1
  4894  024D  0869               	movf	main@I2C_ADDRESS_FADELED0^(0+128),w
  4895  024E  3186  260C  3181   	fcall	_MYI2C_Write2LEDBytes
  4896  0251                     l3345:	
  4897                           
  4898                           ;main.c: 233: }
  4899                           ;main.c: 243: if (prevFader8bitValue!=fader8bitValue) {
  4900  0251  0021               	movlb	1	; select bank1
  4901  0252  0865               	movf	main@prevFader8bitValue^(0+128),w
  4902  0253  066C               	xorwf	main@fader8bitValue^(0+128),w
  4903  0254  1903               	skipnz
  4904  0255  2A5C               	goto	l3349
  4905                           
  4906                           ;main.c: 244: iChangeCount++;
  4907  0256  3001               	movlw	1
  4908  0257  0020               	movlb	0	; select bank0
  4909  0258  00DF               	movwf	??_main
  4910  0259  085F               	movf	??_main,w
  4911  025A  0021               	movlb	1	; select bank1
  4912  025B  07E4               	addwf	main@iChangeCount^(0+128),f
  4913  025C                     l3349:	
  4914                           
  4915                           ;main.c: 246: }
  4916                           ;main.c: 247: prevFader8bitValue=fader8bitValue;
  4917  025C  086C               	movf	main@fader8bitValue^(0+128),w
  4918  025D  0020               	movlb	0	; select bank0
  4919  025E  00DF               	movwf	??_main
  4920  025F  085F               	movf	??_main,w
  4921  0260  0021               	movlb	1	; select bank1
  4922  0261  00E5               	movwf	main@prevFader8bitValue^(0+128)
  4923                           
  4924                           ;main.c: 250: iCounter++;
  4925  0262  3001               	movlw	1
  4926  0263  07E0               	addwf	main@iCounter^(0+128),f
  4927  0264  3000               	movlw	0
  4928  0265  3DE1               	addwfc	(main@iCounter+1)^(0+128),f
  4929                           
  4930                           ;main.c: 251: if (fader8bitValue<252)
  4931  0266  30FC               	movlw	252
  4932  0267  026C               	subwf	main@fader8bitValue^(0+128),w
  4933  0268  1803               	skipnc
  4934  0269  2A7C               	goto	l3357
  4935                           
  4936                           ;main.c: 252: delay(1*(255-fader8bitValue));
  4937  026A  086C               	movf	main@fader8bitValue^(0+128),w
  4938  026B  0020               	movlb	0	; select bank0
  4939  026C  00DF               	movwf	??_main
  4940  026D  01E0               	clrf	??_main+1
  4941  026E  09DF               	comf	??_main,f
  4942  026F  09E0               	comf	??_main+1,f
  4943  0270  0ADF               	incf	??_main,f
  4944  0271  1903               	skipnz
  4945  0272  0AE0               	incf	??_main+1,f
  4946  0273  085F               	movf	??_main,w
  4947  0274  3EFF               	addlw	255
  4948  0275  00A6               	movwf	delay@delaytime
  4949  0276  3000               	movlw	0
  4950  0277  3D60               	addwfc	??_main+1,w
  4951  0278  00A7               	movwf	delay@delaytime+1
  4952  0279  3187  279E  3181   	fcall	_delay
  4953  027C                     l3357:	
  4954                           
  4955                           ;main.c: 256: LED7SegDisplayValue(iChangeCount/2.55);
  4956  027C  0021               	movlb	1	; select bank1
  4957  027D  0864               	movf	main@iChangeCount^(0+128),w
  4958  027E  318E  2633  3181   	fcall	___lbtoft
  4959  0281  0020               	movlb	0	; select bank0
  4960  0282  0828               	movf	?___lbtoft,w
  4961  0283  00B3               	movwf	___ftdiv@f1
  4962  0284  0829               	movf	?___lbtoft+1,w
  4963  0285  00B4               	movwf	___ftdiv@f1+1
  4964  0286  082A               	movf	?___lbtoft+2,w
  4965  0287  00B5               	movwf	___ftdiv@f1+2
  4966  0288  3033               	movlw	51
  4967  0289  00B0               	movwf	___ftdiv@f2
  4968  028A  3023               	movlw	35
  4969  028B  00B1               	movwf	___ftdiv@f2+1
  4970  028C  3040               	movlw	64
  4971  028D  00B2               	movwf	___ftdiv@f2+2
  4972  028E  3184  244C  3181   	fcall	___ftdiv
  4973  0291  0020               	movlb	0	; select bank0
  4974  0292  0830               	movf	?___ftdiv,w
  4975  0293  00C0               	movwf	___fttol@f1
  4976  0294  0831               	movf	?___ftdiv+1,w
  4977  0295  00C1               	movwf	___fttol@f1+1
  4978  0296  0832               	movf	?___ftdiv+2,w
  4979  0297  00C2               	movwf	___fttol@f1+2
  4980  0298  3185  2585  3181   	fcall	___fttol
  4981  029B  0020               	movlb	0	; select bank0
  4982  029C  0841               	movf	?___fttol+1,w
  4983  029D  0021               	movlb	1	; select bank1
  4984  029E  00E3               	movwf	(_main$1598+1)^(0+128)
  4985  029F  0020               	movlb	0	; select bank0
  4986  02A0  0840               	movf	?___fttol,w
  4987  02A1  0021               	movlb	1	; select bank1
  4988  02A2  00E2               	movwf	_main$1598^(0+128)
  4989                           
  4990                           ;main.c: 256: LED7SegDisplayValue(iChangeCount/2.55);
  4991  02A3  0863               	movf	(_main$1598+1)^(0+128),w
  4992  02A4  0020               	movlb	0	; select bank0
  4993  02A5  00CF               	movwf	LED7SegDisplayValue@iTwoDigitNumber+1
  4994  02A6  0021               	movlb	1	; select bank1
  4995  02A7  0862               	movf	_main$1598^(0+128),w
  4996  02A8  0020               	movlb	0	; select bank0
  4997  02A9  00CE               	movwf	LED7SegDisplayValue@iTwoDigitNumber
  4998  02AA  3184  24F5  3181   	fcall	_LED7SegDisplayValue
  4999  02AD  29C0               	goto	l3315
  5000  02AE                     __end_of_main:	
  5001                           
  5002                           	psect	text1
  5003  06E5                     __ptext1:	
  5004 ;; *************** function _blinkyLoop *****************
  5005 ;; Defined at:
  5006 ;;		line 103 in file "main.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  maxLoops        2   17[BANK0 ] int 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;  loopCount       2   22[BANK0 ] int 
  5011 ;;  delayTime       2   20[BANK0 ] int 
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5024 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;Total ram usage:        7 bytes
  5026 ;; Hardware stack levels used:    1
  5027 ;; Hardware stack levels required when called:    5
  5028 ;; This function calls:
  5029 ;;		___wmul
  5030 ;;		_delay
  5031 ;; This function is called by:
  5032 ;;		_main
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           
  5037                           ;psect for function _blinkyLoop
  5038  06E5                     _blinkyLoop:	
  5039                           
  5040                           ;main.c: 104: int loopCount=maxLoops;
  5041                           
  5042                           ;incstack = 0
  5043                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5044  06E5  0020               	movlb	0	; select bank0
  5045  06E6  0832               	movf	blinkyLoop@maxLoops+1,w
  5046  06E7  00B7               	movwf	blinkyLoop@loopCount+1
  5047  06E8  0831               	movf	blinkyLoop@maxLoops,w
  5048  06E9  00B6               	movwf	blinkyLoop@loopCount
  5049                           
  5050                           ;main.c: 105: int delayTime;
  5051                           ;main.c: 107: ODCONB &= 0xE0;
  5052  06EA  30E0               	movlw	224
  5053  06EB  00B3               	movwf	??_blinkyLoop
  5054  06EC  0833               	movf	??_blinkyLoop,w
  5055  06ED  003E               	movlb	30	; select bank30
  5056  06EE  05C5               	andwf	69,f	;volatile
  5057                           
  5058                           ;main.c: 108: ODCONC &= 0x1F;
  5059  06EF  301F               	movlw	31
  5060  06F0  0020               	movlb	0	; select bank0
  5061  06F1  00B3               	movwf	??_blinkyLoop
  5062  06F2  0833               	movf	??_blinkyLoop,w
  5063  06F3  003E               	movlb	30	; select bank30
  5064  06F4  05D0               	andwf	80,f	;volatile
  5065  06F5                     l3233:	
  5066                           ;main.c: 109: while(loopCount>0){
  5067                           
  5068  06F5  0020               	movlb	0	; select bank0
  5069  06F6  0837               	movf	blinkyLoop@loopCount+1,w
  5070  06F7  3A80               	xorlw	128
  5071  06F8  00B3               	movwf	??_blinkyLoop
  5072  06F9  3080               	movlw	128
  5073  06FA  0233               	subwf	??_blinkyLoop,w
  5074  06FB  1D03               	skipz
  5075  06FC  2EFF               	goto	u2825
  5076  06FD  3001               	movlw	1
  5077  06FE  0236               	subwf	blinkyLoop@loopCount,w
  5078  06FF                     u2825:	
  5079  06FF  1C03               	btfss	3,0
  5080  0700  2F37               	goto	l3235
  5081                           
  5082                           ;main.c: 110: delayTime=loopCount*400;
  5083  0701  0020               	movlb	0	; select bank0
  5084  0702  0837               	movf	blinkyLoop@loopCount+1,w
  5085  0703  00A1               	movwf	___wmul@multiplier+1
  5086  0704  0836               	movf	blinkyLoop@loopCount,w
  5087  0705  00A0               	movwf	___wmul@multiplier
  5088  0706  3090               	movlw	144
  5089  0707  00A2               	movwf	___wmul@multiplicand
  5090  0708  3001               	movlw	1
  5091  0709  00A3               	movwf	___wmul@multiplicand+1
  5092  070A  318E  264E  3186   	fcall	___wmul
  5093  070D  0020               	movlb	0	; select bank0
  5094  070E  0821               	movf	?___wmul+1,w
  5095  070F  00B5               	movwf	blinkyLoop@delayTime+1
  5096  0710  0820               	movf	?___wmul,w
  5097  0711  00B4               	movwf	blinkyLoop@delayTime
  5098                           
  5099                           ;main.c: 113: PORTB |= 0x1F;
  5100  0712  301F               	movlw	31
  5101  0713  00B3               	movwf	??_blinkyLoop
  5102  0714  0833               	movf	??_blinkyLoop,w
  5103  0715  048D               	iorwf	13,f	;volatile
  5104                           
  5105                           ;main.c: 114: PORTC |= 0xE0;
  5106  0716  30E0               	movlw	224
  5107  0717  00B3               	movwf	??_blinkyLoop
  5108  0718  0833               	movf	??_blinkyLoop,w
  5109  0719  048E               	iorwf	14,f	;volatile
  5110                           
  5111                           ;main.c: 116: delay(delayTime);
  5112  071A  0835               	movf	blinkyLoop@delayTime+1,w
  5113  071B  00A7               	movwf	delay@delaytime+1
  5114  071C  0834               	movf	blinkyLoop@delayTime,w
  5115  071D  00A6               	movwf	delay@delaytime
  5116  071E  3187  279E  3186   	fcall	_delay
  5117                           
  5118                           ;main.c: 118: PORTB &= 0xE0;
  5119  0721  30E0               	movlw	224
  5120  0722  0020               	movlb	0	; select bank0
  5121  0723  00B3               	movwf	??_blinkyLoop
  5122  0724  0833               	movf	??_blinkyLoop,w
  5123  0725  058D               	andwf	13,f	;volatile
  5124                           
  5125                           ;main.c: 119: PORTC &= 0x1F;
  5126  0726  301F               	movlw	31
  5127  0727  00B3               	movwf	??_blinkyLoop
  5128  0728  0833               	movf	??_blinkyLoop,w
  5129  0729  058E               	andwf	14,f	;volatile
  5130                           
  5131                           ;main.c: 121: delay(delayTime);
  5132  072A  0835               	movf	blinkyLoop@delayTime+1,w
  5133  072B  00A7               	movwf	delay@delaytime+1
  5134  072C  0834               	movf	blinkyLoop@delayTime,w
  5135  072D  00A6               	movwf	delay@delaytime
  5136  072E  3187  279E  3186   	fcall	_delay
  5137                           
  5138                           ;main.c: 123: loopCount--;
  5139  0731  30FF               	movlw	255
  5140  0732  0020               	movlb	0	; select bank0
  5141  0733  07B6               	addwf	blinkyLoop@loopCount,f
  5142  0734  30FF               	movlw	255
  5143  0735  3DB7               	addwfc	blinkyLoop@loopCount+1,f
  5144  0736  2EF5               	goto	l3233
  5145  0737                     l3235:	
  5146                           
  5147                           ;main.c: 124: }
  5148                           ;main.c: 125: PORTB |= 0x1F;
  5149  0737  301F               	movlw	31
  5150  0738  0020               	movlb	0	; select bank0
  5151  0739  00B3               	movwf	??_blinkyLoop
  5152  073A  0833               	movf	??_blinkyLoop,w
  5153  073B  048D               	iorwf	13,f	;volatile
  5154                           
  5155                           ;main.c: 126: PORTC |= 0xE0;
  5156  073C  30E0               	movlw	224
  5157  073D  00B3               	movwf	??_blinkyLoop
  5158  073E  0833               	movf	??_blinkyLoop,w
  5159  073F  048E               	iorwf	14,f	;volatile
  5160                           
  5161                           ;main.c: 127: delay(5000);
  5162  0740  3088               	movlw	136
  5163  0741  00A6               	movwf	delay@delaytime
  5164  0742  3013               	movlw	19
  5165  0743  00A7               	movwf	delay@delaytime+1
  5166  0744  3187  279E         	fcall	_delay
  5167  0746  0008               	return
  5168  0747                     __end_of_blinkyLoop:	
  5169                           ;main.c: 128: return;
  5170                           
  5171                           
  5172                           	psect	text2
  5173  0E33                     __ptext2:	
  5174 ;; *************** function ___lbtoft *****************
  5175 ;; Defined at:
  5176 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  c               1    wreg     unsigned char 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  c               1   15[BANK0 ] unsigned char 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  3    8[BANK0 ] float 
  5183 ;; Registers used:
  5184 ;;		wreg, status,2, status,0, pclath, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5190 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;Total ram usage:        8 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:    4
  5197 ;; This function calls:
  5198 ;;		___ftpack
  5199 ;; This function is called by:
  5200 ;;		_main
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function ___lbtoft
  5206  0E33                     ___lbtoft:	
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5210                           ;___lbtoft@c stored from wreg
  5211  0E33  0020               	movlb	0	; select bank0
  5212  0E34  00AF               	movwf	___lbtoft@c
  5213  0E35  082F               	movf	___lbtoft@c,w
  5214  0E36  00AB               	movwf	??___lbtoft
  5215  0E37  01AC               	clrf	??___lbtoft+1
  5216  0E38  01AD               	clrf	??___lbtoft+2
  5217  0E39  082B               	movf	??___lbtoft,w
  5218  0E3A  00A0               	movwf	___ftpack@arg
  5219  0E3B  082C               	movf	??___lbtoft+1,w
  5220  0E3C  00A1               	movwf	___ftpack@arg+1
  5221  0E3D  082D               	movf	??___lbtoft+2,w
  5222  0E3E  00A2               	movwf	___ftpack@arg+2
  5223  0E3F  308E               	movlw	142
  5224  0E40  00AE               	movwf	??___lbtoft+3
  5225  0E41  082E               	movf	??___lbtoft+3,w
  5226  0E42  00A3               	movwf	___ftpack@exp
  5227  0E43  01A4               	clrf	___ftpack@sign
  5228  0E44  3186  2680         	fcall	___ftpack
  5229  0E46  0020               	movlb	0	; select bank0
  5230  0E47  0820               	movf	?___ftpack,w
  5231  0E48  00A8               	movwf	?___lbtoft
  5232  0E49  0821               	movf	?___ftpack+1,w
  5233  0E4A  00A9               	movwf	?___lbtoft+1
  5234  0E4B  0822               	movf	?___ftpack+2,w
  5235  0E4C  00AA               	movwf	?___lbtoft+2
  5236  0E4D  0008               	return
  5237  0E4E                     __end_of___lbtoft:	
  5238                           
  5239                           	psect	text3
  5240  044C                     __ptext3:	
  5241 ;; *************** function ___ftdiv *****************
  5242 ;; Defined at:
  5243 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;  f2              3   16[BANK0 ] float 
  5246 ;;  f1              3   19[BANK0 ] float 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  f3              3   27[BANK0 ] float 
  5249 ;;  sign            1   31[BANK0 ] unsigned char 
  5250 ;;  exp             1   30[BANK0 ] unsigned char 
  5251 ;;  cntr            1   26[BANK0 ] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  3   16[BANK0 ] float 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0, pclath, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5261 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5265 ;;Total ram usage:       16 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    4
  5268 ;; This function calls:
  5269 ;;		___ftpack
  5270 ;; This function is called by:
  5271 ;;		_main
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function ___ftdiv
  5277  044C                     ___ftdiv:	
  5278                           
  5279                           ;incstack = 0
  5280                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5281  044C  0020               	movlb	0	; select bank0
  5282  044D  0833               	movf	___ftdiv@f1,w
  5283  044E  00B6               	movwf	??___ftdiv
  5284  044F  0834               	movf	___ftdiv@f1+1,w
  5285  0450  00B7               	movwf	??___ftdiv+1
  5286  0451  0835               	movf	___ftdiv@f1+2,w
  5287  0452  00B8               	movwf	??___ftdiv+2
  5288  0453  1003               	clrc
  5289  0454  0D37               	rlf	??___ftdiv+1,w
  5290  0455  0D38               	rlf	??___ftdiv+2,w
  5291  0456  00B9               	movwf	??___ftdiv+3
  5292  0457  0839               	movf	??___ftdiv+3,w
  5293  0458  00BE               	movwf	___ftdiv@exp
  5294  0459  083E               	movf	___ftdiv@exp,w
  5295  045A  1D03               	btfss	3,2
  5296  045B  2C63               	goto	l2887
  5297  045C  3000               	movlw	0
  5298  045D  00B0               	movwf	?___ftdiv
  5299  045E  3000               	movlw	0
  5300  045F  00B1               	movwf	?___ftdiv+1
  5301  0460  3000               	movlw	0
  5302  0461  00B2               	movwf	?___ftdiv+2
  5303  0462  0008               	return
  5304  0463                     l2887:	
  5305  0463  0830               	movf	___ftdiv@f2,w
  5306  0464  00B6               	movwf	??___ftdiv
  5307  0465  0831               	movf	___ftdiv@f2+1,w
  5308  0466  00B7               	movwf	??___ftdiv+1
  5309  0467  0832               	movf	___ftdiv@f2+2,w
  5310  0468  00B8               	movwf	??___ftdiv+2
  5311  0469  1003               	clrc
  5312  046A  0D37               	rlf	??___ftdiv+1,w
  5313  046B  0D38               	rlf	??___ftdiv+2,w
  5314  046C  00B9               	movwf	??___ftdiv+3
  5315  046D  0839               	movf	??___ftdiv+3,w
  5316  046E  00BF               	movwf	___ftdiv@sign
  5317  046F  083F               	movf	___ftdiv@sign,w
  5318  0470  1D03               	btfss	3,2
  5319  0471  2C79               	goto	l2893
  5320  0472  3000               	movlw	0
  5321  0473  00B0               	movwf	?___ftdiv
  5322  0474  3000               	movlw	0
  5323  0475  00B1               	movwf	?___ftdiv+1
  5324  0476  3000               	movlw	0
  5325  0477  00B2               	movwf	?___ftdiv+2
  5326  0478  0008               	return
  5327  0479                     l2893:	
  5328  0479  3000               	movlw	0
  5329  047A  00BB               	movwf	___ftdiv@f3
  5330  047B  3000               	movlw	0
  5331  047C  00BC               	movwf	___ftdiv@f3+1
  5332  047D  3000               	movlw	0
  5333  047E  00BD               	movwf	___ftdiv@f3+2
  5334  047F  3089               	movlw	137
  5335  0480  073F               	addwf	___ftdiv@sign,w
  5336  0481  00B6               	movwf	??___ftdiv
  5337  0482  0836               	movf	??___ftdiv,w
  5338  0483  02BE               	subwf	___ftdiv@exp,f
  5339  0484  0833               	movf	___ftdiv@f1,w
  5340  0485  00B6               	movwf	??___ftdiv
  5341  0486  0834               	movf	___ftdiv@f1+1,w
  5342  0487  00B7               	movwf	??___ftdiv+1
  5343  0488  0835               	movf	___ftdiv@f1+2,w
  5344  0489  00B8               	movwf	??___ftdiv+2
  5345  048A  3010               	movlw	16
  5346  048B                     u2485:	
  5347  048B  36B8               	lsrf	??___ftdiv+2,f
  5348  048C  0CB7               	rrf	??___ftdiv+1,f
  5349  048D  0CB6               	rrf	??___ftdiv,f
  5350  048E  0B89               	decfsz	9,f
  5351  048F  2C8B               	goto	u2485
  5352  0490  0836               	movf	??___ftdiv,w
  5353  0491  00B9               	movwf	??___ftdiv+3
  5354  0492  0839               	movf	??___ftdiv+3,w
  5355  0493  00BF               	movwf	___ftdiv@sign
  5356  0494  0830               	movf	___ftdiv@f2,w
  5357  0495  00B6               	movwf	??___ftdiv
  5358  0496  0831               	movf	___ftdiv@f2+1,w
  5359  0497  00B7               	movwf	??___ftdiv+1
  5360  0498  0832               	movf	___ftdiv@f2+2,w
  5361  0499  00B8               	movwf	??___ftdiv+2
  5362  049A  3010               	movlw	16
  5363  049B                     u2495:	
  5364  049B  36B8               	lsrf	??___ftdiv+2,f
  5365  049C  0CB7               	rrf	??___ftdiv+1,f
  5366  049D  0CB6               	rrf	??___ftdiv,f
  5367  049E  0B89               	decfsz	9,f
  5368  049F  2C9B               	goto	u2495
  5369  04A0  0836               	movf	??___ftdiv,w
  5370  04A1  00B9               	movwf	??___ftdiv+3
  5371  04A2  0839               	movf	??___ftdiv+3,w
  5372  04A3  06BF               	xorwf	___ftdiv@sign,f
  5373  04A4  3080               	movlw	128
  5374  04A5  00B6               	movwf	??___ftdiv
  5375  04A6  0836               	movf	??___ftdiv,w
  5376  04A7  05BF               	andwf	___ftdiv@sign,f
  5377  04A8  17B4               	bsf	___ftdiv@f1+1,7
  5378  04A9  30FF               	movlw	255
  5379  04AA  05B3               	andwf	___ftdiv@f1,f
  5380  04AB  30FF               	movlw	255
  5381  04AC  05B4               	andwf	___ftdiv@f1+1,f
  5382  04AD  3000               	movlw	0
  5383  04AE  05B5               	andwf	___ftdiv@f1+2,f
  5384  04AF  17B1               	bsf	___ftdiv@f2+1,7
  5385  04B0  30FF               	movlw	255
  5386  04B1  05B0               	andwf	___ftdiv@f2,f
  5387  04B2  30FF               	movlw	255
  5388  04B3  05B1               	andwf	___ftdiv@f2+1,f
  5389  04B4  3000               	movlw	0
  5390  04B5  05B2               	andwf	___ftdiv@f2+2,f
  5391  04B6  3018               	movlw	24
  5392  04B7  00B6               	movwf	??___ftdiv
  5393  04B8  0836               	movf	??___ftdiv,w
  5394  04B9  00BA               	movwf	___ftdiv@cntr
  5395  04BA                     l2907:	
  5396  04BA  3001               	movlw	1
  5397  04BB                     u2505:	
  5398  04BB  35BB               	lslf	___ftdiv@f3,f
  5399  04BC  0DBC               	rlf	___ftdiv@f3+1,f
  5400  04BD  0DBD               	rlf	___ftdiv@f3+2,f
  5401  04BE  0B89               	decfsz	9,f
  5402  04BF  2CBB               	goto	u2505
  5403  04C0  0832               	movf	___ftdiv@f2+2,w
  5404  04C1  0235               	subwf	___ftdiv@f1+2,w
  5405  04C2  1D03               	skipz
  5406  04C3  2CCA               	goto	u2515
  5407  04C4  0831               	movf	___ftdiv@f2+1,w
  5408  04C5  0234               	subwf	___ftdiv@f1+1,w
  5409  04C6  1D03               	skipz
  5410  04C7  2CCA               	goto	u2515
  5411  04C8  0830               	movf	___ftdiv@f2,w
  5412  04C9  0233               	subwf	___ftdiv@f1,w
  5413  04CA                     u2515:	
  5414  04CA  1C03               	skipc
  5415  04CB  2CD3               	goto	l2915
  5416  04CC  0830               	movf	___ftdiv@f2,w
  5417  04CD  02B3               	subwf	___ftdiv@f1,f
  5418  04CE  0831               	movf	___ftdiv@f2+1,w
  5419  04CF  3BB4               	subwfb	___ftdiv@f1+1,f
  5420  04D0  0832               	movf	___ftdiv@f2+2,w
  5421  04D1  3BB5               	subwfb	___ftdiv@f1+2,f
  5422  04D2  143B               	bsf	___ftdiv@f3,0
  5423  04D3                     l2915:	
  5424  04D3  3001               	movlw	1
  5425  04D4                     u2525:	
  5426  04D4  35B3               	lslf	___ftdiv@f1,f
  5427  04D5  0DB4               	rlf	___ftdiv@f1+1,f
  5428  04D6  0DB5               	rlf	___ftdiv@f1+2,f
  5429  04D7  0B89               	decfsz	9,f
  5430  04D8  2CD4               	goto	u2525
  5431  04D9  3001               	movlw	1
  5432  04DA  02BA               	subwf	___ftdiv@cntr,f
  5433  04DB  1D03               	btfss	3,2
  5434  04DC  2CBA               	goto	l2907
  5435  04DD  083B               	movf	___ftdiv@f3,w
  5436  04DE  00A0               	movwf	___ftpack@arg
  5437  04DF  083C               	movf	___ftdiv@f3+1,w
  5438  04E0  00A1               	movwf	___ftpack@arg+1
  5439  04E1  083D               	movf	___ftdiv@f3+2,w
  5440  04E2  00A2               	movwf	___ftpack@arg+2
  5441  04E3  083E               	movf	___ftdiv@exp,w
  5442  04E4  00B6               	movwf	??___ftdiv
  5443  04E5  0836               	movf	??___ftdiv,w
  5444  04E6  00A3               	movwf	___ftpack@exp
  5445  04E7  083F               	movf	___ftdiv@sign,w
  5446  04E8  00B7               	movwf	??___ftdiv+1
  5447  04E9  0837               	movf	??___ftdiv+1,w
  5448  04EA  00A4               	movwf	___ftpack@sign
  5449  04EB  3186  2680         	fcall	___ftpack
  5450  04ED  0020               	movlb	0	; select bank0
  5451  04EE  0820               	movf	?___ftpack,w
  5452  04EF  00B0               	movwf	?___ftdiv
  5453  04F0  0821               	movf	?___ftpack+1,w
  5454  04F1  00B1               	movwf	?___ftdiv+1
  5455  04F2  0822               	movf	?___ftpack+2,w
  5456  04F3  00B2               	movwf	?___ftdiv+2
  5457  04F4  0008               	return
  5458  04F5                     __end_of___ftdiv:	
  5459                           
  5460                           	psect	text4
  5461  02AE                     __ptext4:	
  5462 ;; *************** function _UpdateLEDsFromValue *****************
  5463 ;; Defined at:
  5464 ;;		line 260 in file "main.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  inFaderNum      1    wreg     unsigned char 
  5467 ;;  inValue         1    0[BANK0 ] unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  inFaderNum      1    2[BANK0 ] unsigned char 
  5470 ;;  wkBrightFlag    1    4[BANK0 ] unsigned char 
  5471 ;;  wkOnFlag        1    3[BANK0 ] unsigned char 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5481 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;Total ram usage:        5 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    3
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_main
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           
  5496                           ;psect for function _UpdateLEDsFromValue
  5497  02AE                     _UpdateLEDsFromValue:	
  5498                           
  5499                           ;incstack = 0
  5500                           ; Regs used in _UpdateLEDsFromValue: [wreg-fsr0h+status,2+status,0]
  5501                           ;UpdateLEDsFromValue@inFaderNum stored from wreg
  5502  02AE  0020               	movlb	0	; select bank0
  5503  02AF  00A2               	movwf	UpdateLEDsFromValue@inFaderNum
  5504                           
  5505                           ;main.c: 262: bool wkOnFlag = 0;
  5506  02B0  01A3               	clrf	UpdateLEDsFromValue@wkOnFlag
  5507                           
  5508                           ;main.c: 263: bool wkBrightFlag = 0;
  5509  02B1  01A4               	clrf	UpdateLEDsFromValue@wkBrightFlag
  5510                           
  5511                           ;main.c: 266: if (inValue > 80) wkOnFlag=1;
  5512  02B2  3051               	movlw	81
  5513  02B3  0220               	subwf	UpdateLEDsFromValue@inValue,w
  5514  02B4  1C03               	skipc
  5515  02B5  2AB8               	goto	l2729
  5516  02B6  01A3               	clrf	UpdateLEDsFromValue@wkOnFlag
  5517  02B7  0AA3               	incf	UpdateLEDsFromValue@wkOnFlag,f
  5518  02B8                     l2729:	
  5519                           
  5520                           ;main.c: 267: if (inValue > 170) wkBrightFlag=1;
  5521  02B8  30AB               	movlw	171
  5522  02B9  0220               	subwf	UpdateLEDsFromValue@inValue,w
  5523  02BA  1C03               	skipc
  5524  02BB  2B96               	goto	l2829
  5525  02BC  01A4               	clrf	UpdateLEDsFromValue@wkBrightFlag
  5526  02BD  0AA4               	incf	UpdateLEDsFromValue@wkBrightFlag,f
  5527                           
  5528                           ;main.c: 269: switch(inFaderNum)
  5529  02BE  2B96               	goto	l2829
  5530  02BF                     l2733:	
  5531                           ;main.c: 270: {
  5532                           ;main.c: 271: case 0 : {
  5533                           
  5534                           
  5535                           ;main.c: 272: if(wkOnFlag) { iLEDs0_LSB |= 0b00000010;
  5536  02BF  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5537  02C0  1903               	btfsc	3,2
  5538  02C1  2AD2               	goto	l2743
  5539  02C2  0021               	movlb	1	; select bank1
  5540  02C3  14CE               	bsf	_iLEDs0_LSB^(0+128),1
  5541                           
  5542                           ;main.c: 273: if(wkBrightFlag) {iLEDs0_LSB |= 0b00000001;}else{iLEDs0_LSB &= 0b11111110;
      +                          };
  5543  02C4  0020               	movlb	0	; select bank0
  5544  02C5  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5545  02C6  1903               	btfsc	3,2
  5546  02C7  2ACB               	goto	l2741
  5547  02C8  0021               	movlb	1	; select bank1
  5548  02C9  144E               	bsf	_iLEDs0_LSB^(0+128),0
  5549  02CA  0008               	return
  5550  02CB                     l2741:	
  5551  02CB  30FE               	movlw	254
  5552  02CC  0020               	movlb	0	; select bank0
  5553  02CD  00A1               	movwf	??_UpdateLEDsFromValue
  5554  02CE  0821               	movf	??_UpdateLEDsFromValue,w
  5555  02CF  0021               	movlb	1	; select bank1
  5556  02D0  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5557                           
  5558                           ;main.c: 274: }else{ iLEDs0_LSB &= 0b11111100;}
  5559  02D1  0008               	return
  5560  02D2                     l2743:	
  5561  02D2  30FC               	movlw	252
  5562  02D3  0020               	movlb	0	; select bank0
  5563  02D4  00A1               	movwf	??_UpdateLEDsFromValue
  5564  02D5  0821               	movf	??_UpdateLEDsFromValue,w
  5565  02D6  0021               	movlb	1	; select bank1
  5566  02D7  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5567                           
  5568                           ;main.c: 275: break;
  5569  02D8  0008               	return
  5570  02D9                     l2745:	
  5571                           ;main.c: 276: }
  5572                           ;main.c: 277: case 1 : {
  5573                           
  5574                           
  5575                           ;main.c: 278: if(wkOnFlag) { iLEDs0_LSB |= 0b00001000;
  5576  02D9  0020               	movlb	0	; select bank0
  5577  02DA  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5578  02DB  1903               	btfsc	3,2
  5579  02DC  2AED               	goto	l2755
  5580  02DD  0021               	movlb	1	; select bank1
  5581  02DE  15CE               	bsf	_iLEDs0_LSB^(0+128),3
  5582                           
  5583                           ;main.c: 279: if(wkBrightFlag) {iLEDs0_LSB |= 0b00000100;}else{iLEDs0_LSB &= 0b11111011;
      +                          };
  5584  02DF  0020               	movlb	0	; select bank0
  5585  02E0  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5586  02E1  1903               	btfsc	3,2
  5587  02E2  2AE6               	goto	l2753
  5588  02E3  0021               	movlb	1	; select bank1
  5589  02E4  154E               	bsf	_iLEDs0_LSB^(0+128),2
  5590  02E5  0008               	return
  5591  02E6                     l2753:	
  5592  02E6  30FB               	movlw	251
  5593  02E7  0020               	movlb	0	; select bank0
  5594  02E8  00A1               	movwf	??_UpdateLEDsFromValue
  5595  02E9  0821               	movf	??_UpdateLEDsFromValue,w
  5596  02EA  0021               	movlb	1	; select bank1
  5597  02EB  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5598                           
  5599                           ;main.c: 280: }else{ iLEDs0_LSB &= 0b11110011;}
  5600  02EC  0008               	return
  5601  02ED                     l2755:	
  5602  02ED  30F3               	movlw	243
  5603  02EE  0020               	movlb	0	; select bank0
  5604  02EF  00A1               	movwf	??_UpdateLEDsFromValue
  5605  02F0  0821               	movf	??_UpdateLEDsFromValue,w
  5606  02F1  0021               	movlb	1	; select bank1
  5607  02F2  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5608                           
  5609                           ;main.c: 281: break;
  5610  02F3  0008               	return
  5611  02F4                     l2757:	
  5612                           ;main.c: 282: }
  5613                           ;main.c: 283: case 2 : {
  5614                           
  5615                           
  5616                           ;main.c: 284: if(wkOnFlag) { iLEDs0_LSB |= 0b00100000;
  5617  02F4  0020               	movlb	0	; select bank0
  5618  02F5  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5619  02F6  1903               	btfsc	3,2
  5620  02F7  2B08               	goto	l2767
  5621  02F8  0021               	movlb	1	; select bank1
  5622  02F9  16CE               	bsf	_iLEDs0_LSB^(0+128),5
  5623                           
  5624                           ;main.c: 285: if(wkBrightFlag) {iLEDs0_LSB |= 0b00010000;}else{iLEDs0_LSB &= 0b11101111;
      +                          };
  5625  02FA  0020               	movlb	0	; select bank0
  5626  02FB  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5627  02FC  1903               	btfsc	3,2
  5628  02FD  2B01               	goto	l2765
  5629  02FE  0021               	movlb	1	; select bank1
  5630  02FF  164E               	bsf	_iLEDs0_LSB^(0+128),4
  5631  0300  0008               	return
  5632  0301                     l2765:	
  5633  0301  30EF               	movlw	239
  5634  0302  0020               	movlb	0	; select bank0
  5635  0303  00A1               	movwf	??_UpdateLEDsFromValue
  5636  0304  0821               	movf	??_UpdateLEDsFromValue,w
  5637  0305  0021               	movlb	1	; select bank1
  5638  0306  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5639                           
  5640                           ;main.c: 286: }else{ iLEDs0_LSB &= 0b11001111;}
  5641  0307  0008               	return
  5642  0308                     l2767:	
  5643  0308  30CF               	movlw	207
  5644  0309  0020               	movlb	0	; select bank0
  5645  030A  00A1               	movwf	??_UpdateLEDsFromValue
  5646  030B  0821               	movf	??_UpdateLEDsFromValue,w
  5647  030C  0021               	movlb	1	; select bank1
  5648  030D  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5649                           
  5650                           ;main.c: 287: break;
  5651  030E  0008               	return
  5652  030F                     l2769:	
  5653                           ;main.c: 288: }
  5654                           ;main.c: 289: case 3 : {
  5655                           
  5656                           
  5657                           ;main.c: 290: if(wkOnFlag) { iLEDs0_LSB |= 0b10000000;
  5658  030F  0020               	movlb	0	; select bank0
  5659  0310  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5660  0311  1903               	btfsc	3,2
  5661  0312  2B23               	goto	l2779
  5662  0313  0021               	movlb	1	; select bank1
  5663  0314  17CE               	bsf	_iLEDs0_LSB^(0+128),7
  5664                           
  5665                           ;main.c: 291: if(wkBrightFlag) {iLEDs0_LSB |= 0b01000000;}else{iLEDs0_LSB &= 0b10111111;
      +                          };
  5666  0315  0020               	movlb	0	; select bank0
  5667  0316  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5668  0317  1903               	btfsc	3,2
  5669  0318  2B1C               	goto	l2777
  5670  0319  0021               	movlb	1	; select bank1
  5671  031A  174E               	bsf	_iLEDs0_LSB^(0+128),6
  5672  031B  0008               	return
  5673  031C                     l2777:	
  5674  031C  30BF               	movlw	191
  5675  031D  0020               	movlb	0	; select bank0
  5676  031E  00A1               	movwf	??_UpdateLEDsFromValue
  5677  031F  0821               	movf	??_UpdateLEDsFromValue,w
  5678  0320  0021               	movlb	1	; select bank1
  5679  0321  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5680                           
  5681                           ;main.c: 292: }else{ iLEDs0_LSB &= 0b00111111;}
  5682  0322  0008               	return
  5683  0323                     l2779:	
  5684  0323  303F               	movlw	63
  5685  0324  0020               	movlb	0	; select bank0
  5686  0325  00A1               	movwf	??_UpdateLEDsFromValue
  5687  0326  0821               	movf	??_UpdateLEDsFromValue,w
  5688  0327  0021               	movlb	1	; select bank1
  5689  0328  05CE               	andwf	_iLEDs0_LSB^(0+128),f
  5690                           
  5691                           ;main.c: 293: break;
  5692  0329  0008               	return
  5693  032A                     l2781:	
  5694                           ;main.c: 294: }
  5695                           ;main.c: 295: case 4 : {
  5696                           
  5697                           
  5698                           ;main.c: 296: if(wkOnFlag) { iLEDs0_MSB |= 0b00000010;
  5699  032A  0020               	movlb	0	; select bank0
  5700  032B  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5701  032C  1903               	btfsc	3,2
  5702  032D  2B3E               	goto	l2791
  5703  032E  0021               	movlb	1	; select bank1
  5704  032F  14CF               	bsf	_iLEDs0_MSB^(0+128),1
  5705                           
  5706                           ;main.c: 297: if(wkBrightFlag) {iLEDs0_MSB |= 0b00000001;}else{iLEDs0_MSB &= 0b11111110;
      +                          };
  5707  0330  0020               	movlb	0	; select bank0
  5708  0331  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5709  0332  1903               	btfsc	3,2
  5710  0333  2B37               	goto	l2789
  5711  0334  0021               	movlb	1	; select bank1
  5712  0335  144F               	bsf	_iLEDs0_MSB^(0+128),0
  5713  0336  0008               	return
  5714  0337                     l2789:	
  5715  0337  30FE               	movlw	254
  5716  0338  0020               	movlb	0	; select bank0
  5717  0339  00A1               	movwf	??_UpdateLEDsFromValue
  5718  033A  0821               	movf	??_UpdateLEDsFromValue,w
  5719  033B  0021               	movlb	1	; select bank1
  5720  033C  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5721                           
  5722                           ;main.c: 298: }else{ iLEDs0_MSB &= 0b11111100;}
  5723  033D  0008               	return
  5724  033E                     l2791:	
  5725  033E  30FC               	movlw	252
  5726  033F  0020               	movlb	0	; select bank0
  5727  0340  00A1               	movwf	??_UpdateLEDsFromValue
  5728  0341  0821               	movf	??_UpdateLEDsFromValue,w
  5729  0342  0021               	movlb	1	; select bank1
  5730  0343  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5731                           
  5732                           ;main.c: 299: break;
  5733  0344  0008               	return
  5734  0345                     l2793:	
  5735                           ;main.c: 300: }
  5736                           ;main.c: 301: case 5 : {
  5737                           
  5738                           
  5739                           ;main.c: 302: if(wkOnFlag) { iLEDs0_MSB |= 0b00001000;
  5740  0345  0020               	movlb	0	; select bank0
  5741  0346  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5742  0347  1903               	btfsc	3,2
  5743  0348  2B59               	goto	l2803
  5744  0349  0021               	movlb	1	; select bank1
  5745  034A  15CF               	bsf	_iLEDs0_MSB^(0+128),3
  5746                           
  5747                           ;main.c: 303: if(wkBrightFlag) {iLEDs0_MSB |= 0b00000100;}else{iLEDs0_MSB &= 0b11111011;
      +                          };
  5748  034B  0020               	movlb	0	; select bank0
  5749  034C  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5750  034D  1903               	btfsc	3,2
  5751  034E  2B52               	goto	l2801
  5752  034F  0021               	movlb	1	; select bank1
  5753  0350  154F               	bsf	_iLEDs0_MSB^(0+128),2
  5754  0351  0008               	return
  5755  0352                     l2801:	
  5756  0352  30FB               	movlw	251
  5757  0353  0020               	movlb	0	; select bank0
  5758  0354  00A1               	movwf	??_UpdateLEDsFromValue
  5759  0355  0821               	movf	??_UpdateLEDsFromValue,w
  5760  0356  0021               	movlb	1	; select bank1
  5761  0357  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5762                           
  5763                           ;main.c: 304: }else{ iLEDs0_MSB &= 0b11110011;}
  5764  0358  0008               	return
  5765  0359                     l2803:	
  5766  0359  30F3               	movlw	243
  5767  035A  0020               	movlb	0	; select bank0
  5768  035B  00A1               	movwf	??_UpdateLEDsFromValue
  5769  035C  0821               	movf	??_UpdateLEDsFromValue,w
  5770  035D  0021               	movlb	1	; select bank1
  5771  035E  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5772                           
  5773                           ;main.c: 305: break;
  5774  035F  0008               	return
  5775  0360                     l2805:	
  5776                           ;main.c: 306: }
  5777                           ;main.c: 307: case 6 : {
  5778                           
  5779                           
  5780                           ;main.c: 308: if(wkOnFlag) { iLEDs0_MSB |= 0b00100000;
  5781  0360  0020               	movlb	0	; select bank0
  5782  0361  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5783  0362  1903               	btfsc	3,2
  5784  0363  2B74               	goto	l2815
  5785  0364  0021               	movlb	1	; select bank1
  5786  0365  16CF               	bsf	_iLEDs0_MSB^(0+128),5
  5787                           
  5788                           ;main.c: 309: if(wkBrightFlag) {iLEDs0_MSB |= 0b00010000;}else{iLEDs0_MSB &= 0b11101111;
      +                          };
  5789  0366  0020               	movlb	0	; select bank0
  5790  0367  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5791  0368  1903               	btfsc	3,2
  5792  0369  2B6D               	goto	l2813
  5793  036A  0021               	movlb	1	; select bank1
  5794  036B  164F               	bsf	_iLEDs0_MSB^(0+128),4
  5795  036C  0008               	return
  5796  036D                     l2813:	
  5797  036D  30EF               	movlw	239
  5798  036E  0020               	movlb	0	; select bank0
  5799  036F  00A1               	movwf	??_UpdateLEDsFromValue
  5800  0370  0821               	movf	??_UpdateLEDsFromValue,w
  5801  0371  0021               	movlb	1	; select bank1
  5802  0372  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5803                           
  5804                           ;main.c: 310: }else{ iLEDs0_MSB &= 0b11001111;}
  5805  0373  0008               	return
  5806  0374                     l2815:	
  5807  0374  30CF               	movlw	207
  5808  0375  0020               	movlb	0	; select bank0
  5809  0376  00A1               	movwf	??_UpdateLEDsFromValue
  5810  0377  0821               	movf	??_UpdateLEDsFromValue,w
  5811  0378  0021               	movlb	1	; select bank1
  5812  0379  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5813                           
  5814                           ;main.c: 311: break;
  5815  037A  0008               	return
  5816  037B                     l2817:	
  5817                           ;main.c: 312: }
  5818                           ;main.c: 313: case 7 : {
  5819                           
  5820                           
  5821                           ;main.c: 314: if(wkOnFlag) { iLEDs0_MSB |= 0b10000000;
  5822  037B  0020               	movlb	0	; select bank0
  5823  037C  0823               	movf	UpdateLEDsFromValue@wkOnFlag,w
  5824  037D  1903               	btfsc	3,2
  5825  037E  2B8F               	goto	l2827
  5826  037F  0021               	movlb	1	; select bank1
  5827  0380  17CF               	bsf	_iLEDs0_MSB^(0+128),7
  5828                           
  5829                           ;main.c: 315: if(wkBrightFlag) {iLEDs0_MSB |= 0b01000000;}else{iLEDs0_MSB &= 0b10111111;
      +                          };
  5830  0381  0020               	movlb	0	; select bank0
  5831  0382  0824               	movf	UpdateLEDsFromValue@wkBrightFlag,w
  5832  0383  1903               	btfsc	3,2
  5833  0384  2B88               	goto	l2825
  5834  0385  0021               	movlb	1	; select bank1
  5835  0386  174F               	bsf	_iLEDs0_MSB^(0+128),6
  5836  0387  0008               	return
  5837  0388                     l2825:	
  5838  0388  30BF               	movlw	191
  5839  0389  0020               	movlb	0	; select bank0
  5840  038A  00A1               	movwf	??_UpdateLEDsFromValue
  5841  038B  0821               	movf	??_UpdateLEDsFromValue,w
  5842  038C  0021               	movlb	1	; select bank1
  5843  038D  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5844                           
  5845                           ;main.c: 316: }else{ iLEDs0_MSB &= 0b00111111;}
  5846  038E  0008               	return
  5847  038F                     l2827:	
  5848  038F  303F               	movlw	63
  5849  0390  0020               	movlb	0	; select bank0
  5850  0391  00A1               	movwf	??_UpdateLEDsFromValue
  5851  0392  0821               	movf	??_UpdateLEDsFromValue,w
  5852  0393  0021               	movlb	1	; select bank1
  5853  0394  05CF               	andwf	_iLEDs0_MSB^(0+128),f
  5854                           
  5855                           ;main.c: 317: }
  5856                           ;main.c: 318: }
  5857  0395  0008               	return
  5858  0396                     l2829:	
  5859  0396  0020               	movlb	0	; select bank0
  5860  0397  0822               	movf	UpdateLEDsFromValue@inFaderNum,w
  5861                           
  5862                           ; Switch size 1, requested type "space"
  5863                           ; Number of cases is 8, Range of values is 0 to 7
  5864                           ; switch strategies available:
  5865                           ; Name         Instructions Cycles
  5866                           ; direct_byte           22     6 (fixed)
  5867                           ; simple_byte           25    13 (average)
  5868                           ; jumptable            260     6 (fixed)
  5869                           ;	Chosen strategy is direct_byte
  5870  0398  0084               	movwf	4
  5871  0399  3008               	movlw	8
  5872  039A  0204               	subwf	4,w
  5873  039B  1803               	skipnc
  5874  039C  0008               	return
  5875  039D  3188               	movlp	high S3401
  5876  039E  3504               	lslf	4,w
  5877  039F  3E18               	addlw	low S3401
  5878  03A0  0082               	movwf	2
  5879  03A1  0008               	return
  5880  03A2                     __end_of_UpdateLEDsFromValue:	
  5881                           
  5882                           	psect	swtext1
  5883  0818                     __pswtext1:	
  5884  0818                     S3401:	
  5885  0818  3182  2ABF         	ljmp	l2733
  5886  081A  3182  2AD9         	ljmp	l2745
  5887  081C  3182  2AF4         	ljmp	l2757
  5888  081E  3183  2B0F         	ljmp	l2769
  5889  0820  3183  2B2A         	ljmp	l2781
  5890  0822  3183  2B45         	ljmp	l2793
  5891  0824  3183  2B60         	ljmp	l2805
  5892  0826  3183  2B7B         	ljmp	l2817
  5893                           
  5894                           	psect	text5
  5895  0DA2                     __ptext5:	
  5896 ;; *************** function _SYSTEM_Initialize *****************
  5897 ;; Defined at:
  5898 ;;		line 83 in file "mcc_generated_files/mcc.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, pclath, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    4
  5919 ;; This function calls:
  5920 ;;		_ADCC_Initialize
  5921 ;;		_I2C1_Initialize
  5922 ;;		_OSCILLATOR_Initialize
  5923 ;;		_PIN_MANAGER_Initialize
  5924 ;; This function is called by:
  5925 ;;		_main
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           
  5930                           ;psect for function _SYSTEM_Initialize
  5931  0DA2                     _SYSTEM_Initialize:	
  5932                           
  5933                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  5934                           
  5935                           ;incstack = 0
  5936                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5937  0DA2  318F  277C  318D   	fcall	_PIN_MANAGER_Initialize
  5938                           
  5939                           ;mcc.c: 87: OSCILLATOR_Initialize();
  5940  0DA5  318D  2583  318D   	fcall	_OSCILLATOR_Initialize
  5941                           
  5942                           ;mcc.c: 88: I2C1_Initialize();
  5943  0DA8  318D  25E9  318D   	fcall	_I2C1_Initialize
  5944                           
  5945                           ;mcc.c: 89: ADCC_Initialize();
  5946  0DAB  318E  2618         	fcall	_ADCC_Initialize
  5947  0DAD  0008               	return
  5948  0DAE                     __end_of_SYSTEM_Initialize:	
  5949                           
  5950                           	psect	text6
  5951  0F7C                     __ptext6:	
  5952 ;; *************** function _PIN_MANAGER_Initialize *****************
  5953 ;; Defined at:
  5954 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;		None
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  state           1    0[BANK0 ] unsigned char 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, status,2, status,0
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5972 ;;Total ram usage:        1 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    3
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_SYSTEM_Initialize
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _PIN_MANAGER_Initialize
  5984  0F7C                     _PIN_MANAGER_Initialize:	
  5985                           
  5986                           ;pin_manager.c: 57: LATA = 0x00;
  5987                           
  5988                           ;incstack = 0
  5989                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  5990  0F7C  0020               	movlb	0	; select bank0
  5991  0F7D  0196               	clrf	22	;volatile
  5992                           
  5993                           ;pin_manager.c: 58: LATB = 0x00;
  5994  0F7E  0197               	clrf	23	;volatile
  5995                           
  5996                           ;pin_manager.c: 59: LATC = 0x00;
  5997  0F7F  0198               	clrf	24	;volatile
  5998                           
  5999                           ;pin_manager.c: 64: TRISA = 0xFF;
  6000  0F80  30FF               	movlw	255
  6001  0F81  0091               	movwf	17	;volatile
  6002                           
  6003                           ;pin_manager.c: 65: TRISB = 0xE0;
  6004  0F82  30E0               	movlw	224
  6005  0F83  0092               	movwf	18	;volatile
  6006                           
  6007                           ;pin_manager.c: 66: TRISC = 0x1D;
  6008  0F84  301D               	movlw	29
  6009  0F85  0093               	movwf	19	;volatile
  6010                           
  6011                           ;pin_manager.c: 71: ANSELC = 0xE7;
  6012  0F86  30E7               	movlw	231
  6013  0F87  003E               	movlb	30	; select bank30
  6014  0F88  00CE               	movwf	78	;volatile
  6015                           
  6016                           ;pin_manager.c: 72: ANSELB = 0x1F;
  6017  0F89  301F               	movlw	31
  6018  0F8A  00C3               	movwf	67	;volatile
  6019                           
  6020                           ;pin_manager.c: 73: ANSELA = 0xFF;
  6021  0F8B  30FF               	movlw	255
  6022  0F8C  00B8               	movwf	56	;volatile
  6023                           
  6024                           ;pin_manager.c: 78: WPUE = 0x00;
  6025  0F8D  01E5               	clrf	101	;volatile
  6026                           
  6027                           ;pin_manager.c: 79: WPUB = 0x00;
  6028  0F8E  01C4               	clrf	68	;volatile
  6029                           
  6030                           ;pin_manager.c: 80: WPUA = 0x00;
  6031  0F8F  01B9               	clrf	57	;volatile
  6032                           
  6033                           ;pin_manager.c: 81: WPUC = 0x00;
  6034  0F90  01CF               	clrf	79	;volatile
  6035                           
  6036                           ;pin_manager.c: 86: ODCONA = 0x00;
  6037  0F91  01BA               	clrf	58	;volatile
  6038                           
  6039                           ;pin_manager.c: 87: ODCONB = 0x00;
  6040  0F92  01C5               	clrf	69	;volatile
  6041                           
  6042                           ;pin_manager.c: 88: ODCONC = 0x00;
  6043  0F93  01D0               	clrf	80	;volatile
  6044                           
  6045                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  6046  0F94  3000               	movlw	0
  6047  0F95  1B8B               	btfsc	11,7	;volatile
  6048  0F96  3001               	movlw	1
  6049  0F97  0020               	movlb	0	; select bank0
  6050  0F98  00A0               	movwf	PIN_MANAGER_Initialize@state
  6051                           
  6052                           ;pin_manager.c: 96: GIE = 0;
  6053  0F99  138B               	bcf	11,7	;volatile
  6054                           
  6055                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  6056  0F9A  3055               	movlw	85
  6057  0F9B  003D               	movlb	29	; select bank29
  6058  0F9C  008F               	movwf	15	;volsfr
  6059                           
  6060                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  6061  0F9D  30AA               	movlw	170
  6062  0F9E  008F               	movwf	15	;volsfr
  6063                           
  6064                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  6065  0F9F  100F               	bcf	15,0	;volsfr
  6066                           
  6067                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  6068  0FA0  0846               	movf	70,w	;volatile
  6069  0FA1  39E0               	andlw	-32
  6070  0FA2  3813               	iorlw	19
  6071  0FA3  00C6               	movwf	70	;volatile
  6072                           
  6073                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  6074  0FA4  0845               	movf	69,w	;volatile
  6075  0FA5  39E0               	andlw	-32
  6076  0FA6  3814               	iorlw	20
  6077  0FA7  00C5               	movwf	69	;volatile
  6078                           
  6079                           ;pin_manager.c: 103: RC3PPS = 0x15;
  6080  0FA8  3015               	movlw	21
  6081  0FA9  003E               	movlb	30	; select bank30
  6082  0FAA  00A3               	movwf	35	;volatile
  6083                           
  6084                           ;pin_manager.c: 104: RC4PPS = 0x14;
  6085  0FAB  3014               	movlw	20
  6086  0FAC  00A4               	movwf	36	;volatile
  6087                           
  6088                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  6089  0FAD  3055               	movlw	85
  6090  0FAE  003D               	movlb	29	; select bank29
  6091  0FAF  008F               	movwf	15	;volsfr
  6092                           
  6093                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  6094  0FB0  30AA               	movlw	170
  6095  0FB1  008F               	movwf	15	;volsfr
  6096                           
  6097                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  6098  0FB2  140F               	bsf	15,0	;volsfr
  6099                           
  6100                           ;pin_manager.c: 110: GIE = state;
  6101  0FB3  0020               	movlb	0	; select bank0
  6102  0FB4  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  6103  0FB5  2FB8               	goto	u2770
  6104  0FB6  178B               	bsf	11,7	;volatile
  6105  0FB7  0008               	return
  6106  0FB8                     u2770:	
  6107  0FB8  138B               	bcf	11,7	;volatile
  6108  0FB9  0008               	return
  6109  0FBA                     __end_of_PIN_MANAGER_Initialize:	
  6110                           
  6111                           	psect	text7
  6112  0D83                     __ptext7:	
  6113 ;; *************** function _OSCILLATOR_Initialize *****************
  6114 ;; Defined at:
  6115 ;;		line 92 in file "mcc_generated_files/mcc.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;		None
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;		None
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  1    wreg      void 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6133 ;;Total ram usage:        0 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; Hardware stack levels required when called:    3
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_SYSTEM_Initialize
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function _OSCILLATOR_Initialize
  6145  0D83                     _OSCILLATOR_Initialize:	
  6146                           
  6147                           ;mcc.c: 95: OSCCON1 = 0x60;
  6148                           
  6149                           ;incstack = 0
  6150                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6151  0D83  3060               	movlw	96
  6152  0D84  0031               	movlb	17	; select bank17
  6153  0D85  008D               	movwf	13	;volatile
  6154                           
  6155                           ;mcc.c: 97: OSCCON3 = 0x00;
  6156  0D86  018F               	clrf	15	;volatile
  6157                           
  6158                           ;mcc.c: 99: OSCEN = 0x00;
  6159  0D87  0191               	clrf	17	;volatile
  6160                           
  6161                           ;mcc.c: 101: OSCFRQ = 0x06;
  6162  0D88  3006               	movlw	6
  6163  0D89  0093               	movwf	19	;volatile
  6164                           
  6165                           ;mcc.c: 103: OSCTUNE = 0x00;
  6166  0D8A  0192               	clrf	18	;volatile
  6167  0D8B  0008               	return
  6168  0D8C                     __end_of_OSCILLATOR_Initialize:	
  6169                           
  6170                           	psect	text8
  6171  0DE9                     __ptext8:	
  6172 ;; *************** function _I2C1_Initialize *****************
  6173 ;; Defined at:
  6174 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;		None
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;		None
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1    wreg      void 
  6181 ;; Registers used:
  6182 ;;		wreg, status,2
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;Total ram usage:        1 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; Hardware stack levels required when called:    3
  6195 ;; This function calls:
  6196 ;;		Nothing
  6197 ;; This function is called by:
  6198 ;;		_SYSTEM_Initialize
  6199 ;; This function uses a non-reentrant model
  6200 ;;
  6201                           
  6202                           
  6203                           ;psect for function _I2C1_Initialize
  6204  0DE9                     _I2C1_Initialize:	
  6205                           
  6206                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  6207                           
  6208                           ;incstack = 0
  6209                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  6210  0DE9  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  6211  0DEA  0020               	movlb	0	; select bank0
  6212  0DEB  00A0               	movwf	??_I2C1_Initialize
  6213  0DEC  0820               	movf	??_I2C1_Initialize,w
  6214  0DED  00E3               	movwf	low ((_i2c1_object| 0+1))
  6215                           
  6216                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  6217  0DEE  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  6218  0DEF  00A0               	movwf	??_I2C1_Initialize
  6219  0DF0  0820               	movf	??_I2C1_Initialize,w
  6220  0DF1  00E2               	movwf	_i2c1_object
  6221                           
  6222                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  6223  0DF2  14E4               	bsf	_i2c1_object+2,1
  6224                           
  6225                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  6226  0DF3  1064               	bcf	_i2c1_object+2,0
  6227                           
  6228                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  6229  0DF4  01E6               	clrf	_i2c1_object+4
  6230                           
  6231                           ;i2c1.c: 208: SSP1STAT = 0x00;
  6232  0DF5  0023               	movlb	3	; select bank3
  6233  0DF6  018F               	clrf	15	;volatile
  6234                           
  6235                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  6236  0DF7  3028               	movlw	40
  6237  0DF8  0090               	movwf	16	;volatile
  6238                           
  6239                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  6240  0DF9  0192               	clrf	18	;volatile
  6241                           
  6242                           ;i2c1.c: 214: SSP1ADD = 0x13;
  6243  0DFA  3013               	movlw	19
  6244  0DFB  008D               	movwf	13	;volatile
  6245                           
  6246                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  6247  0DFC  002E               	movlb	14	; select bank14
  6248  0DFD  100F               	bcf	15,0	;volatile
  6249                           
  6250                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  6251  0DFE  1419               	bsf	25,0	;volatile
  6252  0DFF  0008               	return
  6253  0E00                     __end_of_I2C1_Initialize:	
  6254                           
  6255                           	psect	text9
  6256  0E18                     __ptext9:	
  6257 ;; *************** function _ADCC_Initialize *****************
  6258 ;; Defined at:
  6259 ;;		line 62 in file "mcc_generated_files/adcc.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		wreg, status,2
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used:    1
  6279 ;; Hardware stack levels required when called:    3
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_SYSTEM_Initialize
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           
  6288                           ;psect for function _ADCC_Initialize
  6289  0E18                     _ADCC_Initialize:	
  6290                           
  6291                           ;adcc.c: 66: ADCON1 = 0x00;
  6292                           
  6293                           ;incstack = 0
  6294                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  6295  0E18  0021               	movlb	1	; select bank1
  6296  0E19  0194               	clrf	20	;volatile
  6297                           
  6298                           ;adcc.c: 68: ADCON2 = 0x03;
  6299  0E1A  3003               	movlw	3
  6300  0E1B  0095               	movwf	21	;volatile
  6301                           
  6302                           ;adcc.c: 70: ADCON3 = 0x00;
  6303  0E1C  0196               	clrf	22	;volatile
  6304                           
  6305                           ;adcc.c: 72: ADACT = 0x00;
  6306  0E1D  0199               	clrf	25	;volatile
  6307                           
  6308                           ;adcc.c: 74: ADSTAT = 0x00;
  6309  0E1E  0197               	clrf	23	;volatile
  6310                           
  6311                           ;adcc.c: 76: ADCLK = 0x07;
  6312  0E1F  3007               	movlw	7
  6313  0E20  0098               	movwf	24	;volatile
  6314                           
  6315                           ;adcc.c: 78: ADREF = 0x00;
  6316  0E21  019A               	clrf	26	;volatile
  6317                           
  6318                           ;adcc.c: 80: ADCAP = 0x00;
  6319  0E22  019B               	clrf	27	;volatile
  6320                           
  6321                           ;adcc.c: 82: ADPRE = 0x00;
  6322  0E23  019C               	clrf	28	;volatile
  6323                           
  6324                           ;adcc.c: 84: ADACQ = 0x02;
  6325  0E24  3002               	movlw	2
  6326  0E25  009D               	movwf	29	;volatile
  6327                           
  6328                           ;adcc.c: 86: ADPCH = 0x00;
  6329  0E26  019E               	clrf	30	;volatile
  6330                           
  6331                           ;adcc.c: 88: ADRPT = 0x00;
  6332  0E27  0022               	movlb	2	; select bank2
  6333  0E28  018D               	clrf	13	;volatile
  6334                           
  6335                           ;adcc.c: 90: ADLTHL = 0x00;
  6336  0E29  018E               	clrf	14	;volatile
  6337                           
  6338                           ;adcc.c: 92: ADLTHH = 0x00;
  6339  0E2A  018F               	clrf	15	;volatile
  6340                           
  6341                           ;adcc.c: 94: ADUTHL = 0x00;
  6342  0E2B  0190               	clrf	16	;volatile
  6343                           
  6344                           ;adcc.c: 96: ADUTHH = 0x00;
  6345  0E2C  0191               	clrf	17	;volatile
  6346                           
  6347                           ;adcc.c: 98: ADSTPTL = 0x00;
  6348  0E2D  0192               	clrf	18	;volatile
  6349                           
  6350                           ;adcc.c: 100: ADSTPTH = 0x00;
  6351  0E2E  0193               	clrf	19	;volatile
  6352                           
  6353                           ;adcc.c: 103: ADCON0 = 0x84;
  6354  0E2F  3084               	movlw	132
  6355  0E30  0021               	movlb	1	; select bank1
  6356  0E31  0093               	movwf	19	;volatile
  6357  0E32  0008               	return
  6358  0E33                     __end_of_ADCC_Initialize:	
  6359                           
  6360                           	psect	text10
  6361  060C                     __ptext10:	
  6362 ;; *************** function _MYI2C_Write2LEDBytes *****************
  6363 ;; Defined at:
  6364 ;;		line 453 in file "main.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;  slaveDeviceA    1    wreg     unsigned char 
  6367 ;;  MSBWriteByte    1   14[BANK0 ] unsigned char 
  6368 ;;  LSBWriteByte    1   15[BANK0 ] unsigned char 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  slaveDeviceA    1   41[BANK0 ] unsigned char 
  6371 ;;  sourceData     16   20[BANK0 ] unsigned char [16]
  6372 ;;  writeBuffer     3   47[BANK0 ] unsigned char [3]
  6373 ;;  timeOut         2   44[BANK0 ] unsigned int 
  6374 ;;  counter         2   42[BANK0 ] unsigned int 
  6375 ;;  nCount          2   39[BANK0 ] unsigned int 
  6376 ;;  dataAddress     2   36[BANK0 ] unsigned int 
  6377 ;;  pData           2    0        PTR unsigned char 
  6378 ;;  status          1   50[BANK0 ] enum E14267
  6379 ;;  pointerByte     1   46[BANK0 ] unsigned char 
  6380 ;;  pD              1   38[BANK0 ] PTR unsigned char 
  6381 ;;		 -> MYI2C_Write2LEDBytes@sourceData(16), 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  1    wreg      void 
  6384 ;; Registers used:
  6385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6392 ;;      Locals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;Total ram usage:       37 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    5
  6398 ;; This function calls:
  6399 ;;		_I2C1_MasterWrite
  6400 ;; This function is called by:
  6401 ;;		_main
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           
  6406                           ;psect for function _MYI2C_Write2LEDBytes
  6407  060C                     _MYI2C_Write2LEDBytes:	
  6408                           
  6409                           ;incstack = 0
  6410                           ; Regs used in _MYI2C_Write2LEDBytes: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6411                           ;MYI2C_Write2LEDBytes@slaveDeviceAddress stored from wreg
  6412  060C  0020               	movlb	0	; select bank0
  6413  060D  00C9               	movwf	MYI2C_Write2LEDBytes@slaveDeviceAddress
  6414                           
  6415                           ;main.c: 464: uint16_t dataAddress;
  6416                           ;main.c: 465: uint8_t sourceData[16] = { 0xA0, 0xA1, 0xA2, 0xA3,
  6417                           ;main.c: 466: 0xA4, 0xA5, 0xA6, 0xA7,
  6418                           ;main.c: 467: 0xA8, 0xA9, 0xAA, 0xAB,
  6419                           ;main.c: 468: 0xAC, 0xAD, 0xAE, 0xAF };
  6420  060E  30B4               	movlw	low MYI2C_Write2LEDBytes@F14460
  6421  060F  0086               	movwf	6
  6422  0610  3000               	movlw	high MYI2C_Write2LEDBytes@F14460
  6423  0611  0087               	movwf	7
  6424  0612  3034               	movlw	low MYI2C_Write2LEDBytes@sourceData
  6425  0613  0084               	movwf	4
  6426  0614  3000               	movlw	high MYI2C_Write2LEDBytes@sourceData
  6427  0615  0085               	movwf	5
  6428  0616  3010               	movlw	16
  6429  0617  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6430  0618                     u2390:	
  6431  0618  0016               	moviw fsr1++
  6432  0619  001A               	movwi fsr0++
  6433  061A  0BB0               	decfsz	??_MYI2C_Write2LEDBytes,f
  6434  061B  2E18               	goto	u2390
  6435                           
  6436                           ;main.c: 469: uint8_t *pData;
  6437                           ;main.c: 470: uint16_t nCount;
  6438                           ;main.c: 472: uint8_t writeBuffer[3];
  6439                           ;main.c: 473: uint8_t *pD;
  6440                           ;main.c: 474: uint16_t counter, timeOut;
  6441                           ;main.c: 475: uint8_t pointerByte = 0b00100000;
  6442  061C  3020               	movlw	32
  6443  061D  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6444  061E  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6445  061F  00CE               	movwf	MYI2C_Write2LEDBytes@pointerByte
  6446                           
  6447                           ;main.c: 477: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  6448  0620  3002               	movlw	2
  6449  0621  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6450  0622  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6451  0623  00D2               	movwf	MYI2C_Write2LEDBytes@status
  6452                           
  6453                           ;main.c: 479: dataAddress = 0x00;
  6454  0624  01C4               	clrf	MYI2C_Write2LEDBytes@dataAddress
  6455  0625  01C5               	clrf	MYI2C_Write2LEDBytes@dataAddress+1
  6456                           
  6457                           ;main.c: 480: pD = sourceData;
  6458  0626  3034               	movlw	(low (MYI2C_Write2LEDBytes@sourceData| 0))& (0+255)
  6459  0627  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6460  0628  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6461  0629  00C6               	movwf	MYI2C_Write2LEDBytes@pD
  6462                           
  6463                           ;main.c: 481: nCount = 1;
  6464  062A  3001               	movlw	1
  6465  062B  00C7               	movwf	MYI2C_Write2LEDBytes@nCount
  6466  062C  3000               	movlw	0
  6467  062D  00C8               	movwf	MYI2C_Write2LEDBytes@nCount+1
  6468                           
  6469                           ;main.c: 485: PORTC |= 0x02;
  6470  062E  148E               	bsf	14,1	;volatile
  6471                           
  6472                           ;main.c: 487: for (counter = 0; counter < nCount; counter++)
  6473  062F  01CA               	clrf	MYI2C_Write2LEDBytes@counter
  6474  0630  01CB               	clrf	MYI2C_Write2LEDBytes@counter+1
  6475  0631                     l540:	
  6476  0631  0848               	movf	MYI2C_Write2LEDBytes@nCount+1,w
  6477  0632  024B               	subwf	MYI2C_Write2LEDBytes@counter+1,w
  6478  0633  1D03               	skipz
  6479  0634  2E37               	goto	u2455
  6480  0635  0847               	movf	MYI2C_Write2LEDBytes@nCount,w
  6481  0636  024A               	subwf	MYI2C_Write2LEDBytes@counter,w
  6482  0637                     u2455:	
  6483  0637  1803               	btfsc	3,0
  6484  0638  2E7B               	goto	l2879
  6485                           
  6486                           ;main.c: 488: {
  6487                           ;main.c: 491: writeBuffer[0] = pointerByte;
  6488  0639  084E               	movf	MYI2C_Write2LEDBytes@pointerByte,w
  6489  063A  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6490  063B  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6491  063C  00CF               	movwf	MYI2C_Write2LEDBytes@writeBuffer
  6492                           
  6493                           ;main.c: 493: writeBuffer[1] = (MSBWriteByte);
  6494  063D  082E               	movf	MYI2C_Write2LEDBytes@MSBWriteByte,w
  6495  063E  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6496  063F  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6497  0640  00D0               	movwf	MYI2C_Write2LEDBytes@writeBuffer+1
  6498                           
  6499                           ;main.c: 494: writeBuffer[2] = (LSBWriteByte);
  6500  0641  082F               	movf	MYI2C_Write2LEDBytes@LSBWriteByte,w
  6501  0642  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6502  0643  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6503  0644  00D1               	movwf	MYI2C_Write2LEDBytes@writeBuffer+2
  6504                           
  6505                           ;main.c: 499: timeOut = 0;
  6506  0645  01CC               	clrf	MYI2C_Write2LEDBytes@timeOut
  6507  0646  01CD               	clrf	MYI2C_Write2LEDBytes@timeOut+1
  6508  0647                     l2871:	
  6509                           ;main.c: 500: while(status != I2C1_MESSAGE_FAIL)
  6510                           
  6511  0647  0352               	decf	MYI2C_Write2LEDBytes@status,w
  6512  0648  1903               	btfsc	3,2
  6513  0649  2E6F               	goto	l2873
  6514                           
  6515                           ;main.c: 501: {
  6516                           ;main.c: 503: I2C1_MasterWrite( writeBuffer,
  6517                           ;main.c: 504: 3,
  6518                           ;main.c: 505: slaveDeviceAddress,
  6519                           ;main.c: 506: &status);
  6520  064A  3003               	movlw	3
  6521  064B  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6522  064C  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6523  064D  00A7               	movwf	I2C1_MasterWrite@length
  6524  064E  0849               	movf	MYI2C_Write2LEDBytes@slaveDeviceAddress,w
  6525  064F  00B1               	movwf	??_MYI2C_Write2LEDBytes+1
  6526  0650  01B2               	clrf	??_MYI2C_Write2LEDBytes+2
  6527  0651  0831               	movf	??_MYI2C_Write2LEDBytes+1,w
  6528  0652  00A8               	movwf	I2C1_MasterWrite@address
  6529  0653  0832               	movf	??_MYI2C_Write2LEDBytes+2,w
  6530  0654  00A9               	movwf	I2C1_MasterWrite@address+1
  6531  0655  3052               	movlw	(low (MYI2C_Write2LEDBytes@status| 0))& (0+255)
  6532  0656  00B3               	movwf	??_MYI2C_Write2LEDBytes+3
  6533  0657  0833               	movf	??_MYI2C_Write2LEDBytes+3,w
  6534  0658  00AA               	movwf	I2C1_MasterWrite@pflag
  6535  0659  304F               	movlw	(low (MYI2C_Write2LEDBytes@writeBuffer| 0))& (0+255)
  6536  065A  318E  26F2  3186   	fcall	_I2C1_MasterWrite
  6537  065D                     l2857:	
  6538                           ;main.c: 509: while(status == I2C1_MESSAGE_PENDING);
  6539                           
  6540  065D  3002               	movlw	2
  6541  065E  0020               	movlb	0	; select bank0
  6542  065F  0652               	xorwf	MYI2C_Write2LEDBytes@status,w
  6543  0660  1903               	btfsc	3,2
  6544  0661  2E5D               	goto	l2857
  6545                           
  6546                           ;main.c: 511: if (status == I2C1_MESSAGE_COMPLETE)
  6547  0662  0852               	movf	MYI2C_Write2LEDBytes@status,w
  6548  0663  1903               	btfsc	3,2
  6549  0664  2E6F               	goto	l2873
  6550                           
  6551                           ;main.c: 521: if (timeOut == 100)
  6552                           
  6553                           ;main.c: 512: break;
  6554  0665  3064               	movlw	100
  6555  0666  064C               	xorwf	MYI2C_Write2LEDBytes@timeOut,w
  6556  0667  044D               	iorwf	MYI2C_Write2LEDBytes@timeOut+1,w
  6557  0668  1903               	btfsc	3,2
  6558  0669  2E6F               	goto	l2873
  6559                           
  6560                           ;main.c: 523: else
  6561                           ;main.c: 524: timeOut++;
  6562                           
  6563                           ;main.c: 522: break;
  6564  066A  3001               	movlw	1
  6565  066B  07CC               	addwf	MYI2C_Write2LEDBytes@timeOut,f
  6566  066C  3000               	movlw	0
  6567  066D  3DCD               	addwfc	MYI2C_Write2LEDBytes@timeOut+1,f
  6568  066E  2E47               	goto	l2871
  6569  066F                     l2873:	
  6570                           
  6571                           ;main.c: 525: }
  6572                           ;main.c: 527: if (status == I2C1_MESSAGE_FAIL)
  6573  066F  0352               	decf	MYI2C_Write2LEDBytes@status,w
  6574  0670  1903               	btfsc	3,2
  6575  0671  2E7B               	goto	l2879
  6576                           
  6577                           ;main.c: 530: }
  6578                           ;main.c: 531: dataAddress++;
  6579                           
  6580                           ;main.c: 528: {
  6581                           ;main.c: 529: break;
  6582  0672  3001               	movlw	1
  6583  0673  07C4               	addwf	MYI2C_Write2LEDBytes@dataAddress,f
  6584  0674  3000               	movlw	0
  6585  0675  3DC5               	addwfc	MYI2C_Write2LEDBytes@dataAddress+1,f
  6586  0676  3001               	movlw	1
  6587  0677  07CA               	addwf	MYI2C_Write2LEDBytes@counter,f
  6588  0678  3000               	movlw	0
  6589  0679  3DCB               	addwfc	MYI2C_Write2LEDBytes@counter+1,f
  6590  067A  2E31               	goto	l540
  6591  067B                     l2879:	
  6592                           
  6593                           ;main.c: 532: }
  6594                           ;main.c: 533: PORTC &= 0xFD;
  6595  067B  30FD               	movlw	253
  6596  067C  00B0               	movwf	??_MYI2C_Write2LEDBytes
  6597  067D  0830               	movf	??_MYI2C_Write2LEDBytes,w
  6598  067E  058E               	andwf	14,f	;volatile
  6599  067F  0008               	return
  6600  0680                     __end_of_MYI2C_Write2LEDBytes:	
  6601                           
  6602                           	psect	text11
  6603  0EF2                     __ptext11:	
  6604 ;; *************** function _I2C1_MasterWrite *****************
  6605 ;; Defined at:
  6606 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;  pdata           1    wreg     PTR unsigned char 
  6609 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), 
  6610 ;;  length          1    7[BANK0 ] unsigned char 
  6611 ;;  address         2    8[BANK0 ] unsigned int 
  6612 ;;  pflag           1   10[BANK0 ] PTR enum E14260
  6613 ;;		 -> MYI2C_Write2LEDBytes@status(1), 
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  6616 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), 
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1    wreg      void 
  6619 ;; Registers used:
  6620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 0/0
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6626 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6629 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6630 ;;Total ram usage:        7 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:    4
  6633 ;; This function calls:
  6634 ;;		_I2C1_MasterTRBInsert
  6635 ;;		_I2C1_MasterWriteTRBBuild
  6636 ;; This function is called by:
  6637 ;;		_MYI2C_Write2LEDBytes
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           
  6642                           ;psect for function _I2C1_MasterWrite
  6643  0EF2                     _I2C1_MasterWrite:	
  6644                           
  6645                           ;incstack = 0
  6646                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6647                           ;I2C1_MasterWrite@pdata stored from wreg
  6648  0EF2  0020               	movlb	0	; select bank0
  6649  0EF3  00AD               	movwf	I2C1_MasterWrite@pdata
  6650                           
  6651                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  6652                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  6653  0EF4  1864               	btfsc	_i2c1_object+2,0
  6654  0EF5  2F13               	goto	l2415
  6655                           
  6656                           ;i2c1.c: 608: {
  6657                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  6658  0EF6  082D               	movf	I2C1_MasterWrite@pdata,w
  6659  0EF7  00AB               	movwf	??_I2C1_MasterWrite
  6660  0EF8  082B               	movf	??_I2C1_MasterWrite,w
  6661  0EF9  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  6662  0EFA  0827               	movf	I2C1_MasterWrite@length,w
  6663  0EFB  00AC               	movwf	??_I2C1_MasterWrite+1
  6664  0EFC  082C               	movf	??_I2C1_MasterWrite+1,w
  6665  0EFD  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  6666  0EFE  0829               	movf	I2C1_MasterWrite@address+1,w
  6667  0EFF  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  6668  0F00  0828               	movf	I2C1_MasterWrite@address,w
  6669  0F01  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  6670  0F02  30DC               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  6671  0F03  318E  2686  318E   	fcall	_I2C1_MasterWriteTRBBuild
  6672                           
  6673                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  6674  0F06  30DC               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  6675  0F07  0020               	movlb	0	; select bank0
  6676  0F08  00AB               	movwf	??_I2C1_MasterWrite
  6677  0F09  082B               	movf	??_I2C1_MasterWrite,w
  6678  0F0A  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  6679  0F0B  082A               	movf	I2C1_MasterWrite@pflag,w
  6680  0F0C  00AC               	movwf	??_I2C1_MasterWrite+1
  6681  0F0D  082C               	movf	??_I2C1_MasterWrite+1,w
  6682  0F0E  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  6683  0F0F  3001               	movlw	1
  6684  0F10  318F  27BA         	fcall	_I2C1_MasterTRBInsert
  6685                           
  6686                           ;i2c1.c: 611: }
  6687  0F12  0008               	return
  6688  0F13                     l2415:	
  6689                           
  6690                           ;i2c1.c: 612: else
  6691                           ;i2c1.c: 613: {
  6692                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  6693  0F13  0020               	movlb	0	; select bank0
  6694  0F14  082A               	movf	I2C1_MasterWrite@pflag,w
  6695  0F15  0086               	movwf	6
  6696  0F16  0187               	clrf	7
  6697  0F17  0181               	clrf	1
  6698  0F18  0A81               	incf	1,f
  6699  0F19  0008               	return
  6700  0F1A                     __end_of_I2C1_MasterWrite:	
  6701                           
  6702                           	psect	text12
  6703  0747                     __ptext12:	
  6704 ;; *************** function _MYI2C_ReadFaders *****************
  6705 ;; Defined at:
  6706 ;;		line 320 in file "main.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  slaveDeviceA    1    wreg     unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  slaveDeviceA    1   15[BANK0 ] unsigned char 
  6711 ;;  readTRB         8   17[BANK0 ] struct .[2]
  6712 ;;  writeBuffer     3    0        unsigned char [3]
  6713 ;;  timeOut         2   13[BANK0 ] unsigned int 
  6714 ;;  dataAddress     2   11[BANK0 ] int 
  6715 ;;  pflag           2    0        int 
  6716 ;;  status          1   25[BANK0 ] enum E14267
  6717 ;;  pointerByte     1   16[BANK0 ] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      enum E14267
  6720 ;; Registers used:
  6721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6731 ;;Total ram usage:       19 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    4
  6734 ;; This function calls:
  6735 ;;		_I2C1_MasterReadTRBBuild
  6736 ;;		_I2C1_MasterTRBInsert
  6737 ;;		_I2C1_MasterWriteTRBBuild
  6738 ;; This function is called by:
  6739 ;;		_main
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           
  6744                           ;psect for function _MYI2C_ReadFaders
  6745  0747                     _MYI2C_ReadFaders:	
  6746                           
  6747                           ;incstack = 0
  6748                           ; Regs used in _MYI2C_ReadFaders: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6749                           ;MYI2C_ReadFaders@slaveDeviceAddress stored from wreg
  6750  0747  0020               	movlb	0	; select bank0
  6751  0748  00AF               	movwf	MYI2C_ReadFaders@slaveDeviceAddress
  6752                           
  6753                           ;main.c: 323: int pflag;
  6754                           ;main.c: 324: int dataAddress=0;
  6755  0749  01AB               	clrf	MYI2C_ReadFaders@dataAddress
  6756  074A  01AC               	clrf	MYI2C_ReadFaders@dataAddress+1
  6757                           
  6758                           ;main.c: 325: uint8_t pointerByte=0b00100000;
  6759  074B  3020               	movlw	32
  6760  074C  00A7               	movwf	??_MYI2C_ReadFaders
  6761  074D  0827               	movf	??_MYI2C_ReadFaders,w
  6762  074E  00B0               	movwf	MYI2C_ReadFaders@pointerByte
  6763                           
  6764                           ;main.c: 326: I2C1_MESSAGE_STATUS status;
  6765                           ;main.c: 327: I2C1_TRANSACTION_REQUEST_BLOCK readTRB[2];
  6766                           ;main.c: 328: uint8_t writeBuffer[3];
  6767                           ;main.c: 329: uint16_t timeOut;
  6768                           ;main.c: 333: status = I2C1_MESSAGE_PENDING;
  6769  074F  3002               	movlw	2
  6770  0750  00A7               	movwf	??_MYI2C_ReadFaders
  6771  0751  0827               	movf	??_MYI2C_ReadFaders,w
  6772  0752  00B9               	movwf	MYI2C_ReadFaders@status
  6773                           
  6774                           ;main.c: 341: timeOut = 0;
  6775  0753  01AD               	clrf	MYI2C_ReadFaders@timeOut
  6776  0754  01AE               	clrf	MYI2C_ReadFaders@timeOut+1
  6777  0755                     l2715:	
  6778                           ;main.c: 343: while(status != I2C1_MESSAGE_FAIL)
  6779                           
  6780  0755  0339               	decf	MYI2C_ReadFaders@status,w
  6781  0756  1903               	btfsc	3,2
  6782  0757  2F9C               	goto	l2719
  6783                           
  6784                           ;main.c: 344: {
  6785                           ;main.c: 348: I2C1_MasterWriteTRBBuild( &readTRB[0],
  6786                           ;main.c: 349: &pointerByte,
  6787                           ;main.c: 350: 1,
  6788                           ;main.c: 351: slaveDeviceAddress);
  6789  0758  3030               	movlw	(low (MYI2C_ReadFaders@pointerByte| 0))& (0+255)
  6790  0759  00A7               	movwf	??_MYI2C_ReadFaders
  6791  075A  0827               	movf	??_MYI2C_ReadFaders,w
  6792  075B  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  6793  075C  01A1               	clrf	I2C1_MasterWriteTRBBuild@length
  6794  075D  0AA1               	incf	I2C1_MasterWriteTRBBuild@length,f
  6795  075E  082F               	movf	MYI2C_ReadFaders@slaveDeviceAddress,w
  6796  075F  00A8               	movwf	??_MYI2C_ReadFaders+1
  6797  0760  01A9               	clrf	??_MYI2C_ReadFaders+2
  6798  0761  0828               	movf	??_MYI2C_ReadFaders+1,w
  6799  0762  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  6800  0763  0829               	movf	??_MYI2C_ReadFaders+2,w
  6801  0764  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  6802  0765  3031               	movlw	(low (MYI2C_ReadFaders@readTRB| 0))& (0+255)
  6803  0766  318E  2686  3187   	fcall	_I2C1_MasterWriteTRBBuild
  6804                           
  6805                           ;main.c: 353: I2C1_MasterReadTRBBuild( &readTRB[1],
  6806                           ;main.c: 354: byteFaderValue,
  6807                           ;main.c: 355: 8,
  6808                           ;main.c: 356: slaveDeviceAddress);
  6809  0769  30D0               	movlw	(low (_byteFaderValue| 0))& (0+255)
  6810  076A  0020               	movlb	0	; select bank0
  6811  076B  00A7               	movwf	??_MYI2C_ReadFaders
  6812  076C  0827               	movf	??_MYI2C_ReadFaders,w
  6813  076D  00A0               	movwf	I2C1_MasterReadTRBBuild@pdata
  6814  076E  3008               	movlw	8
  6815  076F  00A8               	movwf	??_MYI2C_ReadFaders+1
  6816  0770  0828               	movf	??_MYI2C_ReadFaders+1,w
  6817  0771  00A1               	movwf	I2C1_MasterReadTRBBuild@length
  6818  0772  082F               	movf	MYI2C_ReadFaders@slaveDeviceAddress,w
  6819  0773  00A9               	movwf	??_MYI2C_ReadFaders+2
  6820  0774  01AA               	clrf	??_MYI2C_ReadFaders+3
  6821  0775  0829               	movf	??_MYI2C_ReadFaders+2,w
  6822  0776  00A2               	movwf	I2C1_MasterReadTRBBuild@address
  6823  0777  082A               	movf	??_MYI2C_ReadFaders+3,w
  6824  0778  00A3               	movwf	I2C1_MasterReadTRBBuild@address+1
  6825  0779  3035               	movlw	(low ((MYI2C_ReadFaders@readTRB| 0+4)))& (0+255)
  6826  077A  318E  26CA  3187   	fcall	_I2C1_MasterReadTRBBuild
  6827                           
  6828                           ;main.c: 359: I2C1_MasterTRBInsert(2, readTRB, &status);
  6829  077D  3031               	movlw	(low (MYI2C_ReadFaders@readTRB| 0))& (0+255)
  6830  077E  0020               	movlb	0	; select bank0
  6831  077F  00A7               	movwf	??_MYI2C_ReadFaders
  6832  0780  0827               	movf	??_MYI2C_ReadFaders,w
  6833  0781  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  6834  0782  3039               	movlw	(low (MYI2C_ReadFaders@status| 0))& (0+255)
  6835  0783  00A8               	movwf	??_MYI2C_ReadFaders+1
  6836  0784  0828               	movf	??_MYI2C_ReadFaders+1,w
  6837  0785  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  6838  0786  3002               	movlw	2
  6839  0787  318F  27BA  3187   	fcall	_I2C1_MasterTRBInsert
  6840  078A                     l2701:	
  6841                           ;main.c: 362: while(status == I2C1_MESSAGE_PENDING);
  6842                           
  6843  078A  3002               	movlw	2
  6844  078B  0020               	movlb	0	; select bank0
  6845  078C  0639               	xorwf	MYI2C_ReadFaders@status,w
  6846  078D  1903               	btfsc	3,2
  6847  078E  2F8A               	goto	l2701
  6848                           
  6849                           ;main.c: 364: if (status == I2C1_MESSAGE_COMPLETE)
  6850  078F  0839               	movf	MYI2C_ReadFaders@status,w
  6851  0790  1903               	btfsc	3,2
  6852  0791  2F9C               	goto	l2719
  6853                           
  6854                           ;main.c: 374: if (timeOut == 100)
  6855                           
  6856                           ;main.c: 365: break;
  6857  0792  3064               	movlw	100
  6858  0793  062D               	xorwf	MYI2C_ReadFaders@timeOut,w
  6859  0794  042E               	iorwf	MYI2C_ReadFaders@timeOut+1,w
  6860  0795  1903               	btfsc	3,2
  6861  0796  2F9C               	goto	l2719
  6862                           
  6863                           ;main.c: 376: else
  6864                           ;main.c: 377: timeOut++;
  6865                           
  6866                           ;main.c: 375: break;
  6867  0797  3001               	movlw	1
  6868  0798  07AD               	addwf	MYI2C_ReadFaders@timeOut,f
  6869  0799  3000               	movlw	0
  6870  079A  3DAE               	addwfc	MYI2C_ReadFaders@timeOut+1,f
  6871  079B  2F55               	goto	l2715
  6872  079C                     l2719:	
  6873                           
  6874                           ;main.c: 383: }
  6875                           ;main.c: 385: return status;
  6876  079C  0839               	movf	MYI2C_ReadFaders@status,w
  6877  079D  0008               	return
  6878  079E                     __end_of_MYI2C_ReadFaders:	
  6879                           
  6880                           	psect	text13
  6881  0E86                     __ptext13:	
  6882 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  6883 ;; Defined at:
  6884 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  ptrb            1    wreg     PTR struct .
  6887 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  6888 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  6889 ;;		 -> MYI2C_Write2LEDBytes@writeBuffer(3), MYI2C_ReadFaders@pointerByte(1), 
  6890 ;;  length          1    1[BANK0 ] unsigned char 
  6891 ;;  address         2    2[BANK0 ] unsigned int 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  ptrb            1    6[BANK0 ] PTR struct .
  6894 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  1    wreg      void 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6904 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;Total ram usage:        7 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    3
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_I2C1_MasterWrite
  6915 ;;		_MYI2C_ReadFaders
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _I2C1_MasterWriteTRBBuild
  6921  0E86                     _I2C1_MasterWriteTRBBuild:	
  6922                           
  6923                           ;incstack = 0
  6924                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  6925                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  6926  0E86  0020               	movlb	0	; select bank0
  6927  0E87  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  6928                           
  6929                           ;i2c1.c: 713: ptrb->address = address << 1;
  6930  0E88  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  6931  0E89  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  6932  0E8A  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  6933  0E8B  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  6934  0E8C  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  6935  0E8D  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  6936  0E8E  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  6937  0E8F  0086               	movwf	6
  6938  0E90  0187               	clrf	7
  6939  0E91  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  6940  0E92  3FC0               	movwi [0]fsr1
  6941  0E93  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  6942  0E94  3FC1               	movwi [1]fsr1
  6943                           
  6944                           ;i2c1.c: 714: ptrb->length = length;
  6945  0E95  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  6946  0E96  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  6947  0E97  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  6948  0E98  3E02               	addlw	2
  6949  0E99  0086               	movwf	6
  6950  0E9A  0187               	clrf	7
  6951  0E9B  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  6952  0E9C  0081               	movwf	1
  6953                           
  6954                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  6955  0E9D  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  6956  0E9E  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  6957  0E9F  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  6958  0EA0  3E03               	addlw	3
  6959  0EA1  0086               	movwf	6
  6960  0EA2  0187               	clrf	7
  6961  0EA3  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  6962  0EA4  0081               	movwf	1
  6963  0EA5  0008               	return
  6964  0EA6                     __end_of_I2C1_MasterWriteTRBBuild:	
  6965                           
  6966                           	psect	text14
  6967  0FBA                     __ptext14:	
  6968 ;; *************** function _I2C1_MasterTRBInsert *****************
  6969 ;; Defined at:
  6970 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;  count           1    wreg     unsigned char 
  6973 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  6974 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4), 
  6975 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  6976 ;;		 -> MYI2C_Write2LEDBytes@status(1), MYI2C_ReadFaders@status(1), 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  count           1    3[BANK0 ] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  1    wreg      void 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;Total ram usage:        4 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    3
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_I2C1_MasterWrite
  6999 ;;		_MYI2C_ReadFaders
  7000 ;;		_I2C1_MasterRead
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           
  7005                           ;psect for function _I2C1_MasterTRBInsert
  7006  0FBA                     _I2C1_MasterTRBInsert:	
  7007                           
  7008                           ;incstack = 0
  7009                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  7010                           ;I2C1_MasterTRBInsert@count stored from wreg
  7011  0FBA  0020               	movlb	0	; select bank0
  7012  0FBB  00A3               	movwf	I2C1_MasterTRBInsert@count
  7013                           
  7014                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  7015  0FBC  1864               	btfsc	_i2c1_object+2,0
  7016  0FBD  2FEE               	goto	l2209
  7017                           
  7018                           ;i2c1.c: 649: {
  7019                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  7020  0FBE  3002               	movlw	2
  7021  0FBF  00A2               	movwf	??_I2C1_MasterTRBInsert
  7022  0FC0  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7023  0FC1  0086               	movwf	6
  7024  0FC2  0187               	clrf	7
  7025  0FC3  0822               	movf	??_I2C1_MasterTRBInsert,w
  7026  0FC4  0081               	movwf	1
  7027                           
  7028                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  7029  0FC5  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  7030  0FC6  00A2               	movwf	??_I2C1_MasterTRBInsert
  7031  0FC7  0A62               	incf	_i2c1_object,w
  7032  0FC8  0086               	movwf	6
  7033  0FC9  0187               	clrf	7
  7034  0FCA  0822               	movf	??_I2C1_MasterTRBInsert,w
  7035  0FCB  0081               	movwf	1
  7036                           
  7037                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  7038  0FCC  0823               	movf	I2C1_MasterTRBInsert@count,w
  7039  0FCD  00A2               	movwf	??_I2C1_MasterTRBInsert
  7040  0FCE  0862               	movf	_i2c1_object,w
  7041  0FCF  0086               	movwf	6
  7042  0FD0  0187               	clrf	7
  7043  0FD1  0822               	movf	??_I2C1_MasterTRBInsert,w
  7044  0FD2  0081               	movwf	1
  7045                           
  7046                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  7047  0FD3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7048  0FD4  00A2               	movwf	??_I2C1_MasterTRBInsert
  7049  0FD5  0862               	movf	_i2c1_object,w
  7050  0FD6  3E02               	addlw	2
  7051  0FD7  0086               	movwf	6
  7052  0FD8  0187               	clrf	7
  7053  0FD9  0822               	movf	??_I2C1_MasterTRBInsert,w
  7054  0FDA  0081               	movwf	1
  7055                           
  7056                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  7057  0FDB  3003               	movlw	3
  7058  0FDC  00A2               	movwf	??_I2C1_MasterTRBInsert
  7059  0FDD  0822               	movf	??_I2C1_MasterTRBInsert,w
  7060  0FDE  07E2               	addwf	_i2c1_object,f
  7061                           
  7062                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  7063  0FDF  0862               	movf	_i2c1_object,w
  7064  0FE0  3A6F               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  7065  0FE1  1D03               	skipz
  7066  0FE2  2FE7               	goto	l2205
  7067                           
  7068                           ;i2c1.c: 659: {
  7069                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  7070  0FE3  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7071  0FE4  00A2               	movwf	??_I2C1_MasterTRBInsert
  7072  0FE5  0822               	movf	??_I2C1_MasterTRBInsert,w
  7073  0FE6  00E2               	movwf	_i2c1_object
  7074  0FE7                     l2205:	
  7075                           
  7076                           ;i2c1.c: 662: }
  7077                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  7078  0FE7  10E4               	bcf	_i2c1_object+2,1
  7079                           
  7080                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  7081  0FE8  0863               	movf	low ((_i2c1_object| 0+1)),w
  7082  0FE9  0662               	xorwf	_i2c1_object,w
  7083  0FEA  1D03               	skipz
  7084  0FEB  2FF3               	goto	l2211
  7085                           
  7086                           ;i2c1.c: 670: {
  7087                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  7088  0FEC  1464               	bsf	_i2c1_object+2,0
  7089                           
  7090                           ;i2c1.c: 673: }
  7091                           ;i2c1.c: 675: }
  7092  0FED  2FF3               	goto	l2211
  7093  0FEE                     l2209:	
  7094                           
  7095                           ;i2c1.c: 676: else
  7096                           ;i2c1.c: 677: {
  7097                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  7098  0FEE  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7099  0FEF  0086               	movwf	6
  7100  0FF0  0187               	clrf	7
  7101  0FF1  0181               	clrf	1
  7102  0FF2  0A81               	incf	1,f
  7103  0FF3                     l2211:	
  7104                           
  7105                           ;i2c1.c: 679: }
  7106                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  7107  0FF3  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7108  0FF4  0086               	movwf	6
  7109  0FF5  0187               	clrf	7
  7110  0FF6  3002               	movlw	2
  7111  0FF7  0601               	xorwf	1,w
  7112  0FF8  1D03               	btfss	3,2
  7113  0FF9  0008               	return
  7114  0FFA                     l2215:	
  7115                           ;i2c1.c: 683: {
  7116                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
  7117                           
  7118  0FFA  086B               	movf	_i2c1_state,w
  7119  0FFB  1D03               	btfss	3,2
  7120  0FFC  2FFA               	goto	l2215
  7121                           
  7122                           ;i2c1.c: 685: {
  7123                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
  7124  0FFD  002E               	movlb	14	; select bank14
  7125  0FFE  140F               	bsf	15,0	;volatile
  7126  0FFF  0008               	return
  7127  1000                     __end_of_I2C1_MasterTRBInsert:	
  7128                           
  7129                           	psect	text15
  7130  0ECA                     __ptext15:	
  7131 ;; *************** function _I2C1_MasterReadTRBBuild *****************
  7132 ;; Defined at:
  7133 ;;		line 694 in file "mcc_generated_files/i2c1.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  ptrb            1    wreg     PTR struct .
  7136 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), 
  7137 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  7138 ;;		 -> byteFaderValue(8), 
  7139 ;;  length          1    1[BANK0 ] unsigned char 
  7140 ;;  address         2    2[BANK0 ] unsigned int 
  7141 ;; Auto vars:     Size  Location     Type
  7142 ;;  ptrb            1    6[BANK0 ] PTR struct .
  7143 ;;		 -> MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), 
  7144 ;; Return value:  Size  Location     Type
  7145 ;;                  1    wreg      void 
  7146 ;; Registers used:
  7147 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7148 ;; Tracked objects:
  7149 ;;		On entry : 0/0
  7150 ;;		On exit  : 0/0
  7151 ;;		Unchanged: 0/0
  7152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7153 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7156 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7157 ;;Total ram usage:        7 bytes
  7158 ;; Hardware stack levels used:    1
  7159 ;; Hardware stack levels required when called:    3
  7160 ;; This function calls:
  7161 ;;		Nothing
  7162 ;; This function is called by:
  7163 ;;		_MYI2C_ReadFaders
  7164 ;;		_I2C1_MasterRead
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           
  7169                           ;psect for function _I2C1_MasterReadTRBBuild
  7170  0ECA                     _I2C1_MasterReadTRBBuild:	
  7171                           
  7172                           ;incstack = 0
  7173                           ; Regs used in _I2C1_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  7174                           ;I2C1_MasterReadTRBBuild@ptrb stored from wreg
  7175  0ECA  0020               	movlb	0	; select bank0
  7176  0ECB  00A6               	movwf	I2C1_MasterReadTRBBuild@ptrb
  7177                           
  7178                           ;i2c1.c: 700: ptrb->address = address << 1;
  7179  0ECC  0823               	movf	I2C1_MasterReadTRBBuild@address+1,w
  7180  0ECD  00A5               	movwf	??_I2C1_MasterReadTRBBuild+1
  7181  0ECE  0822               	movf	I2C1_MasterReadTRBBuild@address,w
  7182  0ECF  00A4               	movwf	??_I2C1_MasterReadTRBBuild
  7183  0ED0  35A4               	lslf	??_I2C1_MasterReadTRBBuild,f
  7184  0ED1  0DA5               	rlf	??_I2C1_MasterReadTRBBuild+1,f
  7185  0ED2  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7186  0ED3  0086               	movwf	6
  7187  0ED4  0187               	clrf	7
  7188  0ED5  0824               	movf	??_I2C1_MasterReadTRBBuild,w
  7189  0ED6  3FC0               	movwi [0]fsr1
  7190  0ED7  0825               	movf	??_I2C1_MasterReadTRBBuild+1,w
  7191  0ED8  3FC1               	movwi [1]fsr1
  7192                           
  7193                           ;i2c1.c: 702: ptrb->address |= 0x01;
  7194  0ED9  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7195  0EDA  0086               	movwf	6
  7196  0EDB  0187               	clrf	7
  7197  0EDC  3001               	movlw	1
  7198  0EDD  0481               	iorwf	1,f
  7199  0EDE  3141               	addfsr 1,1
  7200  0EDF  3000               	movlw	0
  7201  0EE0  0481               	iorwf	1,f
  7202                           
  7203                           ;i2c1.c: 703: ptrb->length = length;
  7204  0EE1  0821               	movf	I2C1_MasterReadTRBBuild@length,w
  7205  0EE2  00A4               	movwf	??_I2C1_MasterReadTRBBuild
  7206  0EE3  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7207  0EE4  3E02               	addlw	2
  7208  0EE5  0086               	movwf	6
  7209  0EE6  0187               	clrf	7
  7210  0EE7  0824               	movf	??_I2C1_MasterReadTRBBuild,w
  7211  0EE8  0081               	movwf	1
  7212                           
  7213                           ;i2c1.c: 704: ptrb->pbuffer = pdata;
  7214  0EE9  0820               	movf	I2C1_MasterReadTRBBuild@pdata,w
  7215  0EEA  00A4               	movwf	??_I2C1_MasterReadTRBBuild
  7216  0EEB  0826               	movf	I2C1_MasterReadTRBBuild@ptrb,w
  7217  0EEC  3E03               	addlw	3
  7218  0EED  0086               	movwf	6
  7219  0EEE  0187               	clrf	7
  7220  0EEF  0824               	movf	??_I2C1_MasterReadTRBBuild,w
  7221  0EF0  0081               	movwf	1
  7222  0EF1  0008               	return
  7223  0EF2                     __end_of_I2C1_MasterReadTRBBuild:	
  7224                           
  7225                           	psect	text16
  7226  07F1                     __ptext16:	
  7227 ;; *************** function _LED7SegSetup *****************
  7228 ;; Defined at:
  7229 ;;		line 31 in file "LED7Seg.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;		None
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;		None
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		None
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;Total ram usage:        0 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    3
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_main
  7254 ;; This function uses a non-reentrant model
  7255 ;;
  7256                           
  7257                           
  7258                           ;psect for function _LED7SegSetup
  7259  07F1                     _LED7SegSetup:	
  7260                           
  7261                           ;incstack = 0
  7262                           ; Regs used in _LED7SegSetup: []
  7263                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
  7264  07F1  003E               	movlb	30	; select bank30
  7265  07F2  12CE               	bcf	78,5	;volatile
  7266                           
  7267                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
  7268  07F3  0020               	movlb	0	; select bank0
  7269  07F4  1293               	bcf	19,5	;volatile
  7270                           
  7271                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
  7272  07F5  003E               	movlb	30	; select bank30
  7273  07F6  134E               	bcf	78,6	;volatile
  7274                           
  7275                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
  7276  07F7  0020               	movlb	0	; select bank0
  7277  07F8  1313               	bcf	19,6	;volatile
  7278                           
  7279                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
  7280  07F9  003E               	movlb	30	; select bank30
  7281  07FA  13CE               	bcf	78,7	;volatile
  7282                           
  7283                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
  7284  07FB  0020               	movlb	0	; select bank0
  7285  07FC  1393               	bcf	19,7	;volatile
  7286  07FD  0008               	return
  7287  07FE                     __end_of_LED7SegSetup:	
  7288                           
  7289                           	psect	text17
  7290  03A2                     __ptext17:	
  7291 ;; *************** function _LED7SegLoop *****************
  7292 ;; Defined at:
  7293 ;;		line 111 in file "LED7Seg.c"
  7294 ;; Parameters:    Size  Location     Type
  7295 ;;		None
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  d               2   57[BANK0 ] int 
  7298 ;;  d               2   59[BANK0 ] int 
  7299 ;;  z               2   61[BANK0 ] int 
  7300 ;;  d               2   55[BANK0 ] int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;Total ram usage:        9 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:    8
  7317 ;; This function calls:
  7318 ;;		_LED7SegBlankDisplay
  7319 ;;		_LED7SegDisplayValue
  7320 ;;		_delay
  7321 ;; This function is called by:
  7322 ;;		_main
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           
  7327                           ;psect for function _LED7SegLoop
  7328  03A2                     _LED7SegLoop:	
  7329                           
  7330                           ;LED7Seg.c: 113: LED7SegBlankDisplay();
  7331                           
  7332                           ;incstack = 0
  7333                           ; Regs used in _LED7SegLoop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7334  03A2  318D  2597  3183   	fcall	_LED7SegBlankDisplay
  7335                           
  7336                           ;LED7Seg.c: 116: for(int d=0;d<200;d++){
  7337  03A5  0020               	movlb	0	; select bank0
  7338  03A6  01D7               	clrf	LED7SegLoop@d
  7339  03A7  01D8               	clrf	LED7SegLoop@d+1
  7340  03A8  0858               	movf	LED7SegLoop@d+1,w
  7341  03A9  3A80               	xorlw	128
  7342  03AA  00D6               	movwf	??_LED7SegLoop
  7343  03AB  3080               	movlw	128
  7344  03AC  0256               	subwf	??_LED7SegLoop,w
  7345  03AD  1D03               	skipz
  7346  03AE  2BB1               	goto	u2835
  7347  03AF  30C8               	movlw	200
  7348  03B0  0257               	subwf	LED7SegLoop@d,w
  7349  03B1                     u2835:	
  7350  03B1  1803               	btfsc	3,0
  7351  03B2  2BCF               	goto	l3255
  7352  03B3                     l3249:	
  7353                           
  7354                           ;LED7Seg.c: 117: delay(speed);
  7355  03B3  3004               	movlw	low (_speed| (0+32768))
  7356  03B4  0084               	movwf	4
  7357  03B5  3090               	movlw	high (_speed| (0+32768))
  7358  03B6  0085               	movwf	5
  7359  03B7  3F00               	moviw [0]fsr0
  7360  03B8  0020               	movlb	0	; select bank0
  7361  03B9  00A6               	movwf	delay@delaytime
  7362  03BA  3F01               	moviw [1]fsr0
  7363  03BB  00A7               	movwf	delay@delaytime+1
  7364  03BC  3187  279E  3183   	fcall	_delay
  7365  03BF  3001               	movlw	1
  7366  03C0  0020               	movlb	0	; select bank0
  7367  03C1  07D7               	addwf	LED7SegLoop@d,f
  7368  03C2  3000               	movlw	0
  7369  03C3  3DD8               	addwfc	LED7SegLoop@d+1,f
  7370  03C4  0858               	movf	LED7SegLoop@d+1,w
  7371  03C5  3A80               	xorlw	128
  7372  03C6  00D6               	movwf	??_LED7SegLoop
  7373  03C7  3080               	movlw	128
  7374  03C8  0256               	subwf	??_LED7SegLoop,w
  7375  03C9  1D03               	skipz
  7376  03CA  2BCD               	goto	u2845
  7377  03CB  30C8               	movlw	200
  7378  03CC  0257               	subwf	LED7SegLoop@d,w
  7379  03CD                     u2845:	
  7380  03CD  1C03               	skipc
  7381  03CE  2BB3               	goto	l3249
  7382  03CF                     l3255:	
  7383                           
  7384                           ;LED7Seg.c: 118: }
  7385                           ;LED7Seg.c: 121: for (int z=0; z<100; z++)
  7386  03CF  0020               	movlb	0	; select bank0
  7387  03D0  01DD               	clrf	LED7SegLoop@z
  7388  03D1  01DE               	clrf	LED7SegLoop@z+1
  7389  03D2  085E               	movf	LED7SegLoop@z+1,w
  7390  03D3  3A80               	xorlw	128
  7391  03D4  00D6               	movwf	??_LED7SegLoop
  7392  03D5  3080               	movlw	128
  7393  03D6  0256               	subwf	??_LED7SegLoop,w
  7394  03D7  1D03               	skipz
  7395  03D8  2BDB               	goto	u2855
  7396  03D9  3064               	movlw	100
  7397  03DA  025D               	subwf	LED7SegLoop@z,w
  7398  03DB                     u2855:	
  7399  03DB  1803               	btfsc	3,0
  7400  03DC  2C1F               	goto	l3277
  7401  03DD                     l3261:	
  7402                           
  7403                           ;LED7Seg.c: 122: {
  7404                           ;LED7Seg.c: 123: LED7SegDisplayValue(z);
  7405  03DD  0020               	movlb	0	; select bank0
  7406  03DE  085E               	movf	LED7SegLoop@z+1,w
  7407  03DF  00CF               	movwf	LED7SegDisplayValue@iTwoDigitNumber+1
  7408  03E0  085D               	movf	LED7SegLoop@z,w
  7409  03E1  00CE               	movwf	LED7SegDisplayValue@iTwoDigitNumber
  7410  03E2  3184  24F5  3183   	fcall	_LED7SegDisplayValue
  7411                           
  7412                           ;LED7Seg.c: 124: for(int d=0;d<25;d++){
  7413  03E5  0020               	movlb	0	; select bank0
  7414  03E6  01D9               	clrf	LED7SegLoop@d_1042
  7415  03E7  01DA               	clrf	LED7SegLoop@d_1042+1
  7416  03E8  085A               	movf	LED7SegLoop@d_1042+1,w
  7417  03E9  3A80               	xorlw	128
  7418  03EA  00D6               	movwf	??_LED7SegLoop
  7419  03EB  3080               	movlw	128
  7420  03EC  0256               	subwf	??_LED7SegLoop,w
  7421  03ED  1D03               	skipz
  7422  03EE  2BF1               	goto	u2865
  7423  03EF  3019               	movlw	25
  7424  03F0  0259               	subwf	LED7SegLoop@d_1042,w
  7425  03F1                     u2865:	
  7426  03F1  1803               	btfsc	3,0
  7427  03F2  2C0F               	goto	l3275
  7428  03F3                     l3269:	
  7429                           
  7430                           ;LED7Seg.c: 125: delay(speed);
  7431  03F3  3004               	movlw	low (_speed| (0+32768))
  7432  03F4  0084               	movwf	4
  7433  03F5  3090               	movlw	high (_speed| (0+32768))
  7434  03F6  0085               	movwf	5
  7435  03F7  3F00               	moviw [0]fsr0
  7436  03F8  0020               	movlb	0	; select bank0
  7437  03F9  00A6               	movwf	delay@delaytime
  7438  03FA  3F01               	moviw [1]fsr0
  7439  03FB  00A7               	movwf	delay@delaytime+1
  7440  03FC  3187  279E  3183   	fcall	_delay
  7441  03FF  3001               	movlw	1
  7442  0400  0020               	movlb	0	; select bank0
  7443  0401  07D9               	addwf	LED7SegLoop@d_1042,f
  7444  0402  3000               	movlw	0
  7445  0403  3DDA               	addwfc	LED7SegLoop@d_1042+1,f
  7446  0404  085A               	movf	LED7SegLoop@d_1042+1,w
  7447  0405  3A80               	xorlw	128
  7448  0406  00D6               	movwf	??_LED7SegLoop
  7449  0407  3080               	movlw	128
  7450  0408  0256               	subwf	??_LED7SegLoop,w
  7451  0409  1D03               	skipz
  7452  040A  2C0D               	goto	u2875
  7453  040B  3019               	movlw	25
  7454  040C  0259               	subwf	LED7SegLoop@d_1042,w
  7455  040D                     u2875:	
  7456  040D  1C03               	skipc
  7457  040E  2BF3               	goto	l3269
  7458  040F                     l3275:	
  7459  040F  3001               	movlw	1
  7460  0410  0020               	movlb	0	; select bank0
  7461  0411  07DD               	addwf	LED7SegLoop@z,f
  7462  0412  3000               	movlw	0
  7463  0413  3DDE               	addwfc	LED7SegLoop@z+1,f
  7464  0414  085E               	movf	LED7SegLoop@z+1,w
  7465  0415  3A80               	xorlw	128
  7466  0416  00D6               	movwf	??_LED7SegLoop
  7467  0417  3080               	movlw	128
  7468  0418  0256               	subwf	??_LED7SegLoop,w
  7469  0419  1D03               	skipz
  7470  041A  2C1D               	goto	u2885
  7471  041B  3064               	movlw	100
  7472  041C  025D               	subwf	LED7SegLoop@z,w
  7473  041D                     u2885:	
  7474  041D  1C03               	skipc
  7475  041E  2BDD               	goto	l3261
  7476  041F                     l3277:	
  7477                           
  7478                           ;LED7Seg.c: 126: }
  7479                           ;LED7Seg.c: 127: }
  7480                           ;LED7Seg.c: 130: for(int d=0;d<200;d++){
  7481  041F  0020               	movlb	0	; select bank0
  7482  0420  01DB               	clrf	LED7SegLoop@d_1043
  7483  0421  01DC               	clrf	LED7SegLoop@d_1043+1
  7484  0422  085C               	movf	LED7SegLoop@d_1043+1,w
  7485  0423  3A80               	xorlw	128
  7486  0424  00D6               	movwf	??_LED7SegLoop
  7487  0425  3080               	movlw	128
  7488  0426  0256               	subwf	??_LED7SegLoop,w
  7489  0427  1D03               	skipz
  7490  0428  2C2B               	goto	u2895
  7491  0429  30C8               	movlw	200
  7492  042A  025B               	subwf	LED7SegLoop@d_1043,w
  7493  042B                     u2895:	
  7494  042B  1803               	btfsc	3,0
  7495  042C  2C49               	goto	l3289
  7496  042D                     l3283:	
  7497                           
  7498                           ;LED7Seg.c: 131: delay(speed);
  7499  042D  3004               	movlw	low (_speed| (0+32768))
  7500  042E  0084               	movwf	4
  7501  042F  3090               	movlw	high (_speed| (0+32768))
  7502  0430  0085               	movwf	5
  7503  0431  3F00               	moviw [0]fsr0
  7504  0432  0020               	movlb	0	; select bank0
  7505  0433  00A6               	movwf	delay@delaytime
  7506  0434  3F01               	moviw [1]fsr0
  7507  0435  00A7               	movwf	delay@delaytime+1
  7508  0436  3187  279E  3183   	fcall	_delay
  7509  0439  3001               	movlw	1
  7510  043A  0020               	movlb	0	; select bank0
  7511  043B  07DB               	addwf	LED7SegLoop@d_1043,f
  7512  043C  3000               	movlw	0
  7513  043D  3DDC               	addwfc	LED7SegLoop@d_1043+1,f
  7514  043E  085C               	movf	LED7SegLoop@d_1043+1,w
  7515  043F  3A80               	xorlw	128
  7516  0440  00D6               	movwf	??_LED7SegLoop
  7517  0441  3080               	movlw	128
  7518  0442  0256               	subwf	??_LED7SegLoop,w
  7519  0443  1D03               	skipz
  7520  0444  2C47               	goto	u2905
  7521  0445  30C8               	movlw	200
  7522  0446  025B               	subwf	LED7SegLoop@d_1043,w
  7523  0447                     u2905:	
  7524  0447  1C03               	skipc
  7525  0448  2C2D               	goto	l3283
  7526  0449                     l3289:	
  7527                           
  7528                           ;LED7Seg.c: 132: }
  7529                           ;LED7Seg.c: 134: LED7SegBlankDisplay();
  7530  0449  318D  2597         	fcall	_LED7SegBlankDisplay
  7531  044B  0008               	return
  7532  044C                     __end_of_LED7SegLoop:	
  7533                           
  7534                           	psect	text18
  7535  04F5                     __ptext18:	
  7536 ;; *************** function _LED7SegDisplayValue *****************
  7537 ;; Defined at:
  7538 ;;		line 80 in file "LED7Seg.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  iTwoDigitNum    2   46[BANK0 ] unsigned int 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  iTensDigit      2   52[BANK0 ] unsigned int 
  7543 ;;  iTensCode       2   50[BANK0 ] unsigned int 
  7544 ;;  iUnitsDigit     2   48[BANK0 ] unsigned int 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;Total ram usage:        8 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    7
  7561 ;; This function calls:
  7562 ;;		_LED7SegShiftOutPulseClock
  7563 ;;		___fttol
  7564 ;;		___lwdiv
  7565 ;;		___lwmod
  7566 ;;		___lwtoft
  7567 ;; This function is called by:
  7568 ;;		_main
  7569 ;;		_LED7SegLoop
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           
  7574                           ;psect for function _LED7SegDisplayValue
  7575  04F5                     _LED7SegDisplayValue:	
  7576                           
  7577                           ;LED7Seg.c: 86: if(99<iTwoDigitNumber) iTwoDigitNumber=99;
  7578                           
  7579                           ;LED7Seg.c: 81: unsigned int iTensDigit;
  7580                           ;LED7Seg.c: 82: unsigned int iUnitsDigit;
  7581                           ;LED7Seg.c: 83: unsigned int iTensCode;
  7582                           ;LED7Seg.c: 85: if(0>iTwoDigitNumber) iTwoDigitNumber=0;
  7583                           
  7584                           ;incstack = 0
  7585                           ; Regs used in _LED7SegDisplayValue: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7586  04F5  3000               	movlw	0
  7587  04F6  0020               	movlb	0	; select bank0
  7588  04F7  024F               	subwf	LED7SegDisplayValue@iTwoDigitNumber+1,w
  7589  04F8  3064               	movlw	100
  7590  04F9  1903               	skipnz
  7591  04FA  024E               	subwf	LED7SegDisplayValue@iTwoDigitNumber,w
  7592  04FB  1C03               	skipc
  7593  04FC  2D01               	goto	l3167
  7594  04FD  3063               	movlw	99
  7595  04FE  00CE               	movwf	LED7SegDisplayValue@iTwoDigitNumber
  7596  04FF  3000               	movlw	0
  7597  0500  00CF               	movwf	LED7SegDisplayValue@iTwoDigitNumber+1
  7598  0501                     l3167:	
  7599                           
  7600                           ;LED7Seg.c: 88: d=iTwoDigitNumber%10;
  7601  0501  084F               	movf	LED7SegDisplayValue@iTwoDigitNumber+1,w
  7602  0502  00A3               	movwf	___lwmod@dividend+1
  7603  0503  084E               	movf	LED7SegDisplayValue@iTwoDigitNumber,w
  7604  0504  00A2               	movwf	___lwmod@dividend
  7605  0505  300A               	movlw	10
  7606  0506  00A0               	movwf	___lwmod@divisor
  7607  0507  3000               	movlw	0
  7608  0508  00A1               	movwf	___lwmod@divisor+1
  7609  0509  318F  271A  3184   	fcall	___lwmod
  7610  050C  0020               	movlb	0	; select bank0
  7611  050D  0821               	movf	?___lwmod+1,w
  7612  050E  00A9               	movwf	___lwtoft@c+1
  7613  050F  0820               	movf	?___lwmod,w
  7614  0510  00A8               	movwf	___lwtoft@c
  7615  0511  318D  25D4  3184   	fcall	___lwtoft
  7616  0514  0020               	movlb	0	; select bank0
  7617  0515  0828               	movf	?___lwtoft,w
  7618  0516  0021               	movlb	1	; select bank1
  7619  0517  00C4               	movwf	_d^(0+128)
  7620  0518  0020               	movlb	0	; select bank0
  7621  0519  0829               	movf	?___lwtoft+1,w
  7622  051A  0021               	movlb	1	; select bank1
  7623  051B  00C5               	movwf	(_d+1)^(0+128)
  7624  051C  0020               	movlb	0	; select bank0
  7625  051D  082A               	movf	?___lwtoft+2,w
  7626  051E  0021               	movlb	1	; select bank1
  7627  051F  00C6               	movwf	(_d+2)^(0+128)
  7628                           
  7629                           ;LED7Seg.c: 89: iUnitsDigit=d;
  7630  0520  0844               	movf	_d^(0+128),w
  7631  0521  0020               	movlb	0	; select bank0
  7632  0522  00C0               	movwf	___fttol@f1
  7633  0523  0021               	movlb	1	; select bank1
  7634  0524  0845               	movf	(_d+1)^(0+128),w
  7635  0525  0020               	movlb	0	; select bank0
  7636  0526  00C1               	movwf	___fttol@f1+1
  7637  0527  0021               	movlb	1	; select bank1
  7638  0528  0846               	movf	(_d+2)^(0+128),w
  7639  0529  0020               	movlb	0	; select bank0
  7640  052A  00C2               	movwf	___fttol@f1+2
  7641  052B  3185  2585  3184   	fcall	___fttol
  7642  052E  0020               	movlb	0	; select bank0
  7643  052F  0841               	movf	?___fttol+1,w
  7644  0530  00D1               	movwf	LED7SegDisplayValue@iUnitsDigit+1
  7645  0531  0840               	movf	?___fttol,w
  7646  0532  00D0               	movwf	LED7SegDisplayValue@iUnitsDigit
  7647                           
  7648                           ;LED7Seg.c: 90: b=iTwoDigitNumber/10;
  7649  0533  300A               	movlw	10
  7650  0534  00A0               	movwf	___lwdiv@divisor
  7651  0535  3000               	movlw	0
  7652  0536  00A1               	movwf	___lwdiv@divisor+1
  7653  0537  084F               	movf	LED7SegDisplayValue@iTwoDigitNumber+1,w
  7654  0538  00A3               	movwf	___lwdiv@dividend+1
  7655  0539  084E               	movf	LED7SegDisplayValue@iTwoDigitNumber,w
  7656  053A  00A2               	movwf	___lwdiv@dividend
  7657  053B  318F  2747  3184   	fcall	___lwdiv
  7658  053E  0020               	movlb	0	; select bank0
  7659  053F  0821               	movf	?___lwdiv+1,w
  7660  0540  00A9               	movwf	___lwtoft@c+1
  7661  0541  0820               	movf	?___lwdiv,w
  7662  0542  00A8               	movwf	___lwtoft@c
  7663  0543  318D  25D4  3184   	fcall	___lwtoft
  7664  0546  0020               	movlb	0	; select bank0
  7665  0547  0828               	movf	?___lwtoft,w
  7666  0548  0021               	movlb	1	; select bank1
  7667  0549  00C7               	movwf	_b^(0+128)
  7668  054A  0020               	movlb	0	; select bank0
  7669  054B  0829               	movf	?___lwtoft+1,w
  7670  054C  0021               	movlb	1	; select bank1
  7671  054D  00C8               	movwf	(_b+1)^(0+128)
  7672  054E  0020               	movlb	0	; select bank0
  7673  054F  082A               	movf	?___lwtoft+2,w
  7674  0550  0021               	movlb	1	; select bank1
  7675  0551  00C9               	movwf	(_b+2)^(0+128)
  7676                           
  7677                           ;LED7Seg.c: 91: iTensDigit=b;
  7678  0552  0847               	movf	_b^(0+128),w
  7679  0553  0020               	movlb	0	; select bank0
  7680  0554  00C0               	movwf	___fttol@f1
  7681  0555  0021               	movlb	1	; select bank1
  7682  0556  0848               	movf	(_b+1)^(0+128),w
  7683  0557  0020               	movlb	0	; select bank0
  7684  0558  00C1               	movwf	___fttol@f1+1
  7685  0559  0021               	movlb	1	; select bank1
  7686  055A  0849               	movf	(_b+2)^(0+128),w
  7687  055B  0020               	movlb	0	; select bank0
  7688  055C  00C2               	movwf	___fttol@f1+2
  7689  055D  3185  2585  3184   	fcall	___fttol
  7690  0560  0020               	movlb	0	; select bank0
  7691  0561  0841               	movf	?___fttol+1,w
  7692  0562  00D5               	movwf	LED7SegDisplayValue@iTensDigit+1
  7693  0563  0840               	movf	?___fttol,w
  7694  0564  00D4               	movwf	LED7SegDisplayValue@iTensDigit
  7695                           
  7696                           ;LED7Seg.c: 92: iTensCode=segdisp[iTensDigit];
  7697  0565  3554               	lslf	LED7SegDisplayValue@iTensDigit,w
  7698  0566  3EA0               	addlw	(low (_segdisp| 0))& (0+255)
  7699  0567  0086               	movwf	6
  7700  0568  0187               	clrf	7
  7701  0569  3F40               	moviw [0]fsr1
  7702  056A  00D2               	movwf	LED7SegDisplayValue@iTensCode
  7703  056B  3F41               	moviw [1]fsr1
  7704  056C  00D3               	movwf	LED7SegDisplayValue@iTensCode+1
  7705                           
  7706                           ;LED7Seg.c: 93: if(0==iTensDigit) iTensCode=255;
  7707  056D  0854               	movf	LED7SegDisplayValue@iTensDigit,w
  7708  056E  0455               	iorwf	LED7SegDisplayValue@iTensDigit+1,w
  7709  056F  1D03               	btfss	3,2
  7710  0570  2D75               	goto	l3181
  7711  0571  30FF               	movlw	255
  7712  0572  00D2               	movwf	LED7SegDisplayValue@iTensCode
  7713  0573  3000               	movlw	0
  7714  0574  00D3               	movwf	LED7SegDisplayValue@iTensCode+1
  7715  0575                     l3181:	
  7716                           
  7717                           ;LED7Seg.c: 95: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
  7718  0575  3550               	lslf	LED7SegDisplayValue@iUnitsDigit,w
  7719  0576  3EA0               	addlw	(low (_segdisp| 0))& (0+255)
  7720  0577  0086               	movwf	6
  7721  0578  0187               	clrf	7
  7722  0579  0801               	movf	1,w
  7723  057A  318E  266A  3184   	fcall	_LED7SegShiftOutPulseClock
  7724                           
  7725                           ;LED7Seg.c: 96: LED7SegShiftOutPulseClock( iTensCode );
  7726  057D  0020               	movlb	0	; select bank0
  7727  057E  0852               	movf	LED7SegDisplayValue@iTensCode,w
  7728  057F  318E  266A         	fcall	_LED7SegShiftOutPulseClock
  7729                           
  7730                           ;LED7Seg.c: 98: do { LATCbits.LATC5 = 1; } while(0);
  7731  0581  0020               	movlb	0	; select bank0
  7732  0582  1698               	bsf	24,5	;volatile
  7733                           
  7734                           ;LED7Seg.c: 99: do { LATCbits.LATC5 = 0; } while(0);
  7735  0583  1298               	bcf	24,5	;volatile
  7736  0584  0008               	return
  7737  0585                     __end_of_LED7SegDisplayValue:	
  7738                           
  7739                           	psect	text19
  7740  0DD4                     __ptext19:	
  7741 ;; *************** function ___lwtoft *****************
  7742 ;; Defined at:
  7743 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  c               2    8[BANK0 ] unsigned int 
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  3    8[BANK0 ] float 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0, pclath, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7757 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;Total ram usage:        4 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    4
  7764 ;; This function calls:
  7765 ;;		___ftpack
  7766 ;; This function is called by:
  7767 ;;		_LED7SegDisplayValue
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           
  7772                           ;psect for function ___lwtoft
  7773  0DD4                     ___lwtoft:	
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7777  0DD4  0020               	movlb	0	; select bank0
  7778  0DD5  0828               	movf	___lwtoft@c,w
  7779  0DD6  00A0               	movwf	___ftpack@arg
  7780  0DD7  0829               	movf	___lwtoft@c+1,w
  7781  0DD8  00A1               	movwf	___ftpack@arg+1
  7782  0DD9  01A2               	clrf	___ftpack@arg+2
  7783  0DDA  308E               	movlw	142
  7784  0DDB  00AB               	movwf	??___lwtoft
  7785  0DDC  082B               	movf	??___lwtoft,w
  7786  0DDD  00A3               	movwf	___ftpack@exp
  7787  0DDE  01A4               	clrf	___ftpack@sign
  7788  0DDF  3186  2680         	fcall	___ftpack
  7789  0DE1  0020               	movlb	0	; select bank0
  7790  0DE2  0820               	movf	?___ftpack,w
  7791  0DE3  00A8               	movwf	?___lwtoft
  7792  0DE4  0821               	movf	?___ftpack+1,w
  7793  0DE5  00A9               	movwf	?___lwtoft+1
  7794  0DE6  0822               	movf	?___ftpack+2,w
  7795  0DE7  00AA               	movwf	?___lwtoft+2
  7796  0DE8  0008               	return
  7797  0DE9                     __end_of___lwtoft:	
  7798                           
  7799                           	psect	text20
  7800  0680                     __ptext20:	
  7801 ;; *************** function ___ftpack *****************
  7802 ;; Defined at:
  7803 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;  arg             3    0[BANK0 ] unsigned um
  7806 ;;  exp             1    3[BANK0 ] unsigned char 
  7807 ;;  sign            1    4[BANK0 ] unsigned char 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  3    0[BANK0 ] float 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7819 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7821 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;Total ram usage:        8 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; Hardware stack levels required when called:    3
  7826 ;; This function calls:
  7827 ;;		Nothing
  7828 ;; This function is called by:
  7829 ;;		___ftdiv
  7830 ;;		___lbtoft
  7831 ;;		___lwtoft
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           
  7835                           
  7836                           ;psect for function ___ftpack
  7837  0680                     ___ftpack:	
  7838                           
  7839                           ;incstack = 0
  7840                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7841  0680  0020               	movlb	0	; select bank0
  7842  0681  0823               	movf	___ftpack@exp,w
  7843  0682  1903               	btfsc	3,2
  7844  0683  2E89               	goto	l2165
  7845  0684  0822               	movf	___ftpack@arg+2,w
  7846  0685  0421               	iorwf	___ftpack@arg+1,w
  7847  0686  0420               	iorwf	___ftpack@arg,w
  7848  0687  1D03               	skipz
  7849  0688  2E9A               	goto	l2171
  7850  0689                     l2165:	
  7851  0689  3000               	movlw	0
  7852  068A  00A0               	movwf	?___ftpack
  7853  068B  3000               	movlw	0
  7854  068C  00A1               	movwf	?___ftpack+1
  7855  068D  3000               	movlw	0
  7856  068E  00A2               	movwf	?___ftpack+2
  7857  068F  0008               	return
  7858  0690                     l2169:	
  7859  0690  3001               	movlw	1
  7860  0691  00A5               	movwf	??___ftpack
  7861  0692  0825               	movf	??___ftpack,w
  7862  0693  07A3               	addwf	___ftpack@exp,f
  7863  0694  3001               	movlw	1
  7864  0695                     u1435:	
  7865  0695  36A2               	lsrf	___ftpack@arg+2,f
  7866  0696  0CA1               	rrf	___ftpack@arg+1,f
  7867  0697  0CA0               	rrf	___ftpack@arg,f
  7868  0698  0B89               	decfsz	9,f
  7869  0699  2E95               	goto	u1435
  7870  069A                     l2171:	
  7871  069A  30FE               	movlw	254
  7872  069B  0522               	andwf	___ftpack@arg+2,w
  7873  069C  1903               	btfsc	3,2
  7874  069D  2EB3               	goto	l890
  7875  069E  2E90               	goto	l2169
  7876  069F                     l2173:	
  7877  069F  3001               	movlw	1
  7878  06A0  00A5               	movwf	??___ftpack
  7879  06A1  0825               	movf	??___ftpack,w
  7880  06A2  07A3               	addwf	___ftpack@exp,f
  7881  06A3  3001               	movlw	1
  7882  06A4  07A0               	addwf	___ftpack@arg,f
  7883  06A5  3000               	movlw	0
  7884  06A6  1803               	skipnc
  7885  06A7  3001               	movlw	1
  7886  06A8  07A1               	addwf	___ftpack@arg+1,f
  7887  06A9  3000               	movlw	0
  7888  06AA  1803               	skipnc
  7889  06AB  3001               	movlw	1
  7890  06AC  07A2               	addwf	___ftpack@arg+2,f
  7891  06AD  3001               	movlw	1
  7892  06AE                     u1455:	
  7893  06AE  36A2               	lsrf	___ftpack@arg+2,f
  7894  06AF  0CA1               	rrf	___ftpack@arg+1,f
  7895  06B0  0CA0               	rrf	___ftpack@arg,f
  7896  06B1  0B89               	decfsz	9,f
  7897  06B2  2EAE               	goto	u1455
  7898  06B3                     l890:	
  7899  06B3  30FF               	movlw	255
  7900  06B4  0522               	andwf	___ftpack@arg+2,w
  7901  06B5  1903               	btfsc	3,2
  7902  06B6  2EC0               	goto	l2181
  7903  06B7  2E9F               	goto	l2173
  7904  06B8                     l2179:	
  7905  06B8  3001               	movlw	1
  7906  06B9  02A3               	subwf	___ftpack@exp,f
  7907  06BA  3001               	movlw	1
  7908  06BB                     u1475:	
  7909  06BB  35A0               	lslf	___ftpack@arg,f
  7910  06BC  0DA1               	rlf	___ftpack@arg+1,f
  7911  06BD  0DA2               	rlf	___ftpack@arg+2,f
  7912  06BE  0B89               	decfsz	9,f
  7913  06BF  2EBB               	goto	u1475
  7914  06C0                     l2181:	
  7915  06C0  1BA1               	btfsc	___ftpack@arg+1,7
  7916  06C1  2EC6               	goto	l897
  7917  06C2  3002               	movlw	2
  7918  06C3  0223               	subwf	___ftpack@exp,w
  7919  06C4  1803               	skipnc
  7920  06C5  2EB8               	goto	l2179
  7921  06C6                     l897:	
  7922  06C6  1823               	btfsc	___ftpack@exp,0
  7923  06C7  2ECE               	goto	l898
  7924  06C8  30FF               	movlw	255
  7925  06C9  05A0               	andwf	___ftpack@arg,f
  7926  06CA  307F               	movlw	127
  7927  06CB  05A1               	andwf	___ftpack@arg+1,f
  7928  06CC  30FF               	movlw	255
  7929  06CD  05A2               	andwf	___ftpack@arg+2,f
  7930  06CE                     l898:	
  7931  06CE  1003               	clrc
  7932  06CF  0CA3               	rrf	___ftpack@exp,f
  7933  06D0  0823               	movf	___ftpack@exp,w
  7934  06D1  00A5               	movwf	??___ftpack
  7935  06D2  01A6               	clrf	??___ftpack+1
  7936  06D3  01A7               	clrf	??___ftpack+2
  7937  06D4  3010               	movlw	16
  7938  06D5                     u1515:	
  7939  06D5  35A5               	lslf	??___ftpack,f
  7940  06D6  0DA6               	rlf	??___ftpack+1,f
  7941  06D7  0DA7               	rlf	??___ftpack+2,f
  7942  06D8  0B89               	decfsz	9,f
  7943  06D9  2ED5               	goto	u1515
  7944  06DA  0825               	movf	??___ftpack,w
  7945  06DB  04A0               	iorwf	___ftpack@arg,f
  7946  06DC  0826               	movf	??___ftpack+1,w
  7947  06DD  04A1               	iorwf	___ftpack@arg+1,f
  7948  06DE  0827               	movf	??___ftpack+2,w
  7949  06DF  04A2               	iorwf	___ftpack@arg+2,f
  7950  06E0  0824               	movf	___ftpack@sign,w
  7951  06E1  1903               	btfsc	3,2
  7952  06E2  0008               	return
  7953  06E3  17A2               	bsf	___ftpack@arg+2,7
  7954  06E4  0008               	return
  7955  06E5                     __end_of___ftpack:	
  7956                           
  7957                           	psect	text21
  7958  0F1A                     __ptext21:	
  7959 ;; *************** function ___lwmod *****************
  7960 ;; Defined at:
  7961 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  divisor         2    0[BANK0 ] unsigned int 
  7964 ;;  dividend        2    2[BANK0 ] unsigned int 
  7965 ;; Auto vars:     Size  Location     Type
  7966 ;;  counter         1    5[BANK0 ] unsigned char 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  2    0[BANK0 ] unsigned int 
  7969 ;; Registers used:
  7970 ;;		wreg, status,2, status,0
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7979 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7980 ;;Total ram usage:        6 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    3
  7983 ;; This function calls:
  7984 ;;		Nothing
  7985 ;; This function is called by:
  7986 ;;		_LED7SegDisplayValue
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           
  7991                           ;psect for function ___lwmod
  7992  0F1A                     ___lwmod:	
  7993                           
  7994                           ;incstack = 0
  7995                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7996  0F1A  0020               	movlb	0	; select bank0
  7997  0F1B  0820               	movf	___lwmod@divisor,w
  7998  0F1C  0421               	iorwf	___lwmod@divisor+1,w
  7999  0F1D  1903               	btfsc	3,2
  8000  0F1E  2F42               	goto	l2317
  8001  0F1F  01A5               	clrf	___lwmod@counter
  8002  0F20  0AA5               	incf	___lwmod@counter,f
  8003  0F21                     l2307:	
  8004  0F21  1BA1               	btfsc	___lwmod@divisor+1,7
  8005  0F22  2F2D               	goto	l2309
  8006  0F23  3001               	movlw	1
  8007  0F24                     u1795:	
  8008  0F24  35A0               	lslf	___lwmod@divisor,f
  8009  0F25  0DA1               	rlf	___lwmod@divisor+1,f
  8010  0F26  0B89               	decfsz	9,f
  8011  0F27  2F24               	goto	u1795
  8012  0F28  3001               	movlw	1
  8013  0F29  00A4               	movwf	??___lwmod
  8014  0F2A  0824               	movf	??___lwmod,w
  8015  0F2B  07A5               	addwf	___lwmod@counter,f
  8016  0F2C  2F21               	goto	l2307
  8017  0F2D                     l2309:	
  8018  0F2D  0821               	movf	___lwmod@divisor+1,w
  8019  0F2E  0223               	subwf	___lwmod@dividend+1,w
  8020  0F2F  1D03               	skipz
  8021  0F30  2F33               	goto	u1815
  8022  0F31  0820               	movf	___lwmod@divisor,w
  8023  0F32  0222               	subwf	___lwmod@dividend,w
  8024  0F33                     u1815:	
  8025  0F33  1C03               	skipc
  8026  0F34  2F39               	goto	l2313
  8027  0F35  0820               	movf	___lwmod@divisor,w
  8028  0F36  02A2               	subwf	___lwmod@dividend,f
  8029  0F37  0821               	movf	___lwmod@divisor+1,w
  8030  0F38  3BA3               	subwfb	___lwmod@dividend+1,f
  8031  0F39                     l2313:	
  8032  0F39  3001               	movlw	1
  8033  0F3A                     u1825:	
  8034  0F3A  36A1               	lsrf	___lwmod@divisor+1,f
  8035  0F3B  0CA0               	rrf	___lwmod@divisor,f
  8036  0F3C  0B89               	decfsz	9,f
  8037  0F3D  2F3A               	goto	u1825
  8038  0F3E  3001               	movlw	1
  8039  0F3F  02A5               	subwf	___lwmod@counter,f
  8040  0F40  1D03               	btfss	3,2
  8041  0F41  2F2D               	goto	l2309
  8042  0F42                     l2317:	
  8043  0F42  0823               	movf	___lwmod@dividend+1,w
  8044  0F43  00A1               	movwf	?___lwmod+1
  8045  0F44  0822               	movf	___lwmod@dividend,w
  8046  0F45  00A0               	movwf	?___lwmod
  8047  0F46  0008               	return
  8048  0F47                     __end_of___lwmod:	
  8049                           
  8050                           	psect	text22
  8051  0F47                     __ptext22:	
  8052 ;; *************** function ___lwdiv *****************
  8053 ;; Defined at:
  8054 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  divisor         2    0[BANK0 ] unsigned int 
  8057 ;;  dividend        2    2[BANK0 ] unsigned int 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  quotient        2    5[BANK0 ] unsigned int 
  8060 ;;  counter         1    7[BANK0 ] unsigned char 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  2    0[BANK0 ] unsigned int 
  8063 ;; Registers used:
  8064 ;;		wreg, status,2, status,0
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;Total ram usage:        8 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:    3
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_LED7SegDisplayValue
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           
  8085                           ;psect for function ___lwdiv
  8086  0F47                     ___lwdiv:	
  8087                           
  8088                           ;incstack = 0
  8089                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8090  0F47  0020               	movlb	0	; select bank0
  8091  0F48  01A5               	clrf	___lwdiv@quotient
  8092  0F49  01A6               	clrf	___lwdiv@quotient+1
  8093  0F4A  0820               	movf	___lwdiv@divisor,w
  8094  0F4B  0421               	iorwf	___lwdiv@divisor+1,w
  8095  0F4C  1903               	btfsc	3,2
  8096  0F4D  2F77               	goto	l2295
  8097  0F4E  01A7               	clrf	___lwdiv@counter
  8098  0F4F  0AA7               	incf	___lwdiv@counter,f
  8099  0F50                     l2283:	
  8100  0F50  1BA1               	btfsc	___lwdiv@divisor+1,7
  8101  0F51  2F5C               	goto	l2285
  8102  0F52  3001               	movlw	1
  8103  0F53                     u1725:	
  8104  0F53  35A0               	lslf	___lwdiv@divisor,f
  8105  0F54  0DA1               	rlf	___lwdiv@divisor+1,f
  8106  0F55  0B89               	decfsz	9,f
  8107  0F56  2F53               	goto	u1725
  8108  0F57  3001               	movlw	1
  8109  0F58  00A4               	movwf	??___lwdiv
  8110  0F59  0824               	movf	??___lwdiv,w
  8111  0F5A  07A7               	addwf	___lwdiv@counter,f
  8112  0F5B  2F50               	goto	l2283
  8113  0F5C                     l2285:	
  8114  0F5C  3001               	movlw	1
  8115  0F5D                     u1745:	
  8116  0F5D  35A5               	lslf	___lwdiv@quotient,f
  8117  0F5E  0DA6               	rlf	___lwdiv@quotient+1,f
  8118  0F5F  0B89               	decfsz	9,f
  8119  0F60  2F5D               	goto	u1745
  8120  0F61  0821               	movf	___lwdiv@divisor+1,w
  8121  0F62  0223               	subwf	___lwdiv@dividend+1,w
  8122  0F63  1D03               	skipz
  8123  0F64  2F67               	goto	u1755
  8124  0F65  0820               	movf	___lwdiv@divisor,w
  8125  0F66  0222               	subwf	___lwdiv@dividend,w
  8126  0F67                     u1755:	
  8127  0F67  1C03               	skipc
  8128  0F68  2F6E               	goto	l2291
  8129  0F69  0820               	movf	___lwdiv@divisor,w
  8130  0F6A  02A2               	subwf	___lwdiv@dividend,f
  8131  0F6B  0821               	movf	___lwdiv@divisor+1,w
  8132  0F6C  3BA3               	subwfb	___lwdiv@dividend+1,f
  8133  0F6D  1425               	bsf	___lwdiv@quotient,0
  8134  0F6E                     l2291:	
  8135  0F6E  3001               	movlw	1
  8136  0F6F                     u1765:	
  8137  0F6F  36A1               	lsrf	___lwdiv@divisor+1,f
  8138  0F70  0CA0               	rrf	___lwdiv@divisor,f
  8139  0F71  0B89               	decfsz	9,f
  8140  0F72  2F6F               	goto	u1765
  8141  0F73  3001               	movlw	1
  8142  0F74  02A7               	subwf	___lwdiv@counter,f
  8143  0F75  1D03               	btfss	3,2
  8144  0F76  2F5C               	goto	l2285
  8145  0F77                     l2295:	
  8146  0F77  0826               	movf	___lwdiv@quotient+1,w
  8147  0F78  00A1               	movwf	?___lwdiv+1
  8148  0F79  0825               	movf	___lwdiv@quotient,w
  8149  0F7A  00A0               	movwf	?___lwdiv
  8150  0F7B  0008               	return
  8151  0F7C                     __end_of___lwdiv:	
  8152                           
  8153                           	psect	text23
  8154  0585                     __ptext23:	
  8155 ;; *************** function ___fttol *****************
  8156 ;; Defined at:
  8157 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  f1              3   32[BANK0 ] float 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  lval            4   41[BANK0 ] unsigned long 
  8162 ;;  exp1            1   45[BANK0 ] unsigned char 
  8163 ;;  sign1           1   40[BANK0 ] unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  4   32[BANK0 ] long 
  8166 ;; Registers used:
  8167 ;;		wreg, status,2, status,0
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8173 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8175 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;Total ram usage:       14 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:    3
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;;		_LED7SegDisplayValue
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           
  8189                           ;psect for function ___fttol
  8190  0585                     ___fttol:	
  8191                           
  8192                           ;incstack = 0
  8193                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8194  0585  0020               	movlb	0	; select bank0
  8195  0586  0840               	movf	___fttol@f1,w
  8196  0587  00C4               	movwf	??___fttol
  8197  0588  0841               	movf	___fttol@f1+1,w
  8198  0589  00C5               	movwf	??___fttol+1
  8199  058A  0842               	movf	___fttol@f1+2,w
  8200  058B  00C6               	movwf	??___fttol+2
  8201  058C  1003               	clrc
  8202  058D  0D45               	rlf	??___fttol+1,w
  8203  058E  0D46               	rlf	??___fttol+2,w
  8204  058F  00C7               	movwf	??___fttol+3
  8205  0590  0847               	movf	??___fttol+3,w
  8206  0591  00CD               	movwf	___fttol@exp1
  8207  0592  084D               	movf	___fttol@exp1,w
  8208  0593  1D03               	btfss	3,2
  8209  0594  2D9E               	goto	l2237
  8210  0595  3000               	movlw	0
  8211  0596  00C3               	movwf	?___fttol+3
  8212  0597  3000               	movlw	0
  8213  0598  00C2               	movwf	?___fttol+2
  8214  0599  3000               	movlw	0
  8215  059A  00C1               	movwf	?___fttol+1
  8216  059B  3000               	movlw	0
  8217  059C  00C0               	movwf	?___fttol
  8218  059D  0008               	return
  8219  059E                     l2237:	
  8220  059E  0840               	movf	___fttol@f1,w
  8221  059F  00C4               	movwf	??___fttol
  8222  05A0  0841               	movf	___fttol@f1+1,w
  8223  05A1  00C5               	movwf	??___fttol+1
  8224  05A2  0842               	movf	___fttol@f1+2,w
  8225  05A3  00C6               	movwf	??___fttol+2
  8226  05A4  3017               	movlw	23
  8227  05A5                     u1625:	
  8228  05A5  36C6               	lsrf	??___fttol+2,f
  8229  05A6  0CC5               	rrf	??___fttol+1,f
  8230  05A7  0CC4               	rrf	??___fttol,f
  8231  05A8  0B89               	decfsz	9,f
  8232  05A9  2DA5               	goto	u1625
  8233  05AA  0844               	movf	??___fttol,w
  8234  05AB  00C7               	movwf	??___fttol+3
  8235  05AC  0847               	movf	??___fttol+3,w
  8236  05AD  00C8               	movwf	___fttol@sign1
  8237  05AE  17C1               	bsf	___fttol@f1+1,7
  8238  05AF  30FF               	movlw	255
  8239  05B0  05C0               	andwf	___fttol@f1,f
  8240  05B1  30FF               	movlw	255
  8241  05B2  05C1               	andwf	___fttol@f1+1,f
  8242  05B3  3000               	movlw	0
  8243  05B4  05C2               	andwf	___fttol@f1+2,f
  8244  05B5  0840               	movf	___fttol@f1,w
  8245  05B6  00C9               	movwf	___fttol@lval
  8246  05B7  0841               	movf	___fttol@f1+1,w
  8247  05B8  00CA               	movwf	___fttol@lval+1
  8248  05B9  0842               	movf	___fttol@f1+2,w
  8249  05BA  00CB               	movwf	___fttol@lval+2
  8250  05BB  01CC               	clrf	___fttol@lval+3
  8251  05BC  308E               	movlw	142
  8252  05BD  02CD               	subwf	___fttol@exp1,f
  8253  05BE  1FCD               	btfss	___fttol@exp1,7
  8254  05BF  2DDC               	goto	l2257
  8255  05C0  084D               	movf	___fttol@exp1,w
  8256  05C1  3A80               	xorlw	128
  8257  05C2  3E8F               	addlw	143
  8258  05C3  1803               	skipnc
  8259  05C4  2DCE               	goto	l2255
  8260  05C5  3000               	movlw	0
  8261  05C6  00C3               	movwf	?___fttol+3
  8262  05C7  3000               	movlw	0
  8263  05C8  00C2               	movwf	?___fttol+2
  8264  05C9  3000               	movlw	0
  8265  05CA  00C1               	movwf	?___fttol+1
  8266  05CB  3000               	movlw	0
  8267  05CC  00C0               	movwf	?___fttol
  8268  05CD  0008               	return
  8269  05CE                     l2255:	
  8270  05CE  3001               	movlw	1
  8271  05CF                     u1655:	
  8272  05CF  36CC               	lsrf	___fttol@lval+3,f
  8273  05D0  0CCB               	rrf	___fttol@lval+2,f
  8274  05D1  0CCA               	rrf	___fttol@lval+1,f
  8275  05D2  0CC9               	rrf	___fttol@lval,f
  8276  05D3  0B89               	decfsz	9,f
  8277  05D4  2DCF               	goto	u1655
  8278  05D5  3001               	movlw	1
  8279  05D6  00C4               	movwf	??___fttol
  8280  05D7  0844               	movf	??___fttol,w
  8281  05D8  07CD               	addwf	___fttol@exp1,f
  8282  05D9  1903               	btfsc	3,2
  8283  05DA  2DF5               	goto	l2265
  8284  05DB  2DCE               	goto	l2255
  8285  05DC                     l2257:	
  8286  05DC  3018               	movlw	24
  8287  05DD  024D               	subwf	___fttol@exp1,w
  8288  05DE  1C03               	skipc
  8289  05DF  2DF2               	goto	l981
  8290  05E0  3000               	movlw	0
  8291  05E1  00C3               	movwf	?___fttol+3
  8292  05E2  3000               	movlw	0
  8293  05E3  00C2               	movwf	?___fttol+2
  8294  05E4  3000               	movlw	0
  8295  05E5  00C1               	movwf	?___fttol+1
  8296  05E6  3000               	movlw	0
  8297  05E7  00C0               	movwf	?___fttol
  8298  05E8  0008               	return
  8299  05E9                     l2263:	
  8300  05E9  3001               	movlw	1
  8301  05EA                     u1685:	
  8302  05EA  35C9               	lslf	___fttol@lval,f
  8303  05EB  0DCA               	rlf	___fttol@lval+1,f
  8304  05EC  0DCB               	rlf	___fttol@lval+2,f
  8305  05ED  0DCC               	rlf	___fttol@lval+3,f
  8306  05EE  0B89               	decfsz	9,f
  8307  05EF  2DEA               	goto	u1685
  8308  05F0  3001               	movlw	1
  8309  05F1  02CD               	subwf	___fttol@exp1,f
  8310  05F2                     l981:	
  8311  05F2  084D               	movf	___fttol@exp1,w
  8312  05F3  1D03               	btfss	3,2
  8313  05F4  2DE9               	goto	l2263
  8314  05F5                     l2265:	
  8315  05F5  0848               	movf	___fttol@sign1,w
  8316  05F6  1903               	btfsc	3,2
  8317  05F7  2E03               	goto	l2269
  8318  05F8  09C9               	comf	___fttol@lval,f
  8319  05F9  09CA               	comf	___fttol@lval+1,f
  8320  05FA  09CB               	comf	___fttol@lval+2,f
  8321  05FB  09CC               	comf	___fttol@lval+3,f
  8322  05FC  0AC9               	incf	___fttol@lval,f
  8323  05FD  1903               	skipnz
  8324  05FE  0ACA               	incf	___fttol@lval+1,f
  8325  05FF  1903               	skipnz
  8326  0600  0ACB               	incf	___fttol@lval+2,f
  8327  0601  1903               	skipnz
  8328  0602  0ACC               	incf	___fttol@lval+3,f
  8329  0603                     l2269:	
  8330  0603  084C               	movf	___fttol@lval+3,w
  8331  0604  00C3               	movwf	?___fttol+3
  8332  0605  084B               	movf	___fttol@lval+2,w
  8333  0606  00C2               	movwf	?___fttol+2
  8334  0607  084A               	movf	___fttol@lval+1,w
  8335  0608  00C1               	movwf	?___fttol+1
  8336  0609  0849               	movf	___fttol@lval,w
  8337  060A  00C0               	movwf	?___fttol
  8338  060B  0008               	return
  8339  060C                     __end_of___fttol:	
  8340                           
  8341                           	psect	text24
  8342  0D97                     __ptext24:	
  8343 ;; *************** function _LED7SegBlankDisplay *****************
  8344 ;; Defined at:
  8345 ;;		line 102 in file "LED7Seg.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;		None
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;		None
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  1    wreg      void 
  8352 ;; Registers used:
  8353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;Total ram usage:        0 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    7
  8366 ;; This function calls:
  8367 ;;		_LED7SegShiftOutPulseClock
  8368 ;; This function is called by:
  8369 ;;		_LED7SegLoop
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           
  8374                           ;psect for function _LED7SegBlankDisplay
  8375  0D97                     _LED7SegBlankDisplay:	
  8376                           
  8377                           ;LED7Seg.c: 104: LED7SegShiftOutPulseClock(255);
  8378                           
  8379                           ;incstack = 0
  8380                           ; Regs used in _LED7SegBlankDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8381  0D97  30FF               	movlw	255
  8382  0D98  318E  266A  318D   	fcall	_LED7SegShiftOutPulseClock
  8383                           
  8384                           ;LED7Seg.c: 105: LED7SegShiftOutPulseClock(255);
  8385  0D9B  30FF               	movlw	255
  8386  0D9C  318E  266A         	fcall	_LED7SegShiftOutPulseClock
  8387                           
  8388                           ;LED7Seg.c: 107: do { LATCbits.LATC5 = 1; } while(0);
  8389  0D9E  0020               	movlb	0	; select bank0
  8390  0D9F  1698               	bsf	24,5	;volatile
  8391                           
  8392                           ;LED7Seg.c: 109: do { LATCbits.LATC5 = 0; } while(0);
  8393  0DA0  1298               	bcf	24,5	;volatile
  8394  0DA1  0008               	return
  8395  0DA2                     __end_of_LED7SegBlankDisplay:	
  8396                           
  8397                           	psect	text25
  8398  0E6A                     __ptext25:	
  8399 ;; *************** function _LED7SegShiftOutPulseClock *****************
  8400 ;; Defined at:
  8401 ;;		line 69 in file "LED7Seg.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;  val             1    wreg     unsigned char 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  val             1   18[BANK0 ] unsigned char 
  8406 ;;  i               1   19[BANK0 ] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  1    wreg      void 
  8409 ;; Registers used:
  8410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;Total ram usage:        3 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    6
  8423 ;; This function calls:
  8424 ;;		_LED7SegPinWrite
  8425 ;;		_LED7SegPulseClock
  8426 ;; This function is called by:
  8427 ;;		_LED7SegDisplayValue
  8428 ;;		_LED7SegBlankDisplay
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           
  8433                           ;psect for function _LED7SegShiftOutPulseClock
  8434  0E6A                     _LED7SegShiftOutPulseClock:	
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8438                           ;LED7SegShiftOutPulseClock@val stored from wreg
  8439  0E6A  0020               	movlb	0	; select bank0
  8440  0E6B  00B2               	movwf	LED7SegShiftOutPulseClock@val
  8441                           
  8442                           ;LED7Seg.c: 71: char i;
  8443                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
  8444  0E6C  01B3               	clrf	LED7SegShiftOutPulseClock@i
  8445  0E6D                     L1:	
  8446  0E6D  3008               	movlw	8
  8447  0E6E  0233               	subwf	LED7SegShiftOutPulseClock@i,w
  8448  0E6F  1803               	btfsc	3,0
  8449  0E70  0008               	return
  8450                           
  8451                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
  8452  0E71  3001               	movlw	1
  8453  0E72  00B1               	movwf	??_LED7SegShiftOutPulseClock
  8454  0E73  0A33               	incf	LED7SegShiftOutPulseClock@i,w
  8455  0E74  2E76               	goto	u2754
  8456  0E75                     u2755:	
  8457  0E75  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
  8458  0E76                     u2754:	
  8459  0E76  0B89               	decfsz	9,f
  8460  0E77  2E75               	goto	u2755
  8461  0E78  0831               	movf	??_LED7SegShiftOutPulseClock,w
  8462  0E79  0532               	andwf	LED7SegShiftOutPulseClock@val,w
  8463  0E7A  318D  257A  318E   	fcall	_LED7SegPinWrite
  8464                           
  8465                           ;LED7Seg.c: 77: LED7SegPulseClock();
  8466  0E7D  318D  258C  318E   	fcall	_LED7SegPulseClock
  8467  0E80  3001               	movlw	1
  8468  0E81  0020               	movlb	0	; select bank0
  8469  0E82  00B1               	movwf	??_LED7SegShiftOutPulseClock
  8470  0E83  0831               	movf	??_LED7SegShiftOutPulseClock,w
  8471  0E84  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
  8472  0E85  2E6D               	goto	L1
  8473  0E86                     __end_of_LED7SegShiftOutPulseClock:	
  8474                           
  8475                           	psect	text26
  8476  0D8C                     __ptext26:	
  8477 ;; *************** function _LED7SegPulseClock *****************
  8478 ;; Defined at:
  8479 ;;		line 60 in file "LED7Seg.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;		None
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;		None
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8497 ;;Total ram usage:        0 bytes
  8498 ;; Hardware stack levels used:    1
  8499 ;; Hardware stack levels required when called:    5
  8500 ;; This function calls:
  8501 ;;		_delay
  8502 ;; This function is called by:
  8503 ;;		_LED7SegShiftOutPulseClock
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           
  8508                           ;psect for function _LED7SegPulseClock
  8509  0D8C                     _LED7SegPulseClock:	
  8510                           
  8511                           ;incstack = 0
  8512                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8513                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
  8514  0D8C  0020               	movlb	0	; select bank0
  8515  0D8D  1718               	bsf	24,6	;volatile
  8516                           
  8517                           ;LED7Seg.c: 64: delay(1);
  8518  0D8E  3001               	movlw	1
  8519  0D8F  00A6               	movwf	delay@delaytime
  8520  0D90  3000               	movlw	0
  8521  0D91  00A7               	movwf	delay@delaytime+1
  8522  0D92  3187  279E         	fcall	_delay
  8523                           
  8524                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
  8525  0D94  0020               	movlb	0	; select bank0
  8526  0D95  1318               	bcf	24,6	;volatile
  8527  0D96  0008               	return
  8528  0D97                     __end_of_LED7SegPulseClock:	
  8529                           
  8530                           	psect	text27
  8531  079E                     __ptext27:	
  8532 ;; *************** function _delay *****************
  8533 ;; Defined at:
  8534 ;;		line 95 in file "main.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;  delaytime       2    6[BANK0 ] int 
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;  counter         4   13[BANK0 ] long 
  8539 ;;  adjustedDela    4    9[BANK0 ] long 
  8540 ;; Return value:  Size  Location     Type
  8541 ;;                  1    wreg      void 
  8542 ;; Registers used:
  8543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8544 ;; Tracked objects:
  8545 ;;		On entry : 0/0
  8546 ;;		On exit  : 0/0
  8547 ;;		Unchanged: 0/0
  8548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8549 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8550 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8551 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8552 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;Total ram usage:       11 bytes
  8554 ;; Hardware stack levels used:    1
  8555 ;; Hardware stack levels required when called:    4
  8556 ;; This function calls:
  8557 ;;		___wmul
  8558 ;; This function is called by:
  8559 ;;		_blinkyLoop
  8560 ;;		_main
  8561 ;;		_LED7SegPulseClock
  8562 ;;		_LED7SegLoop
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           
  8567                           ;psect for function _delay
  8568  079E                     _delay:	
  8569                           
  8570                           ;main.c: 96: long counter = 0;
  8571                           
  8572                           ;incstack = 0
  8573                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8574  079E  3000               	movlw	0
  8575  079F  0020               	movlb	0	; select bank0
  8576  07A0  00B0               	movwf	delay@counter+3
  8577  07A1  3000               	movlw	0
  8578  07A2  00AF               	movwf	delay@counter+2
  8579  07A3  3000               	movlw	0
  8580  07A4  00AE               	movwf	delay@counter+1
  8581  07A5  3000               	movlw	0
  8582  07A6  00AD               	movwf	delay@counter
  8583                           
  8584                           ;main.c: 97: long adjustedDelaytime=delaytime*cMstrClkAdjust;
  8585  07A7  0827               	movf	delay@delaytime+1,w
  8586  07A8  00A1               	movwf	___wmul@multiplier+1
  8587  07A9  0826               	movf	delay@delaytime,w
  8588  07AA  00A0               	movwf	___wmul@multiplier
  8589  07AB  300E               	movlw	low (_cMstrClkAdjust| (0+32768))
  8590  07AC  0084               	movwf	4
  8591  07AD  3090               	movlw	high (_cMstrClkAdjust| (0+32768))
  8592  07AE  0085               	movwf	5
  8593  07AF  3F00               	moviw [0]fsr0
  8594  07B0  00A2               	movwf	___wmul@multiplicand
  8595  07B1  3F01               	moviw [1]fsr0
  8596  07B2  00A3               	movwf	___wmul@multiplicand+1
  8597  07B3  318E  264E  3187   	fcall	___wmul
  8598  07B6  0020               	movlb	0	; select bank0
  8599  07B7  0820               	movf	?___wmul,w
  8600  07B8  00A9               	movwf	delay@adjustedDelaytime
  8601  07B9  0821               	movf	?___wmul+1,w
  8602  07BA  00AA               	movwf	delay@adjustedDelaytime+1
  8603  07BB  0D89               	rlf	9,f
  8604  07BC  3B89               	subwfb	9,f
  8605  07BD  0989               	comf	9,f
  8606  07BE  00AB               	movwf	delay@adjustedDelaytime+2
  8607  07BF  00AC               	movwf	delay@adjustedDelaytime+3
  8608                           
  8609                           ;main.c: 98: if (0<delaytime)
  8610  07C0  0827               	movf	delay@delaytime+1,w
  8611  07C1  3A80               	xorlw	128
  8612  07C2  00A8               	movwf	??_delay
  8613  07C3  3080               	movlw	128
  8614  07C4  0228               	subwf	??_delay,w
  8615  07C5  1D03               	skipz
  8616  07C6  2FC9               	goto	u2715
  8617  07C7  3001               	movlw	1
  8618  07C8  0226               	subwf	delay@delaytime,w
  8619  07C9                     u2715:	
  8620  07C9  1C03               	skipc
  8621  07CA  0008               	return
  8622                           
  8623                           ;main.c: 99: for (counter = 0; counter<adjustedDelaytime; counter++);
  8624  07CB  3000               	movlw	0
  8625  07CC  0020               	movlb	0	; select bank0
  8626  07CD  00B0               	movwf	delay@counter+3
  8627  07CE  3000               	movlw	0
  8628  07CF  00AF               	movwf	delay@counter+2
  8629  07D0  3000               	movlw	0
  8630  07D1  00AE               	movwf	delay@counter+1
  8631  07D2  3000               	movlw	0
  8632  07D3  00AD               	movwf	delay@counter
  8633  07D4                     l450:	
  8634  07D4  0830               	movf	delay@counter+3,w
  8635  07D5  3A80               	xorlw	128
  8636  07D6  00A8               	movwf	??_delay
  8637  07D7  082C               	movf	delay@adjustedDelaytime+3,w
  8638  07D8  3A80               	xorlw	128
  8639  07D9  0228               	subwf	??_delay,w
  8640  07DA  1D03               	skipz
  8641  07DB  2FE6               	goto	u2723
  8642  07DC  082B               	movf	delay@adjustedDelaytime+2,w
  8643  07DD  022F               	subwf	delay@counter+2,w
  8644  07DE  1D03               	skipz
  8645  07DF  2FE6               	goto	u2723
  8646  07E0  082A               	movf	delay@adjustedDelaytime+1,w
  8647  07E1  022E               	subwf	delay@counter+1,w
  8648  07E2  1D03               	skipz
  8649  07E3  2FE6               	goto	u2723
  8650  07E4  0829               	movf	delay@adjustedDelaytime,w
  8651  07E5  022D               	subwf	delay@counter,w
  8652  07E6                     u2723:	
  8653  07E6  1803               	btfsc	3,0
  8654  07E7  0008               	return
  8655  07E8  3001               	movlw	1
  8656  07E9  07AD               	addwf	delay@counter,f
  8657  07EA  3000               	movlw	0
  8658  07EB  3DAE               	addwfc	delay@counter+1,f
  8659  07EC  3000               	movlw	0
  8660  07ED  3DAF               	addwfc	delay@counter+2,f
  8661  07EE  3000               	movlw	0
  8662  07EF  3DB0               	addwfc	delay@counter+3,f
  8663  07F0  2FD4               	goto	l450
  8664  07F1                     __end_of_delay:	
  8665                           
  8666                           	psect	text28
  8667  0E4E                     __ptext28:	
  8668 ;; *************** function ___wmul *****************
  8669 ;; Defined at:
  8670 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8673 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;  product         2    4[BANK0 ] unsigned int 
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  2    0[BANK0 ] unsigned int 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8685 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8689 ;;Total ram usage:        6 bytes
  8690 ;; Hardware stack levels used:    1
  8691 ;; Hardware stack levels required when called:    3
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_delay
  8696 ;;		_blinkyLoop
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           
  8701                           ;psect for function ___wmul
  8702  0E4E                     ___wmul:	
  8703                           
  8704                           ;incstack = 0
  8705                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8706  0E4E  0020               	movlb	0	; select bank0
  8707  0E4F  01A4               	clrf	___wmul@product
  8708  0E50  01A5               	clrf	___wmul@product+1
  8709  0E51                     l3061:	
  8710  0E51  1C20               	btfss	___wmul@multiplier,0
  8711  0E52  2E57               	goto	l729
  8712  0E53  0822               	movf	___wmul@multiplicand,w
  8713  0E54  07A4               	addwf	___wmul@product,f
  8714  0E55  0823               	movf	___wmul@multiplicand+1,w
  8715  0E56  3DA5               	addwfc	___wmul@product+1,f
  8716  0E57                     l729:	
  8717  0E57  3001               	movlw	1
  8718  0E58                     u2685:	
  8719  0E58  35A2               	lslf	___wmul@multiplicand,f
  8720  0E59  0DA3               	rlf	___wmul@multiplicand+1,f
  8721  0E5A  0B89               	decfsz	9,f
  8722  0E5B  2E58               	goto	u2685
  8723  0E5C  3001               	movlw	1
  8724  0E5D                     u2695:	
  8725  0E5D  36A1               	lsrf	___wmul@multiplier+1,f
  8726  0E5E  0CA0               	rrf	___wmul@multiplier,f
  8727  0E5F  0B89               	decfsz	9,f
  8728  0E60  2E5D               	goto	u2695
  8729  0E61  0820               	movf	___wmul@multiplier,w
  8730  0E62  0421               	iorwf	___wmul@multiplier+1,w
  8731  0E63  1D03               	btfss	3,2
  8732  0E64  2E51               	goto	l3061
  8733  0E65  0825               	movf	___wmul@product+1,w
  8734  0E66  00A1               	movwf	?___wmul+1
  8735  0E67  0824               	movf	___wmul@product,w
  8736  0E68  00A0               	movwf	?___wmul
  8737  0E69  0008               	return
  8738  0E6A                     __end_of___wmul:	
  8739                           
  8740                           	psect	text29
  8741  0D7A                     __ptext29:	
  8742 ;; *************** function _LED7SegPinWrite *****************
  8743 ;; Defined at:
  8744 ;;		line 48 in file "LED7Seg.c"
  8745 ;; Parameters:    Size  Location     Type
  8746 ;;  val             1    wreg     unsigned char 
  8747 ;; Auto vars:     Size  Location     Type
  8748 ;;  val             1    0[BANK0 ] unsigned char 
  8749 ;; Return value:  Size  Location     Type
  8750 ;;                  1    wreg      void 
  8751 ;; Registers used:
  8752 ;;		wreg, status,2, status,0
  8753 ;; Tracked objects:
  8754 ;;		On entry : 0/0
  8755 ;;		On exit  : 0/0
  8756 ;;		Unchanged: 0/0
  8757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;Total ram usage:        1 bytes
  8763 ;; Hardware stack levels used:    1
  8764 ;; Hardware stack levels required when called:    3
  8765 ;; This function calls:
  8766 ;;		Nothing
  8767 ;; This function is called by:
  8768 ;;		_LED7SegShiftOutPulseClock
  8769 ;; This function uses a non-reentrant model
  8770 ;;
  8771                           
  8772                           
  8773                           ;psect for function _LED7SegPinWrite
  8774  0D7A                     _LED7SegPinWrite:	
  8775                           
  8776                           ;incstack = 0
  8777                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
  8778                           ;LED7SegPinWrite@val stored from wreg
  8779  0D7A  0020               	movlb	0	; select bank0
  8780  0D7B  00A0               	movwf	LED7SegPinWrite@val
  8781                           
  8782                           ;LED7Seg.c: 50: if (val){
  8783  0D7C  0820               	movf	LED7SegPinWrite@val,w
  8784  0D7D  1903               	btfsc	3,2
  8785  0D7E  2D81               	goto	l605
  8786                           
  8787                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
  8788  0D7F  1798               	bsf	24,7	;volatile
  8789                           
  8790                           ;LED7Seg.c: 53: } else {
  8791  0D80  0008               	return
  8792  0D81                     l605:	
  8793                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
  8794                           
  8795  0D81  1398               	bcf	24,7	;volatile
  8796  0D82  0008               	return
  8797  0D83                     __end_of_LED7SegPinWrite:	
  8798                           
  8799                           	psect	text30
  8800  0DC0                     __ptext30:	
  8801 ;; *************** function _ADCC_GetSingleConversion *****************
  8802 ;; Defined at:
  8803 ;;		line 132 in file "mcc_generated_files/adcc.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  channel         1    wreg     enum E14259
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;  channel         1    3[BANK0 ] enum E14259
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  2    0[BANK0 ] unsigned int 
  8810 ;; Registers used:
  8811 ;;		wreg
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8817 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;Total ram usage:        4 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    3
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_main
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           
  8832                           ;psect for function _ADCC_GetSingleConversion
  8833  0DC0                     _ADCC_GetSingleConversion:	
  8834                           
  8835                           ;incstack = 0
  8836                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  8837                           ;ADCC_GetSingleConversion@channel stored from wreg
  8838  0DC0  0020               	movlb	0	; select bank0
  8839  0DC1  00A3               	movwf	ADCC_GetSingleConversion@channel
  8840                           
  8841                           ;adcc.c: 135: ADPCH = channel;
  8842  0DC2  0823               	movf	ADCC_GetSingleConversion@channel,w
  8843  0DC3  0021               	movlb	1	; select bank1
  8844  0DC4  009E               	movwf	30	;volatile
  8845                           
  8846                           ;adcc.c: 138: ADCON0bits.ADON = 1;
  8847  0DC5  1793               	bsf	19,7	;volatile
  8848                           
  8849                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
  8850  0DC6  1313               	bcf	19,6	;volatile
  8851                           
  8852                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
  8853  0DC7  1413               	bsf	19,0	;volatile
  8854                           
  8855                           ;adcc.c: 147: __nop();
  8856  0DC8  0000               	nop
  8857  0DC9                     l163:	
  8858                           ;adcc.c: 151: {
  8859                           
  8860                           ;adcc.c: 150: while (ADCON0bits.ADGO)
  8861                           
  8862  0DC9  0021               	movlb	1	; select bank1
  8863  0DCA  1813               	btfsc	19,0	;volatile
  8864  0DCB  2DC9               	goto	l163
  8865                           
  8866                           ;adcc.c: 152: }
  8867                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8868  0DCC  080D               	movf	13,w	;volatile
  8869  0DCD  0020               	movlb	0	; select bank0
  8870  0DCE  00A1               	movwf	?_ADCC_GetSingleConversion+1
  8871  0DCF  0021               	movlb	1	; select bank1
  8872  0DD0  080C               	movf	12,w	;volatile
  8873  0DD1  0020               	movlb	0	; select bank0
  8874  0DD2  00A0               	movwf	?_ADCC_GetSingleConversion
  8875  0DD3  0008               	return
  8876  0DD4                     __end_of_ADCC_GetSingleConversion:	
  8877                           
  8878                           	psect	intentry
  8879  0004                     __pintentry:	
  8880 ;; *************** function _INTERRUPT_InterruptManager *****************
  8881 ;; Defined at:
  8882 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;		None
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;		None
  8887 ;; Return value:  Size  Location     Type
  8888 ;;                  1    wreg      void 
  8889 ;; Registers used:
  8890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8891 ;; Tracked objects:
  8892 ;;		On entry : 0/0
  8893 ;;		On exit  : 0/0
  8894 ;;		Unchanged: 0/0
  8895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;Total ram usage:        1 bytes
  8901 ;; Hardware stack levels used:    1
  8902 ;; Hardware stack levels required when called:    2
  8903 ;; This function calls:
  8904 ;;		_I2C1_BusCollisionISR
  8905 ;;		_I2C1_ISR
  8906 ;; This function is called by:
  8907 ;;		Interrupt level 1
  8908 ;; This function uses a non-reentrant model
  8909 ;;
  8910                           
  8911  0004                     _INTERRUPT_InterruptManager:	
  8912                           
  8913                           ;incstack = 0
  8914  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8915                           
  8916                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8917  0005  3180               	pagesel	$
  8918  0006  0020               	movlb	0	; select bank0
  8919  0007  087F               	movf	127,w
  8920  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  8921                           
  8922                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
  8923  0009  1F0B               	btfss	11,6	;volatile
  8924  000A  2813               	goto	i1l394
  8925  000B  002E               	movlb	14	; select bank14
  8926  000C  1899               	btfsc	25,1	;volatile
  8927  000D  1C8F               	btfss	15,1	;volatile
  8928  000E  2813               	goto	i1l394
  8929                           
  8930                           ;interrupt_manager.c: 55: {
  8931                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
  8932  000F  3187  27FE  3180   	fcall	_I2C1_BusCollisionISR
  8933                           
  8934                           ;interrupt_manager.c: 57: }
  8935  0012  281B               	goto	i1l398
  8936  0013                     i1l394:	
  8937                           
  8938                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
  8939  0013  1F0B               	btfss	11,6	;volatile
  8940  0014  281B               	goto	i1l398
  8941  0015  002E               	movlb	14	; select bank14
  8942  0016  1819               	btfsc	25,0	;volatile
  8943  0017  1C0F               	btfss	15,0	;volatile
  8944  0018  281B               	goto	i1l398
  8945                           
  8946                           ;interrupt_manager.c: 59: {
  8947                           ;interrupt_manager.c: 60: I2C1_ISR();
  8948  0019  3180  2048         	fcall	_I2C1_ISR
  8949  001B                     i1l398:	
  8950                           ;interrupt_manager.c: 62: else
  8951                           ;interrupt_manager.c: 63: {
  8952                           
  8953                           ;interrupt_manager.c: 61: }
  8954                           
  8955  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  8956  001C  0020               	movlb	0	; select bank0
  8957  001D  00FF               	movwf	127
  8958  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8959  001F  0009               	retfie
  8960  0020                     __end_of_INTERRUPT_InterruptManager:	
  8961                           
  8962                           	psect	text32
  8963  0048                     __ptext32:	
  8964 ;; *************** function _I2C1_ISR *****************
  8965 ;; Defined at:
  8966 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;		None
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;		None
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1    wreg      void 
  8973 ;; Registers used:
  8974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8975 ;; Tracked objects:
  8976 ;;		On entry : 0/0
  8977 ;;		On exit  : 0/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8982 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8983 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8984 ;;Total ram usage:        4 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:    1
  8987 ;; This function calls:
  8988 ;;		_I2C1_FunctionComplete
  8989 ;;		_I2C1_Stop
  8990 ;; This function is called by:
  8991 ;;		_INTERRUPT_InterruptManager
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           
  8996                           ;psect for function _I2C1_ISR
  8997  0048                     _I2C1_ISR:	
  8998                           
  8999                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  9000                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  9001                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  9002                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  9003                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
  9004                           
  9005                           ;incstack = 0
  9006                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9007  0048  002E               	movlb	14	; select bank14
  9008  0049  100F               	bcf	15,0	;volatile
  9009                           
  9010                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  9011  004A  0023               	movlb	3	; select bank3
  9012  004B  1F90               	btfss	16,7	;volatile
  9013  004C  2977               	goto	i1l2607
  9014                           
  9015                           ;i2c1.c: 246: {
  9016                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  9017  004D  1390               	bcf	16,7	;volatile
  9018                           
  9019                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  9020  004E  0020               	movlb	0	; select bank0
  9021  004F  01EB               	clrf	_i2c1_state
  9022                           
  9023                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  9024  0050  0872               	movf	_p_i2c1_current,w
  9025  0051  3E02               	addlw	2
  9026  0052  0086               	movwf	6
  9027  0053  0187               	clrf	7
  9028  0054  0801               	movf	1,w
  9029  0055  0086               	movwf	6
  9030  0056  0187               	clrf	7
  9031  0057  0181               	clrf	1
  9032  0058  0A81               	incf	1,f
  9033                           
  9034                           ;i2c1.c: 253: p_i2c1_current = (0);
  9035  0059  01F2               	clrf	_p_i2c1_current
  9036                           
  9037                           ;i2c1.c: 255: return;
  9038  005A  0008               	return
  9039  005B                     i1l292:	
  9040                           ;i2c1.c: 260: {
  9041                           ;i2c1.c: 261: case S_MASTER_IDLE:
  9042                           
  9043                           ;i2c1.c: 256: }
  9044                           ;i2c1.c: 259: switch(i2c1_state)
  9045                           
  9046                           
  9047                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  9048  005B  18E4               	btfsc	_i2c1_object+2,1
  9049  005C  0008               	return
  9050                           
  9051                           ;i2c1.c: 264: {
  9052                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  9053  005D  0863               	movf	low ((_i2c1_object| 0+1)),w
  9054  005E  00F9               	movwf	??_I2C1_ISR
  9055  005F  0879               	movf	??_I2C1_ISR,w
  9056  0060  00F2               	movwf	_p_i2c1_current
  9057                           
  9058                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  9059  0061  0863               	movf	low ((_i2c1_object| 0+1)),w
  9060  0062  0086               	movwf	6
  9061  0063  0187               	clrf	7
  9062  0064  0801               	movf	1,w
  9063  0065  00F9               	movwf	??_I2C1_ISR
  9064  0066  0879               	movf	??_I2C1_ISR,w
  9065  0067  00F4               	movwf	_i2c1_trb_count
  9066                           
  9067                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  9068  0068  0863               	movf	low ((_i2c1_object| 0+1)),w
  9069  0069  0086               	movwf	6
  9070  006A  0187               	clrf	7
  9071  006B  3F41               	moviw [1]fsr1
  9072  006C  00F3               	movwf	_p_i2c1_trb_current
  9073                           
  9074                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  9075  006D  3003               	movlw	3
  9076  006E  00F9               	movwf	??_I2C1_ISR
  9077  006F  0879               	movf	??_I2C1_ISR,w
  9078  0070  07E3               	addwf	low ((_i2c1_object| 0+1)),f
  9079                           
  9080                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  9081  0071  0863               	movf	low ((_i2c1_object| 0+1)),w
  9082  0072  3A6F               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  9083  0073  1D03               	skipz
  9084  0074  2879               	goto	i1l2495
  9085                           
  9086                           ;i2c1.c: 274: {
  9087                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  9088  0075  306C               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9089  0076  00F9               	movwf	??_I2C1_ISR
  9090  0077  0879               	movf	??_I2C1_ISR,w
  9091  0078  00E3               	movwf	low ((_i2c1_object| 0+1))
  9092  0079                     i1l2495:	
  9093                           
  9094                           ;i2c1.c: 277: }
  9095                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  9096  0079  1064               	bcf	_i2c1_object+2,0
  9097                           
  9098                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  9099  007A  0863               	movf	low ((_i2c1_object| 0+1)),w
  9100  007B  0662               	xorwf	_i2c1_object,w
  9101  007C  1903               	btfsc	3,2
  9102                           
  9103                           ;i2c1.c: 285: {
  9104                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  9105  007D  14E4               	bsf	_i2c1_object+2,1
  9106                           
  9107                           ;i2c1.c: 288: }
  9108                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  9109  007E  0023               	movlb	3	; select bank3
  9110  007F  1411               	bsf	17,0	;volatile
  9111                           
  9112                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  9113  0080  3002               	movlw	2
  9114  0081  00F9               	movwf	??_I2C1_ISR
  9115  0082  0879               	movf	??_I2C1_ISR,w
  9116  0083  0020               	movlb	0	; select bank0
  9117  0084  00EB               	movwf	_i2c1_state
  9118                           
  9119                           ;i2c1.c: 295: }
  9120                           ;i2c1.c: 297: break;
  9121  0085  0008               	return
  9122  0086                     i1l297:	
  9123                           ;i2c1.c: 299: case S_MASTER_RESTART:
  9124                           
  9125                           
  9126                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  9127  0086  0023               	movlb	3	; select bank3
  9128  0087  1491               	bsf	17,1	;volatile
  9129                           
  9130                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  9131  0088  3002               	movlw	2
  9132  0089  00F9               	movwf	??_I2C1_ISR
  9133  008A  0879               	movf	??_I2C1_ISR,w
  9134  008B  0020               	movlb	0	; select bank0
  9135  008C  00EB               	movwf	_i2c1_state
  9136                           
  9137                           ;i2c1.c: 309: break;
  9138  008D  0008               	return
  9139  008E                     i1l298:	
  9140                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  9141                           
  9142                           
  9143                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  9144  008E  0023               	movlb	3	; select bank3
  9145  008F  1F11               	btfss	17,6	;volatile
  9146  0090  289A               	goto	i1l2507
  9147                           
  9148                           ;i2c1.c: 314: {
  9149                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  9150  0091  3001               	movlw	1
  9151  0092  00F9               	movwf	??_I2C1_ISR
  9152  0093  0879               	movf	??_I2C1_ISR,w
  9153  0094  0020               	movlb	0	; select bank0
  9154  0095  07E6               	addwf	_i2c1_object+4,f
  9155                           
  9156                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9157  0096  3004               	movlw	4
  9158  0097  318E  2600         	fcall	_I2C1_Stop
  9159                           
  9160                           ;i2c1.c: 317: }
  9161  0099  0008               	return
  9162  009A                     i1l2507:	
  9163                           
  9164                           ;i2c1.c: 318: else
  9165                           ;i2c1.c: 319: {
  9166                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  9167  009A  0876               	movf	I2C1_ISR@i2c_address+1,w
  9168  009B  00FA               	movwf	??_I2C1_ISR+1
  9169  009C  0875               	movf	I2C1_ISR@i2c_address,w
  9170  009D  00F9               	movwf	??_I2C1_ISR
  9171  009E  36FA               	lsrf	??_I2C1_ISR+1,f
  9172  009F  0CF9               	rrf	??_I2C1_ISR,f
  9173  00A0  0879               	movf	??_I2C1_ISR,w
  9174  00A1  0023               	movlb	3	; select bank3
  9175  00A2  008C               	movwf	12	;volatile
  9176                           
  9177                           ;i2c1.c: 324: if(i2c_address & 0x01)
  9178  00A3  1C75               	btfss	I2C1_ISR@i2c_address,0
  9179  00A4  28AB               	goto	i1l2513
  9180                           
  9181                           ;i2c1.c: 325: {
  9182                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  9183  00A5  300B               	movlw	11
  9184  00A6  00F9               	movwf	??_I2C1_ISR
  9185  00A7  0879               	movf	??_I2C1_ISR,w
  9186  00A8  0020               	movlb	0	; select bank0
  9187  00A9  00EB               	movwf	_i2c1_state
  9188                           
  9189                           ;i2c1.c: 329: }
  9190  00AA  0008               	return
  9191  00AB                     i1l2513:	
  9192                           
  9193                           ;i2c1.c: 330: else
  9194                           ;i2c1.c: 331: {
  9195                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  9196  00AB  3003               	movlw	3
  9197  00AC  00F9               	movwf	??_I2C1_ISR
  9198  00AD  0879               	movf	??_I2C1_ISR,w
  9199  00AE  0020               	movlb	0	; select bank0
  9200  00AF  00EB               	movwf	_i2c1_state
  9201                           
  9202                           ;i2c1.c: 334: }
  9203                           ;i2c1.c: 335: }
  9204                           ;i2c1.c: 337: break;
  9205  00B0  0008               	return
  9206  00B1                     i1l303:	
  9207                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  9208                           
  9209                           
  9210                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  9211  00B1  0023               	movlb	3	; select bank3
  9212  00B2  1F11               	btfss	17,6	;volatile
  9213  00B3  28BD               	goto	i1l304
  9214                           
  9215                           ;i2c1.c: 342: {
  9216                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  9217  00B4  3001               	movlw	1
  9218  00B5  00F9               	movwf	??_I2C1_ISR
  9219  00B6  0879               	movf	??_I2C1_ISR,w
  9220  00B7  0020               	movlb	0	; select bank0
  9221  00B8  07E6               	addwf	_i2c1_object+4,f
  9222                           
  9223                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9224  00B9  3004               	movlw	4
  9225  00BA  318E  2600         	fcall	_I2C1_Stop
  9226                           
  9227                           ;i2c1.c: 345: }
  9228  00BC  0008               	return
  9229  00BD                     i1l304:	
  9230                           
  9231                           ;i2c1.c: 346: else
  9232                           ;i2c1.c: 347: {
  9233                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  9234  00BD  1491               	bsf	17,1	;volatile
  9235                           
  9236                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  9237  00BE  0876               	movf	I2C1_ISR@i2c_address+1,w
  9238  00BF  00FA               	movwf	??_I2C1_ISR+1
  9239  00C0  0875               	movf	I2C1_ISR@i2c_address,w
  9240  00C1  00F9               	movwf	??_I2C1_ISR
  9241  00C2  087A               	movf	??_I2C1_ISR+1,w
  9242  00C3  00F9               	movwf	??_I2C1_ISR
  9243  00C4  01FA               	clrf	??_I2C1_ISR+1
  9244  00C5  3006               	movlw	6
  9245  00C6  0579               	andwf	??_I2C1_ISR,w
  9246  00C7  00FB               	movwf	??_I2C1_ISR+2
  9247  00C8  3000               	movlw	0
  9248  00C9  057A               	andwf	??_I2C1_ISR+1,w
  9249  00CA  00FC               	movwf	??_I2C1_ISR+3
  9250  00CB  30F0               	movlw	240
  9251  00CC  047B               	iorwf	??_I2C1_ISR+2,w
  9252  00CD  00F5               	movwf	I2C1_ISR@i2c_address
  9253  00CE  3000               	movlw	0
  9254  00CF  047C               	iorwf	??_I2C1_ISR+3,w
  9255  00D0  00F6               	movwf	I2C1_ISR@i2c_address+1
  9256                           
  9257                           ;i2c1.c: 357: i2c_address |= 0x0001;
  9258  00D1  1475               	bsf	I2C1_ISR@i2c_address,0
  9259                           
  9260                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  9261  00D2  0020               	movlb	0	; select bank0
  9262  00D3  01EA               	clrf	I2C1_ISR@i2c_10bit_address_restart
  9263  00D4  0AEA               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  9264                           
  9265                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  9266  00D5  3002               	movlw	2
  9267  00D6  00F9               	movwf	??_I2C1_ISR
  9268  00D7  0879               	movf	??_I2C1_ISR,w
  9269  00D8  00EB               	movwf	_i2c1_state
  9270                           
  9271                           ;i2c1.c: 364: }
  9272                           ;i2c1.c: 366: break;
  9273  00D9  0008               	return
  9274  00DA                     i1l2527:	
  9275                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  9276                           
  9277                           
  9278                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  9279  00DA  036A               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  9280  00DB  1903               	btfsc	3,2
  9281  00DC  28EE               	goto	i1l2547
  9282                           
  9283                           ;i2c1.c: 382: {
  9284                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  9285  00DD  0873               	movf	_p_i2c1_trb_current,w
  9286  00DE  0086               	movwf	6
  9287  00DF  0187               	clrf	7
  9288  00E0  3F40               	moviw [0]fsr1
  9289  00E1  00F5               	movwf	I2C1_ISR@i2c_address
  9290  00E2  3F41               	moviw [1]fsr1
  9291  00E3  00F6               	movwf	I2C1_ISR@i2c_address+1
  9292                           
  9293                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  9294  00E4  0873               	movf	_p_i2c1_trb_current,w
  9295  00E5  0086               	movwf	6
  9296  00E6  0187               	clrf	7
  9297  00E7  3F43               	moviw [3]fsr1
  9298  00E8  00F1               	movwf	I2C1_ISR@pi2c_buf_ptr
  9299                           
  9300                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  9301  00E9  0873               	movf	_p_i2c1_trb_current,w
  9302  00EA  0086               	movwf	6
  9303  00EB  0187               	clrf	7
  9304  00EC  3F42               	moviw [2]fsr1
  9305  00ED  00F0               	movwf	I2C1_ISR@i2c_bytes_left
  9306  00EE                     i1l2547:	
  9307                           ;i2c1.c: 407: }
  9308                           ;i2c1.c: 408: }
  9309                           
  9310                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  9311                           
  9312                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  9313                           
  9314                           ;i2c1.c: 400: else
  9315                           ;i2c1.c: 401: {
  9316                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  9317                           
  9318                           ;i2c1.c: 399: }
  9319                           
  9320                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  9321                           
  9322                           ;i2c1.c: 393: {
  9323                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  9324                           
  9325                           ;i2c1.c: 391: {
  9326                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  9327                           
  9328                           ;i2c1.c: 387: }
  9329                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  9330                           
  9331                           
  9332                           ;i2c1.c: 409: else
  9333                           ;i2c1.c: 410: {
  9334                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  9335  00EE  0875               	movf	I2C1_ISR@i2c_address,w
  9336  00EF  0023               	movlb	3	; select bank3
  9337  00F0  008C               	movwf	12	;volatile
  9338                           
  9339                           ;i2c1.c: 413: if(i2c_address & 0x01)
  9340  00F1  1C75               	btfss	I2C1_ISR@i2c_address,0
  9341  00F2  28F9               	goto	i1l2553
  9342                           
  9343                           ;i2c1.c: 414: {
  9344                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  9345  00F3  3005               	movlw	5
  9346  00F4  00F9               	movwf	??_I2C1_ISR
  9347  00F5  0879               	movf	??_I2C1_ISR,w
  9348  00F6  0020               	movlb	0	; select bank0
  9349  00F7  00EB               	movwf	_i2c1_state
  9350                           
  9351                           ;i2c1.c: 417: }
  9352  00F8  0008               	return
  9353  00F9                     i1l2553:	
  9354                           
  9355                           ;i2c1.c: 418: else
  9356                           ;i2c1.c: 419: {
  9357                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  9358  00F9  3003               	movlw	3
  9359  00FA  00F9               	movwf	??_I2C1_ISR
  9360  00FB  0879               	movf	??_I2C1_ISR,w
  9361  00FC  0020               	movlb	0	; select bank0
  9362  00FD  00EB               	movwf	_i2c1_state
  9363                           
  9364                           ;i2c1.c: 422: }
  9365                           ;i2c1.c: 423: }
  9366                           ;i2c1.c: 424: break;
  9367  00FE  0008               	return
  9368  00FF                     i1l314:	
  9369                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  9370                           
  9371                           
  9372                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  9373  00FF  0023               	movlb	3	; select bank3
  9374  0100  1F11               	btfss	17,6	;volatile
  9375  0101  290D               	goto	i1l2561
  9376                           
  9377                           ;i2c1.c: 430: {
  9378                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  9379  0102  3001               	movlw	1
  9380  0103  00F9               	movwf	??_I2C1_ISR
  9381  0104  0879               	movf	??_I2C1_ISR,w
  9382  0105  0020               	movlb	0	; select bank0
  9383  0106  07E6               	addwf	_i2c1_object+4,f
  9384                           
  9385                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  9386  0107  0023               	movlb	3	; select bank3
  9387  0108  1311               	bcf	17,6	;volatile
  9388                           
  9389                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  9390  0109  3005               	movlw	5
  9391  010A  318E  2600         	fcall	_I2C1_Stop
  9392                           
  9393                           ;i2c1.c: 440: }
  9394  010C  0008               	return
  9395  010D                     i1l2561:	
  9396                           
  9397                           ;i2c1.c: 441: else
  9398                           ;i2c1.c: 442: {
  9399                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  9400  010D  3001               	movlw	1
  9401  010E  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
  9402  010F  0A70               	incf	I2C1_ISR@i2c_bytes_left,w
  9403  0110  1D03               	btfss	3,2
  9404  0111  2926               	goto	i1l2569
  9405                           
  9406                           ;i2c1.c: 445: {
  9407                           ;i2c1.c: 449: p_i2c1_trb_current++;
  9408  0112  3004               	movlw	4
  9409  0113  00F9               	movwf	??_I2C1_ISR
  9410  0114  0879               	movf	??_I2C1_ISR,w
  9411  0115  07F3               	addwf	_p_i2c1_trb_current,f
  9412                           
  9413                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  9414  0116  3001               	movlw	1
  9415  0117  02F4               	subwf	_i2c1_trb_count,f
  9416  0118  1D03               	btfss	3,2
  9417  0119  291E               	goto	i1l318
  9418                           
  9419                           ;i2c1.c: 453: {
  9420                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9421  011A  3000               	movlw	0
  9422  011B  318E  2600         	fcall	_I2C1_Stop
  9423                           
  9424                           ;i2c1.c: 455: }
  9425  011D  0008               	return
  9426  011E                     i1l318:	
  9427                           
  9428                           ;i2c1.c: 456: else
  9429                           ;i2c1.c: 457: {
  9430                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  9431  011E  0023               	movlb	3	; select bank3
  9432  011F  1491               	bsf	17,1	;volatile
  9433                           
  9434                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  9435  0120  3002               	movlw	2
  9436  0121  00F9               	movwf	??_I2C1_ISR
  9437  0122  0879               	movf	??_I2C1_ISR,w
  9438  0123  0020               	movlb	0	; select bank0
  9439  0124  00EB               	movwf	_i2c1_state
  9440                           
  9441                           ;i2c1.c: 469: }
  9442                           ;i2c1.c: 470: }
  9443  0125  0008               	return
  9444  0126                     i1l2569:	
  9445                           
  9446                           ;i2c1.c: 471: else
  9447                           ;i2c1.c: 472: {
  9448                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  9449  0126  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
  9450  0127  0086               	movwf	6
  9451  0128  0187               	clrf	7
  9452  0129  0801               	movf	1,w
  9453  012A  0023               	movlb	3	; select bank3
  9454  012B  008C               	movwf	12	;volatile
  9455  012C  3001               	movlw	1
  9456  012D  00F9               	movwf	??_I2C1_ISR
  9457  012E  0879               	movf	??_I2C1_ISR,w
  9458  012F  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  9459                           
  9460                           ;i2c1.c: 475: }
  9461                           ;i2c1.c: 476: }
  9462                           ;i2c1.c: 477: break;
  9463  0130  0008               	return
  9464  0131                     i1l321:	
  9465                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  9466                           
  9467                           
  9468                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  9469  0131  0023               	movlb	3	; select bank3
  9470  0132  1F11               	btfss	17,6	;volatile
  9471  0133  293F               	goto	i1l322
  9472                           
  9473                           ;i2c1.c: 483: {
  9474                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  9475  0134  3001               	movlw	1
  9476  0135  00F9               	movwf	??_I2C1_ISR
  9477  0136  0879               	movf	??_I2C1_ISR,w
  9478  0137  0020               	movlb	0	; select bank0
  9479  0138  07E6               	addwf	_i2c1_object+4,f
  9480                           
  9481                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  9482  0139  3004               	movlw	4
  9483  013A  318E  2600         	fcall	_I2C1_Stop
  9484                           
  9485                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  9486  013C  0023               	movlb	3	; select bank3
  9487  013D  1311               	bcf	17,6	;volatile
  9488                           
  9489                           ;i2c1.c: 493: }
  9490  013E  0008               	return
  9491  013F                     i1l322:	
  9492                           
  9493                           ;i2c1.c: 494: else
  9494                           ;i2c1.c: 495: {
  9495                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  9496  013F  1591               	bsf	17,3	;volatile
  9497                           
  9498                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  9499  0140  3008               	movlw	8
  9500  0141  00F9               	movwf	??_I2C1_ISR
  9501  0142  0879               	movf	??_I2C1_ISR,w
  9502  0143  0020               	movlb	0	; select bank0
  9503  0144  00EB               	movwf	_i2c1_state
  9504                           
  9505                           ;i2c1.c: 498: }
  9506                           ;i2c1.c: 499: break;
  9507  0145  0008               	return
  9508  0146                     i1l2581:	
  9509                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  9510                           
  9511                           
  9512                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  9513  0146  3008               	movlw	8
  9514  0147  00F9               	movwf	??_I2C1_ISR
  9515  0148  0879               	movf	??_I2C1_ISR,w
  9516  0149  00EB               	movwf	_i2c1_state
  9517                           
  9518                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  9519  014A  0023               	movlb	3	; select bank3
  9520  014B  1591               	bsf	17,3	;volatile
  9521                           
  9522                           ;i2c1.c: 511: break;
  9523  014C  0008               	return
  9524  014D                     i1l2585:	
  9525                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  9526                           
  9527                           
  9528                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  9529  014D  0023               	movlb	3	; select bank3
  9530  014E  080C               	movf	12,w	;volatile
  9531  014F  00F9               	movwf	??_I2C1_ISR
  9532  0150  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
  9533  0151  0086               	movwf	6
  9534  0152  0187               	clrf	7
  9535  0153  0879               	movf	??_I2C1_ISR,w
  9536  0154  0081               	movwf	1
  9537  0155  3001               	movlw	1
  9538  0156  00F9               	movwf	??_I2C1_ISR
  9539  0157  0879               	movf	??_I2C1_ISR,w
  9540  0158  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  9541                           
  9542                           ;i2c1.c: 519: if(--i2c_bytes_left)
  9543  0159  3001               	movlw	1
  9544  015A  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
  9545  015B  1903               	btfsc	3,2
  9546  015C  2964               	goto	i1l326
  9547                           
  9548                           ;i2c1.c: 520: {
  9549                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  9550  015D  1291               	bcf	17,5	;volatile
  9551                           
  9552                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  9553  015E  3006               	movlw	6
  9554  015F  00F9               	movwf	??_I2C1_ISR
  9555  0160  0879               	movf	??_I2C1_ISR,w
  9556  0161  0020               	movlb	0	; select bank0
  9557  0162  00EB               	movwf	_i2c1_state
  9558                           
  9559                           ;i2c1.c: 530: }
  9560  0163  2967               	goto	i1l2597
  9561  0164                     i1l326:	
  9562                           
  9563                           ;i2c1.c: 531: else
  9564                           ;i2c1.c: 532: {
  9565                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  9566  0164  1691               	bsf	17,5	;volatile
  9567                           
  9568                           ;i2c1.c: 538: I2C1_FunctionComplete();
  9569  0165  318D  25AE         	fcall	_I2C1_FunctionComplete
  9570  0167                     i1l2597:	
  9571                           
  9572                           ;i2c1.c: 539: }
  9573                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  9574  0167  0023               	movlb	3	; select bank3
  9575  0168  1611               	bsf	17,4	;volatile
  9576                           
  9577                           ;i2c1.c: 543: break;
  9578  0169  0008               	return
  9579  016A                     i1l2599:	
  9580                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  9581                           
  9582                           
  9583                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  9584                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  9585  016A  3000               	movlw	0
  9586  016B  318E  2600         	fcall	_I2C1_Stop
  9587                           
  9588                           ;i2c1.c: 550: break;
  9589  016D  0008               	return
  9590  016E                     i1l2601:	
  9591                           ;i2c1.c: 552: default:
  9592                           
  9593                           
  9594                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  9595  016E  3001               	movlw	1
  9596  016F  00F9               	movwf	??_I2C1_ISR
  9597  0170  0879               	movf	??_I2C1_ISR,w
  9598  0171  0020               	movlb	0	; select bank0
  9599  0172  07E6               	addwf	_i2c1_object+4,f
  9600                           
  9601                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  9602  0173  3006               	movlw	6
  9603  0174  318E  2600         	fcall	_I2C1_Stop
  9604                           
  9605                           ;i2c1.c: 560: }
  9606                           
  9607                           ;i2c1.c: 558: break;
  9608  0176  0008               	return
  9609  0177                     i1l2607:	
  9610  0177  0020               	movlb	0	; select bank0
  9611  0178  086B               	movf	_i2c1_state,w
  9612                           
  9613                           ; Switch size 1, requested type "space"
  9614                           ; Number of cases is 11, Range of values is 0 to 11
  9615                           ; switch strategies available:
  9616                           ; Name         Instructions Cycles
  9617                           ; direct_byte           30     6 (fixed)
  9618                           ; simple_byte           34    18 (average)
  9619                           ; jumptable            260     6 (fixed)
  9620                           ;	Chosen strategy is direct_byte
  9621  0179  0084               	movwf	4
  9622  017A  300C               	movlw	12
  9623  017B  0204               	subwf	4,w
  9624  017C  1803               	skipnc
  9625  017D  296E               	goto	i1l2601
  9626  017E  3188               	movlp	high i1S3403
  9627  017F  3504               	lslf	4,w
  9628  0180  3E00               	addlw	low i1S3403
  9629  0181  0082               	movwf	2
  9630  0182  0008               	return
  9631  0183                     __end_of_I2C1_ISR:	
  9632                           
  9633                           	psect	swtext2
  9634  0800                     __pswtext2:	
  9635  0800                     i1S3403:	
  9636  0800  3180  285B         	ljmp	i1l292
  9637  0802  3180  2886         	ljmp	i1l297
  9638  0804  3180  28DA         	ljmp	i1l2527
  9639  0806  3180  28FF         	ljmp	i1l314
  9640  0808  3181  296A         	ljmp	i1l2599
  9641  080A  3181  2931         	ljmp	i1l321
  9642  080C  3181  2946         	ljmp	i1l2581
  9643  080E  3181  296A         	ljmp	i1l2599
  9644  0810  3181  294D         	ljmp	i1l2585
  9645  0812  3181  296E         	ljmp	i1l2601
  9646  0814  3180  288E         	ljmp	i1l298
  9647  0816  3180  28B1         	ljmp	i1l303
  9648                           
  9649                           	psect	text33
  9650  0E00                     __ptext33:	
  9651 ;; *************** function _I2C1_Stop *****************
  9652 ;; Defined at:
  9653 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  completion_c    1    wreg     enum E14260
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  completion_c    1    1[COMMON] enum E14260
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;Total ram usage:        2 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		_I2C1_ISR
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           
  9680                           
  9681                           ;psect for function _I2C1_Stop
  9682  0E00                     _I2C1_Stop:	
  9683                           
  9684                           ;incstack = 0
  9685                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  9686                           ;I2C1_Stop@completion_code stored from wreg
  9687  0E00  00F8               	movwf	I2C1_Stop@completion_code
  9688                           
  9689                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  9690  0E01  0023               	movlb	3	; select bank3
  9691  0E02  1511               	bsf	17,2	;volatile
  9692                           
  9693                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  9694  0E03  0872               	movf	_p_i2c1_current,w
  9695  0E04  3E02               	addlw	2
  9696  0E05  0086               	movwf	6
  9697  0E06  0187               	clrf	7
  9698  0E07  0801               	movf	1,w
  9699  0E08  1903               	btfsc	3,2
  9700  0E09  2E15               	goto	i1l2405
  9701                           
  9702                           ;i2c1.c: 588: {
  9703                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  9704  0E0A  0878               	movf	I2C1_Stop@completion_code,w
  9705  0E0B  00F7               	movwf	??_I2C1_Stop
  9706  0E0C  0872               	movf	_p_i2c1_current,w
  9707  0E0D  3E02               	addlw	2
  9708  0E0E  0086               	movwf	6
  9709  0E0F  0187               	clrf	7
  9710  0E10  0801               	movf	1,w
  9711  0E11  0086               	movwf	6
  9712  0E12  0187               	clrf	7
  9713  0E13  0877               	movf	??_I2C1_Stop,w
  9714  0E14  0081               	movwf	1
  9715  0E15                     i1l2405:	
  9716                           
  9717                           ;i2c1.c: 591: }
  9718                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  9719  0E15  0020               	movlb	0	; select bank0
  9720  0E16  01EB               	clrf	_i2c1_state
  9721  0E17  0008               	return
  9722  0E18                     __end_of_I2C1_Stop:	
  9723                           
  9724                           	psect	text34
  9725  0DAE                     __ptext34:	
  9726 ;; *************** function _I2C1_FunctionComplete *****************
  9727 ;; Defined at:
  9728 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;		None
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  1    wreg      void 
  9735 ;; Registers used:
  9736 ;;		wreg, status,2, status,0
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;Total ram usage:        1 bytes
  9747 ;; Hardware stack levels used:    1
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_I2C1_ISR
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           
  9756                           ;psect for function _I2C1_FunctionComplete
  9757  0DAE                     _I2C1_FunctionComplete:	
  9758                           
  9759                           ;i2c1.c: 567: p_i2c1_trb_current++;
  9760                           
  9761                           ;incstack = 0
  9762                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  9763  0DAE  3004               	movlw	4
  9764  0DAF  00F7               	movwf	??_I2C1_FunctionComplete
  9765  0DB0  0877               	movf	??_I2C1_FunctionComplete,w
  9766  0DB1  07F3               	addwf	_p_i2c1_trb_current,f
  9767                           
  9768                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  9769  0DB2  3001               	movlw	1
  9770  0DB3  02F4               	subwf	_i2c1_trb_count,f
  9771  0DB4  1D03               	btfss	3,2
  9772  0DB5  2DBC               	goto	i1l333
  9773                           
  9774                           ;i2c1.c: 571: {
  9775                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  9776  0DB6  3004               	movlw	4
  9777  0DB7  00F7               	movwf	??_I2C1_FunctionComplete
  9778  0DB8  0877               	movf	??_I2C1_FunctionComplete,w
  9779  0DB9  0020               	movlb	0	; select bank0
  9780  0DBA  00EB               	movwf	_i2c1_state
  9781                           
  9782                           ;i2c1.c: 573: }
  9783  0DBB  0008               	return
  9784  0DBC                     i1l333:	
  9785                           
  9786                           ;i2c1.c: 574: else
  9787                           ;i2c1.c: 575: {
  9788                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  9789  0DBC  0020               	movlb	0	; select bank0
  9790  0DBD  01EB               	clrf	_i2c1_state
  9791  0DBE  0AEB               	incf	_i2c1_state,f
  9792  0DBF  0008               	return
  9793  0DC0                     __end_of_I2C1_FunctionComplete:	
  9794                           
  9795                           	psect	text35
  9796  07FE                     __ptext35:	
  9797 ;; *************** function _I2C1_BusCollisionISR *****************
  9798 ;; Defined at:
  9799 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  9800 ;; Parameters:    Size  Location     Type
  9801 ;;		None
  9802 ;; Auto vars:     Size  Location     Type
  9803 ;;		None
  9804 ;; Return value:  Size  Location     Type
  9805 ;;                  1    wreg      void 
  9806 ;; Registers used:
  9807 ;;		None
  9808 ;; Tracked objects:
  9809 ;;		On entry : 0/0
  9810 ;;		On exit  : 0/0
  9811 ;;		Unchanged: 0/0
  9812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;Total ram usage:        0 bytes
  9818 ;; Hardware stack levels used:    1
  9819 ;; This function calls:
  9820 ;;		Nothing
  9821 ;; This function is called by:
  9822 ;;		_INTERRUPT_InterruptManager
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           
  9827                           ;psect for function _I2C1_BusCollisionISR
  9828  07FE                     _I2C1_BusCollisionISR:	
  9829                           
  9830                           ;incstack = 0
  9831                           ; Regs used in _I2C1_BusCollisionISR: []
  9832  07FE  0008               	return
  9833  07FF                     __end_of_I2C1_BusCollisionISR:	
  9834  007E                     btemp	set	126	;btemp
  9835  007E                     int$flags	set	126
  9836  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    16
    Data        36
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     66      79
    BANK1            80     15      79
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    MYI2C_Write2LEDBytes@pD	PTR unsigned char  size(1) Largest target is 16
		 -> MYI2C_Write2LEDBytes@sourceData(BANK0[16]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 8
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_MasterWrite@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_Write2LEDBytes@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 3
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S375$pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    S387$pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(BANK0[3]), MYI2C_Write2LEDBytes@status(BANK0[1]), MYI2C_ReadFaders@status(BANK0[1]), MYI2C_ReadFaders@pointerByte(BANK0[1]), 
		 -> byteFaderValue(BANK1[8]), 

    S387$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(BANK0[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S398$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S398$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_LED7SegLoop
    _blinkyLoop->_delay
    ___lbtoft->___ftpack
    ___ftdiv->___lbtoft
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _MYI2C_Write2LEDBytes->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _MYI2C_ReadFaders->_I2C1_MasterReadTRBBuild
    _MYI2C_ReadFaders->_I2C1_MasterWriteTRBBuild
    _LED7SegLoop->_LED7SegDisplayValue
    _LED7SegDisplayValue->___fttol
    ___lwtoft->___ftpack
    ___lwtoft->___lwdiv
    ___fttol->___ftdiv
    _LED7SegBlankDisplay->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   22764
                                             63 BANK0      3     3      0
                                              0 BANK1     15    15      0
           _ADCC_GetSingleConversion
                _LED7SegDisplayValue
                        _LED7SegLoop
                       _LED7SegSetup
                   _MYI2C_ReadFaders
               _MYI2C_Write2LEDBytes
                  _SYSTEM_Initialize
                _UpdateLEDsFromValue
                            ___ftdiv
                            ___fttol
                           ___lbtoft
                         _blinkyLoop
                              _delay
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    1677
                                             17 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             8     5      3    1690
                                              8 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2054
                                             16 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (1) _UpdateLEDsFromValue                                  5     4      1     475
                                              0 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MYI2C_Write2LEDBytes                                39    37      2    1745
                                             14 BANK0     37    35      2
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterWrite                                     7     3      4    1250
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (1) _MYI2C_ReadFaders                                    24    24      0    1807
                                              7 BANK0     19    19      0
            _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWriteTRBBuild                             7     3      4     504
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterTRBInsert                                 4     2      2     450
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _I2C1_MasterReadTRBBuild                              7     3      4     526
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegLoop                                          9     9      0    6886
                                             54 BANK0      9     9      0
                _LED7SegBlankDisplay
                _LED7SegDisplayValue
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LED7SegDisplayValue                                  8     6      2    4318
                                             46 BANK0      8     6      2
          _LED7SegShiftOutPulseClock
                            ___ftdiv (ARG)
                            ___fttol
                           ___lbtoft (ARG)
                            ___lwdiv
                            ___lwmod
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             4     1      3    1796
                                              8 BANK0      4     1      3
                           ___ftpack
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1668
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     265
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftdiv (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED7SegBlankDisplay                                  0     0      0    1213
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegShiftOutPulseClock                            3     3      0    1213
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (4) _LED7SegPulseClock                                    0     0      0    1052
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1052
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (8) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (9) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LED7SegDisplayValue
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
     ___ftdiv (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     ___lwdiv (ARG)
     ___lwmod (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___lwdiv (ARG)
       ___lwmod (ARG)
   _LED7SegLoop
     _LED7SegBlankDisplay
       _LED7SegShiftOutPulseClock
         _LED7SegPinWrite
         _LED7SegPulseClock
           _delay
             ___wmul
     _LED7SegDisplayValue
       _LED7SegShiftOutPulseClock
         _LED7SegPinWrite
         _LED7SegPulseClock
           _delay
             ___wmul
       ___ftdiv (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       ___lwdiv (ARG)
       ___lwmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___lwmod (ARG)
     _delay
       ___wmul
   _LED7SegSetup
   _MYI2C_ReadFaders
     _I2C1_MasterReadTRBBuild
     _I2C1_MasterTRBInsert
     _I2C1_MasterWriteTRBBuild
   _MYI2C_Write2LEDBytes
     _I2C1_MasterWrite
       _I2C1_MasterTRBInsert
       _I2C1_MasterWriteTRBBuild
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _UpdateLEDsFromValue
   ___ftdiv
     ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftdiv (ARG)
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
   ___lbtoft
     ___ftpack
   _blinkyLoop
     ___wmul
     _delay
       ___wmul
   _delay
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     42      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      AC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      AC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Aug 16 07:35:28 2018

                                     _b 00C7                                       _c 00CC  
                                     _d 00C4                                       _e 00CA  
                                     pc 0002                             __CFG_CP$OFF 0000  
            __size_of_LED7SegPulseClock 000B              MYI2C_Write2LEDBytes@F14460 00B4  
                   ___wmul@multiplicand 0022         MYI2C_Write2LEDBytes@dataAddress 0044  
                                   l163 0DC9                                     l450 07D4  
                                   l540 0631                                     l605 0D81  
                                   l729 0E57                                     l890 06B3  
                                   l981 05F2                                     l897 06C6  
                                   l898 06CE                                     _GIE 005F  
                          __CFG_CPD$OFF 0000                            __CFG_BORV$LO 0000  
                                   wreg 0009                                    S3401 0818  
                          __CFG_LVP$OFF 0000                            __CFG_ZCD$OFF 0000  
                          ___ftdiv@cntr 003A                        __end_of_I2C1_ISR 0183  
                          ___ftdiv@sign 003F                                    l2211 0FF3  
                                  l2205 0FE7                                    l2215 0FFA  
                                  l2313 0F39                                    l2209 0FEE  
                                  l2307 0F21                                    l2171 069A  
                                  l3061 0E51                                    l2237 059E  
                                  l2309 0F2D                                    l2317 0F42  
                                  l2181 06C0                                    l2173 069F  
                                  l2165 0689                                    l2263 05E9  
                                  l2255 05CE                                    l2415 0F13  
                                  l2265 05F5                                    l2257 05DC  
                                  l2169 0690                                    l3233 06F5  
                                  l3321 01DB                                    l2291 0F6E  
                                  l2283 0F50                                    l2179 06B8  
                                  l3235 0737                                    l3315 01C0  
                                  l2269 0603                                    l2285 0F5C  
                                  l3181 0575                                    l3261 03DD  
                                  l2701 078A                                    l2295 0F77  
                                  l3167 0501                                    l3255 03CF  
                                  l3343 0240                                    l3249 03B3  
                                  l2801 0352                                    l3337 021F  
                                  l3345 0251                                    l3283 042D  
                                  l3275 040F                                    l2715 0755  
                                  l2803 0359                                    l3269 03F3  
                                  l3277 041F                                    l2813 036D  
                                  l2805 0360                                    l2741 02CB  
                                  l2733 02BF                                    l3357 027C  
                                  l3349 025C                                    l2719 079C  
                                  l2815 0374                                    l2743 02D2  
                                  l3289 0449                                    l2825 0388  
                                  l2817 037B                                    l2753 02E6  
                                  l2745 02D9                                    l2729 02B8  
                                  l2827 038F                                    l2755 02ED  
                                  l2915 04D3                                    l2907 04BA  
                                  l2781 032A                                    l2765 0301  
                                  l2757 02F4                                    l2829 0396  
                                  l2871 0647                                    l2791 033E  
                                  l2767 0308                                    l2873 066F  
                                  l2857 065D                                    l2793 0345  
                                  l2777 031C                                    l2769 030F  
                                  l2779 0323                                    l2789 0337  
                                  l2893 0479                                    l2879 067B  
                                  l2887 0463           __size_of_MYI2C_Write2LEDBytes 0074  
                                  _LATA 0016                                    _LATB 0017  
                                  _LATC 0018                                    u1515 06D5  
                                  u1435 0695                                    u1455 06AE  
                                  u1625 05A5                                    u2505 04BB  
                                  u1475 06BB                                    u2515 04CA  
                                  u1725 0F53                                    u2525 04D4  
                                  u2390 0618                                    u1655 05CF  
                                  u1815 0F33                                    u2455 0637  
                                  u1745 0F5D                                    u1825 0F3A  
                                  u2723 07E6                                    u2715 07C9  
                                  u1755 0F67                                    u1685 05EA  
                                  u1765 0F6F                                    u2485 048B  
                                  u2495 049B                                    u2905 0447  
                                  u2825 06FF                                    u2754 0E76  
                                  u2770 0FB8                                    u2755 0E75  
                                  u1795 0F24                                    u2835 03B1  
                                  u2915 01D7                                    u2685 0E58  
                                  u2845 03CD                                    u2695 0E5D  
                                  u2855 03DB                                    u2935 021D  
                                  u2865 03F1                                    u2945 023E  
                                  u2875 040D                                    u2885 041D  
                                  u2895 042B                                    _WPUA 0F39  
                                  _WPUB 0F44                                    _WPUC 0F4F  
                                  _WPUE 0F65         __end_of_I2C1_MasterReadTRBBuild 0EF2  
                          __CFG_WRT$OFF 0000                           __CFG_FCMEN$ON 0000  
                                  _main 0183                            ___ftpack@arg 0020  
                          ___ftpack@exp 0023              MYI2C_Write2LEDBytes@nCount 0047  
                                  fsr0h 0005                                    fsr1h 0007  
                                  indf0 0000                                    fsr0l 0004  
                                  indf1 0001                                    fsr1l 0006  
                                  _twoK 1002                  ??_I2C1_MasterTRBInsert 0022  
                                  btemp 007E                            main@iCounter 00E0  
                         __CFG_BOREN$ON 0000                 __end_of_LED7SegPinWrite 0D83  
                                  start 0020                           __CFG_CSWEN$ON 0000  
                         __CFG_MCLRE$ON 0000              MYI2C_Write2LEDBytes@status 0052  
        I2C1_MasterWriteTRBBuild@length 0021                            ___fttol@exp1 004D  
                          ___fttol@lval 0049  MYI2C_Write2LEDBytes@slaveDeviceAddress 0049  
                            _i2c1_state 006B          __size_of_OSCILLATOR_Initialize 0009  
             I2C1_MasterTRBInsert@count 0023           __end_of_OSCILLATOR_Initialize 0D8C  
             I2C1_MasterTRBInsert@pflag 0021                                   _ADACQ 009D  
                                 _ADACT 0099                                   _ADCAP 009B  
                                 ?_main 0077                                   _ADCLK 0098  
                                 _ADCNT 010C                                   _ADPCH 009E  
                                 _ADREF 009A                       __end_of_I2C1_Stop 0E18  
                                 _ADPRE 009C                           __CFG_WDTE$OFF 0000  
                                 _ADRPT 010D                         __end_of___ftdiv 04F5  
                       __end_of___fttol 060C                          __CFG_DEBUG$OFF 0000  
                       __end_of___lwdiv 0F7C                                   i1l303 00B1  
                                 i1l304 00BD                                   i1l321 0131  
                                 i1l322 013F                                   i1l314 00FF  
                                 i1l333 0DBC                                   i1l326 0164  
                                 i1l318 011E                         __end_of___lwmod 0F47  
                                 i1l292 005B                                   i1l297 0086  
                                 i1l298 008E                                   i1l394 0013  
                                 i1l398 001B                                   _OSCEN 0891  
                                 _PORTB 000D                                   _PORTC 000E  
                                 _TRISA 0011                                   _TRISB 0012  
                                 _TRISC 0013                         __end_of_datapin 1008  
          __end_of_I2C1_BusCollisionISR 07FF                       ??_I2C1_Initialize 0020  
                                 _delay 079E                           ___ftpack@sign 0024  
                                 _speed 1004                                   status 0003  
                                 wtemp0 007E             MYI2C_Write2LEDBytes@counter 004A  
       I2C1_MasterWriteTRBBuild@address 0022             MYI2C_Write2LEDBytes@timeOut 004C  
                            _iLEDs0_LSB 00CE                              _iLEDs0_MSB 00CF  
                            _iLEDs1_LSB 0068                              _iLEDs1_MSB 0069  
           __end_of_UpdateLEDsFromValue 03A2                    __end_of_LED7SegSetup 07FE  
                       __initialization 0022                   I2C1_MasterWrite@pdata 002D  
                 I2C1_MasterWrite@pflag 002A                            __end_of_main 02AE  
                          __end_of_twoK 1004             ?_INTERRUPT_InterruptManager 0077  
                           _i2c1_object 0062                                  ??_main 005F  
                         ___fttol@sign1 0048             ??_LED7SegShiftOutPulseClock 0031  
                  __size_of_LED7SegLoop 00AA                                  ?_delay 0026  
                                _ADACCH 0091                                  _ADACCL 0090  
                                _ADCON0 0093                                  _ADCON1 0094  
                                _ADCON2 0095                                  _ADCON3 0096  
                                _ADERRH 0117                                  _ADERRL 0116  
                                i1S3403 0800                                  _ADLTHH 010F  
                                _ADLTHL 010E                                  _ADRESH 008D  
                                _ADRESL 008C                                  _ADSTAT 0097  
                                _ADUTHH 0111                                  _ADUTHL 0110  
                                _ANSELA 0F38                                  _ANSELB 0F43  
                                _ANSELC 0F4E                        __end_of___ftpack 06E5  
                      __end_of___lbtoft 0E4E                      __CFG_RSTOSC$HFINT1 0000  
                                _RC3PPS 0F23                                  _RC4PPS 0F24  
                                _ODCONA 0F3A                                  _ODCONB 0F45  
                                _ODCONC 0F50                                  i1l2405 0E15  
                                i1l2601 016E                                  i1l2513 00AB  
                                i1l2507 009A                                  i1l2527 00DA  
                                i1l2607 0177                                  i1l2561 010D  
                                i1l2553 00F9                                  i1l2547 00EE  
                                i1l2581 0146                                  i1l2495 0079  
                                i1l2585 014D                                  i1l2569 0126  
                                i1l2597 0167                                  i1l2599 016A  
                        __CFG_WDTCCS$SC 0000                        __end_of___lwtoft 0DE9  
                                _OSCFRQ 0893             __end_of_LED7SegDisplayValue 0585  
                     ?_I2C1_MasterWrite 0027                        ?_LED7SegPinWrite 0077  
                        __CFG_PWRTE$OFF 0000                        __end_of_clockpin 100A  
                    ??_I2C1_MasterWrite 002B                          _p_i2c1_current 0072  
             __size_of_MYI2C_ReadFaders 0057                                  ___wmul 0E4E  
                        __CFG_STVREN$ON 0000                               ??___ftdiv 0036  
                             ??___fttol 0044                        __end_of_latchpin 100C  
                             ??___lwdiv 0024                               ??___lwmod 0024  
            ??_I2C1_MasterWriteTRBBuild 0024                               ?_I2C1_ISR 0077  
      __size_of_I2C1_MasterReadTRBBuild 0028                         _ADCC_Initialize 0E18  
        MYI2C_Write2LEDBytes@sourceData 0034       __size_of_ADCC_GetSingleConversion 0014  
             ?_ADCC_GetSingleConversion 0020           I2C1_MasterWriteTRBBuild@pdata 0020  
                     _SYSTEM_Initialize 0DA2               _LED7SegShiftOutPulseClock 0E6A  
               __end_of__initialization 0044                      ?_SYSTEM_Initialize 0077  
                            ___ftdiv@f1 0033                              ___ftdiv@f2 0030  
                            ___ftdiv@f3 003B                          _i2c1_trb_count 0074  
                        _byteFaderValue 00D0                              ___lbtoft@c 002F  
                 _I2C1_FunctionComplete 0DAE                    _I2C1_BusCollisionISR 07FE  
                            ___fttol@f1 0040                          __pcstackCOMMON 0077  
                I2C1_MasterWrite@length 0027                            __pidataBANK1 0EA6  
                   ??_SYSTEM_Initialize 0021                main@I2C_ADDRESS_FADELED0 00E9  
                         __end_of_delay 07F1                          main@faderValue 00EA  
                         __end_of_speed 1006                              ??_I2C1_ISR 0079  
                            ___lwtoft@c 0028          I2C1_MasterReadTRBBuild@address 0022  
                    main@fader8bitValue 00EC                                 ??_delay 0028  
             __end_of_SYSTEM_Initialize 0DAE                              __pbssBANK0 0062  
                            __pbssBANK1 00C4                   __size_of_LED7SegSetup 000D  
            LED7SegShiftOutPulseClock@i 0033            __size_of_LED7SegBlankDisplay 000B  
         UpdateLEDsFromValue@inFaderNum 0022                   ?_I2C1_BusCollisionISR 0077  
                        _SSP1DATPPSbits 0EC6                              __pmaintext 0183  
                               ?___wmul 0020            __end_of_MYI2C_Write2LEDBytes 0680  
                       __CFG_PPS1WAY$ON 0000                 __end_of_ADCC_Initialize 0E33  
                            __pintentry 0004                         _I2C1_Initialize 0DE9  
                               _ADFLTRH 0115                                 _ADFLTRL 0114  
                            _blinkyLoop 06E5                                 _ADPREVH 008F  
                               _ADPREVL 008E                               ?___ftpack 0020  
                             ?___lbtoft 0028                                 _ADSTPTH 0113  
                               _ADSTPTL 0112                          _SSP1CLKPPSbits 0EC5  
                             ?___lwtoft 0028                                 _OSCCON1 088D  
                               _OSCCON3 088F                               _I2C1_Stop 0E00  
                MYI2C_Write2LEDBytes@pD 0046                                 _OSCTUNE 0892  
                          _LED7SegSetup 07F1                                 _SSP1ADD 018D  
                               _PPSLOCK 0E8F                                 _SSP1BUF 018C  
       MYI2C_Write2LEDBytes@pointerByte 004E                          main@readStatus 00E6  
         I2C1_MasterTRBInsert@ptrb_list 0020                  ?_I2C1_FunctionComplete 0077  
         __size_of_I2C1_MasterTRBInsert 0046                      _p_i2c1_trb_current 0073  
                      _MYI2C_ReadFaders 0747                    __CFG_SCANE$available 0000  
                               ___ftdiv 044C                         __size_of___wmul 001C  
                               ___fttol 0585                                 ___lwdiv 0F47  
                               ___lwmod 0F1A                              ??___ftpack 0025  
                            ??___lbtoft 002B                                 _datapin 1006  
               _I2C1_MasterReadTRBBuild 0ECA                                 __ptext1 06E5  
                               __ptext2 0E33                                 __ptext3 044C  
                               __ptext4 02AE                                 __ptext5 0DA2  
                               __ptext6 0F7C                                 __ptext7 0D83  
                               __ptext8 0DE9                                 __ptext9 0E18  
                            ??___lwtoft 002B                   _OSCILLATOR_Initialize 0D83  
          I2C1_MasterReadTRBBuild@pdata 0020                                 _segdisp 00A0  
              ??_PIN_MANAGER_Initialize 0020                              ?_I2C1_Stop 0077  
            __size_of_SYSTEM_Initialize 000C                    I2C1_ISR@pi2c_buf_ptr 0071  
                               main@ndx 00ED                                 clrloop0 0D6F  
                  end_of_initialization 0044                                 init_ram 0D74  
                               initloop 0D75                  ??_I2C1_BusCollisionISR 0077  
               __end_of_I2C1_Initialize 0E00                       __end_of_toggleDly 1002  
                      ?_ADCC_Initialize 0077        __end_of_ADCC_GetSingleConversion 0DD4  
                           ?_blinkyLoop 0031                   __CFG_WDTCPS$WDTCPS_31 0000  
                         ??_LED7SegLoop 0056            __size_of_UpdateLEDsFromValue 00F4  
             __size_of_I2C1_MasterWrite 0028                       __size_of_I2C1_ISR 013B  
                             _TRISCbits 0013         MYI2C_Write2LEDBytes@writeBuffer 004F  
                      __CFG_FEXTOSC$OFF 0000                         main@iResetValue 100C  
    LED7SegDisplayValue@iTwoDigitNumber 004E                    _MYI2C_Write2LEDBytes 060C  
     I2C1_ISR@i2c_10bit_address_restart 006A                             ___ftdiv@exp 003E  
               I2C1_MasterWrite@address 0028             MYI2C_ReadFaders@dataAddress 002B  
          __size_of_LED7SegDisplayValue 0090               ??_I2C1_MasterReadTRBBuild 0024  
                delay@adjustedDelaytime 0029                __size_of_LED7SegPinWrite 0009  
                        __end_of___wmul 0E6A                 I2C1_MasterWrite@trBlock 00DC  
              I2C1_Stop@completion_code 0078                  ?_OSCILLATOR_Initialize 0077  
                   _LED7SegBlankDisplay 0D97         UpdateLEDsFromValue@wkBrightFlag 0024  
                   start_initialization 0022                             ??_I2C1_Stop 0077  
                   __end_of_LED7SegLoop 044C         __size_of_PIN_MANAGER_Initialize 003E  
                 ?_MYI2C_Write2LEDBytes 002E       __size_of_I2C1_MasterWriteTRBBuild 0020  
             ?_I2C1_MasterWriteTRBBuild 0020                     __size_of_blinkyLoop 0062  
                  ?_LED7SegBlankDisplay 0077                        ?_I2C1_Initialize 0077  
                      __CFG_LPBOREN$OFF 0000                                ??___wmul 0024  
                           __pdataBANK1 00A0            I2C1_MasterWriteTRBBuild@ptrb 0026  
              _ADCC_GetSingleConversion 0DC0                       __size_of___ftpack 0065  
                     __size_of___lbtoft 001B                 __end_ofmain@iResetValue 100E  
                           __pbssCOMMON 0070                               ___latbits 0002  
                     __size_of___lwtoft 0015                           __pcstackBANK0 0020  
                         __pcstackBANK1 00E0        MYI2C_Write2LEDBytes@LSBWriteByte 002F  
                         _i2c1_tr_queue 006C                __end_of_MYI2C_ReadFaders 079E  
                   blinkyLoop@delayTime 0034                 ??_I2C1_FunctionComplete 0077  
            UpdateLEDsFromValue@inValue 0020                   ??_LED7SegBlankDisplay 0034  
                             _main$1598 00E2                        ___lwdiv@dividend 0022  
                _PIN_MANAGER_Initialize 0F7C        MYI2C_Write2LEDBytes@MSBWriteByte 002E  
       ADCC_GetSingleConversion@channel 0023                                ?___ftdiv 0030  
                              ?___fttol 0040                                ?___lwdiv 0020  
                              ?___lwmod 0020                                _I2C1_ISR 0048  
          ??_INTERRUPT_InterruptManager 007D                             _LED7SegLoop 03A2  
                             __pswtext1 0818                               __pswtext2 0800  
                      _I2C1_MasterWrite 0EF2                      LED7SegPinWrite@val 0020  
          __end_of_I2C1_MasterTRBInsert 1000                  main@prevFader8bitValue 00E5  
                     ??_LED7SegPinWrite 0020                     blinkyLoop@loopCount 0036  
                ??_MYI2C_Write2LEDBytes 0030                            _wkFaderValue 0067  
                      ___lwdiv@quotient 0025                          __size_of_delay 0053  
                          delay@counter 002D             I2C1_MasterReadTRBBuild@ptrb 0026  
                I2C1_MasterRead@trBlock 00D8                     _UpdateLEDsFromValue 02AE  
                        ___wmul@product 0024                        main@iChangeCount 00E4  
                              _LATCbits 0018                               clear_ram0 0D6E  
                              _PIE3bits 0719     __size_of_INTERRUPT_InterruptManager 001C  
                              _PIR3bits 070F                                _SSP1CON1 0190  
                              _SSP1CON3 0192                                _SSP1STAT 018F  
                          ??_blinkyLoop 0033                               _toggleDly 1000  
                  ?_UpdateLEDsFromValue 0020                              _ADCON0bits 0093  
                            _ADCON1bits 0094                              _ADCON2bits 0095  
                            _ADCON3bits 0096                       ___wmul@multiplier 0020  
                   _LED7SegDisplayValue 04F5                      __end_of_blinkyLoop 0747  
                            _ADSTATbits 0097           __size_of_I2C1_BusCollisionISR 0001  
                  ?_LED7SegDisplayValue 004E                  I2C1_ISR@i2c_bytes_left 0070  
               ??_OSCILLATOR_Initialize 0020                          delay@delaytime 0026  
                     LED7SegLoop@d_1042 0059                       LED7SegLoop@d_1043 005B  
                      __size_of___ftdiv 00A9                        __size_of___fttol 0087  
                      __size_of___lwdiv 0035                   ??_UpdateLEDsFromValue 0021  
                      __size_of___lwmod 002D                                ___ftpack 0680  
                              ___lbtoft 0E33        __end_of_I2C1_MasterWriteTRBBuild 0EA6  
                     _LED7SegPulseClock 0D8C                                ___lwtoft 0DD4  
                            _ANSELCbits 0F4E                      ?_LED7SegPulseClock 0077  
              __size_of_ADCC_Initialize 001B                         ___lwdiv@divisor 0020  
                   I2C1_ISR@i2c_address 0075                         ___lwdiv@counter 0027  
                              __ptext10 060C                                __ptext11 0EF2  
                              __ptext20 0680                                __ptext12 0747  
                              __ptext21 0F1A                                __ptext13 0E86  
                              __ptext30 0DC0                                __ptext22 0F47  
                              __ptext14 0FBA                                __ptext23 0585  
                              __ptext15 0ECA                                __ptext32 0048  
                              __ptext24 0D97                                __ptext16 07F1  
                              __ptext33 0E00                                __ptext25 0E6A  
                              __ptext17 03A2                                __ptext34 0DAE  
                              __ptext26 0D8C                                __ptext18 04F5  
                              __ptext35 07FE                                __ptext27 079E  
                              __ptext19 0DD4                                __ptext28 0E4E  
                              __ptext29 0D7A                      blinkyLoop@maxLoops 0031  
                          _SSP1CON1bits 0190                            _SSP1CON2bits 0191  
                              _clockpin 1008                     ??_LED7SegPulseClock 0031  
                              _latchpin 100A                           __size_of_main 012B  
         I2C1_MasterReadTRBBuild@length 0021                    __CFG_WDTCWS$WDTCWS_7 0000  
    MYI2C_ReadFaders@slaveDeviceAddress 002F                    _I2C1_MasterTRBInsert 0FBA  
                 ??_LED7SegDisplayValue 0050                            LED7SegLoop@d 0057  
                          LED7SegLoop@z 005D              ??_ADCC_GetSingleConversion 0023  
                              int$flags 007E      __end_of_INTERRUPT_InterruptManager 0020  
            _INTERRUPT_InterruptManager 0004               __end_of_LED7SegPulseClock 0D97  
    __size_of_LED7SegShiftOutPulseClock 001C              ?_LED7SegShiftOutPulseClock 0077  
           MYI2C_ReadFaders@pointerByte 0030             PIN_MANAGER_Initialize@state 0020  
          LED7SegShiftOutPulseClock@val 0032                          _cMstrClkAdjust 100E  
                            _INTCONbits 000B                           ?_LED7SegSetup 0077  
                     ?_MYI2C_ReadFaders 0077                                intlevel1 0000  
                    ??_MYI2C_ReadFaders 0027                        ___lwmod@dividend 0022  
               ?_PIN_MANAGER_Initialize 0077             UpdateLEDsFromValue@wkOnFlag 0023  
              __end_of_I2C1_MasterWrite 0F1A                       __CFG_CLKOUTEN$OFF 0000  
        __size_of_I2C1_FunctionComplete 0012           __end_of_I2C1_FunctionComplete 0DC0  
                           _PPSLOCKbits 0E8F                   ?_I2C1_MasterTRBInsert 0020  
              ?_I2C1_MasterReadTRBBuild 0020          LED7SegDisplayValue@iUnitsDigit 0050  
                       _LED7SegPinWrite 0D7A           LED7SegDisplayValue@iTensDigit 0054  
                __end_of_cMstrClkAdjust 1010                __size_of_I2C1_Initialize 0017  
                          ?_LED7SegLoop 0077                           __pstringtext1 1000  
                         __pstringtext2 1002                           __pstringtext3 1004  
                         __pstringtext4 1006                           __pstringtext5 1008  
                         __pstringtext6 100A                           __pstringtext7 100C  
                         __pstringtext8 100E       __end_of_LED7SegShiftOutPulseClock 0E86  
               MYI2C_ReadFaders@readTRB 0031                         ___lwmod@divisor 0020  
                       ___lwmod@counter 0025                          ??_LED7SegSetup 0020  
              _I2C1_MasterWriteTRBBuild 0E86                 MYI2C_ReadFaders@timeOut 002D  
          LED7SegDisplayValue@iTensCode 0052             __end_of_LED7SegBlankDisplay 0DA2  
                      main@iLoopCounter 00E7          __end_of_PIN_MANAGER_Initialize 0FBA  
                     ??_ADCC_Initialize 0020                      __size_of_I2C1_Stop 0018  
                MYI2C_ReadFaders@status 0039  
