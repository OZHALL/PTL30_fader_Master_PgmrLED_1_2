

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 26 11:46:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    36                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,merge=1,delta=2
    40                           	psect	text4,local,class=CODE,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,merge=1,delta=2
    47                           	psect	text11,local,class=CODE,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text17,local,class=CODE,merge=1,delta=2
    54                           	psect	text18,local,class=CODE,merge=1,delta=2
    55                           	psect	text19,local,class=CODE,merge=1,delta=2
    56                           	psect	text20,local,class=CODE,merge=1,delta=2
    57                           	psect	text21,local,class=CODE,merge=1,delta=2
    58                           	psect	text22,local,class=CODE,merge=1,delta=2
    59                           	psect	text23,local,class=CODE,merge=1,delta=2
    60                           	psect	text24,local,class=CODE,merge=1,delta=2
    61                           	psect	text25,local,class=CODE,merge=1,delta=2
    62                           	psect	text26,local,class=CODE,merge=1,delta=2
    63                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text28,local,class=CODE,merge=1,delta=2
    65                           	psect	text29,local,class=CODE,merge=1,delta=2
    66                           	psect	text30,local,class=CODE,merge=1,delta=2
    67                           	psect	text31,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text33,local,class=CODE,merge=1,delta=2
    70                           	psect	swtext1,local,class=CONST,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	dabs	1,0x620,48
    75                           	dabs	1,0x5A0,80
    76                           	dabs	1,0x2370,0,_aPatchMemory
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 1.45
    80                           ; Generated 16/11/2017 GMT
    81                           ; 
    82                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F18855 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  001C                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0110                     	;# 
   168  0110                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0112                     	;# 
   172  0113                     	;# 
   173  0114                     	;# 
   174  0114                     	;# 
   175  0115                     	;# 
   176  0116                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  0119                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011A                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011C                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011D                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011E                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  018F                     	;# 
   208  0190                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0196                     	;# 
   212  0197                     	;# 
   213  0198                     	;# 
   214  0199                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  020C                     	;# 
   219  020C                     	;# 
   220  020D                     	;# 
   221  020E                     	;# 
   222  020F                     	;# 
   223  020F                     	;# 
   224  0210                     	;# 
   225  0210                     	;# 
   226  0211                     	;# 
   227  0211                     	;# 
   228  0212                     	;# 
   229  0212                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0216                     	;# 
   235  0216                     	;# 
   236  0217                     	;# 
   237  0217                     	;# 
   238  0218                     	;# 
   239  0218                     	;# 
   240  0219                     	;# 
   241  021A                     	;# 
   242  021B                     	;# 
   243  021B                     	;# 
   244  021C                     	;# 
   245  021C                     	;# 
   246  021D                     	;# 
   247  021D                     	;# 
   248  021E                     	;# 
   249  021F                     	;# 
   250  028C                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  028D                     	;# 
   254  028E                     	;# 
   255  028F                     	;# 
   256  0290                     	;# 
   257  0290                     	;# 
   258  0291                     	;# 
   259  0292                     	;# 
   260  0292                     	;# 
   261  0293                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0296                     	;# 
   266  0296                     	;# 
   267  0297                     	;# 
   268  0298                     	;# 
   269  0298                     	;# 
   270  0299                     	;# 
   271  0299                     	;# 
   272  029A                     	;# 
   273  029B                     	;# 
   274  029C                     	;# 
   275  029C                     	;# 
   276  029D                     	;# 
   277  030C                     	;# 
   278  030C                     	;# 
   279  030D                     	;# 
   280  030E                     	;# 
   281  030F                     	;# 
   282  0310                     	;# 
   283  0310                     	;# 
   284  0311                     	;# 
   285  0312                     	;# 
   286  0313                     	;# 
   287  0314                     	;# 
   288  0314                     	;# 
   289  0315                     	;# 
   290  0316                     	;# 
   291  0317                     	;# 
   292  0318                     	;# 
   293  0318                     	;# 
   294  0319                     	;# 
   295  031A                     	;# 
   296  031B                     	;# 
   297  031C                     	;# 
   298  031C                     	;# 
   299  031D                     	;# 
   300  031E                     	;# 
   301  031F                     	;# 
   302  038C                     	;# 
   303  038D                     	;# 
   304  038E                     	;# 
   305  0390                     	;# 
   306  0391                     	;# 
   307  0392                     	;# 
   308  040C                     	;# 
   309  040D                     	;# 
   310  040E                     	;# 
   311  040F                     	;# 
   312  0410                     	;# 
   313  0411                     	;# 
   314  0416                     	;# 
   315  0416                     	;# 
   316  0417                     	;# 
   317  0418                     	;# 
   318  0418                     	;# 
   319  0419                     	;# 
   320  041A                     	;# 
   321  041A                     	;# 
   322  041B                     	;# 
   323  041C                     	;# 
   324  041C                     	;# 
   325  041D                     	;# 
   326  041E                     	;# 
   327  041F                     	;# 
   328  048C                     	;# 
   329  048C                     	;# 
   330  048D                     	;# 
   331  048E                     	;# 
   332  048F                     	;# 
   333  048F                     	;# 
   334  0490                     	;# 
   335  0491                     	;# 
   336  0492                     	;# 
   337  0492                     	;# 
   338  0493                     	;# 
   339  0494                     	;# 
   340  0495                     	;# 
   341  0495                     	;# 
   342  0496                     	;# 
   343  0497                     	;# 
   344  0498                     	;# 
   345  0499                     	;# 
   346  049A                     	;# 
   347  049B                     	;# 
   348  049C                     	;# 
   349  049D                     	;# 
   350  050C                     	;# 
   351  050C                     	;# 
   352  050D                     	;# 
   353  050E                     	;# 
   354  050F                     	;# 
   355  050F                     	;# 
   356  0510                     	;# 
   357  0511                     	;# 
   358  0512                     	;# 
   359  0512                     	;# 
   360  0513                     	;# 
   361  0514                     	;# 
   362  0515                     	;# 
   363  0515                     	;# 
   364  0516                     	;# 
   365  0517                     	;# 
   366  0518                     	;# 
   367  0519                     	;# 
   368  051A                     	;# 
   369  051B                     	;# 
   370  051C                     	;# 
   371  051D                     	;# 
   372  058C                     	;# 
   373  058C                     	;# 
   374  058D                     	;# 
   375  058E                     	;# 
   376  058F                     	;# 
   377  058F                     	;# 
   378  0590                     	;# 
   379  0591                     	;# 
   380  0592                     	;# 
   381  0593                     	;# 
   382  060C                     	;# 
   383  060D                     	;# 
   384  060E                     	;# 
   385  060F                     	;# 
   386  0610                     	;# 
   387  0611                     	;# 
   388  0612                     	;# 
   389  0613                     	;# 
   390  0614                     	;# 
   391  0616                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  061A                     	;# 
   396  061B                     	;# 
   397  061C                     	;# 
   398  061D                     	;# 
   399  061E                     	;# 
   400  068C                     	;# 
   401  068D                     	;# 
   402  068E                     	;# 
   403  068F                     	;# 
   404  0690                     	;# 
   405  0691                     	;# 
   406  0692                     	;# 
   407  0693                     	;# 
   408  0694                     	;# 
   409  070C                     	;# 
   410  070D                     	;# 
   411  070E                     	;# 
   412  070F                     	;# 
   413  0710                     	;# 
   414  0711                     	;# 
   415  0712                     	;# 
   416  0713                     	;# 
   417  0714                     	;# 
   418  0716                     	;# 
   419  0717                     	;# 
   420  0718                     	;# 
   421  0719                     	;# 
   422  071A                     	;# 
   423  071B                     	;# 
   424  071C                     	;# 
   425  071D                     	;# 
   426  071E                     	;# 
   427  0796                     	;# 
   428  0797                     	;# 
   429  0798                     	;# 
   430  0799                     	;# 
   431  079A                     	;# 
   432  079B                     	;# 
   433  080C                     	;# 
   434  080D                     	;# 
   435  080E                     	;# 
   436  080F                     	;# 
   437  0810                     	;# 
   438  0811                     	;# 
   439  0812                     	;# 
   440  0813                     	;# 
   441  0814                     	;# 
   442  081A                     	;# 
   443  081B                     	;# 
   444  081C                     	;# 
   445  081D                     	;# 
   446  081E                     	;# 
   447  081F                     	;# 
   448  088C                     	;# 
   449  088D                     	;# 
   450  088E                     	;# 
   451  088F                     	;# 
   452  0890                     	;# 
   453  0891                     	;# 
   454  0892                     	;# 
   455  0893                     	;# 
   456  0895                     	;# 
   457  0896                     	;# 
   458  0897                     	;# 
   459  0898                     	;# 
   460  0899                     	;# 
   461  089A                     	;# 
   462  089B                     	;# 
   463  090C                     	;# 
   464  090E                     	;# 
   465  090F                     	;# 
   466  091F                     	;# 
   467  091F                     	;# 
   468  098F                     	;# 
   469  098F                     	;# 
   470  0990                     	;# 
   471  0991                     	;# 
   472  0992                     	;# 
   473  0993                     	;# 
   474  0994                     	;# 
   475  0995                     	;# 
   476  0996                     	;# 
   477  0997                     	;# 
   478  0E0F                     	;# 
   479  0E10                     	;# 
   480  0E11                     	;# 
   481  0E12                     	;# 
   482  0E13                     	;# 
   483  0E14                     	;# 
   484  0E15                     	;# 
   485  0E16                     	;# 
   486  0E17                     	;# 
   487  0E18                     	;# 
   488  0E19                     	;# 
   489  0E1A                     	;# 
   490  0E1B                     	;# 
   491  0E1C                     	;# 
   492  0E1D                     	;# 
   493  0E1E                     	;# 
   494  0E1F                     	;# 
   495  0E20                     	;# 
   496  0E21                     	;# 
   497  0E22                     	;# 
   498  0E23                     	;# 
   499  0E24                     	;# 
   500  0E25                     	;# 
   501  0E26                     	;# 
   502  0E27                     	;# 
   503  0E28                     	;# 
   504  0E29                     	;# 
   505  0E2A                     	;# 
   506  0E2B                     	;# 
   507  0E2C                     	;# 
   508  0E2D                     	;# 
   509  0E2E                     	;# 
   510  0E2F                     	;# 
   511  0E30                     	;# 
   512  0E31                     	;# 
   513  0E32                     	;# 
   514  0E33                     	;# 
   515  0E34                     	;# 
   516  0E35                     	;# 
   517  0E36                     	;# 
   518  0E37                     	;# 
   519  0E8F                     	;# 
   520  0E90                     	;# 
   521  0E91                     	;# 
   522  0E92                     	;# 
   523  0E93                     	;# 
   524  0E94                     	;# 
   525  0E95                     	;# 
   526  0E96                     	;# 
   527  0E97                     	;# 
   528  0E9C                     	;# 
   529  0E9D                     	;# 
   530  0E9E                     	;# 
   531  0EA1                     	;# 
   532  0EA2                     	;# 
   533  0EA3                     	;# 
   534  0EA4                     	;# 
   535  0EA5                     	;# 
   536  0EA9                     	;# 
   537  0EAA                     	;# 
   538  0EAB                     	;# 
   539  0EAC                     	;# 
   540  0EB1                     	;# 
   541  0EB2                     	;# 
   542  0EB3                     	;# 
   543  0EB8                     	;# 
   544  0EB9                     	;# 
   545  0EBA                     	;# 
   546  0EBB                     	;# 
   547  0EBC                     	;# 
   548  0EBD                     	;# 
   549  0EBE                     	;# 
   550  0EC3                     	;# 
   551  0EC5                     	;# 
   552  0EC6                     	;# 
   553  0EC7                     	;# 
   554  0EC8                     	;# 
   555  0EC9                     	;# 
   556  0ECA                     	;# 
   557  0ECB                     	;# 
   558  0ECC                     	;# 
   559  0F10                     	;# 
   560  0F11                     	;# 
   561  0F12                     	;# 
   562  0F13                     	;# 
   563  0F14                     	;# 
   564  0F15                     	;# 
   565  0F16                     	;# 
   566  0F17                     	;# 
   567  0F18                     	;# 
   568  0F19                     	;# 
   569  0F1A                     	;# 
   570  0F1B                     	;# 
   571  0F1C                     	;# 
   572  0F1D                     	;# 
   573  0F1E                     	;# 
   574  0F1F                     	;# 
   575  0F20                     	;# 
   576  0F21                     	;# 
   577  0F22                     	;# 
   578  0F23                     	;# 
   579  0F24                     	;# 
   580  0F25                     	;# 
   581  0F26                     	;# 
   582  0F27                     	;# 
   583  0F38                     	;# 
   584  0F39                     	;# 
   585  0F3A                     	;# 
   586  0F3B                     	;# 
   587  0F3C                     	;# 
   588  0F3D                     	;# 
   589  0F3E                     	;# 
   590  0F3F                     	;# 
   591  0F40                     	;# 
   592  0F41                     	;# 
   593  0F43                     	;# 
   594  0F44                     	;# 
   595  0F45                     	;# 
   596  0F46                     	;# 
   597  0F47                     	;# 
   598  0F48                     	;# 
   599  0F49                     	;# 
   600  0F4A                     	;# 
   601  0F4B                     	;# 
   602  0F4C                     	;# 
   603  0F4E                     	;# 
   604  0F4F                     	;# 
   605  0F50                     	;# 
   606  0F51                     	;# 
   607  0F52                     	;# 
   608  0F53                     	;# 
   609  0F54                     	;# 
   610  0F55                     	;# 
   611  0F56                     	;# 
   612  0F57                     	;# 
   613  0F65                     	;# 
   614  0F68                     	;# 
   615  0F69                     	;# 
   616  0F6A                     	;# 
   617  0F6B                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  001C                     	;# 
   652  001C                     	;# 
   653  001D                     	;# 
   654  001D                     	;# 
   655  001E                     	;# 
   656  001F                     	;# 
   657  008C                     	;# 
   658  008C                     	;# 
   659  008D                     	;# 
   660  008E                     	;# 
   661  008E                     	;# 
   662  008F                     	;# 
   663  0090                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0093                     	;# 
   667  0094                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0097                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009A                     	;# 
   674  009B                     	;# 
   675  009C                     	;# 
   676  009D                     	;# 
   677  009E                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0110                     	;# 
   684  0110                     	;# 
   685  0111                     	;# 
   686  0112                     	;# 
   687  0112                     	;# 
   688  0113                     	;# 
   689  0114                     	;# 
   690  0114                     	;# 
   691  0115                     	;# 
   692  0116                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0119                     	;# 
   696  0119                     	;# 
   697  0119                     	;# 
   698  011A                     	;# 
   699  011A                     	;# 
   700  011A                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011B                     	;# 
   706  011C                     	;# 
   707  011C                     	;# 
   708  011C                     	;# 
   709  011D                     	;# 
   710  011D                     	;# 
   711  011D                     	;# 
   712  011E                     	;# 
   713  011E                     	;# 
   714  011E                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  011F                     	;# 
   720  018C                     	;# 
   721  018D                     	;# 
   722  018E                     	;# 
   723  018F                     	;# 
   724  0190                     	;# 
   725  0191                     	;# 
   726  0192                     	;# 
   727  0196                     	;# 
   728  0197                     	;# 
   729  0198                     	;# 
   730  0199                     	;# 
   731  019A                     	;# 
   732  019B                     	;# 
   733  019C                     	;# 
   734  020C                     	;# 
   735  020C                     	;# 
   736  020D                     	;# 
   737  020E                     	;# 
   738  020F                     	;# 
   739  020F                     	;# 
   740  0210                     	;# 
   741  0210                     	;# 
   742  0211                     	;# 
   743  0211                     	;# 
   744  0212                     	;# 
   745  0212                     	;# 
   746  0213                     	;# 
   747  0214                     	;# 
   748  0215                     	;# 
   749  0215                     	;# 
   750  0216                     	;# 
   751  0216                     	;# 
   752  0217                     	;# 
   753  0217                     	;# 
   754  0218                     	;# 
   755  0218                     	;# 
   756  0219                     	;# 
   757  021A                     	;# 
   758  021B                     	;# 
   759  021B                     	;# 
   760  021C                     	;# 
   761  021C                     	;# 
   762  021D                     	;# 
   763  021D                     	;# 
   764  021E                     	;# 
   765  021F                     	;# 
   766  028C                     	;# 
   767  028C                     	;# 
   768  028D                     	;# 
   769  028D                     	;# 
   770  028E                     	;# 
   771  028F                     	;# 
   772  0290                     	;# 
   773  0290                     	;# 
   774  0291                     	;# 
   775  0292                     	;# 
   776  0292                     	;# 
   777  0293                     	;# 
   778  0293                     	;# 
   779  0294                     	;# 
   780  0295                     	;# 
   781  0296                     	;# 
   782  0296                     	;# 
   783  0297                     	;# 
   784  0298                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029B                     	;# 
   790  029C                     	;# 
   791  029C                     	;# 
   792  029D                     	;# 
   793  030C                     	;# 
   794  030C                     	;# 
   795  030D                     	;# 
   796  030E                     	;# 
   797  030F                     	;# 
   798  0310                     	;# 
   799  0310                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0314                     	;# 
   804  0314                     	;# 
   805  0315                     	;# 
   806  0316                     	;# 
   807  0317                     	;# 
   808  0318                     	;# 
   809  0318                     	;# 
   810  0319                     	;# 
   811  031A                     	;# 
   812  031B                     	;# 
   813  031C                     	;# 
   814  031C                     	;# 
   815  031D                     	;# 
   816  031E                     	;# 
   817  031F                     	;# 
   818  038C                     	;# 
   819  038D                     	;# 
   820  038E                     	;# 
   821  0390                     	;# 
   822  0391                     	;# 
   823  0392                     	;# 
   824  040C                     	;# 
   825  040D                     	;# 
   826  040E                     	;# 
   827  040F                     	;# 
   828  0410                     	;# 
   829  0411                     	;# 
   830  0416                     	;# 
   831  0416                     	;# 
   832  0417                     	;# 
   833  0418                     	;# 
   834  0418                     	;# 
   835  0419                     	;# 
   836  041A                     	;# 
   837  041A                     	;# 
   838  041B                     	;# 
   839  041C                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  041F                     	;# 
   844  048C                     	;# 
   845  048C                     	;# 
   846  048D                     	;# 
   847  048E                     	;# 
   848  048F                     	;# 
   849  048F                     	;# 
   850  0490                     	;# 
   851  0491                     	;# 
   852  0492                     	;# 
   853  0492                     	;# 
   854  0493                     	;# 
   855  0494                     	;# 
   856  0495                     	;# 
   857  0495                     	;# 
   858  0496                     	;# 
   859  0497                     	;# 
   860  0498                     	;# 
   861  0499                     	;# 
   862  049A                     	;# 
   863  049B                     	;# 
   864  049C                     	;# 
   865  049D                     	;# 
   866  050C                     	;# 
   867  050C                     	;# 
   868  050D                     	;# 
   869  050E                     	;# 
   870  050F                     	;# 
   871  050F                     	;# 
   872  0510                     	;# 
   873  0511                     	;# 
   874  0512                     	;# 
   875  0512                     	;# 
   876  0513                     	;# 
   877  0514                     	;# 
   878  0515                     	;# 
   879  0515                     	;# 
   880  0516                     	;# 
   881  0517                     	;# 
   882  0518                     	;# 
   883  0519                     	;# 
   884  051A                     	;# 
   885  051B                     	;# 
   886  051C                     	;# 
   887  051D                     	;# 
   888  058C                     	;# 
   889  058C                     	;# 
   890  058D                     	;# 
   891  058E                     	;# 
   892  058F                     	;# 
   893  058F                     	;# 
   894  0590                     	;# 
   895  0591                     	;# 
   896  0592                     	;# 
   897  0593                     	;# 
   898  060C                     	;# 
   899  060D                     	;# 
   900  060E                     	;# 
   901  060F                     	;# 
   902  0610                     	;# 
   903  0611                     	;# 
   904  0612                     	;# 
   905  0613                     	;# 
   906  0614                     	;# 
   907  0616                     	;# 
   908  0617                     	;# 
   909  0618                     	;# 
   910  0619                     	;# 
   911  061A                     	;# 
   912  061B                     	;# 
   913  061C                     	;# 
   914  061D                     	;# 
   915  061E                     	;# 
   916  068C                     	;# 
   917  068D                     	;# 
   918  068E                     	;# 
   919  068F                     	;# 
   920  0690                     	;# 
   921  0691                     	;# 
   922  0692                     	;# 
   923  0693                     	;# 
   924  0694                     	;# 
   925  070C                     	;# 
   926  070D                     	;# 
   927  070E                     	;# 
   928  070F                     	;# 
   929  0710                     	;# 
   930  0711                     	;# 
   931  0712                     	;# 
   932  0713                     	;# 
   933  0714                     	;# 
   934  0716                     	;# 
   935  0717                     	;# 
   936  0718                     	;# 
   937  0719                     	;# 
   938  071A                     	;# 
   939  071B                     	;# 
   940  071C                     	;# 
   941  071D                     	;# 
   942  071E                     	;# 
   943  0796                     	;# 
   944  0797                     	;# 
   945  0798                     	;# 
   946  0799                     	;# 
   947  079A                     	;# 
   948  079B                     	;# 
   949  080C                     	;# 
   950  080D                     	;# 
   951  080E                     	;# 
   952  080F                     	;# 
   953  0810                     	;# 
   954  0811                     	;# 
   955  0812                     	;# 
   956  0813                     	;# 
   957  0814                     	;# 
   958  081A                     	;# 
   959  081B                     	;# 
   960  081C                     	;# 
   961  081D                     	;# 
   962  081E                     	;# 
   963  081F                     	;# 
   964  088C                     	;# 
   965  088D                     	;# 
   966  088E                     	;# 
   967  088F                     	;# 
   968  0890                     	;# 
   969  0891                     	;# 
   970  0892                     	;# 
   971  0893                     	;# 
   972  0895                     	;# 
   973  0896                     	;# 
   974  0897                     	;# 
   975  0898                     	;# 
   976  0899                     	;# 
   977  089A                     	;# 
   978  089B                     	;# 
   979  090C                     	;# 
   980  090E                     	;# 
   981  090F                     	;# 
   982  091F                     	;# 
   983  091F                     	;# 
   984  098F                     	;# 
   985  098F                     	;# 
   986  0990                     	;# 
   987  0991                     	;# 
   988  0992                     	;# 
   989  0993                     	;# 
   990  0994                     	;# 
   991  0995                     	;# 
   992  0996                     	;# 
   993  0997                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E18                     	;# 
  1004  0E19                     	;# 
  1005  0E1A                     	;# 
  1006  0E1B                     	;# 
  1007  0E1C                     	;# 
  1008  0E1D                     	;# 
  1009  0E1E                     	;# 
  1010  0E1F                     	;# 
  1011  0E20                     	;# 
  1012  0E21                     	;# 
  1013  0E22                     	;# 
  1014  0E23                     	;# 
  1015  0E24                     	;# 
  1016  0E25                     	;# 
  1017  0E26                     	;# 
  1018  0E27                     	;# 
  1019  0E28                     	;# 
  1020  0E29                     	;# 
  1021  0E2A                     	;# 
  1022  0E2B                     	;# 
  1023  0E2C                     	;# 
  1024  0E2D                     	;# 
  1025  0E2E                     	;# 
  1026  0E2F                     	;# 
  1027  0E30                     	;# 
  1028  0E31                     	;# 
  1029  0E32                     	;# 
  1030  0E33                     	;# 
  1031  0E34                     	;# 
  1032  0E35                     	;# 
  1033  0E36                     	;# 
  1034  0E37                     	;# 
  1035  0E8F                     	;# 
  1036  0E90                     	;# 
  1037  0E91                     	;# 
  1038  0E92                     	;# 
  1039  0E93                     	;# 
  1040  0E94                     	;# 
  1041  0E95                     	;# 
  1042  0E96                     	;# 
  1043  0E97                     	;# 
  1044  0E9C                     	;# 
  1045  0E9D                     	;# 
  1046  0E9E                     	;# 
  1047  0EA1                     	;# 
  1048  0EA2                     	;# 
  1049  0EA3                     	;# 
  1050  0EA4                     	;# 
  1051  0EA5                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EB1                     	;# 
  1057  0EB2                     	;# 
  1058  0EB3                     	;# 
  1059  0EB8                     	;# 
  1060  0EB9                     	;# 
  1061  0EBA                     	;# 
  1062  0EBB                     	;# 
  1063  0EBC                     	;# 
  1064  0EBD                     	;# 
  1065  0EBE                     	;# 
  1066  0EC3                     	;# 
  1067  0EC5                     	;# 
  1068  0EC6                     	;# 
  1069  0EC7                     	;# 
  1070  0EC8                     	;# 
  1071  0EC9                     	;# 
  1072  0ECA                     	;# 
  1073  0ECB                     	;# 
  1074  0ECC                     	;# 
  1075  0F10                     	;# 
  1076  0F11                     	;# 
  1077  0F12                     	;# 
  1078  0F13                     	;# 
  1079  0F14                     	;# 
  1080  0F15                     	;# 
  1081  0F16                     	;# 
  1082  0F17                     	;# 
  1083  0F18                     	;# 
  1084  0F19                     	;# 
  1085  0F1A                     	;# 
  1086  0F1B                     	;# 
  1087  0F1C                     	;# 
  1088  0F1D                     	;# 
  1089  0F1E                     	;# 
  1090  0F1F                     	;# 
  1091  0F20                     	;# 
  1092  0F21                     	;# 
  1093  0F22                     	;# 
  1094  0F23                     	;# 
  1095  0F24                     	;# 
  1096  0F25                     	;# 
  1097  0F26                     	;# 
  1098  0F27                     	;# 
  1099  0F38                     	;# 
  1100  0F39                     	;# 
  1101  0F3A                     	;# 
  1102  0F3B                     	;# 
  1103  0F3C                     	;# 
  1104  0F3D                     	;# 
  1105  0F3E                     	;# 
  1106  0F3F                     	;# 
  1107  0F40                     	;# 
  1108  0F41                     	;# 
  1109  0F43                     	;# 
  1110  0F44                     	;# 
  1111  0F45                     	;# 
  1112  0F46                     	;# 
  1113  0F47                     	;# 
  1114  0F48                     	;# 
  1115  0F49                     	;# 
  1116  0F4A                     	;# 
  1117  0F4B                     	;# 
  1118  0F4C                     	;# 
  1119  0F4E                     	;# 
  1120  0F4F                     	;# 
  1121  0F50                     	;# 
  1122  0F51                     	;# 
  1123  0F52                     	;# 
  1124  0F53                     	;# 
  1125  0F54                     	;# 
  1126  0F55                     	;# 
  1127  0F56                     	;# 
  1128  0F57                     	;# 
  1129  0F65                     	;# 
  1130  0F68                     	;# 
  1131  0F69                     	;# 
  1132  0F6A                     	;# 
  1133  0F6B                     	;# 
  1134  0FE4                     	;# 
  1135  0FE5                     	;# 
  1136  0FE6                     	;# 
  1137  0FE7                     	;# 
  1138  0FE8                     	;# 
  1139  0FE9                     	;# 
  1140  0FEA                     	;# 
  1141  0FEB                     	;# 
  1142  0FED                     	;# 
  1143  0FEE                     	;# 
  1144  0FEF                     	;# 
  1145  0000                     	;# 
  1146  0001                     	;# 
  1147  0002                     	;# 
  1148  0003                     	;# 
  1149  0004                     	;# 
  1150  0005                     	;# 
  1151  0006                     	;# 
  1152  0007                     	;# 
  1153  0008                     	;# 
  1154  0009                     	;# 
  1155  000A                     	;# 
  1156  000B                     	;# 
  1157  000C                     	;# 
  1158  000D                     	;# 
  1159  000E                     	;# 
  1160  0010                     	;# 
  1161  0011                     	;# 
  1162  0012                     	;# 
  1163  0013                     	;# 
  1164  0016                     	;# 
  1165  0017                     	;# 
  1166  0018                     	;# 
  1167  001C                     	;# 
  1168  001C                     	;# 
  1169  001D                     	;# 
  1170  001D                     	;# 
  1171  001E                     	;# 
  1172  001F                     	;# 
  1173  008C                     	;# 
  1174  008C                     	;# 
  1175  008D                     	;# 
  1176  008E                     	;# 
  1177  008E                     	;# 
  1178  008F                     	;# 
  1179  0090                     	;# 
  1180  0090                     	;# 
  1181  0091                     	;# 
  1182  0093                     	;# 
  1183  0094                     	;# 
  1184  0095                     	;# 
  1185  0096                     	;# 
  1186  0097                     	;# 
  1187  0098                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009C                     	;# 
  1192  009D                     	;# 
  1193  009E                     	;# 
  1194  010C                     	;# 
  1195  010D                     	;# 
  1196  010E                     	;# 
  1197  010E                     	;# 
  1198  010F                     	;# 
  1199  0110                     	;# 
  1200  0110                     	;# 
  1201  0111                     	;# 
  1202  0112                     	;# 
  1203  0112                     	;# 
  1204  0113                     	;# 
  1205  0114                     	;# 
  1206  0114                     	;# 
  1207  0115                     	;# 
  1208  0116                     	;# 
  1209  0116                     	;# 
  1210  0117                     	;# 
  1211  0119                     	;# 
  1212  0119                     	;# 
  1213  0119                     	;# 
  1214  011A                     	;# 
  1215  011A                     	;# 
  1216  011A                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011B                     	;# 
  1222  011C                     	;# 
  1223  011C                     	;# 
  1224  011C                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011D                     	;# 
  1228  011E                     	;# 
  1229  011E                     	;# 
  1230  011E                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  011F                     	;# 
  1236  018C                     	;# 
  1237  018D                     	;# 
  1238  018E                     	;# 
  1239  018F                     	;# 
  1240  0190                     	;# 
  1241  0191                     	;# 
  1242  0192                     	;# 
  1243  0196                     	;# 
  1244  0197                     	;# 
  1245  0198                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019B                     	;# 
  1249  019C                     	;# 
  1250  020C                     	;# 
  1251  020C                     	;# 
  1252  020D                     	;# 
  1253  020E                     	;# 
  1254  020F                     	;# 
  1255  020F                     	;# 
  1256  0210                     	;# 
  1257  0210                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0214                     	;# 
  1264  0215                     	;# 
  1265  0215                     	;# 
  1266  0216                     	;# 
  1267  0216                     	;# 
  1268  0217                     	;# 
  1269  0217                     	;# 
  1270  0218                     	;# 
  1271  0218                     	;# 
  1272  0219                     	;# 
  1273  021A                     	;# 
  1274  021B                     	;# 
  1275  021B                     	;# 
  1276  021C                     	;# 
  1277  021C                     	;# 
  1278  021D                     	;# 
  1279  021D                     	;# 
  1280  021E                     	;# 
  1281  021F                     	;# 
  1282  028C                     	;# 
  1283  028C                     	;# 
  1284  028D                     	;# 
  1285  028D                     	;# 
  1286  028E                     	;# 
  1287  028F                     	;# 
  1288  0290                     	;# 
  1289  0290                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0293                     	;# 
  1295  0294                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0296                     	;# 
  1299  0297                     	;# 
  1300  0298                     	;# 
  1301  0298                     	;# 
  1302  0299                     	;# 
  1303  0299                     	;# 
  1304  029A                     	;# 
  1305  029B                     	;# 
  1306  029C                     	;# 
  1307  029C                     	;# 
  1308  029D                     	;# 
  1309  030C                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  030F                     	;# 
  1314  0310                     	;# 
  1315  0310                     	;# 
  1316  0311                     	;# 
  1317  0312                     	;# 
  1318  0313                     	;# 
  1319  0314                     	;# 
  1320  0314                     	;# 
  1321  0315                     	;# 
  1322  0316                     	;# 
  1323  0317                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  031B                     	;# 
  1329  031C                     	;# 
  1330  031C                     	;# 
  1331  031D                     	;# 
  1332  031E                     	;# 
  1333  031F                     	;# 
  1334  038C                     	;# 
  1335  038D                     	;# 
  1336  038E                     	;# 
  1337  0390                     	;# 
  1338  0391                     	;# 
  1339  0392                     	;# 
  1340  040C                     	;# 
  1341  040D                     	;# 
  1342  040E                     	;# 
  1343  040F                     	;# 
  1344  0410                     	;# 
  1345  0411                     	;# 
  1346  0416                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  0418                     	;# 
  1350  0418                     	;# 
  1351  0419                     	;# 
  1352  041A                     	;# 
  1353  041A                     	;# 
  1354  041B                     	;# 
  1355  041C                     	;# 
  1356  041C                     	;# 
  1357  041D                     	;# 
  1358  041E                     	;# 
  1359  041F                     	;# 
  1360  048C                     	;# 
  1361  048C                     	;# 
  1362  048D                     	;# 
  1363  048E                     	;# 
  1364  048F                     	;# 
  1365  048F                     	;# 
  1366  0490                     	;# 
  1367  0491                     	;# 
  1368  0492                     	;# 
  1369  0492                     	;# 
  1370  0493                     	;# 
  1371  0494                     	;# 
  1372  0495                     	;# 
  1373  0495                     	;# 
  1374  0496                     	;# 
  1375  0497                     	;# 
  1376  0498                     	;# 
  1377  0499                     	;# 
  1378  049A                     	;# 
  1379  049B                     	;# 
  1380  049C                     	;# 
  1381  049D                     	;# 
  1382  050C                     	;# 
  1383  050C                     	;# 
  1384  050D                     	;# 
  1385  050E                     	;# 
  1386  050F                     	;# 
  1387  050F                     	;# 
  1388  0510                     	;# 
  1389  0511                     	;# 
  1390  0512                     	;# 
  1391  0512                     	;# 
  1392  0513                     	;# 
  1393  0514                     	;# 
  1394  0515                     	;# 
  1395  0515                     	;# 
  1396  0516                     	;# 
  1397  0517                     	;# 
  1398  0518                     	;# 
  1399  0519                     	;# 
  1400  051A                     	;# 
  1401  051B                     	;# 
  1402  051C                     	;# 
  1403  051D                     	;# 
  1404  058C                     	;# 
  1405  058C                     	;# 
  1406  058D                     	;# 
  1407  058E                     	;# 
  1408  058F                     	;# 
  1409  058F                     	;# 
  1410  0590                     	;# 
  1411  0591                     	;# 
  1412  0592                     	;# 
  1413  0593                     	;# 
  1414  060C                     	;# 
  1415  060D                     	;# 
  1416  060E                     	;# 
  1417  060F                     	;# 
  1418  0610                     	;# 
  1419  0611                     	;# 
  1420  0612                     	;# 
  1421  0613                     	;# 
  1422  0614                     	;# 
  1423  0616                     	;# 
  1424  0617                     	;# 
  1425  0618                     	;# 
  1426  0619                     	;# 
  1427  061A                     	;# 
  1428  061B                     	;# 
  1429  061C                     	;# 
  1430  061D                     	;# 
  1431  061E                     	;# 
  1432  068C                     	;# 
  1433  068D                     	;# 
  1434  068E                     	;# 
  1435  068F                     	;# 
  1436  0690                     	;# 
  1437  0691                     	;# 
  1438  0692                     	;# 
  1439  0693                     	;# 
  1440  0694                     	;# 
  1441  070C                     	;# 
  1442  070D                     	;# 
  1443  070E                     	;# 
  1444  070F                     	;# 
  1445  0710                     	;# 
  1446  0711                     	;# 
  1447  0712                     	;# 
  1448  0713                     	;# 
  1449  0714                     	;# 
  1450  0716                     	;# 
  1451  0717                     	;# 
  1452  0718                     	;# 
  1453  0719                     	;# 
  1454  071A                     	;# 
  1455  071B                     	;# 
  1456  071C                     	;# 
  1457  071D                     	;# 
  1458  071E                     	;# 
  1459  0796                     	;# 
  1460  0797                     	;# 
  1461  0798                     	;# 
  1462  0799                     	;# 
  1463  079A                     	;# 
  1464  079B                     	;# 
  1465  080C                     	;# 
  1466  080D                     	;# 
  1467  080E                     	;# 
  1468  080F                     	;# 
  1469  0810                     	;# 
  1470  0811                     	;# 
  1471  0812                     	;# 
  1472  0813                     	;# 
  1473  0814                     	;# 
  1474  081A                     	;# 
  1475  081B                     	;# 
  1476  081C                     	;# 
  1477  081D                     	;# 
  1478  081E                     	;# 
  1479  081F                     	;# 
  1480  088C                     	;# 
  1481  088D                     	;# 
  1482  088E                     	;# 
  1483  088F                     	;# 
  1484  0890                     	;# 
  1485  0891                     	;# 
  1486  0892                     	;# 
  1487  0893                     	;# 
  1488  0895                     	;# 
  1489  0896                     	;# 
  1490  0897                     	;# 
  1491  0898                     	;# 
  1492  0899                     	;# 
  1493  089A                     	;# 
  1494  089B                     	;# 
  1495  090C                     	;# 
  1496  090E                     	;# 
  1497  090F                     	;# 
  1498  091F                     	;# 
  1499  091F                     	;# 
  1500  098F                     	;# 
  1501  098F                     	;# 
  1502  0990                     	;# 
  1503  0991                     	;# 
  1504  0992                     	;# 
  1505  0993                     	;# 
  1506  0994                     	;# 
  1507  0995                     	;# 
  1508  0996                     	;# 
  1509  0997                     	;# 
  1510  0E0F                     	;# 
  1511  0E10                     	;# 
  1512  0E11                     	;# 
  1513  0E12                     	;# 
  1514  0E13                     	;# 
  1515  0E14                     	;# 
  1516  0E15                     	;# 
  1517  0E16                     	;# 
  1518  0E17                     	;# 
  1519  0E18                     	;# 
  1520  0E19                     	;# 
  1521  0E1A                     	;# 
  1522  0E1B                     	;# 
  1523  0E1C                     	;# 
  1524  0E1D                     	;# 
  1525  0E1E                     	;# 
  1526  0E1F                     	;# 
  1527  0E20                     	;# 
  1528  0E21                     	;# 
  1529  0E22                     	;# 
  1530  0E23                     	;# 
  1531  0E24                     	;# 
  1532  0E25                     	;# 
  1533  0E26                     	;# 
  1534  0E27                     	;# 
  1535  0E28                     	;# 
  1536  0E29                     	;# 
  1537  0E2A                     	;# 
  1538  0E2B                     	;# 
  1539  0E2C                     	;# 
  1540  0E2D                     	;# 
  1541  0E2E                     	;# 
  1542  0E2F                     	;# 
  1543  0E30                     	;# 
  1544  0E31                     	;# 
  1545  0E32                     	;# 
  1546  0E33                     	;# 
  1547  0E34                     	;# 
  1548  0E35                     	;# 
  1549  0E36                     	;# 
  1550  0E37                     	;# 
  1551  0E8F                     	;# 
  1552  0E90                     	;# 
  1553  0E91                     	;# 
  1554  0E92                     	;# 
  1555  0E93                     	;# 
  1556  0E94                     	;# 
  1557  0E95                     	;# 
  1558  0E96                     	;# 
  1559  0E97                     	;# 
  1560  0E9C                     	;# 
  1561  0E9D                     	;# 
  1562  0E9E                     	;# 
  1563  0EA1                     	;# 
  1564  0EA2                     	;# 
  1565  0EA3                     	;# 
  1566  0EA4                     	;# 
  1567  0EA5                     	;# 
  1568  0EA9                     	;# 
  1569  0EAA                     	;# 
  1570  0EAB                     	;# 
  1571  0EAC                     	;# 
  1572  0EB1                     	;# 
  1573  0EB2                     	;# 
  1574  0EB3                     	;# 
  1575  0EB8                     	;# 
  1576  0EB9                     	;# 
  1577  0EBA                     	;# 
  1578  0EBB                     	;# 
  1579  0EBC                     	;# 
  1580  0EBD                     	;# 
  1581  0EBE                     	;# 
  1582  0EC3                     	;# 
  1583  0EC5                     	;# 
  1584  0EC6                     	;# 
  1585  0EC7                     	;# 
  1586  0EC8                     	;# 
  1587  0EC9                     	;# 
  1588  0ECA                     	;# 
  1589  0ECB                     	;# 
  1590  0ECC                     	;# 
  1591  0F10                     	;# 
  1592  0F11                     	;# 
  1593  0F12                     	;# 
  1594  0F13                     	;# 
  1595  0F14                     	;# 
  1596  0F15                     	;# 
  1597  0F16                     	;# 
  1598  0F17                     	;# 
  1599  0F18                     	;# 
  1600  0F19                     	;# 
  1601  0F1A                     	;# 
  1602  0F1B                     	;# 
  1603  0F1C                     	;# 
  1604  0F1D                     	;# 
  1605  0F1E                     	;# 
  1606  0F1F                     	;# 
  1607  0F20                     	;# 
  1608  0F21                     	;# 
  1609  0F22                     	;# 
  1610  0F23                     	;# 
  1611  0F24                     	;# 
  1612  0F25                     	;# 
  1613  0F26                     	;# 
  1614  0F27                     	;# 
  1615  0F38                     	;# 
  1616  0F39                     	;# 
  1617  0F3A                     	;# 
  1618  0F3B                     	;# 
  1619  0F3C                     	;# 
  1620  0F3D                     	;# 
  1621  0F3E                     	;# 
  1622  0F3F                     	;# 
  1623  0F40                     	;# 
  1624  0F41                     	;# 
  1625  0F43                     	;# 
  1626  0F44                     	;# 
  1627  0F45                     	;# 
  1628  0F46                     	;# 
  1629  0F47                     	;# 
  1630  0F48                     	;# 
  1631  0F49                     	;# 
  1632  0F4A                     	;# 
  1633  0F4B                     	;# 
  1634  0F4C                     	;# 
  1635  0F4E                     	;# 
  1636  0F4F                     	;# 
  1637  0F50                     	;# 
  1638  0F51                     	;# 
  1639  0F52                     	;# 
  1640  0F53                     	;# 
  1641  0F54                     	;# 
  1642  0F55                     	;# 
  1643  0F56                     	;# 
  1644  0F57                     	;# 
  1645  0F65                     	;# 
  1646  0F68                     	;# 
  1647  0F69                     	;# 
  1648  0F6A                     	;# 
  1649  0F6B                     	;# 
  1650  0FE4                     	;# 
  1651  0FE5                     	;# 
  1652  0FE6                     	;# 
  1653  0FE7                     	;# 
  1654  0FE8                     	;# 
  1655  0FE9                     	;# 
  1656  0FEA                     	;# 
  1657  0FEB                     	;# 
  1658  0FED                     	;# 
  1659  0FEE                     	;# 
  1660  0FEF                     	;# 
  1661  0000                     	;# 
  1662  0001                     	;# 
  1663  0002                     	;# 
  1664  0003                     	;# 
  1665  0004                     	;# 
  1666  0005                     	;# 
  1667  0006                     	;# 
  1668  0007                     	;# 
  1669  0008                     	;# 
  1670  0009                     	;# 
  1671  000A                     	;# 
  1672  000B                     	;# 
  1673  000C                     	;# 
  1674  000D                     	;# 
  1675  000E                     	;# 
  1676  0010                     	;# 
  1677  0011                     	;# 
  1678  0012                     	;# 
  1679  0013                     	;# 
  1680  0016                     	;# 
  1681  0017                     	;# 
  1682  0018                     	;# 
  1683  001C                     	;# 
  1684  001C                     	;# 
  1685  001D                     	;# 
  1686  001D                     	;# 
  1687  001E                     	;# 
  1688  001F                     	;# 
  1689  008C                     	;# 
  1690  008C                     	;# 
  1691  008D                     	;# 
  1692  008E                     	;# 
  1693  008E                     	;# 
  1694  008F                     	;# 
  1695  0090                     	;# 
  1696  0090                     	;# 
  1697  0091                     	;# 
  1698  0093                     	;# 
  1699  0094                     	;# 
  1700  0095                     	;# 
  1701  0096                     	;# 
  1702  0097                     	;# 
  1703  0098                     	;# 
  1704  0099                     	;# 
  1705  009A                     	;# 
  1706  009B                     	;# 
  1707  009C                     	;# 
  1708  009D                     	;# 
  1709  009E                     	;# 
  1710  010C                     	;# 
  1711  010D                     	;# 
  1712  010E                     	;# 
  1713  010E                     	;# 
  1714  010F                     	;# 
  1715  0110                     	;# 
  1716  0110                     	;# 
  1717  0111                     	;# 
  1718  0112                     	;# 
  1719  0112                     	;# 
  1720  0113                     	;# 
  1721  0114                     	;# 
  1722  0114                     	;# 
  1723  0115                     	;# 
  1724  0116                     	;# 
  1725  0116                     	;# 
  1726  0117                     	;# 
  1727  0119                     	;# 
  1728  0119                     	;# 
  1729  0119                     	;# 
  1730  011A                     	;# 
  1731  011A                     	;# 
  1732  011A                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011B                     	;# 
  1738  011C                     	;# 
  1739  011C                     	;# 
  1740  011C                     	;# 
  1741  011D                     	;# 
  1742  011D                     	;# 
  1743  011D                     	;# 
  1744  011E                     	;# 
  1745  011E                     	;# 
  1746  011E                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  011F                     	;# 
  1752  018C                     	;# 
  1753  018D                     	;# 
  1754  018E                     	;# 
  1755  018F                     	;# 
  1756  0190                     	;# 
  1757  0191                     	;# 
  1758  0192                     	;# 
  1759  0196                     	;# 
  1760  0197                     	;# 
  1761  0198                     	;# 
  1762  0199                     	;# 
  1763  019A                     	;# 
  1764  019B                     	;# 
  1765  019C                     	;# 
  1766  020C                     	;# 
  1767  020C                     	;# 
  1768  020D                     	;# 
  1769  020E                     	;# 
  1770  020F                     	;# 
  1771  020F                     	;# 
  1772  0210                     	;# 
  1773  0210                     	;# 
  1774  0211                     	;# 
  1775  0211                     	;# 
  1776  0212                     	;# 
  1777  0212                     	;# 
  1778  0213                     	;# 
  1779  0214                     	;# 
  1780  0215                     	;# 
  1781  0215                     	;# 
  1782  0216                     	;# 
  1783  0216                     	;# 
  1784  0217                     	;# 
  1785  0217                     	;# 
  1786  0218                     	;# 
  1787  0218                     	;# 
  1788  0219                     	;# 
  1789  021A                     	;# 
  1790  021B                     	;# 
  1791  021B                     	;# 
  1792  021C                     	;# 
  1793  021C                     	;# 
  1794  021D                     	;# 
  1795  021D                     	;# 
  1796  021E                     	;# 
  1797  021F                     	;# 
  1798  028C                     	;# 
  1799  028C                     	;# 
  1800  028D                     	;# 
  1801  028D                     	;# 
  1802  028E                     	;# 
  1803  028F                     	;# 
  1804  0290                     	;# 
  1805  0290                     	;# 
  1806  0291                     	;# 
  1807  0292                     	;# 
  1808  0292                     	;# 
  1809  0293                     	;# 
  1810  0293                     	;# 
  1811  0294                     	;# 
  1812  0295                     	;# 
  1813  0296                     	;# 
  1814  0296                     	;# 
  1815  0297                     	;# 
  1816  0298                     	;# 
  1817  0298                     	;# 
  1818  0299                     	;# 
  1819  0299                     	;# 
  1820  029A                     	;# 
  1821  029B                     	;# 
  1822  029C                     	;# 
  1823  029C                     	;# 
  1824  029D                     	;# 
  1825  030C                     	;# 
  1826  030C                     	;# 
  1827  030D                     	;# 
  1828  030E                     	;# 
  1829  030F                     	;# 
  1830  0310                     	;# 
  1831  0310                     	;# 
  1832  0311                     	;# 
  1833  0312                     	;# 
  1834  0313                     	;# 
  1835  0314                     	;# 
  1836  0314                     	;# 
  1837  0315                     	;# 
  1838  0316                     	;# 
  1839  0317                     	;# 
  1840  0318                     	;# 
  1841  0318                     	;# 
  1842  0319                     	;# 
  1843  031A                     	;# 
  1844  031B                     	;# 
  1845  031C                     	;# 
  1846  031C                     	;# 
  1847  031D                     	;# 
  1848  031E                     	;# 
  1849  031F                     	;# 
  1850  038C                     	;# 
  1851  038D                     	;# 
  1852  038E                     	;# 
  1853  0390                     	;# 
  1854  0391                     	;# 
  1855  0392                     	;# 
  1856  040C                     	;# 
  1857  040D                     	;# 
  1858  040E                     	;# 
  1859  040F                     	;# 
  1860  0410                     	;# 
  1861  0411                     	;# 
  1862  0416                     	;# 
  1863  0416                     	;# 
  1864  0417                     	;# 
  1865  0418                     	;# 
  1866  0418                     	;# 
  1867  0419                     	;# 
  1868  041A                     	;# 
  1869  041A                     	;# 
  1870  041B                     	;# 
  1871  041C                     	;# 
  1872  041C                     	;# 
  1873  041D                     	;# 
  1874  041E                     	;# 
  1875  041F                     	;# 
  1876  048C                     	;# 
  1877  048C                     	;# 
  1878  048D                     	;# 
  1879  048E                     	;# 
  1880  048F                     	;# 
  1881  048F                     	;# 
  1882  0490                     	;# 
  1883  0491                     	;# 
  1884  0492                     	;# 
  1885  0492                     	;# 
  1886  0493                     	;# 
  1887  0494                     	;# 
  1888  0495                     	;# 
  1889  0495                     	;# 
  1890  0496                     	;# 
  1891  0497                     	;# 
  1892  0498                     	;# 
  1893  0499                     	;# 
  1894  049A                     	;# 
  1895  049B                     	;# 
  1896  049C                     	;# 
  1897  049D                     	;# 
  1898  050C                     	;# 
  1899  050C                     	;# 
  1900  050D                     	;# 
  1901  050E                     	;# 
  1902  050F                     	;# 
  1903  050F                     	;# 
  1904  0510                     	;# 
  1905  0511                     	;# 
  1906  0512                     	;# 
  1907  0512                     	;# 
  1908  0513                     	;# 
  1909  0514                     	;# 
  1910  0515                     	;# 
  1911  0515                     	;# 
  1912  0516                     	;# 
  1913  0517                     	;# 
  1914  0518                     	;# 
  1915  0519                     	;# 
  1916  051A                     	;# 
  1917  051B                     	;# 
  1918  051C                     	;# 
  1919  051D                     	;# 
  1920  058C                     	;# 
  1921  058C                     	;# 
  1922  058D                     	;# 
  1923  058E                     	;# 
  1924  058F                     	;# 
  1925  058F                     	;# 
  1926  0590                     	;# 
  1927  0591                     	;# 
  1928  0592                     	;# 
  1929  0593                     	;# 
  1930  060C                     	;# 
  1931  060D                     	;# 
  1932  060E                     	;# 
  1933  060F                     	;# 
  1934  0610                     	;# 
  1935  0611                     	;# 
  1936  0612                     	;# 
  1937  0613                     	;# 
  1938  0614                     	;# 
  1939  0616                     	;# 
  1940  0617                     	;# 
  1941  0618                     	;# 
  1942  0619                     	;# 
  1943  061A                     	;# 
  1944  061B                     	;# 
  1945  061C                     	;# 
  1946  061D                     	;# 
  1947  061E                     	;# 
  1948  068C                     	;# 
  1949  068D                     	;# 
  1950  068E                     	;# 
  1951  068F                     	;# 
  1952  0690                     	;# 
  1953  0691                     	;# 
  1954  0692                     	;# 
  1955  0693                     	;# 
  1956  0694                     	;# 
  1957  070C                     	;# 
  1958  070D                     	;# 
  1959  070E                     	;# 
  1960  070F                     	;# 
  1961  0710                     	;# 
  1962  0711                     	;# 
  1963  0712                     	;# 
  1964  0713                     	;# 
  1965  0714                     	;# 
  1966  0716                     	;# 
  1967  0717                     	;# 
  1968  0718                     	;# 
  1969  0719                     	;# 
  1970  071A                     	;# 
  1971  071B                     	;# 
  1972  071C                     	;# 
  1973  071D                     	;# 
  1974  071E                     	;# 
  1975  0796                     	;# 
  1976  0797                     	;# 
  1977  0798                     	;# 
  1978  0799                     	;# 
  1979  079A                     	;# 
  1980  079B                     	;# 
  1981  080C                     	;# 
  1982  080D                     	;# 
  1983  080E                     	;# 
  1984  080F                     	;# 
  1985  0810                     	;# 
  1986  0811                     	;# 
  1987  0812                     	;# 
  1988  0813                     	;# 
  1989  0814                     	;# 
  1990  081A                     	;# 
  1991  081B                     	;# 
  1992  081C                     	;# 
  1993  081D                     	;# 
  1994  081E                     	;# 
  1995  081F                     	;# 
  1996  088C                     	;# 
  1997  088D                     	;# 
  1998  088E                     	;# 
  1999  088F                     	;# 
  2000  0890                     	;# 
  2001  0891                     	;# 
  2002  0892                     	;# 
  2003  0893                     	;# 
  2004  0895                     	;# 
  2005  0896                     	;# 
  2006  0897                     	;# 
  2007  0898                     	;# 
  2008  0899                     	;# 
  2009  089A                     	;# 
  2010  089B                     	;# 
  2011  090C                     	;# 
  2012  090E                     	;# 
  2013  090F                     	;# 
  2014  091F                     	;# 
  2015  091F                     	;# 
  2016  098F                     	;# 
  2017  098F                     	;# 
  2018  0990                     	;# 
  2019  0991                     	;# 
  2020  0992                     	;# 
  2021  0993                     	;# 
  2022  0994                     	;# 
  2023  0995                     	;# 
  2024  0996                     	;# 
  2025  0997                     	;# 
  2026  0E0F                     	;# 
  2027  0E10                     	;# 
  2028  0E11                     	;# 
  2029  0E12                     	;# 
  2030  0E13                     	;# 
  2031  0E14                     	;# 
  2032  0E15                     	;# 
  2033  0E16                     	;# 
  2034  0E17                     	;# 
  2035  0E18                     	;# 
  2036  0E19                     	;# 
  2037  0E1A                     	;# 
  2038  0E1B                     	;# 
  2039  0E1C                     	;# 
  2040  0E1D                     	;# 
  2041  0E1E                     	;# 
  2042  0E1F                     	;# 
  2043  0E20                     	;# 
  2044  0E21                     	;# 
  2045  0E22                     	;# 
  2046  0E23                     	;# 
  2047  0E24                     	;# 
  2048  0E25                     	;# 
  2049  0E26                     	;# 
  2050  0E27                     	;# 
  2051  0E28                     	;# 
  2052  0E29                     	;# 
  2053  0E2A                     	;# 
  2054  0E2B                     	;# 
  2055  0E2C                     	;# 
  2056  0E2D                     	;# 
  2057  0E2E                     	;# 
  2058  0E2F                     	;# 
  2059  0E30                     	;# 
  2060  0E31                     	;# 
  2061  0E32                     	;# 
  2062  0E33                     	;# 
  2063  0E34                     	;# 
  2064  0E35                     	;# 
  2065  0E36                     	;# 
  2066  0E37                     	;# 
  2067  0E8F                     	;# 
  2068  0E90                     	;# 
  2069  0E91                     	;# 
  2070  0E92                     	;# 
  2071  0E93                     	;# 
  2072  0E94                     	;# 
  2073  0E95                     	;# 
  2074  0E96                     	;# 
  2075  0E97                     	;# 
  2076  0E9C                     	;# 
  2077  0E9D                     	;# 
  2078  0E9E                     	;# 
  2079  0EA1                     	;# 
  2080  0EA2                     	;# 
  2081  0EA3                     	;# 
  2082  0EA4                     	;# 
  2083  0EA5                     	;# 
  2084  0EA9                     	;# 
  2085  0EAA                     	;# 
  2086  0EAB                     	;# 
  2087  0EAC                     	;# 
  2088  0EB1                     	;# 
  2089  0EB2                     	;# 
  2090  0EB3                     	;# 
  2091  0EB8                     	;# 
  2092  0EB9                     	;# 
  2093  0EBA                     	;# 
  2094  0EBB                     	;# 
  2095  0EBC                     	;# 
  2096  0EBD                     	;# 
  2097  0EBE                     	;# 
  2098  0EC3                     	;# 
  2099  0EC5                     	;# 
  2100  0EC6                     	;# 
  2101  0EC7                     	;# 
  2102  0EC8                     	;# 
  2103  0EC9                     	;# 
  2104  0ECA                     	;# 
  2105  0ECB                     	;# 
  2106  0ECC                     	;# 
  2107  0F10                     	;# 
  2108  0F11                     	;# 
  2109  0F12                     	;# 
  2110  0F13                     	;# 
  2111  0F14                     	;# 
  2112  0F15                     	;# 
  2113  0F16                     	;# 
  2114  0F17                     	;# 
  2115  0F18                     	;# 
  2116  0F19                     	;# 
  2117  0F1A                     	;# 
  2118  0F1B                     	;# 
  2119  0F1C                     	;# 
  2120  0F1D                     	;# 
  2121  0F1E                     	;# 
  2122  0F1F                     	;# 
  2123  0F20                     	;# 
  2124  0F21                     	;# 
  2125  0F22                     	;# 
  2126  0F23                     	;# 
  2127  0F24                     	;# 
  2128  0F25                     	;# 
  2129  0F26                     	;# 
  2130  0F27                     	;# 
  2131  0F38                     	;# 
  2132  0F39                     	;# 
  2133  0F3A                     	;# 
  2134  0F3B                     	;# 
  2135  0F3C                     	;# 
  2136  0F3D                     	;# 
  2137  0F3E                     	;# 
  2138  0F3F                     	;# 
  2139  0F40                     	;# 
  2140  0F41                     	;# 
  2141  0F43                     	;# 
  2142  0F44                     	;# 
  2143  0F45                     	;# 
  2144  0F46                     	;# 
  2145  0F47                     	;# 
  2146  0F48                     	;# 
  2147  0F49                     	;# 
  2148  0F4A                     	;# 
  2149  0F4B                     	;# 
  2150  0F4C                     	;# 
  2151  0F4E                     	;# 
  2152  0F4F                     	;# 
  2153  0F50                     	;# 
  2154  0F51                     	;# 
  2155  0F52                     	;# 
  2156  0F53                     	;# 
  2157  0F54                     	;# 
  2158  0F55                     	;# 
  2159  0F56                     	;# 
  2160  0F57                     	;# 
  2161  0F65                     	;# 
  2162  0F68                     	;# 
  2163  0F69                     	;# 
  2164  0F6A                     	;# 
  2165  0F6B                     	;# 
  2166  0FE4                     	;# 
  2167  0FE5                     	;# 
  2168  0FE6                     	;# 
  2169  0FE7                     	;# 
  2170  0FE8                     	;# 
  2171  0FE9                     	;# 
  2172  0FEA                     	;# 
  2173  0FEB                     	;# 
  2174  0FED                     	;# 
  2175  0FEE                     	;# 
  2176  0FEF                     	;# 
  2177  0000                     	;# 
  2178  0001                     	;# 
  2179  0002                     	;# 
  2180  0003                     	;# 
  2181  0004                     	;# 
  2182  0005                     	;# 
  2183  0006                     	;# 
  2184  0007                     	;# 
  2185  0008                     	;# 
  2186  0009                     	;# 
  2187  000A                     	;# 
  2188  000B                     	;# 
  2189  000C                     	;# 
  2190  000D                     	;# 
  2191  000E                     	;# 
  2192  0010                     	;# 
  2193  0011                     	;# 
  2194  0012                     	;# 
  2195  0013                     	;# 
  2196  0016                     	;# 
  2197  0017                     	;# 
  2198  0018                     	;# 
  2199  001C                     	;# 
  2200  001C                     	;# 
  2201  001D                     	;# 
  2202  001D                     	;# 
  2203  001E                     	;# 
  2204  001F                     	;# 
  2205  008C                     	;# 
  2206  008C                     	;# 
  2207  008D                     	;# 
  2208  008E                     	;# 
  2209  008E                     	;# 
  2210  008F                     	;# 
  2211  0090                     	;# 
  2212  0090                     	;# 
  2213  0091                     	;# 
  2214  0093                     	;# 
  2215  0094                     	;# 
  2216  0095                     	;# 
  2217  0096                     	;# 
  2218  0097                     	;# 
  2219  0098                     	;# 
  2220  0099                     	;# 
  2221  009A                     	;# 
  2222  009B                     	;# 
  2223  009C                     	;# 
  2224  009D                     	;# 
  2225  009E                     	;# 
  2226  010C                     	;# 
  2227  010D                     	;# 
  2228  010E                     	;# 
  2229  010E                     	;# 
  2230  010F                     	;# 
  2231  0110                     	;# 
  2232  0110                     	;# 
  2233  0111                     	;# 
  2234  0112                     	;# 
  2235  0112                     	;# 
  2236  0113                     	;# 
  2237  0114                     	;# 
  2238  0114                     	;# 
  2239  0115                     	;# 
  2240  0116                     	;# 
  2241  0116                     	;# 
  2242  0117                     	;# 
  2243  0119                     	;# 
  2244  0119                     	;# 
  2245  0119                     	;# 
  2246  011A                     	;# 
  2247  011A                     	;# 
  2248  011A                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011B                     	;# 
  2253  011B                     	;# 
  2254  011C                     	;# 
  2255  011C                     	;# 
  2256  011C                     	;# 
  2257  011D                     	;# 
  2258  011D                     	;# 
  2259  011D                     	;# 
  2260  011E                     	;# 
  2261  011E                     	;# 
  2262  011E                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  011F                     	;# 
  2267  011F                     	;# 
  2268  018C                     	;# 
  2269  018D                     	;# 
  2270  018E                     	;# 
  2271  018F                     	;# 
  2272  0190                     	;# 
  2273  0191                     	;# 
  2274  0192                     	;# 
  2275  0196                     	;# 
  2276  0197                     	;# 
  2277  0198                     	;# 
  2278  0199                     	;# 
  2279  019A                     	;# 
  2280  019B                     	;# 
  2281  019C                     	;# 
  2282  020C                     	;# 
  2283  020C                     	;# 
  2284  020D                     	;# 
  2285  020E                     	;# 
  2286  020F                     	;# 
  2287  020F                     	;# 
  2288  0210                     	;# 
  2289  0210                     	;# 
  2290  0211                     	;# 
  2291  0211                     	;# 
  2292  0212                     	;# 
  2293  0212                     	;# 
  2294  0213                     	;# 
  2295  0214                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0216                     	;# 
  2299  0216                     	;# 
  2300  0217                     	;# 
  2301  0217                     	;# 
  2302  0218                     	;# 
  2303  0218                     	;# 
  2304  0219                     	;# 
  2305  021A                     	;# 
  2306  021B                     	;# 
  2307  021B                     	;# 
  2308  021C                     	;# 
  2309  021C                     	;# 
  2310  021D                     	;# 
  2311  021D                     	;# 
  2312  021E                     	;# 
  2313  021F                     	;# 
  2314  028C                     	;# 
  2315  028C                     	;# 
  2316  028D                     	;# 
  2317  028D                     	;# 
  2318  028E                     	;# 
  2319  028F                     	;# 
  2320  0290                     	;# 
  2321  0290                     	;# 
  2322  0291                     	;# 
  2323  0292                     	;# 
  2324  0292                     	;# 
  2325  0293                     	;# 
  2326  0293                     	;# 
  2327  0294                     	;# 
  2328  0295                     	;# 
  2329  0296                     	;# 
  2330  0296                     	;# 
  2331  0297                     	;# 
  2332  0298                     	;# 
  2333  0298                     	;# 
  2334  0299                     	;# 
  2335  0299                     	;# 
  2336  029A                     	;# 
  2337  029B                     	;# 
  2338  029C                     	;# 
  2339  029C                     	;# 
  2340  029D                     	;# 
  2341  030C                     	;# 
  2342  030C                     	;# 
  2343  030D                     	;# 
  2344  030E                     	;# 
  2345  030F                     	;# 
  2346  0310                     	;# 
  2347  0310                     	;# 
  2348  0311                     	;# 
  2349  0312                     	;# 
  2350  0313                     	;# 
  2351  0314                     	;# 
  2352  0314                     	;# 
  2353  0315                     	;# 
  2354  0316                     	;# 
  2355  0317                     	;# 
  2356  0318                     	;# 
  2357  0318                     	;# 
  2358  0319                     	;# 
  2359  031A                     	;# 
  2360  031B                     	;# 
  2361  031C                     	;# 
  2362  031C                     	;# 
  2363  031D                     	;# 
  2364  031E                     	;# 
  2365  031F                     	;# 
  2366  038C                     	;# 
  2367  038D                     	;# 
  2368  038E                     	;# 
  2369  0390                     	;# 
  2370  0391                     	;# 
  2371  0392                     	;# 
  2372  040C                     	;# 
  2373  040D                     	;# 
  2374  040E                     	;# 
  2375  040F                     	;# 
  2376  0410                     	;# 
  2377  0411                     	;# 
  2378  0416                     	;# 
  2379  0416                     	;# 
  2380  0417                     	;# 
  2381  0418                     	;# 
  2382  0418                     	;# 
  2383  0419                     	;# 
  2384  041A                     	;# 
  2385  041A                     	;# 
  2386  041B                     	;# 
  2387  041C                     	;# 
  2388  041C                     	;# 
  2389  041D                     	;# 
  2390  041E                     	;# 
  2391  041F                     	;# 
  2392  048C                     	;# 
  2393  048C                     	;# 
  2394  048D                     	;# 
  2395  048E                     	;# 
  2396  048F                     	;# 
  2397  048F                     	;# 
  2398  0490                     	;# 
  2399  0491                     	;# 
  2400  0492                     	;# 
  2401  0492                     	;# 
  2402  0493                     	;# 
  2403  0494                     	;# 
  2404  0495                     	;# 
  2405  0495                     	;# 
  2406  0496                     	;# 
  2407  0497                     	;# 
  2408  0498                     	;# 
  2409  0499                     	;# 
  2410  049A                     	;# 
  2411  049B                     	;# 
  2412  049C                     	;# 
  2413  049D                     	;# 
  2414  050C                     	;# 
  2415  050C                     	;# 
  2416  050D                     	;# 
  2417  050E                     	;# 
  2418  050F                     	;# 
  2419  050F                     	;# 
  2420  0510                     	;# 
  2421  0511                     	;# 
  2422  0512                     	;# 
  2423  0512                     	;# 
  2424  0513                     	;# 
  2425  0514                     	;# 
  2426  0515                     	;# 
  2427  0515                     	;# 
  2428  0516                     	;# 
  2429  0517                     	;# 
  2430  0518                     	;# 
  2431  0519                     	;# 
  2432  051A                     	;# 
  2433  051B                     	;# 
  2434  051C                     	;# 
  2435  051D                     	;# 
  2436  058C                     	;# 
  2437  058C                     	;# 
  2438  058D                     	;# 
  2439  058E                     	;# 
  2440  058F                     	;# 
  2441  058F                     	;# 
  2442  0590                     	;# 
  2443  0591                     	;# 
  2444  0592                     	;# 
  2445  0593                     	;# 
  2446  060C                     	;# 
  2447  060D                     	;# 
  2448  060E                     	;# 
  2449  060F                     	;# 
  2450  0610                     	;# 
  2451  0611                     	;# 
  2452  0612                     	;# 
  2453  0613                     	;# 
  2454  0614                     	;# 
  2455  0616                     	;# 
  2456  0617                     	;# 
  2457  0618                     	;# 
  2458  0619                     	;# 
  2459  061A                     	;# 
  2460  061B                     	;# 
  2461  061C                     	;# 
  2462  061D                     	;# 
  2463  061E                     	;# 
  2464  068C                     	;# 
  2465  068D                     	;# 
  2466  068E                     	;# 
  2467  068F                     	;# 
  2468  0690                     	;# 
  2469  0691                     	;# 
  2470  0692                     	;# 
  2471  0693                     	;# 
  2472  0694                     	;# 
  2473  070C                     	;# 
  2474  070D                     	;# 
  2475  070E                     	;# 
  2476  070F                     	;# 
  2477  0710                     	;# 
  2478  0711                     	;# 
  2479  0712                     	;# 
  2480  0713                     	;# 
  2481  0714                     	;# 
  2482  0716                     	;# 
  2483  0717                     	;# 
  2484  0718                     	;# 
  2485  0719                     	;# 
  2486  071A                     	;# 
  2487  071B                     	;# 
  2488  071C                     	;# 
  2489  071D                     	;# 
  2490  071E                     	;# 
  2491  0796                     	;# 
  2492  0797                     	;# 
  2493  0798                     	;# 
  2494  0799                     	;# 
  2495  079A                     	;# 
  2496  079B                     	;# 
  2497  080C                     	;# 
  2498  080D                     	;# 
  2499  080E                     	;# 
  2500  080F                     	;# 
  2501  0810                     	;# 
  2502  0811                     	;# 
  2503  0812                     	;# 
  2504  0813                     	;# 
  2505  0814                     	;# 
  2506  081A                     	;# 
  2507  081B                     	;# 
  2508  081C                     	;# 
  2509  081D                     	;# 
  2510  081E                     	;# 
  2511  081F                     	;# 
  2512  088C                     	;# 
  2513  088D                     	;# 
  2514  088E                     	;# 
  2515  088F                     	;# 
  2516  0890                     	;# 
  2517  0891                     	;# 
  2518  0892                     	;# 
  2519  0893                     	;# 
  2520  0895                     	;# 
  2521  0896                     	;# 
  2522  0897                     	;# 
  2523  0898                     	;# 
  2524  0899                     	;# 
  2525  089A                     	;# 
  2526  089B                     	;# 
  2527  090C                     	;# 
  2528  090E                     	;# 
  2529  090F                     	;# 
  2530  091F                     	;# 
  2531  091F                     	;# 
  2532  098F                     	;# 
  2533  098F                     	;# 
  2534  0990                     	;# 
  2535  0991                     	;# 
  2536  0992                     	;# 
  2537  0993                     	;# 
  2538  0994                     	;# 
  2539  0995                     	;# 
  2540  0996                     	;# 
  2541  0997                     	;# 
  2542  0E0F                     	;# 
  2543  0E10                     	;# 
  2544  0E11                     	;# 
  2545  0E12                     	;# 
  2546  0E13                     	;# 
  2547  0E14                     	;# 
  2548  0E15                     	;# 
  2549  0E16                     	;# 
  2550  0E17                     	;# 
  2551  0E18                     	;# 
  2552  0E19                     	;# 
  2553  0E1A                     	;# 
  2554  0E1B                     	;# 
  2555  0E1C                     	;# 
  2556  0E1D                     	;# 
  2557  0E1E                     	;# 
  2558  0E1F                     	;# 
  2559  0E20                     	;# 
  2560  0E21                     	;# 
  2561  0E22                     	;# 
  2562  0E23                     	;# 
  2563  0E24                     	;# 
  2564  0E25                     	;# 
  2565  0E26                     	;# 
  2566  0E27                     	;# 
  2567  0E28                     	;# 
  2568  0E29                     	;# 
  2569  0E2A                     	;# 
  2570  0E2B                     	;# 
  2571  0E2C                     	;# 
  2572  0E2D                     	;# 
  2573  0E2E                     	;# 
  2574  0E2F                     	;# 
  2575  0E30                     	;# 
  2576  0E31                     	;# 
  2577  0E32                     	;# 
  2578  0E33                     	;# 
  2579  0E34                     	;# 
  2580  0E35                     	;# 
  2581  0E36                     	;# 
  2582  0E37                     	;# 
  2583  0E8F                     	;# 
  2584  0E90                     	;# 
  2585  0E91                     	;# 
  2586  0E92                     	;# 
  2587  0E93                     	;# 
  2588  0E94                     	;# 
  2589  0E95                     	;# 
  2590  0E96                     	;# 
  2591  0E97                     	;# 
  2592  0E9C                     	;# 
  2593  0E9D                     	;# 
  2594  0E9E                     	;# 
  2595  0EA1                     	;# 
  2596  0EA2                     	;# 
  2597  0EA3                     	;# 
  2598  0EA4                     	;# 
  2599  0EA5                     	;# 
  2600  0EA9                     	;# 
  2601  0EAA                     	;# 
  2602  0EAB                     	;# 
  2603  0EAC                     	;# 
  2604  0EB1                     	;# 
  2605  0EB2                     	;# 
  2606  0EB3                     	;# 
  2607  0EB8                     	;# 
  2608  0EB9                     	;# 
  2609  0EBA                     	;# 
  2610  0EBB                     	;# 
  2611  0EBC                     	;# 
  2612  0EBD                     	;# 
  2613  0EBE                     	;# 
  2614  0EC3                     	;# 
  2615  0EC5                     	;# 
  2616  0EC6                     	;# 
  2617  0EC7                     	;# 
  2618  0EC8                     	;# 
  2619  0EC9                     	;# 
  2620  0ECA                     	;# 
  2621  0ECB                     	;# 
  2622  0ECC                     	;# 
  2623  0F10                     	;# 
  2624  0F11                     	;# 
  2625  0F12                     	;# 
  2626  0F13                     	;# 
  2627  0F14                     	;# 
  2628  0F15                     	;# 
  2629  0F16                     	;# 
  2630  0F17                     	;# 
  2631  0F18                     	;# 
  2632  0F19                     	;# 
  2633  0F1A                     	;# 
  2634  0F1B                     	;# 
  2635  0F1C                     	;# 
  2636  0F1D                     	;# 
  2637  0F1E                     	;# 
  2638  0F1F                     	;# 
  2639  0F20                     	;# 
  2640  0F21                     	;# 
  2641  0F22                     	;# 
  2642  0F23                     	;# 
  2643  0F24                     	;# 
  2644  0F25                     	;# 
  2645  0F26                     	;# 
  2646  0F27                     	;# 
  2647  0F38                     	;# 
  2648  0F39                     	;# 
  2649  0F3A                     	;# 
  2650  0F3B                     	;# 
  2651  0F3C                     	;# 
  2652  0F3D                     	;# 
  2653  0F3E                     	;# 
  2654  0F3F                     	;# 
  2655  0F40                     	;# 
  2656  0F41                     	;# 
  2657  0F43                     	;# 
  2658  0F44                     	;# 
  2659  0F45                     	;# 
  2660  0F46                     	;# 
  2661  0F47                     	;# 
  2662  0F48                     	;# 
  2663  0F49                     	;# 
  2664  0F4A                     	;# 
  2665  0F4B                     	;# 
  2666  0F4C                     	;# 
  2667  0F4E                     	;# 
  2668  0F4F                     	;# 
  2669  0F50                     	;# 
  2670  0F51                     	;# 
  2671  0F52                     	;# 
  2672  0F53                     	;# 
  2673  0F54                     	;# 
  2674  0F55                     	;# 
  2675  0F56                     	;# 
  2676  0F57                     	;# 
  2677  0F65                     	;# 
  2678  0F68                     	;# 
  2679  0F69                     	;# 
  2680  0F6A                     	;# 
  2681  0F6B                     	;# 
  2682  0FE4                     	;# 
  2683  0FE5                     	;# 
  2684  0FE6                     	;# 
  2685  0FE7                     	;# 
  2686  0FE8                     	;# 
  2687  0FE9                     	;# 
  2688  0FEA                     	;# 
  2689  0FEB                     	;# 
  2690  0FED                     	;# 
  2691  0FEE                     	;# 
  2692  0FEF                     	;# 
  2693  0000                     	;# 
  2694  0001                     	;# 
  2695  0002                     	;# 
  2696  0003                     	;# 
  2697  0004                     	;# 
  2698  0005                     	;# 
  2699  0006                     	;# 
  2700  0007                     	;# 
  2701  0008                     	;# 
  2702  0009                     	;# 
  2703  000A                     	;# 
  2704  000B                     	;# 
  2705  000C                     	;# 
  2706  000D                     	;# 
  2707  000E                     	;# 
  2708  0010                     	;# 
  2709  0011                     	;# 
  2710  0012                     	;# 
  2711  0013                     	;# 
  2712  0016                     	;# 
  2713  0017                     	;# 
  2714  0018                     	;# 
  2715  001C                     	;# 
  2716  001C                     	;# 
  2717  001D                     	;# 
  2718  001D                     	;# 
  2719  001E                     	;# 
  2720  001F                     	;# 
  2721  008C                     	;# 
  2722  008C                     	;# 
  2723  008D                     	;# 
  2724  008E                     	;# 
  2725  008E                     	;# 
  2726  008F                     	;# 
  2727  0090                     	;# 
  2728  0090                     	;# 
  2729  0091                     	;# 
  2730  0093                     	;# 
  2731  0094                     	;# 
  2732  0095                     	;# 
  2733  0096                     	;# 
  2734  0097                     	;# 
  2735  0098                     	;# 
  2736  0099                     	;# 
  2737  009A                     	;# 
  2738  009B                     	;# 
  2739  009C                     	;# 
  2740  009D                     	;# 
  2741  009E                     	;# 
  2742  010C                     	;# 
  2743  010D                     	;# 
  2744  010E                     	;# 
  2745  010E                     	;# 
  2746  010F                     	;# 
  2747  0110                     	;# 
  2748  0110                     	;# 
  2749  0111                     	;# 
  2750  0112                     	;# 
  2751  0112                     	;# 
  2752  0113                     	;# 
  2753  0114                     	;# 
  2754  0114                     	;# 
  2755  0115                     	;# 
  2756  0116                     	;# 
  2757  0116                     	;# 
  2758  0117                     	;# 
  2759  0119                     	;# 
  2760  0119                     	;# 
  2761  0119                     	;# 
  2762  011A                     	;# 
  2763  011A                     	;# 
  2764  011A                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011B                     	;# 
  2770  011C                     	;# 
  2771  011C                     	;# 
  2772  011C                     	;# 
  2773  011D                     	;# 
  2774  011D                     	;# 
  2775  011D                     	;# 
  2776  011E                     	;# 
  2777  011E                     	;# 
  2778  011E                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  011F                     	;# 
  2784  018C                     	;# 
  2785  018D                     	;# 
  2786  018E                     	;# 
  2787  018F                     	;# 
  2788  0190                     	;# 
  2789  0191                     	;# 
  2790  0192                     	;# 
  2791  0196                     	;# 
  2792  0197                     	;# 
  2793  0198                     	;# 
  2794  0199                     	;# 
  2795  019A                     	;# 
  2796  019B                     	;# 
  2797  019C                     	;# 
  2798  020C                     	;# 
  2799  020C                     	;# 
  2800  020D                     	;# 
  2801  020E                     	;# 
  2802  020F                     	;# 
  2803  020F                     	;# 
  2804  0210                     	;# 
  2805  0210                     	;# 
  2806  0211                     	;# 
  2807  0211                     	;# 
  2808  0212                     	;# 
  2809  0212                     	;# 
  2810  0213                     	;# 
  2811  0214                     	;# 
  2812  0215                     	;# 
  2813  0215                     	;# 
  2814  0216                     	;# 
  2815  0216                     	;# 
  2816  0217                     	;# 
  2817  0217                     	;# 
  2818  0218                     	;# 
  2819  0218                     	;# 
  2820  0219                     	;# 
  2821  021A                     	;# 
  2822  021B                     	;# 
  2823  021B                     	;# 
  2824  021C                     	;# 
  2825  021C                     	;# 
  2826  021D                     	;# 
  2827  021D                     	;# 
  2828  021E                     	;# 
  2829  021F                     	;# 
  2830  028C                     	;# 
  2831  028C                     	;# 
  2832  028D                     	;# 
  2833  028D                     	;# 
  2834  028E                     	;# 
  2835  028F                     	;# 
  2836  0290                     	;# 
  2837  0290                     	;# 
  2838  0291                     	;# 
  2839  0292                     	;# 
  2840  0292                     	;# 
  2841  0293                     	;# 
  2842  0293                     	;# 
  2843  0294                     	;# 
  2844  0295                     	;# 
  2845  0296                     	;# 
  2846  0296                     	;# 
  2847  0297                     	;# 
  2848  0298                     	;# 
  2849  0298                     	;# 
  2850  0299                     	;# 
  2851  0299                     	;# 
  2852  029A                     	;# 
  2853  029B                     	;# 
  2854  029C                     	;# 
  2855  029C                     	;# 
  2856  029D                     	;# 
  2857  030C                     	;# 
  2858  030C                     	;# 
  2859  030D                     	;# 
  2860  030E                     	;# 
  2861  030F                     	;# 
  2862  0310                     	;# 
  2863  0310                     	;# 
  2864  0311                     	;# 
  2865  0312                     	;# 
  2866  0313                     	;# 
  2867  0314                     	;# 
  2868  0314                     	;# 
  2869  0315                     	;# 
  2870  0316                     	;# 
  2871  0317                     	;# 
  2872  0318                     	;# 
  2873  0318                     	;# 
  2874  0319                     	;# 
  2875  031A                     	;# 
  2876  031B                     	;# 
  2877  031C                     	;# 
  2878  031C                     	;# 
  2879  031D                     	;# 
  2880  031E                     	;# 
  2881  031F                     	;# 
  2882  038C                     	;# 
  2883  038D                     	;# 
  2884  038E                     	;# 
  2885  0390                     	;# 
  2886  0391                     	;# 
  2887  0392                     	;# 
  2888  040C                     	;# 
  2889  040D                     	;# 
  2890  040E                     	;# 
  2891  040F                     	;# 
  2892  0410                     	;# 
  2893  0411                     	;# 
  2894  0416                     	;# 
  2895  0416                     	;# 
  2896  0417                     	;# 
  2897  0418                     	;# 
  2898  0418                     	;# 
  2899  0419                     	;# 
  2900  041A                     	;# 
  2901  041A                     	;# 
  2902  041B                     	;# 
  2903  041C                     	;# 
  2904  041C                     	;# 
  2905  041D                     	;# 
  2906  041E                     	;# 
  2907  041F                     	;# 
  2908  048C                     	;# 
  2909  048C                     	;# 
  2910  048D                     	;# 
  2911  048E                     	;# 
  2912  048F                     	;# 
  2913  048F                     	;# 
  2914  0490                     	;# 
  2915  0491                     	;# 
  2916  0492                     	;# 
  2917  0492                     	;# 
  2918  0493                     	;# 
  2919  0494                     	;# 
  2920  0495                     	;# 
  2921  0495                     	;# 
  2922  0496                     	;# 
  2923  0497                     	;# 
  2924  0498                     	;# 
  2925  0499                     	;# 
  2926  049A                     	;# 
  2927  049B                     	;# 
  2928  049C                     	;# 
  2929  049D                     	;# 
  2930  050C                     	;# 
  2931  050C                     	;# 
  2932  050D                     	;# 
  2933  050E                     	;# 
  2934  050F                     	;# 
  2935  050F                     	;# 
  2936  0510                     	;# 
  2937  0511                     	;# 
  2938  0512                     	;# 
  2939  0512                     	;# 
  2940  0513                     	;# 
  2941  0514                     	;# 
  2942  0515                     	;# 
  2943  0515                     	;# 
  2944  0516                     	;# 
  2945  0517                     	;# 
  2946  0518                     	;# 
  2947  0519                     	;# 
  2948  051A                     	;# 
  2949  051B                     	;# 
  2950  051C                     	;# 
  2951  051D                     	;# 
  2952  058C                     	;# 
  2953  058C                     	;# 
  2954  058D                     	;# 
  2955  058E                     	;# 
  2956  058F                     	;# 
  2957  058F                     	;# 
  2958  0590                     	;# 
  2959  0591                     	;# 
  2960  0592                     	;# 
  2961  0593                     	;# 
  2962  060C                     	;# 
  2963  060D                     	;# 
  2964  060E                     	;# 
  2965  060F                     	;# 
  2966  0610                     	;# 
  2967  0611                     	;# 
  2968  0612                     	;# 
  2969  0613                     	;# 
  2970  0614                     	;# 
  2971  0616                     	;# 
  2972  0617                     	;# 
  2973  0618                     	;# 
  2974  0619                     	;# 
  2975  061A                     	;# 
  2976  061B                     	;# 
  2977  061C                     	;# 
  2978  061D                     	;# 
  2979  061E                     	;# 
  2980  068C                     	;# 
  2981  068D                     	;# 
  2982  068E                     	;# 
  2983  068F                     	;# 
  2984  0690                     	;# 
  2985  0691                     	;# 
  2986  0692                     	;# 
  2987  0693                     	;# 
  2988  0694                     	;# 
  2989  070C                     	;# 
  2990  070D                     	;# 
  2991  070E                     	;# 
  2992  070F                     	;# 
  2993  0710                     	;# 
  2994  0711                     	;# 
  2995  0712                     	;# 
  2996  0713                     	;# 
  2997  0714                     	;# 
  2998  0716                     	;# 
  2999  0717                     	;# 
  3000  0718                     	;# 
  3001  0719                     	;# 
  3002  071A                     	;# 
  3003  071B                     	;# 
  3004  071C                     	;# 
  3005  071D                     	;# 
  3006  071E                     	;# 
  3007  0796                     	;# 
  3008  0797                     	;# 
  3009  0798                     	;# 
  3010  0799                     	;# 
  3011  079A                     	;# 
  3012  079B                     	;# 
  3013  080C                     	;# 
  3014  080D                     	;# 
  3015  080E                     	;# 
  3016  080F                     	;# 
  3017  0810                     	;# 
  3018  0811                     	;# 
  3019  0812                     	;# 
  3020  0813                     	;# 
  3021  0814                     	;# 
  3022  081A                     	;# 
  3023  081B                     	;# 
  3024  081C                     	;# 
  3025  081D                     	;# 
  3026  081E                     	;# 
  3027  081F                     	;# 
  3028  088C                     	;# 
  3029  088D                     	;# 
  3030  088E                     	;# 
  3031  088F                     	;# 
  3032  0890                     	;# 
  3033  0891                     	;# 
  3034  0892                     	;# 
  3035  0893                     	;# 
  3036  0895                     	;# 
  3037  0896                     	;# 
  3038  0897                     	;# 
  3039  0898                     	;# 
  3040  0899                     	;# 
  3041  089A                     	;# 
  3042  089B                     	;# 
  3043  090C                     	;# 
  3044  090E                     	;# 
  3045  090F                     	;# 
  3046  091F                     	;# 
  3047  091F                     	;# 
  3048  098F                     	;# 
  3049  098F                     	;# 
  3050  0990                     	;# 
  3051  0991                     	;# 
  3052  0992                     	;# 
  3053  0993                     	;# 
  3054  0994                     	;# 
  3055  0995                     	;# 
  3056  0996                     	;# 
  3057  0997                     	;# 
  3058  0E0F                     	;# 
  3059  0E10                     	;# 
  3060  0E11                     	;# 
  3061  0E12                     	;# 
  3062  0E13                     	;# 
  3063  0E14                     	;# 
  3064  0E15                     	;# 
  3065  0E16                     	;# 
  3066  0E17                     	;# 
  3067  0E18                     	;# 
  3068  0E19                     	;# 
  3069  0E1A                     	;# 
  3070  0E1B                     	;# 
  3071  0E1C                     	;# 
  3072  0E1D                     	;# 
  3073  0E1E                     	;# 
  3074  0E1F                     	;# 
  3075  0E20                     	;# 
  3076  0E21                     	;# 
  3077  0E22                     	;# 
  3078  0E23                     	;# 
  3079  0E24                     	;# 
  3080  0E25                     	;# 
  3081  0E26                     	;# 
  3082  0E27                     	;# 
  3083  0E28                     	;# 
  3084  0E29                     	;# 
  3085  0E2A                     	;# 
  3086  0E2B                     	;# 
  3087  0E2C                     	;# 
  3088  0E2D                     	;# 
  3089  0E2E                     	;# 
  3090  0E2F                     	;# 
  3091  0E30                     	;# 
  3092  0E31                     	;# 
  3093  0E32                     	;# 
  3094  0E33                     	;# 
  3095  0E34                     	;# 
  3096  0E35                     	;# 
  3097  0E36                     	;# 
  3098  0E37                     	;# 
  3099  0E8F                     	;# 
  3100  0E90                     	;# 
  3101  0E91                     	;# 
  3102  0E92                     	;# 
  3103  0E93                     	;# 
  3104  0E94                     	;# 
  3105  0E95                     	;# 
  3106  0E96                     	;# 
  3107  0E97                     	;# 
  3108  0E9C                     	;# 
  3109  0E9D                     	;# 
  3110  0E9E                     	;# 
  3111  0EA1                     	;# 
  3112  0EA2                     	;# 
  3113  0EA3                     	;# 
  3114  0EA4                     	;# 
  3115  0EA5                     	;# 
  3116  0EA9                     	;# 
  3117  0EAA                     	;# 
  3118  0EAB                     	;# 
  3119  0EAC                     	;# 
  3120  0EB1                     	;# 
  3121  0EB2                     	;# 
  3122  0EB3                     	;# 
  3123  0EB8                     	;# 
  3124  0EB9                     	;# 
  3125  0EBA                     	;# 
  3126  0EBB                     	;# 
  3127  0EBC                     	;# 
  3128  0EBD                     	;# 
  3129  0EBE                     	;# 
  3130  0EC3                     	;# 
  3131  0EC5                     	;# 
  3132  0EC6                     	;# 
  3133  0EC7                     	;# 
  3134  0EC8                     	;# 
  3135  0EC9                     	;# 
  3136  0ECA                     	;# 
  3137  0ECB                     	;# 
  3138  0ECC                     	;# 
  3139  0F10                     	;# 
  3140  0F11                     	;# 
  3141  0F12                     	;# 
  3142  0F13                     	;# 
  3143  0F14                     	;# 
  3144  0F15                     	;# 
  3145  0F16                     	;# 
  3146  0F17                     	;# 
  3147  0F18                     	;# 
  3148  0F19                     	;# 
  3149  0F1A                     	;# 
  3150  0F1B                     	;# 
  3151  0F1C                     	;# 
  3152  0F1D                     	;# 
  3153  0F1E                     	;# 
  3154  0F1F                     	;# 
  3155  0F20                     	;# 
  3156  0F21                     	;# 
  3157  0F22                     	;# 
  3158  0F23                     	;# 
  3159  0F24                     	;# 
  3160  0F25                     	;# 
  3161  0F26                     	;# 
  3162  0F27                     	;# 
  3163  0F38                     	;# 
  3164  0F39                     	;# 
  3165  0F3A                     	;# 
  3166  0F3B                     	;# 
  3167  0F3C                     	;# 
  3168  0F3D                     	;# 
  3169  0F3E                     	;# 
  3170  0F3F                     	;# 
  3171  0F40                     	;# 
  3172  0F41                     	;# 
  3173  0F43                     	;# 
  3174  0F44                     	;# 
  3175  0F45                     	;# 
  3176  0F46                     	;# 
  3177  0F47                     	;# 
  3178  0F48                     	;# 
  3179  0F49                     	;# 
  3180  0F4A                     	;# 
  3181  0F4B                     	;# 
  3182  0F4C                     	;# 
  3183  0F4E                     	;# 
  3184  0F4F                     	;# 
  3185  0F50                     	;# 
  3186  0F51                     	;# 
  3187  0F52                     	;# 
  3188  0F53                     	;# 
  3189  0F54                     	;# 
  3190  0F55                     	;# 
  3191  0F56                     	;# 
  3192  0F57                     	;# 
  3193  0F65                     	;# 
  3194  0F68                     	;# 
  3195  0F69                     	;# 
  3196  0F6A                     	;# 
  3197  0F6B                     	;# 
  3198  0FE4                     	;# 
  3199  0FE5                     	;# 
  3200  0FE6                     	;# 
  3201  0FE7                     	;# 
  3202  0FE8                     	;# 
  3203  0FE9                     	;# 
  3204  0FEA                     	;# 
  3205  0FEB                     	;# 
  3206  0FED                     	;# 
  3207  0FEE                     	;# 
  3208  0FEF                     	;# 
  3209  0000                     	;# 
  3210  0001                     	;# 
  3211  0002                     	;# 
  3212  0003                     	;# 
  3213  0004                     	;# 
  3214  0005                     	;# 
  3215  0006                     	;# 
  3216  0007                     	;# 
  3217  0008                     	;# 
  3218  0009                     	;# 
  3219  000A                     	;# 
  3220  000B                     	;# 
  3221  000C                     	;# 
  3222  000D                     	;# 
  3223  000E                     	;# 
  3224  0010                     	;# 
  3225  0011                     	;# 
  3226  0012                     	;# 
  3227  0013                     	;# 
  3228  0016                     	;# 
  3229  0017                     	;# 
  3230  0018                     	;# 
  3231  001C                     	;# 
  3232  001C                     	;# 
  3233  001D                     	;# 
  3234  001D                     	;# 
  3235  001E                     	;# 
  3236  001F                     	;# 
  3237  008C                     	;# 
  3238  008C                     	;# 
  3239  008D                     	;# 
  3240  008E                     	;# 
  3241  008E                     	;# 
  3242  008F                     	;# 
  3243  0090                     	;# 
  3244  0090                     	;# 
  3245  0091                     	;# 
  3246  0093                     	;# 
  3247  0094                     	;# 
  3248  0095                     	;# 
  3249  0096                     	;# 
  3250  0097                     	;# 
  3251  0098                     	;# 
  3252  0099                     	;# 
  3253  009A                     	;# 
  3254  009B                     	;# 
  3255  009C                     	;# 
  3256  009D                     	;# 
  3257  009E                     	;# 
  3258  010C                     	;# 
  3259  010D                     	;# 
  3260  010E                     	;# 
  3261  010E                     	;# 
  3262  010F                     	;# 
  3263  0110                     	;# 
  3264  0110                     	;# 
  3265  0111                     	;# 
  3266  0112                     	;# 
  3267  0112                     	;# 
  3268  0113                     	;# 
  3269  0114                     	;# 
  3270  0114                     	;# 
  3271  0115                     	;# 
  3272  0116                     	;# 
  3273  0116                     	;# 
  3274  0117                     	;# 
  3275  0119                     	;# 
  3276  0119                     	;# 
  3277  0119                     	;# 
  3278  011A                     	;# 
  3279  011A                     	;# 
  3280  011A                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011B                     	;# 
  3286  011C                     	;# 
  3287  011C                     	;# 
  3288  011C                     	;# 
  3289  011D                     	;# 
  3290  011D                     	;# 
  3291  011D                     	;# 
  3292  011E                     	;# 
  3293  011E                     	;# 
  3294  011E                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  011F                     	;# 
  3300  018C                     	;# 
  3301  018D                     	;# 
  3302  018E                     	;# 
  3303  018F                     	;# 
  3304  0190                     	;# 
  3305  0191                     	;# 
  3306  0192                     	;# 
  3307  0196                     	;# 
  3308  0197                     	;# 
  3309  0198                     	;# 
  3310  0199                     	;# 
  3311  019A                     	;# 
  3312  019B                     	;# 
  3313  019C                     	;# 
  3314  020C                     	;# 
  3315  020C                     	;# 
  3316  020D                     	;# 
  3317  020E                     	;# 
  3318  020F                     	;# 
  3319  020F                     	;# 
  3320  0210                     	;# 
  3321  0210                     	;# 
  3322  0211                     	;# 
  3323  0211                     	;# 
  3324  0212                     	;# 
  3325  0212                     	;# 
  3326  0213                     	;# 
  3327  0214                     	;# 
  3328  0215                     	;# 
  3329  0215                     	;# 
  3330  0216                     	;# 
  3331  0216                     	;# 
  3332  0217                     	;# 
  3333  0217                     	;# 
  3334  0218                     	;# 
  3335  0218                     	;# 
  3336  0219                     	;# 
  3337  021A                     	;# 
  3338  021B                     	;# 
  3339  021B                     	;# 
  3340  021C                     	;# 
  3341  021C                     	;# 
  3342  021D                     	;# 
  3343  021D                     	;# 
  3344  021E                     	;# 
  3345  021F                     	;# 
  3346  028C                     	;# 
  3347  028C                     	;# 
  3348  028D                     	;# 
  3349  028D                     	;# 
  3350  028E                     	;# 
  3351  028F                     	;# 
  3352  0290                     	;# 
  3353  0290                     	;# 
  3354  0291                     	;# 
  3355  0292                     	;# 
  3356  0292                     	;# 
  3357  0293                     	;# 
  3358  0293                     	;# 
  3359  0294                     	;# 
  3360  0295                     	;# 
  3361  0296                     	;# 
  3362  0296                     	;# 
  3363  0297                     	;# 
  3364  0298                     	;# 
  3365  0298                     	;# 
  3366  0299                     	;# 
  3367  0299                     	;# 
  3368  029A                     	;# 
  3369  029B                     	;# 
  3370  029C                     	;# 
  3371  029C                     	;# 
  3372  029D                     	;# 
  3373  030C                     	;# 
  3374  030C                     	;# 
  3375  030D                     	;# 
  3376  030E                     	;# 
  3377  030F                     	;# 
  3378  0310                     	;# 
  3379  0310                     	;# 
  3380  0311                     	;# 
  3381  0312                     	;# 
  3382  0313                     	;# 
  3383  0314                     	;# 
  3384  0314                     	;# 
  3385  0315                     	;# 
  3386  0316                     	;# 
  3387  0317                     	;# 
  3388  0318                     	;# 
  3389  0318                     	;# 
  3390  0319                     	;# 
  3391  031A                     	;# 
  3392  031B                     	;# 
  3393  031C                     	;# 
  3394  031C                     	;# 
  3395  031D                     	;# 
  3396  031E                     	;# 
  3397  031F                     	;# 
  3398  038C                     	;# 
  3399  038D                     	;# 
  3400  038E                     	;# 
  3401  0390                     	;# 
  3402  0391                     	;# 
  3403  0392                     	;# 
  3404  040C                     	;# 
  3405  040D                     	;# 
  3406  040E                     	;# 
  3407  040F                     	;# 
  3408  0410                     	;# 
  3409  0411                     	;# 
  3410  0416                     	;# 
  3411  0416                     	;# 
  3412  0417                     	;# 
  3413  0418                     	;# 
  3414  0418                     	;# 
  3415  0419                     	;# 
  3416  041A                     	;# 
  3417  041A                     	;# 
  3418  041B                     	;# 
  3419  041C                     	;# 
  3420  041C                     	;# 
  3421  041D                     	;# 
  3422  041E                     	;# 
  3423  041F                     	;# 
  3424  048C                     	;# 
  3425  048C                     	;# 
  3426  048D                     	;# 
  3427  048E                     	;# 
  3428  048F                     	;# 
  3429  048F                     	;# 
  3430  0490                     	;# 
  3431  0491                     	;# 
  3432  0492                     	;# 
  3433  0492                     	;# 
  3434  0493                     	;# 
  3435  0494                     	;# 
  3436  0495                     	;# 
  3437  0495                     	;# 
  3438  0496                     	;# 
  3439  0497                     	;# 
  3440  0498                     	;# 
  3441  0499                     	;# 
  3442  049A                     	;# 
  3443  049B                     	;# 
  3444  049C                     	;# 
  3445  049D                     	;# 
  3446  050C                     	;# 
  3447  050C                     	;# 
  3448  050D                     	;# 
  3449  050E                     	;# 
  3450  050F                     	;# 
  3451  050F                     	;# 
  3452  0510                     	;# 
  3453  0511                     	;# 
  3454  0512                     	;# 
  3455  0512                     	;# 
  3456  0513                     	;# 
  3457  0514                     	;# 
  3458  0515                     	;# 
  3459  0515                     	;# 
  3460  0516                     	;# 
  3461  0517                     	;# 
  3462  0518                     	;# 
  3463  0519                     	;# 
  3464  051A                     	;# 
  3465  051B                     	;# 
  3466  051C                     	;# 
  3467  051D                     	;# 
  3468  058C                     	;# 
  3469  058C                     	;# 
  3470  058D                     	;# 
  3471  058E                     	;# 
  3472  058F                     	;# 
  3473  058F                     	;# 
  3474  0590                     	;# 
  3475  0591                     	;# 
  3476  0592                     	;# 
  3477  0593                     	;# 
  3478  060C                     	;# 
  3479  060D                     	;# 
  3480  060E                     	;# 
  3481  060F                     	;# 
  3482  0610                     	;# 
  3483  0611                     	;# 
  3484  0612                     	;# 
  3485  0613                     	;# 
  3486  0614                     	;# 
  3487  0616                     	;# 
  3488  0617                     	;# 
  3489  0618                     	;# 
  3490  0619                     	;# 
  3491  061A                     	;# 
  3492  061B                     	;# 
  3493  061C                     	;# 
  3494  061D                     	;# 
  3495  061E                     	;# 
  3496  068C                     	;# 
  3497  068D                     	;# 
  3498  068E                     	;# 
  3499  068F                     	;# 
  3500  0690                     	;# 
  3501  0691                     	;# 
  3502  0692                     	;# 
  3503  0693                     	;# 
  3504  0694                     	;# 
  3505  070C                     	;# 
  3506  070D                     	;# 
  3507  070E                     	;# 
  3508  070F                     	;# 
  3509  0710                     	;# 
  3510  0711                     	;# 
  3511  0712                     	;# 
  3512  0713                     	;# 
  3513  0714                     	;# 
  3514  0716                     	;# 
  3515  0717                     	;# 
  3516  0718                     	;# 
  3517  0719                     	;# 
  3518  071A                     	;# 
  3519  071B                     	;# 
  3520  071C                     	;# 
  3521  071D                     	;# 
  3522  071E                     	;# 
  3523  0796                     	;# 
  3524  0797                     	;# 
  3525  0798                     	;# 
  3526  0799                     	;# 
  3527  079A                     	;# 
  3528  079B                     	;# 
  3529  080C                     	;# 
  3530  080D                     	;# 
  3531  080E                     	;# 
  3532  080F                     	;# 
  3533  0810                     	;# 
  3534  0811                     	;# 
  3535  0812                     	;# 
  3536  0813                     	;# 
  3537  0814                     	;# 
  3538  081A                     	;# 
  3539  081B                     	;# 
  3540  081C                     	;# 
  3541  081D                     	;# 
  3542  081E                     	;# 
  3543  081F                     	;# 
  3544  088C                     	;# 
  3545  088D                     	;# 
  3546  088E                     	;# 
  3547  088F                     	;# 
  3548  0890                     	;# 
  3549  0891                     	;# 
  3550  0892                     	;# 
  3551  0893                     	;# 
  3552  0895                     	;# 
  3553  0896                     	;# 
  3554  0897                     	;# 
  3555  0898                     	;# 
  3556  0899                     	;# 
  3557  089A                     	;# 
  3558  089B                     	;# 
  3559  090C                     	;# 
  3560  090E                     	;# 
  3561  090F                     	;# 
  3562  091F                     	;# 
  3563  091F                     	;# 
  3564  098F                     	;# 
  3565  098F                     	;# 
  3566  0990                     	;# 
  3567  0991                     	;# 
  3568  0992                     	;# 
  3569  0993                     	;# 
  3570  0994                     	;# 
  3571  0995                     	;# 
  3572  0996                     	;# 
  3573  0997                     	;# 
  3574  0E0F                     	;# 
  3575  0E10                     	;# 
  3576  0E11                     	;# 
  3577  0E12                     	;# 
  3578  0E13                     	;# 
  3579  0E14                     	;# 
  3580  0E15                     	;# 
  3581  0E16                     	;# 
  3582  0E17                     	;# 
  3583  0E18                     	;# 
  3584  0E19                     	;# 
  3585  0E1A                     	;# 
  3586  0E1B                     	;# 
  3587  0E1C                     	;# 
  3588  0E1D                     	;# 
  3589  0E1E                     	;# 
  3590  0E1F                     	;# 
  3591  0E20                     	;# 
  3592  0E21                     	;# 
  3593  0E22                     	;# 
  3594  0E23                     	;# 
  3595  0E24                     	;# 
  3596  0E25                     	;# 
  3597  0E26                     	;# 
  3598  0E27                     	;# 
  3599  0E28                     	;# 
  3600  0E29                     	;# 
  3601  0E2A                     	;# 
  3602  0E2B                     	;# 
  3603  0E2C                     	;# 
  3604  0E2D                     	;# 
  3605  0E2E                     	;# 
  3606  0E2F                     	;# 
  3607  0E30                     	;# 
  3608  0E31                     	;# 
  3609  0E32                     	;# 
  3610  0E33                     	;# 
  3611  0E34                     	;# 
  3612  0E35                     	;# 
  3613  0E36                     	;# 
  3614  0E37                     	;# 
  3615  0E8F                     	;# 
  3616  0E90                     	;# 
  3617  0E91                     	;# 
  3618  0E92                     	;# 
  3619  0E93                     	;# 
  3620  0E94                     	;# 
  3621  0E95                     	;# 
  3622  0E96                     	;# 
  3623  0E97                     	;# 
  3624  0E9C                     	;# 
  3625  0E9D                     	;# 
  3626  0E9E                     	;# 
  3627  0EA1                     	;# 
  3628  0EA2                     	;# 
  3629  0EA3                     	;# 
  3630  0EA4                     	;# 
  3631  0EA5                     	;# 
  3632  0EA9                     	;# 
  3633  0EAA                     	;# 
  3634  0EAB                     	;# 
  3635  0EAC                     	;# 
  3636  0EB1                     	;# 
  3637  0EB2                     	;# 
  3638  0EB3                     	;# 
  3639  0EB8                     	;# 
  3640  0EB9                     	;# 
  3641  0EBA                     	;# 
  3642  0EBB                     	;# 
  3643  0EBC                     	;# 
  3644  0EBD                     	;# 
  3645  0EBE                     	;# 
  3646  0EC3                     	;# 
  3647  0EC5                     	;# 
  3648  0EC6                     	;# 
  3649  0EC7                     	;# 
  3650  0EC8                     	;# 
  3651  0EC9                     	;# 
  3652  0ECA                     	;# 
  3653  0ECB                     	;# 
  3654  0ECC                     	;# 
  3655  0F10                     	;# 
  3656  0F11                     	;# 
  3657  0F12                     	;# 
  3658  0F13                     	;# 
  3659  0F14                     	;# 
  3660  0F15                     	;# 
  3661  0F16                     	;# 
  3662  0F17                     	;# 
  3663  0F18                     	;# 
  3664  0F19                     	;# 
  3665  0F1A                     	;# 
  3666  0F1B                     	;# 
  3667  0F1C                     	;# 
  3668  0F1D                     	;# 
  3669  0F1E                     	;# 
  3670  0F1F                     	;# 
  3671  0F20                     	;# 
  3672  0F21                     	;# 
  3673  0F22                     	;# 
  3674  0F23                     	;# 
  3675  0F24                     	;# 
  3676  0F25                     	;# 
  3677  0F26                     	;# 
  3678  0F27                     	;# 
  3679  0F38                     	;# 
  3680  0F39                     	;# 
  3681  0F3A                     	;# 
  3682  0F3B                     	;# 
  3683  0F3C                     	;# 
  3684  0F3D                     	;# 
  3685  0F3E                     	;# 
  3686  0F3F                     	;# 
  3687  0F40                     	;# 
  3688  0F41                     	;# 
  3689  0F43                     	;# 
  3690  0F44                     	;# 
  3691  0F45                     	;# 
  3692  0F46                     	;# 
  3693  0F47                     	;# 
  3694  0F48                     	;# 
  3695  0F49                     	;# 
  3696  0F4A                     	;# 
  3697  0F4B                     	;# 
  3698  0F4C                     	;# 
  3699  0F4E                     	;# 
  3700  0F4F                     	;# 
  3701  0F50                     	;# 
  3702  0F51                     	;# 
  3703  0F52                     	;# 
  3704  0F53                     	;# 
  3705  0F54                     	;# 
  3706  0F55                     	;# 
  3707  0F56                     	;# 
  3708  0F57                     	;# 
  3709  0F65                     	;# 
  3710  0F68                     	;# 
  3711  0F69                     	;# 
  3712  0F6A                     	;# 
  3713  0F6B                     	;# 
  3714  0FE4                     	;# 
  3715  0FE5                     	;# 
  3716  0FE6                     	;# 
  3717  0FE7                     	;# 
  3718  0FE8                     	;# 
  3719  0FE9                     	;# 
  3720  0FEA                     	;# 
  3721  0FEB                     	;# 
  3722  0FED                     	;# 
  3723  0FEE                     	;# 
  3724  0FEF                     	;# 
  3725  0000                     	;# 
  3726  0001                     	;# 
  3727  0002                     	;# 
  3728  0003                     	;# 
  3729  0004                     	;# 
  3730  0005                     	;# 
  3731  0006                     	;# 
  3732  0007                     	;# 
  3733  0008                     	;# 
  3734  0009                     	;# 
  3735  000A                     	;# 
  3736  000B                     	;# 
  3737  000C                     	;# 
  3738  000D                     	;# 
  3739  000E                     	;# 
  3740  0010                     	;# 
  3741  0011                     	;# 
  3742  0012                     	;# 
  3743  0013                     	;# 
  3744  0016                     	;# 
  3745  0017                     	;# 
  3746  0018                     	;# 
  3747  001C                     	;# 
  3748  001C                     	;# 
  3749  001D                     	;# 
  3750  001D                     	;# 
  3751  001E                     	;# 
  3752  001F                     	;# 
  3753  008C                     	;# 
  3754  008C                     	;# 
  3755  008D                     	;# 
  3756  008E                     	;# 
  3757  008E                     	;# 
  3758  008F                     	;# 
  3759  0090                     	;# 
  3760  0090                     	;# 
  3761  0091                     	;# 
  3762  0093                     	;# 
  3763  0094                     	;# 
  3764  0095                     	;# 
  3765  0096                     	;# 
  3766  0097                     	;# 
  3767  0098                     	;# 
  3768  0099                     	;# 
  3769  009A                     	;# 
  3770  009B                     	;# 
  3771  009C                     	;# 
  3772  009D                     	;# 
  3773  009E                     	;# 
  3774  010C                     	;# 
  3775  010D                     	;# 
  3776  010E                     	;# 
  3777  010E                     	;# 
  3778  010F                     	;# 
  3779  0110                     	;# 
  3780  0110                     	;# 
  3781  0111                     	;# 
  3782  0112                     	;# 
  3783  0112                     	;# 
  3784  0113                     	;# 
  3785  0114                     	;# 
  3786  0114                     	;# 
  3787  0115                     	;# 
  3788  0116                     	;# 
  3789  0116                     	;# 
  3790  0117                     	;# 
  3791  0119                     	;# 
  3792  0119                     	;# 
  3793  0119                     	;# 
  3794  011A                     	;# 
  3795  011A                     	;# 
  3796  011A                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011B                     	;# 
  3801  011B                     	;# 
  3802  011C                     	;# 
  3803  011C                     	;# 
  3804  011C                     	;# 
  3805  011D                     	;# 
  3806  011D                     	;# 
  3807  011D                     	;# 
  3808  011E                     	;# 
  3809  011E                     	;# 
  3810  011E                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  011F                     	;# 
  3815  011F                     	;# 
  3816  018C                     	;# 
  3817  018D                     	;# 
  3818  018E                     	;# 
  3819  018F                     	;# 
  3820  0190                     	;# 
  3821  0191                     	;# 
  3822  0192                     	;# 
  3823  0196                     	;# 
  3824  0197                     	;# 
  3825  0198                     	;# 
  3826  0199                     	;# 
  3827  019A                     	;# 
  3828  019B                     	;# 
  3829  019C                     	;# 
  3830  020C                     	;# 
  3831  020C                     	;# 
  3832  020D                     	;# 
  3833  020E                     	;# 
  3834  020F                     	;# 
  3835  020F                     	;# 
  3836  0210                     	;# 
  3837  0210                     	;# 
  3838  0211                     	;# 
  3839  0211                     	;# 
  3840  0212                     	;# 
  3841  0212                     	;# 
  3842  0213                     	;# 
  3843  0214                     	;# 
  3844  0215                     	;# 
  3845  0215                     	;# 
  3846  0216                     	;# 
  3847  0216                     	;# 
  3848  0217                     	;# 
  3849  0217                     	;# 
  3850  0218                     	;# 
  3851  0218                     	;# 
  3852  0219                     	;# 
  3853  021A                     	;# 
  3854  021B                     	;# 
  3855  021B                     	;# 
  3856  021C                     	;# 
  3857  021C                     	;# 
  3858  021D                     	;# 
  3859  021D                     	;# 
  3860  021E                     	;# 
  3861  021F                     	;# 
  3862  028C                     	;# 
  3863  028C                     	;# 
  3864  028D                     	;# 
  3865  028D                     	;# 
  3866  028E                     	;# 
  3867  028F                     	;# 
  3868  0290                     	;# 
  3869  0290                     	;# 
  3870  0291                     	;# 
  3871  0292                     	;# 
  3872  0292                     	;# 
  3873  0293                     	;# 
  3874  0293                     	;# 
  3875  0294                     	;# 
  3876  0295                     	;# 
  3877  0296                     	;# 
  3878  0296                     	;# 
  3879  0297                     	;# 
  3880  0298                     	;# 
  3881  0298                     	;# 
  3882  0299                     	;# 
  3883  0299                     	;# 
  3884  029A                     	;# 
  3885  029B                     	;# 
  3886  029C                     	;# 
  3887  029C                     	;# 
  3888  029D                     	;# 
  3889  030C                     	;# 
  3890  030C                     	;# 
  3891  030D                     	;# 
  3892  030E                     	;# 
  3893  030F                     	;# 
  3894  0310                     	;# 
  3895  0310                     	;# 
  3896  0311                     	;# 
  3897  0312                     	;# 
  3898  0313                     	;# 
  3899  0314                     	;# 
  3900  0314                     	;# 
  3901  0315                     	;# 
  3902  0316                     	;# 
  3903  0317                     	;# 
  3904  0318                     	;# 
  3905  0318                     	;# 
  3906  0319                     	;# 
  3907  031A                     	;# 
  3908  031B                     	;# 
  3909  031C                     	;# 
  3910  031C                     	;# 
  3911  031D                     	;# 
  3912  031E                     	;# 
  3913  031F                     	;# 
  3914  038C                     	;# 
  3915  038D                     	;# 
  3916  038E                     	;# 
  3917  0390                     	;# 
  3918  0391                     	;# 
  3919  0392                     	;# 
  3920  040C                     	;# 
  3921  040D                     	;# 
  3922  040E                     	;# 
  3923  040F                     	;# 
  3924  0410                     	;# 
  3925  0411                     	;# 
  3926  0416                     	;# 
  3927  0416                     	;# 
  3928  0417                     	;# 
  3929  0418                     	;# 
  3930  0418                     	;# 
  3931  0419                     	;# 
  3932  041A                     	;# 
  3933  041A                     	;# 
  3934  041B                     	;# 
  3935  041C                     	;# 
  3936  041C                     	;# 
  3937  041D                     	;# 
  3938  041E                     	;# 
  3939  041F                     	;# 
  3940  048C                     	;# 
  3941  048C                     	;# 
  3942  048D                     	;# 
  3943  048E                     	;# 
  3944  048F                     	;# 
  3945  048F                     	;# 
  3946  0490                     	;# 
  3947  0491                     	;# 
  3948  0492                     	;# 
  3949  0492                     	;# 
  3950  0493                     	;# 
  3951  0494                     	;# 
  3952  0495                     	;# 
  3953  0495                     	;# 
  3954  0496                     	;# 
  3955  0497                     	;# 
  3956  0498                     	;# 
  3957  0499                     	;# 
  3958  049A                     	;# 
  3959  049B                     	;# 
  3960  049C                     	;# 
  3961  049D                     	;# 
  3962  050C                     	;# 
  3963  050C                     	;# 
  3964  050D                     	;# 
  3965  050E                     	;# 
  3966  050F                     	;# 
  3967  050F                     	;# 
  3968  0510                     	;# 
  3969  0511                     	;# 
  3970  0512                     	;# 
  3971  0512                     	;# 
  3972  0513                     	;# 
  3973  0514                     	;# 
  3974  0515                     	;# 
  3975  0515                     	;# 
  3976  0516                     	;# 
  3977  0517                     	;# 
  3978  0518                     	;# 
  3979  0519                     	;# 
  3980  051A                     	;# 
  3981  051B                     	;# 
  3982  051C                     	;# 
  3983  051D                     	;# 
  3984  058C                     	;# 
  3985  058C                     	;# 
  3986  058D                     	;# 
  3987  058E                     	;# 
  3988  058F                     	;# 
  3989  058F                     	;# 
  3990  0590                     	;# 
  3991  0591                     	;# 
  3992  0592                     	;# 
  3993  0593                     	;# 
  3994  060C                     	;# 
  3995  060D                     	;# 
  3996  060E                     	;# 
  3997  060F                     	;# 
  3998  0610                     	;# 
  3999  0611                     	;# 
  4000  0612                     	;# 
  4001  0613                     	;# 
  4002  0614                     	;# 
  4003  0616                     	;# 
  4004  0617                     	;# 
  4005  0618                     	;# 
  4006  0619                     	;# 
  4007  061A                     	;# 
  4008  061B                     	;# 
  4009  061C                     	;# 
  4010  061D                     	;# 
  4011  061E                     	;# 
  4012  068C                     	;# 
  4013  068D                     	;# 
  4014  068E                     	;# 
  4015  068F                     	;# 
  4016  0690                     	;# 
  4017  0691                     	;# 
  4018  0692                     	;# 
  4019  0693                     	;# 
  4020  0694                     	;# 
  4021  070C                     	;# 
  4022  070D                     	;# 
  4023  070E                     	;# 
  4024  070F                     	;# 
  4025  0710                     	;# 
  4026  0711                     	;# 
  4027  0712                     	;# 
  4028  0713                     	;# 
  4029  0714                     	;# 
  4030  0716                     	;# 
  4031  0717                     	;# 
  4032  0718                     	;# 
  4033  0719                     	;# 
  4034  071A                     	;# 
  4035  071B                     	;# 
  4036  071C                     	;# 
  4037  071D                     	;# 
  4038  071E                     	;# 
  4039  0796                     	;# 
  4040  0797                     	;# 
  4041  0798                     	;# 
  4042  0799                     	;# 
  4043  079A                     	;# 
  4044  079B                     	;# 
  4045  080C                     	;# 
  4046  080D                     	;# 
  4047  080E                     	;# 
  4048  080F                     	;# 
  4049  0810                     	;# 
  4050  0811                     	;# 
  4051  0812                     	;# 
  4052  0813                     	;# 
  4053  0814                     	;# 
  4054  081A                     	;# 
  4055  081B                     	;# 
  4056  081C                     	;# 
  4057  081D                     	;# 
  4058  081E                     	;# 
  4059  081F                     	;# 
  4060  088C                     	;# 
  4061  088D                     	;# 
  4062  088E                     	;# 
  4063  088F                     	;# 
  4064  0890                     	;# 
  4065  0891                     	;# 
  4066  0892                     	;# 
  4067  0893                     	;# 
  4068  0895                     	;# 
  4069  0896                     	;# 
  4070  0897                     	;# 
  4071  0898                     	;# 
  4072  0899                     	;# 
  4073  089A                     	;# 
  4074  089B                     	;# 
  4075  090C                     	;# 
  4076  090E                     	;# 
  4077  090F                     	;# 
  4078  091F                     	;# 
  4079  091F                     	;# 
  4080  098F                     	;# 
  4081  098F                     	;# 
  4082  0990                     	;# 
  4083  0991                     	;# 
  4084  0992                     	;# 
  4085  0993                     	;# 
  4086  0994                     	;# 
  4087  0995                     	;# 
  4088  0996                     	;# 
  4089  0997                     	;# 
  4090  0E0F                     	;# 
  4091  0E10                     	;# 
  4092  0E11                     	;# 
  4093  0E12                     	;# 
  4094  0E13                     	;# 
  4095  0E14                     	;# 
  4096  0E15                     	;# 
  4097  0E16                     	;# 
  4098  0E17                     	;# 
  4099  0E18                     	;# 
  4100  0E19                     	;# 
  4101  0E1A                     	;# 
  4102  0E1B                     	;# 
  4103  0E1C                     	;# 
  4104  0E1D                     	;# 
  4105  0E1E                     	;# 
  4106  0E1F                     	;# 
  4107  0E20                     	;# 
  4108  0E21                     	;# 
  4109  0E22                     	;# 
  4110  0E23                     	;# 
  4111  0E24                     	;# 
  4112  0E25                     	;# 
  4113  0E26                     	;# 
  4114  0E27                     	;# 
  4115  0E28                     	;# 
  4116  0E29                     	;# 
  4117  0E2A                     	;# 
  4118  0E2B                     	;# 
  4119  0E2C                     	;# 
  4120  0E2D                     	;# 
  4121  0E2E                     	;# 
  4122  0E2F                     	;# 
  4123  0E30                     	;# 
  4124  0E31                     	;# 
  4125  0E32                     	;# 
  4126  0E33                     	;# 
  4127  0E34                     	;# 
  4128  0E35                     	;# 
  4129  0E36                     	;# 
  4130  0E37                     	;# 
  4131  0E8F                     	;# 
  4132  0E90                     	;# 
  4133  0E91                     	;# 
  4134  0E92                     	;# 
  4135  0E93                     	;# 
  4136  0E94                     	;# 
  4137  0E95                     	;# 
  4138  0E96                     	;# 
  4139  0E97                     	;# 
  4140  0E9C                     	;# 
  4141  0E9D                     	;# 
  4142  0E9E                     	;# 
  4143  0EA1                     	;# 
  4144  0EA2                     	;# 
  4145  0EA3                     	;# 
  4146  0EA4                     	;# 
  4147  0EA5                     	;# 
  4148  0EA9                     	;# 
  4149  0EAA                     	;# 
  4150  0EAB                     	;# 
  4151  0EAC                     	;# 
  4152  0EB1                     	;# 
  4153  0EB2                     	;# 
  4154  0EB3                     	;# 
  4155  0EB8                     	;# 
  4156  0EB9                     	;# 
  4157  0EBA                     	;# 
  4158  0EBB                     	;# 
  4159  0EBC                     	;# 
  4160  0EBD                     	;# 
  4161  0EBE                     	;# 
  4162  0EC3                     	;# 
  4163  0EC5                     	;# 
  4164  0EC6                     	;# 
  4165  0EC7                     	;# 
  4166  0EC8                     	;# 
  4167  0EC9                     	;# 
  4168  0ECA                     	;# 
  4169  0ECB                     	;# 
  4170  0ECC                     	;# 
  4171  0F10                     	;# 
  4172  0F11                     	;# 
  4173  0F12                     	;# 
  4174  0F13                     	;# 
  4175  0F14                     	;# 
  4176  0F15                     	;# 
  4177  0F16                     	;# 
  4178  0F17                     	;# 
  4179  0F18                     	;# 
  4180  0F19                     	;# 
  4181  0F1A                     	;# 
  4182  0F1B                     	;# 
  4183  0F1C                     	;# 
  4184  0F1D                     	;# 
  4185  0F1E                     	;# 
  4186  0F1F                     	;# 
  4187  0F20                     	;# 
  4188  0F21                     	;# 
  4189  0F22                     	;# 
  4190  0F23                     	;# 
  4191  0F24                     	;# 
  4192  0F25                     	;# 
  4193  0F26                     	;# 
  4194  0F27                     	;# 
  4195  0F38                     	;# 
  4196  0F39                     	;# 
  4197  0F3A                     	;# 
  4198  0F3B                     	;# 
  4199  0F3C                     	;# 
  4200  0F3D                     	;# 
  4201  0F3E                     	;# 
  4202  0F3F                     	;# 
  4203  0F40                     	;# 
  4204  0F41                     	;# 
  4205  0F43                     	;# 
  4206  0F44                     	;# 
  4207  0F45                     	;# 
  4208  0F46                     	;# 
  4209  0F47                     	;# 
  4210  0F48                     	;# 
  4211  0F49                     	;# 
  4212  0F4A                     	;# 
  4213  0F4B                     	;# 
  4214  0F4C                     	;# 
  4215  0F4E                     	;# 
  4216  0F4F                     	;# 
  4217  0F50                     	;# 
  4218  0F51                     	;# 
  4219  0F52                     	;# 
  4220  0F53                     	;# 
  4221  0F54                     	;# 
  4222  0F55                     	;# 
  4223  0F56                     	;# 
  4224  0F57                     	;# 
  4225  0F65                     	;# 
  4226  0F68                     	;# 
  4227  0F69                     	;# 
  4228  0F6A                     	;# 
  4229  0F6B                     	;# 
  4230  0FE4                     	;# 
  4231  0FE5                     	;# 
  4232  0FE6                     	;# 
  4233  0FE7                     	;# 
  4234  0FE8                     	;# 
  4235  0FE9                     	;# 
  4236  0FEA                     	;# 
  4237  0FEB                     	;# 
  4238  0FED                     	;# 
  4239  0FEE                     	;# 
  4240  0FEF                     	;# 
  4241  0000                     	;# 
  4242  0001                     	;# 
  4243  0002                     	;# 
  4244  0003                     	;# 
  4245  0004                     	;# 
  4246  0005                     	;# 
  4247  0006                     	;# 
  4248  0007                     	;# 
  4249  0008                     	;# 
  4250  0009                     	;# 
  4251  000A                     	;# 
  4252  000B                     	;# 
  4253  000C                     	;# 
  4254  000D                     	;# 
  4255  000E                     	;# 
  4256  0010                     	;# 
  4257  0011                     	;# 
  4258  0012                     	;# 
  4259  0013                     	;# 
  4260  0016                     	;# 
  4261  0017                     	;# 
  4262  0018                     	;# 
  4263  001C                     	;# 
  4264  001C                     	;# 
  4265  001D                     	;# 
  4266  001D                     	;# 
  4267  001E                     	;# 
  4268  001F                     	;# 
  4269  008C                     	;# 
  4270  008C                     	;# 
  4271  008D                     	;# 
  4272  008E                     	;# 
  4273  008E                     	;# 
  4274  008F                     	;# 
  4275  0090                     	;# 
  4276  0090                     	;# 
  4277  0091                     	;# 
  4278  0093                     	;# 
  4279  0094                     	;# 
  4280  0095                     	;# 
  4281  0096                     	;# 
  4282  0097                     	;# 
  4283  0098                     	;# 
  4284  0099                     	;# 
  4285  009A                     	;# 
  4286  009B                     	;# 
  4287  009C                     	;# 
  4288  009D                     	;# 
  4289  009E                     	;# 
  4290  010C                     	;# 
  4291  010D                     	;# 
  4292  010E                     	;# 
  4293  010E                     	;# 
  4294  010F                     	;# 
  4295  0110                     	;# 
  4296  0110                     	;# 
  4297  0111                     	;# 
  4298  0112                     	;# 
  4299  0112                     	;# 
  4300  0113                     	;# 
  4301  0114                     	;# 
  4302  0114                     	;# 
  4303  0115                     	;# 
  4304  0116                     	;# 
  4305  0116                     	;# 
  4306  0117                     	;# 
  4307  0119                     	;# 
  4308  0119                     	;# 
  4309  0119                     	;# 
  4310  011A                     	;# 
  4311  011A                     	;# 
  4312  011A                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011B                     	;# 
  4318  011C                     	;# 
  4319  011C                     	;# 
  4320  011C                     	;# 
  4321  011D                     	;# 
  4322  011D                     	;# 
  4323  011D                     	;# 
  4324  011E                     	;# 
  4325  011E                     	;# 
  4326  011E                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  011F                     	;# 
  4332  018C                     	;# 
  4333  018D                     	;# 
  4334  018E                     	;# 
  4335  018F                     	;# 
  4336  0190                     	;# 
  4337  0191                     	;# 
  4338  0192                     	;# 
  4339  0196                     	;# 
  4340  0197                     	;# 
  4341  0198                     	;# 
  4342  0199                     	;# 
  4343  019A                     	;# 
  4344  019B                     	;# 
  4345  019C                     	;# 
  4346  020C                     	;# 
  4347  020C                     	;# 
  4348  020D                     	;# 
  4349  020E                     	;# 
  4350  020F                     	;# 
  4351  020F                     	;# 
  4352  0210                     	;# 
  4353  0210                     	;# 
  4354  0211                     	;# 
  4355  0211                     	;# 
  4356  0212                     	;# 
  4357  0212                     	;# 
  4358  0213                     	;# 
  4359  0214                     	;# 
  4360  0215                     	;# 
  4361  0215                     	;# 
  4362  0216                     	;# 
  4363  0216                     	;# 
  4364  0217                     	;# 
  4365  0217                     	;# 
  4366  0218                     	;# 
  4367  0218                     	;# 
  4368  0219                     	;# 
  4369  021A                     	;# 
  4370  021B                     	;# 
  4371  021B                     	;# 
  4372  021C                     	;# 
  4373  021C                     	;# 
  4374  021D                     	;# 
  4375  021D                     	;# 
  4376  021E                     	;# 
  4377  021F                     	;# 
  4378  028C                     	;# 
  4379  028C                     	;# 
  4380  028D                     	;# 
  4381  028D                     	;# 
  4382  028E                     	;# 
  4383  028F                     	;# 
  4384  0290                     	;# 
  4385  0290                     	;# 
  4386  0291                     	;# 
  4387  0292                     	;# 
  4388  0292                     	;# 
  4389  0293                     	;# 
  4390  0293                     	;# 
  4391  0294                     	;# 
  4392  0295                     	;# 
  4393  0296                     	;# 
  4394  0296                     	;# 
  4395  0297                     	;# 
  4396  0298                     	;# 
  4397  0298                     	;# 
  4398  0299                     	;# 
  4399  0299                     	;# 
  4400  029A                     	;# 
  4401  029B                     	;# 
  4402  029C                     	;# 
  4403  029C                     	;# 
  4404  029D                     	;# 
  4405  030C                     	;# 
  4406  030C                     	;# 
  4407  030D                     	;# 
  4408  030E                     	;# 
  4409  030F                     	;# 
  4410  0310                     	;# 
  4411  0310                     	;# 
  4412  0311                     	;# 
  4413  0312                     	;# 
  4414  0313                     	;# 
  4415  0314                     	;# 
  4416  0314                     	;# 
  4417  0315                     	;# 
  4418  0316                     	;# 
  4419  0317                     	;# 
  4420  0318                     	;# 
  4421  0318                     	;# 
  4422  0319                     	;# 
  4423  031A                     	;# 
  4424  031B                     	;# 
  4425  031C                     	;# 
  4426  031C                     	;# 
  4427  031D                     	;# 
  4428  031E                     	;# 
  4429  031F                     	;# 
  4430  038C                     	;# 
  4431  038D                     	;# 
  4432  038E                     	;# 
  4433  0390                     	;# 
  4434  0391                     	;# 
  4435  0392                     	;# 
  4436  040C                     	;# 
  4437  040D                     	;# 
  4438  040E                     	;# 
  4439  040F                     	;# 
  4440  0410                     	;# 
  4441  0411                     	;# 
  4442  0416                     	;# 
  4443  0416                     	;# 
  4444  0417                     	;# 
  4445  0418                     	;# 
  4446  0418                     	;# 
  4447  0419                     	;# 
  4448  041A                     	;# 
  4449  041A                     	;# 
  4450  041B                     	;# 
  4451  041C                     	;# 
  4452  041C                     	;# 
  4453  041D                     	;# 
  4454  041E                     	;# 
  4455  041F                     	;# 
  4456  048C                     	;# 
  4457  048C                     	;# 
  4458  048D                     	;# 
  4459  048E                     	;# 
  4460  048F                     	;# 
  4461  048F                     	;# 
  4462  0490                     	;# 
  4463  0491                     	;# 
  4464  0492                     	;# 
  4465  0492                     	;# 
  4466  0493                     	;# 
  4467  0494                     	;# 
  4468  0495                     	;# 
  4469  0495                     	;# 
  4470  0496                     	;# 
  4471  0497                     	;# 
  4472  0498                     	;# 
  4473  0499                     	;# 
  4474  049A                     	;# 
  4475  049B                     	;# 
  4476  049C                     	;# 
  4477  049D                     	;# 
  4478  050C                     	;# 
  4479  050C                     	;# 
  4480  050D                     	;# 
  4481  050E                     	;# 
  4482  050F                     	;# 
  4483  050F                     	;# 
  4484  0510                     	;# 
  4485  0511                     	;# 
  4486  0512                     	;# 
  4487  0512                     	;# 
  4488  0513                     	;# 
  4489  0514                     	;# 
  4490  0515                     	;# 
  4491  0515                     	;# 
  4492  0516                     	;# 
  4493  0517                     	;# 
  4494  0518                     	;# 
  4495  0519                     	;# 
  4496  051A                     	;# 
  4497  051B                     	;# 
  4498  051C                     	;# 
  4499  051D                     	;# 
  4500  058C                     	;# 
  4501  058C                     	;# 
  4502  058D                     	;# 
  4503  058E                     	;# 
  4504  058F                     	;# 
  4505  058F                     	;# 
  4506  0590                     	;# 
  4507  0591                     	;# 
  4508  0592                     	;# 
  4509  0593                     	;# 
  4510  060C                     	;# 
  4511  060D                     	;# 
  4512  060E                     	;# 
  4513  060F                     	;# 
  4514  0610                     	;# 
  4515  0611                     	;# 
  4516  0612                     	;# 
  4517  0613                     	;# 
  4518  0614                     	;# 
  4519  0616                     	;# 
  4520  0617                     	;# 
  4521  0618                     	;# 
  4522  0619                     	;# 
  4523  061A                     	;# 
  4524  061B                     	;# 
  4525  061C                     	;# 
  4526  061D                     	;# 
  4527  061E                     	;# 
  4528  068C                     	;# 
  4529  068D                     	;# 
  4530  068E                     	;# 
  4531  068F                     	;# 
  4532  0690                     	;# 
  4533  0691                     	;# 
  4534  0692                     	;# 
  4535  0693                     	;# 
  4536  0694                     	;# 
  4537  070C                     	;# 
  4538  070D                     	;# 
  4539  070E                     	;# 
  4540  070F                     	;# 
  4541  0710                     	;# 
  4542  0711                     	;# 
  4543  0712                     	;# 
  4544  0713                     	;# 
  4545  0714                     	;# 
  4546  0716                     	;# 
  4547  0717                     	;# 
  4548  0718                     	;# 
  4549  0719                     	;# 
  4550  071A                     	;# 
  4551  071B                     	;# 
  4552  071C                     	;# 
  4553  071D                     	;# 
  4554  071E                     	;# 
  4555  0796                     	;# 
  4556  0797                     	;# 
  4557  0798                     	;# 
  4558  0799                     	;# 
  4559  079A                     	;# 
  4560  079B                     	;# 
  4561  080C                     	;# 
  4562  080D                     	;# 
  4563  080E                     	;# 
  4564  080F                     	;# 
  4565  0810                     	;# 
  4566  0811                     	;# 
  4567  0812                     	;# 
  4568  0813                     	;# 
  4569  0814                     	;# 
  4570  081A                     	;# 
  4571  081B                     	;# 
  4572  081C                     	;# 
  4573  081D                     	;# 
  4574  081E                     	;# 
  4575  081F                     	;# 
  4576  088C                     	;# 
  4577  088D                     	;# 
  4578  088E                     	;# 
  4579  088F                     	;# 
  4580  0890                     	;# 
  4581  0891                     	;# 
  4582  0892                     	;# 
  4583  0893                     	;# 
  4584  0895                     	;# 
  4585  0896                     	;# 
  4586  0897                     	;# 
  4587  0898                     	;# 
  4588  0899                     	;# 
  4589  089A                     	;# 
  4590  089B                     	;# 
  4591  090C                     	;# 
  4592  090E                     	;# 
  4593  090F                     	;# 
  4594  091F                     	;# 
  4595  091F                     	;# 
  4596  098F                     	;# 
  4597  098F                     	;# 
  4598  0990                     	;# 
  4599  0991                     	;# 
  4600  0992                     	;# 
  4601  0993                     	;# 
  4602  0994                     	;# 
  4603  0995                     	;# 
  4604  0996                     	;# 
  4605  0997                     	;# 
  4606  0E0F                     	;# 
  4607  0E10                     	;# 
  4608  0E11                     	;# 
  4609  0E12                     	;# 
  4610  0E13                     	;# 
  4611  0E14                     	;# 
  4612  0E15                     	;# 
  4613  0E16                     	;# 
  4614  0E17                     	;# 
  4615  0E18                     	;# 
  4616  0E19                     	;# 
  4617  0E1A                     	;# 
  4618  0E1B                     	;# 
  4619  0E1C                     	;# 
  4620  0E1D                     	;# 
  4621  0E1E                     	;# 
  4622  0E1F                     	;# 
  4623  0E20                     	;# 
  4624  0E21                     	;# 
  4625  0E22                     	;# 
  4626  0E23                     	;# 
  4627  0E24                     	;# 
  4628  0E25                     	;# 
  4629  0E26                     	;# 
  4630  0E27                     	;# 
  4631  0E28                     	;# 
  4632  0E29                     	;# 
  4633  0E2A                     	;# 
  4634  0E2B                     	;# 
  4635  0E2C                     	;# 
  4636  0E2D                     	;# 
  4637  0E2E                     	;# 
  4638  0E2F                     	;# 
  4639  0E30                     	;# 
  4640  0E31                     	;# 
  4641  0E32                     	;# 
  4642  0E33                     	;# 
  4643  0E34                     	;# 
  4644  0E35                     	;# 
  4645  0E36                     	;# 
  4646  0E37                     	;# 
  4647  0E8F                     	;# 
  4648  0E90                     	;# 
  4649  0E91                     	;# 
  4650  0E92                     	;# 
  4651  0E93                     	;# 
  4652  0E94                     	;# 
  4653  0E95                     	;# 
  4654  0E96                     	;# 
  4655  0E97                     	;# 
  4656  0E9C                     	;# 
  4657  0E9D                     	;# 
  4658  0E9E                     	;# 
  4659  0EA1                     	;# 
  4660  0EA2                     	;# 
  4661  0EA3                     	;# 
  4662  0EA4                     	;# 
  4663  0EA5                     	;# 
  4664  0EA9                     	;# 
  4665  0EAA                     	;# 
  4666  0EAB                     	;# 
  4667  0EAC                     	;# 
  4668  0EB1                     	;# 
  4669  0EB2                     	;# 
  4670  0EB3                     	;# 
  4671  0EB8                     	;# 
  4672  0EB9                     	;# 
  4673  0EBA                     	;# 
  4674  0EBB                     	;# 
  4675  0EBC                     	;# 
  4676  0EBD                     	;# 
  4677  0EBE                     	;# 
  4678  0EC3                     	;# 
  4679  0EC5                     	;# 
  4680  0EC6                     	;# 
  4681  0EC7                     	;# 
  4682  0EC8                     	;# 
  4683  0EC9                     	;# 
  4684  0ECA                     	;# 
  4685  0ECB                     	;# 
  4686  0ECC                     	;# 
  4687  0F10                     	;# 
  4688  0F11                     	;# 
  4689  0F12                     	;# 
  4690  0F13                     	;# 
  4691  0F14                     	;# 
  4692  0F15                     	;# 
  4693  0F16                     	;# 
  4694  0F17                     	;# 
  4695  0F18                     	;# 
  4696  0F19                     	;# 
  4697  0F1A                     	;# 
  4698  0F1B                     	;# 
  4699  0F1C                     	;# 
  4700  0F1D                     	;# 
  4701  0F1E                     	;# 
  4702  0F1F                     	;# 
  4703  0F20                     	;# 
  4704  0F21                     	;# 
  4705  0F22                     	;# 
  4706  0F23                     	;# 
  4707  0F24                     	;# 
  4708  0F25                     	;# 
  4709  0F26                     	;# 
  4710  0F27                     	;# 
  4711  0F38                     	;# 
  4712  0F39                     	;# 
  4713  0F3A                     	;# 
  4714  0F3B                     	;# 
  4715  0F3C                     	;# 
  4716  0F3D                     	;# 
  4717  0F3E                     	;# 
  4718  0F3F                     	;# 
  4719  0F40                     	;# 
  4720  0F41                     	;# 
  4721  0F43                     	;# 
  4722  0F44                     	;# 
  4723  0F45                     	;# 
  4724  0F46                     	;# 
  4725  0F47                     	;# 
  4726  0F48                     	;# 
  4727  0F49                     	;# 
  4728  0F4A                     	;# 
  4729  0F4B                     	;# 
  4730  0F4C                     	;# 
  4731  0F4E                     	;# 
  4732  0F4F                     	;# 
  4733  0F50                     	;# 
  4734  0F51                     	;# 
  4735  0F52                     	;# 
  4736  0F53                     	;# 
  4737  0F54                     	;# 
  4738  0F55                     	;# 
  4739  0F56                     	;# 
  4740  0F57                     	;# 
  4741  0F65                     	;# 
  4742  0F68                     	;# 
  4743  0F69                     	;# 
  4744  0F6A                     	;# 
  4745  0F6B                     	;# 
  4746  0FE4                     	;# 
  4747  0FE5                     	;# 
  4748  0FE6                     	;# 
  4749  0FE7                     	;# 
  4750  0FE8                     	;# 
  4751  0FE9                     	;# 
  4752  0FEA                     	;# 
  4753  0FEB                     	;# 
  4754  0FED                     	;# 
  4755  0FEE                     	;# 
  4756  0FEF                     	;_aPatchMemory
  4757                           
  4758                           	psect	idataBANK2
  4759  0B04                     __pidataBANK2:	
  4760                           
  4761                           ;initializer for _segdisp
  4762  0B04  3403               	retlw	3
  4763  0B05  3400               	retlw	0
  4764  0B06  349F               	retlw	159
  4765  0B07  3400               	retlw	0
  4766  0B08  3425               	retlw	37
  4767  0B09  3400               	retlw	0
  4768  0B0A  340D               	retlw	13
  4769  0B0B  3400               	retlw	0
  4770  0B0C  3499               	retlw	153
  4771  0B0D  3400               	retlw	0
  4772  0B0E  3449               	retlw	73
  4773  0B0F  3400               	retlw	0
  4774  0B10  3441               	retlw	65
  4775  0B11  3400               	retlw	0
  4776  0B12  341B               	retlw	27
  4777  0B13  3400               	retlw	0
  4778  0B14  3401               	retlw	1
  4779  0B15  3400               	retlw	0
  4780  0B16  3409               	retlw	9
  4781  0B17  3400               	retlw	0
  4782                           
  4783                           	psect	stringtext1
  4784  1000                     __pstringtext1:	
  4785  1000                     _cPowerOfTwo:	
  4786  1000  3401               	retlw	1
  4787  1001  3400               	retlw	0
  4788  1002  3402               	retlw	2
  4789  1003  3400               	retlw	0
  4790  1004  3404               	retlw	4
  4791  1005  3400               	retlw	0
  4792  1006  3408               	retlw	8
  4793  1007  3400               	retlw	0
  4794  1008  3410               	retlw	16
  4795  1009  3400               	retlw	0
  4796  100A  3420               	retlw	32
  4797  100B  3400               	retlw	0
  4798  100C  3440               	retlw	64
  4799  100D  3400               	retlw	0
  4800  100E  3480               	retlw	128
  4801  100F  3400               	retlw	0
  4802  1010                     __end_of_cPowerOfTwo:	
  4803                           
  4804                           	psect	stringtext2
  4805  1010                     __pstringtext2:	
  4806  1010                     _maxBanks:	
  4807  1010  3401               	retlw	1
  4808  1011  3400               	retlw	0
  4809  1012                     __end_of_maxBanks:	
  4810                           
  4811                           	psect	stringtext3
  4812  1012                     __pstringtext3:	
  4813  1012                     _maxPatches:	
  4814  1012  3464               	retlw	100
  4815  1013  3400               	retlw	0
  4816  1014                     __end_of_maxPatches:	
  4817                           
  4818                           	psect	stringtext4
  4819  1014                     __pstringtext4:	
  4820  1014                     _MvcMaxValue:	
  4821  1014  34FF               	retlw	255
  4822  1015  3403               	retlw	3
  4823  1016                     __end_of_MvcMaxValue:	
  4824                           
  4825                           	psect	stringtext5
  4826  1016                     __pstringtext5:	
  4827  1016                     _MvcMinValue:	
  4828  1016  3400               	retlw	0
  4829  1017  3400               	retlw	0
  4830  1018                     __end_of_MvcMinValue:	
  4831                           
  4832                           	psect	stringtext6
  4833  1018                     __pstringtext6:	
  4834  1018                     _clockMicroTime:	
  4835  1018  34C8               	retlw	200
  4836  1019  3400               	retlw	0
  4837  101A                     __end_of_clockMicroTime:	
  4838                           
  4839                           	psect	stringtext7
  4840  101A                     __pstringtext7:	
  4841  101A                     _lineSettleMicroTime:	
  4842  101A  3490               	retlw	144
  4843  101B  3401               	retlw	1
  4844  101C                     __end_of_lineSettleMicroTime:	
  4845                           
  4846                           	psect	stringtext8
  4847  101C                     __pstringtext8:	
  4848  101C                     _toggleDly:	
  4849  101C  340A               	retlw	10
  4850  101D  3400               	retlw	0
  4851  101E                     __end_of_toggleDly:	
  4852                           
  4853                           	psect	stringtext9
  4854  101E                     __pstringtext9:	
  4855  101E                     _twoK:	
  4856  101E  3410               	retlw	16
  4857  101F  3427               	retlw	39
  4858  1020                     __end_of_twoK:	
  4859                           
  4860                           	psect	stringtext10
  4861  1020                     __pstringtext10:	
  4862  1020                     _speed:	
  4863  1020  3432               	retlw	50
  4864  1021  3400               	retlw	0
  4865  1022                     __end_of_speed:	
  4866                           
  4867                           	psect	stringtext11
  4868  1022                     __pstringtext11:	
  4869  1022                     _datapin:	
  4870  1022  3412               	retlw	18
  4871  1023  3400               	retlw	0
  4872  1024                     __end_of_datapin:	
  4873                           
  4874                           	psect	stringtext12
  4875  1024                     __pstringtext12:	
  4876  1024                     _clockpin:	
  4877  1024  3411               	retlw	17
  4878  1025  3400               	retlw	0
  4879  1026                     __end_of_clockpin:	
  4880                           
  4881                           	psect	stringtext13
  4882  1026                     __pstringtext13:	
  4883  1026                     _latchpin:	
  4884  1026  3410               	retlw	16
  4885  1027  3400               	retlw	0
  4886  1028                     __end_of_latchpin:	
  4887                           
  4888                           	psect	stringtext14
  4889  1028                     __pstringtext14:	
  4890  1028                     main@iResetValue:	
  4891  1028  3464               	retlw	100
  4892  1029  3400               	retlw	0
  4893  102A                     __end_ofmain@iResetValue:	
  4894                           
  4895                           	psect	stringtext15
  4896  102A                     __pstringtext15:	
  4897  102A                     _cMstrClkAdjust:	
  4898  102A  3420               	retlw	32
  4899  102B  3400               	retlw	0
  4900  102C                     __end_of_cMstrClkAdjust:	
  4901                           
  4902                           	psect	stringtext16
  4903  102C                     __pstringtext16:	
  4904  102C                     _i2c_addr_dualADSR1:	
  4905  102C  3469               	retlw	105
  4906  102D                     __end_of_i2c_addr_dualADSR1:	
  4907                           
  4908                           	psect	stringtext17
  4909  102D                     __pstringtext17:	
  4910  102D                     _i2c_addr_dualADSR0:	
  4911  102D  3468               	retlw	104
  4912  102E                     __end_of_i2c_addr_dualADSR0:	
  4913                           
  4914                           	psect	stringtext18
  4915  102E                     __pstringtext18:	
  4916  102E                     _cPointerByteWriteLED:	
  4917  102E  3410               	retlw	16
  4918  102F                     __end_of_cPointerByteWriteLED:	
  4919                           
  4920                           	psect	stringtext19
  4921  102F                     __pstringtext19:	
  4922  102F                     _cPointerByteReadFaders:	
  4923  102F  3420               	retlw	32
  4924  1030                     __end_of_cPointerByteReadFaders:	
  4925                           
  4926                           	psect	stringtext20
  4927  1030                     __pstringtext20:	
  4928  1030                     _cPointerByteWriteFaders:	
  4929  1030  3430               	retlw	48
  4930  1031                     __end_of_cPointerByteWriteFaders:	
  4931  0018                     _LATCbits	set	24
  4932  0013                     _TRISCbits	set	19
  4933  000D                     _PORTBbits	set	13
  4934  000E                     _PORTC	set	14
  4935  000D                     _PORTB	set	13
  4936  000B                     _INTCONbits	set	11
  4937  0013                     _TRISC	set	19
  4938  0012                     _TRISB	set	18
  4939  0011                     _TRISA	set	17
  4940  0018                     _LATC	set	24
  4941  0017                     _LATB	set	23
  4942  0016                     _LATA	set	22
  4943  005F                     _GIE	set	95
  4944  0094                     _ADCON1bits	set	148
  4945  008E                     _ADPREVL	set	142
  4946  008F                     _ADPREVH	set	143
  4947  0097                     _ADSTATbits	set	151
  4948  0090                     _ADACCL	set	144
  4949  0091                     _ADACCH	set	145
  4950  0095                     _ADCON2bits	set	149
  4951  0096                     _ADCON3bits	set	150
  4952  008C                     _ADRESL	set	140
  4953  008D                     _ADRESH	set	141
  4954  0093                     _ADCON0bits	set	147
  4955  0093                     _ADCON0	set	147
  4956  009E                     _ADPCH	set	158
  4957  009D                     _ADACQ	set	157
  4958  009C                     _ADPRE	set	156
  4959  009B                     _ADCAP	set	155
  4960  009A                     _ADREF	set	154
  4961  0098                     _ADCLK	set	152
  4962  0097                     _ADSTAT	set	151
  4963  0099                     _ADACT	set	153
  4964  0096                     _ADCON3	set	150
  4965  0095                     _ADCON2	set	149
  4966  0094                     _ADCON1	set	148
  4967  0116                     _ADERRL	set	278
  4968  0117                     _ADERRH	set	279
  4969  0114                     _ADFLTRL	set	276
  4970  0115                     _ADFLTRH	set	277
  4971  010C                     _ADCNT	set	268
  4972  0113                     _ADSTPTH	set	275
  4973  0112                     _ADSTPTL	set	274
  4974  0111                     _ADUTHH	set	273
  4975  0110                     _ADUTHL	set	272
  4976  010F                     _ADLTHH	set	271
  4977  010E                     _ADLTHL	set	270
  4978  010D                     _ADRPT	set	269
  4979  018C                     _SSP1BUF	set	396
  4980  0191                     _SSP1CON2bits	set	401
  4981  0190                     _SSP1CON1bits	set	400
  4982  018D                     _SSP1ADD	set	397
  4983  0192                     _SSP1CON3	set	402
  4984  0190                     _SSP1CON1	set	400
  4985  018F                     _SSP1STAT	set	399
  4986  0719                     _PIE3bits	set	1817
  4987  070F                     _PIR3bits	set	1807
  4988  0892                     _OSCTUNE	set	2194
  4989  0893                     _OSCFRQ	set	2195
  4990  0891                     _OSCEN	set	2193
  4991  088F                     _OSCCON3	set	2191
  4992  088D                     _OSCCON1	set	2189
  4993  0EC5                     _SSP1CLKPPSbits	set	3781
  4994  0EC6                     _SSP1DATPPSbits	set	3782
  4995  0E8F                     _PPSLOCKbits	set	3727
  4996  0E8F                     _PPSLOCK	set	3727
  4997  0F4E                     _ANSELCbits	set	3918
  4998  0F24                     _RC4PPS	set	3876
  4999  0F23                     _RC3PPS	set	3875
  5000  0F50                     _ODCONC	set	3920
  5001  0F45                     _ODCONB	set	3909
  5002  0F3A                     _ODCONA	set	3898
  5003  0F4F                     _WPUC	set	3919
  5004  0F39                     _WPUA	set	3897
  5005  0F44                     _WPUB	set	3908
  5006  0F65                     _WPUE	set	3941
  5007  0F38                     _ANSELA	set	3896
  5008  0F43                     _ANSELB	set	3907
  5009  0F4E                     _ANSELC	set	3918
  5010                           
  5011                           ; #config settings
  5012  0000                     
  5013                           	psect	cinit
  5014  0022                     start_initialization:	
  5015  0022                     __initialization:		;BIGRAM
  5016                           
  5017                           ; Initialize objects allocated to BANK2
  5018  0022  3004               	movlw	low __pidataBANK2
  5019  0023  0084               	movwf	4
  5020  0024  308B               	movlw	(high __pidataBANK2)| (0+128)
  5021  0025  0085               	movwf	5
  5022  0026  3020               	movlw	low __pdataBANK2
  5023  0027  0086               	movwf	6
  5024  0028  3001               	movlw	high __pdataBANK2
  5025  0029  0087               	movwf	7
  5026  002A  3000               	movlw	0
  5027  002B  00FF               	movwf	btemp+1
  5028  002C  3014               	movlw	20
  5029  002D  318A  22D2  3180   	fcall	init_ram
  5030                           
  5031                           ; Clear objects allocated to BIGRAM
  5032  0030  3070               	movlw	low (0+9072)
  5033  0031  0084               	movwf	4
  5034  0032  3023               	movlw	high (0+9072)
  5035  0033  0085               	movwf	5
  5036  0034  3080               	movlw	128
  5037  0035  00FE               	movwf	btemp
  5038  0036  3000               	movlw	0
  5039  0037  00FF               	movwf	btemp+1
  5040  0038  318A  22C6  3180   	fcall	clear_ram0
  5041                           
  5042                           ; Clear objects allocated to COMMON
  5043  003B  01F0               	clrf	__pbssCOMMON& (0+127)
  5044  003C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  5045  003D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  5046  003E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  5047  003F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  5048  0040  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  5049  0041  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  5050                           
  5051                           ; Clear objects allocated to BANK0
  5052  0042  01E7               	clrf	__pbssBANK0& (0+127)
  5053  0043  01E8               	clrf	(__pbssBANK0+1)& (0+127)
  5054  0044  01E9               	clrf	(__pbssBANK0+2)& (0+127)
  5055  0045  01EA               	clrf	(__pbssBANK0+3)& (0+127)
  5056  0046  01EB               	clrf	(__pbssBANK0+4)& (0+127)
  5057  0047  01EC               	clrf	(__pbssBANK0+5)& (0+127)
  5058  0048  01ED               	clrf	(__pbssBANK0+6)& (0+127)
  5059  0049  01EE               	clrf	(__pbssBANK0+7)& (0+127)
  5060  004A  01EF               	clrf	(__pbssBANK0+8)& (0+127)
  5061                           
  5062                           ; Clear objects allocated to BANK1
  5063  004B  30A0               	movlw	low __pbssBANK1
  5064  004C  0084               	movwf	4
  5065  004D  3000               	movlw	high __pbssBANK1
  5066  004E  0085               	movwf	5
  5067  004F  3038               	movlw	56
  5068  0050  00FE               	movwf	btemp
  5069  0051  3000               	movlw	0
  5070  0052  00FF               	movwf	btemp+1
  5071  0053  318A  22C6  3180   	fcall	clear_ram0
  5072                           
  5073                           ; Clear objects allocated to BANK2
  5074  0056  3034               	movlw	low __pbssBANK2
  5075  0057  0084               	movwf	4
  5076  0058  3001               	movlw	high __pbssBANK2
  5077  0059  0085               	movwf	5
  5078  005A  3010               	movlw	16
  5079  005B  00FE               	movwf	btemp
  5080  005C  3000               	movlw	0
  5081  005D  00FF               	movwf	btemp+1
  5082  005E  318A  22C6         	fcall	clear_ram0
  5083  0060                     end_of_initialization:	
  5084                           ;End of C runtime variable initialization code
  5085                           
  5086  0060                     __end_of__initialization:	
  5087  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5088  0061  0020               	movlb	0
  5089  0062  3180  2864         	ljmp	_main	;jump to C main() function
  5090                           
  5091                           	psect	bssCOMMON
  5092  0070                     __pbssCOMMON:	
  5093  0070                     I2C1_ISR@i2c_bytes_left:	
  5094  0070                     	ds	1
  5095  0071                     I2C1_ISR@pi2c_buf_ptr:	
  5096  0071                     	ds	1
  5097  0072                     _p_i2c1_current:	
  5098  0072                     	ds	1
  5099  0073                     _p_i2c1_trb_current:	
  5100  0073                     	ds	1
  5101  0074                     _i2c1_trb_count:	
  5102  0074                     	ds	1
  5103  0075                     I2C1_ISR@i2c_address:	
  5104  0075                     	ds	2
  5105                           
  5106                           	psect	bssBANK0
  5107  0067                     __pbssBANK0:	
  5108  0067                     _i2c1_object:	
  5109  0067                     	ds	5
  5110  006C                     _iLEDs0_MSB:	
  5111  006C                     	ds	1
  5112  006D                     _MY_CONSTS:	
  5113  006D                     	ds	1
  5114  006E                     I2C1_ISR@i2c_10bit_address_restart:	
  5115  006E                     	ds	1
  5116  006F                     _i2c1_state:	
  5117  006F                     	ds	1
  5118                           
  5119                           	psect	bssBANK1
  5120  00A0                     __pbssBANK1:	
  5121  00A0                     _prevPanelInChannels:	
  5122  00A0                     	ds	4
  5123  00A4                     _PanelInChannels:	
  5124  00A4                     	ds	4
  5125  00A8                     _faderActiveFlag:	
  5126  00A8                     	ds	4
  5127  00AC                     _d:	
  5128  00AC                     	ds	3
  5129  00AF                     _b:	
  5130  00AF                     	ds	3
  5131  00B2                     _wkFloat:	
  5132  00B2                     	ds	3
  5133  00B5                     _e:	
  5134  00B5                     	ds	2
  5135  00B7                     _c:	
  5136  00B7                     	ds	2
  5137  00B9                     _mvcPatchNumber:	
  5138  00B9                     	ds	2
  5139  00BB                     _wkByte:	
  5140  00BB                     	ds	1
  5141  00BC                     _wkMIDICC:	
  5142  00BC                     	ds	1
  5143  00BD                     _wkFaderValue:	
  5144  00BD                     	ds	1
  5145  00BE                     _iLEDs1_LSB:	
  5146  00BE                     	ds	1
  5147  00BF                     _iLEDs1_MSB:	
  5148  00BF                     	ds	1
  5149  00C0                     _iLEDs0_LSB:	
  5150  00C0                     	ds	1
  5151  00C1                     _iI2CFaderValue:	
  5152  00C1                     	ds	8
  5153  00C9                     _mvcChannels:	
  5154  00C9                     	ds	4
  5155  00CD                     I2C1_MasterRead@trBlock:	
  5156  00CD                     	ds	4
  5157  00D1                     I2C1_MasterWrite@trBlock:	
  5158  00D1                     	ds	4
  5159  00D5                     _i2c1_tr_queue:	
  5160  00D5                     	ds	3
  5161                           
  5162                           	psect	bssBANK2
  5163  0134                     __pbssBANK2:	
  5164  0134                     _dualADSRdata1:	
  5165  0134                     	ds	8
  5166  013C                     _dualADSRdata0:	
  5167  013C                     	ds	8
  5168                           
  5169                           	psect	dataBANK2
  5170  0120                     __pdataBANK2:	
  5171  0120                     _segdisp:	
  5172  0120                     	ds	20
  5173                           
  5174                           	psect	inittext
  5175  0AD2                     init_ram:	
  5176  0AD2  00FE               	movwf	126
  5177  0AD3                     initloop:	
  5178  0AD3  0012               	moviw fsr0++
  5179  0AD4  001E               	movwi fsr1++
  5180  0AD5  3001               	movlw	1
  5181  0AD6  02FE               	subwf	126,f
  5182  0AD7  3000               	movlw	0
  5183  0AD8  3BFF               	subwfb	127,f
  5184  0AD9  087F               	movf	127,w
  5185  0ADA  047E               	iorwf	126,w
  5186  0ADB  1903               	btfsc	3,2
  5187  0ADC  3400               	retlw	0
  5188  0ADD  2AD3               	goto	initloop
  5189                           
  5190                           	psect	clrtext
  5191  0AC6                     clear_ram0:	
  5192                           ;	Called with FSR0 containing the base address, and
  5193                           ;	btemp/btemp+1 has the size to clear
  5194                           
  5195  0AC6  0064               	clrwdt	;clear the watchdog before getting into this loop
  5196  0AC7                     clrloop0:	
  5197  0AC7  0180               	clrf	0	;clear RAM location pointed to by FSR
  5198  0AC8  3101               	addfsr 0,1
  5199  0AC9  3001               	movlw	1
  5200  0ACA  02FE               	subwf	126,f
  5201  0ACB  3000               	movlw	0
  5202  0ACC  3BFF               	subwfb	127,f
  5203  0ACD  087F               	movf	127,w
  5204  0ACE  047E               	iorwf	126,w
  5205  0ACF  1903               	btfsc	3,2
  5206  0AD0  3400               	retlw	0	;all done for this memory range, return
  5207  0AD1  2AC7               	goto	clrloop0	;have we reached the end yet?
  5208                           
  5209                           	psect	cstackBANK1
  5210  00D8                     __pcstackBANK1:	
  5211  00D8                     main@readStatus:	
  5212                           
  5213                           ; 1 bytes @ 0x0
  5214  00D8                     	ds	1
  5215  00D9                     main@iCounter:	
  5216                           
  5217                           ; 2 bytes @ 0x1
  5218  00D9                     	ds	2
  5219  00DB                     main@iChangeCount:	
  5220                           
  5221                           ; 1 bytes @ 0x3
  5222  00DB                     	ds	1
  5223  00DC                     main@prevFader8bitValue:	
  5224                           
  5225                           ; 1 bytes @ 0x4
  5226  00DC                     	ds	1
  5227  00DD                     main@iLoopCounter:	
  5228                           
  5229                           ; 2 bytes @ 0x5
  5230  00DD                     	ds	2
  5231  00DF                     main@POT0Value:	
  5232                           
  5233                           ; 1 bytes @ 0x7
  5234  00DF                     	ds	1
  5235  00E0                     main@POT1Value:	
  5236                           
  5237                           ; 1 bytes @ 0x8
  5238  00E0                     	ds	1
  5239  00E1                     main@LoadDebounceCount:	
  5240                           
  5241                           ; 2 bytes @ 0x9
  5242  00E1                     	ds	2
  5243  00E3                     main@SaveDebounceCount:	
  5244                           
  5245                           ; 2 bytes @ 0xB
  5246  00E3                     	ds	2
  5247  00E5                     main@fader8bitValue:	
  5248                           
  5249                           ; 1 bytes @ 0xD
  5250  00E5                     	ds	1
  5251  00E6                     main@fx:	
  5252                           
  5253                           ; 2 bytes @ 0xE
  5254  00E6                     	ds	2
  5255  00E8                     main@faderValue:	
  5256                           
  5257                           ; 2 bytes @ 0x10
  5258  00E8                     	ds	2
  5259  00EA                     main@fx_970:	
  5260                           
  5261                           ; 2 bytes @ 0x12
  5262  00EA                     	ds	2
  5263                           
  5264                           	psect	cstackCOMMON
  5265  0077                     __pcstackCOMMON:	
  5266  0077                     ?_OSCILLATOR_Initialize:	
  5267  0077                     ?_I2C1_Initialize:	
  5268                           ; 1 bytes @ 0x0
  5269                           
  5270  0077                     ?_ADCC_Initialize:	
  5271                           ; 1 bytes @ 0x0
  5272                           
  5273  0077                     ?_I2C1_Stop:	
  5274                           ; 1 bytes @ 0x0
  5275                           
  5276  0077                     ??_I2C1_Stop:	
  5277                           ; 1 bytes @ 0x0
  5278                           
  5279  0077                     ?_I2C1_FunctionComplete:	
  5280                           ; 1 bytes @ 0x0
  5281                           
  5282  0077                     ??_I2C1_FunctionComplete:	
  5283                           ; 1 bytes @ 0x0
  5284                           
  5285  0077                     ?_initDAC528:	
  5286                           ; 1 bytes @ 0x0
  5287                           
  5288  0077                     ?_LED7SegSetup:	
  5289                           ; 1 bytes @ 0x0
  5290                           
  5291  0077                     ?_PIN_MANAGER_Initialize:	
  5292                           ; 1 bytes @ 0x0
  5293                           
  5294  0077                     ?_SYSTEM_Initialize:	
  5295                           ; 1 bytes @ 0x0
  5296                           
  5297  0077                     ?_I2C1_ISR:	
  5298                           ; 1 bytes @ 0x0
  5299                           
  5300  0077                     ?_I2C1_BusCollisionISR:	
  5301                           ; 1 bytes @ 0x0
  5302                           
  5303  0077                     ??_I2C1_BusCollisionISR:	
  5304                           ; 1 bytes @ 0x0
  5305                           
  5306  0077                     ?_INTERRUPT_InterruptManager:	
  5307                           ; 1 bytes @ 0x0
  5308                           
  5309  0077                     ?_InitPanelInChannels:	
  5310                           ; 1 bytes @ 0x0
  5311                           
  5312  0077                     ?_InitmvcChannels:	
  5313                           ; 1 bytes @ 0x0
  5314                           
  5315  0077                     ?_main:	
  5316                           ; 1 bytes @ 0x0
  5317                           
  5318  0077                     ?_LED7SegPinWrite:	
  5319                           ; 1 bytes @ 0x0
  5320                           
  5321  0077                     ?_LED7SegPulseClock:	
  5322                           ; 1 bytes @ 0x0
  5323                           
  5324  0077                     ?_LED7SegShiftOutPulseClock:	
  5325                           ; 1 bytes @ 0x0
  5326                           
  5327                           
  5328                           ; 1 bytes @ 0x0
  5329  0077                     	ds	1
  5330  0078                     I2C1_Stop@completion_code:	
  5331                           
  5332                           ; 1 bytes @ 0x1
  5333  0078                     	ds	1
  5334  0079                     ??_I2C1_ISR:	
  5335                           
  5336                           ; 1 bytes @ 0x2
  5337  0079                     	ds	4
  5338  007D                     ??_INTERRUPT_InterruptManager:	
  5339                           
  5340                           ; 1 bytes @ 0x6
  5341  007D                     	ds	1
  5342                           
  5343                           	psect	cstackBANK0
  5344  0020                     __pcstackBANK0:	
  5345  0020                     ??_OSCILLATOR_Initialize:	
  5346  0020                     ??_I2C1_Initialize:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0020                     ??_ADCC_Initialize:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0020                     ?_I2C1_MasterWriteTRBBuild:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0020                     ?_I2C1_MasterTRBInsert:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0020                     ??_LED7SegSetup:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0020                     ?_marshallPatchMemory:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0020                     ?_updateModelFromPatchMemory:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367  0020                     ??_PIN_MANAGER_Initialize:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370  0020                     ??_InitPanelInChannels:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373  0020                     ??_InitmvcChannels:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0020                     ??_LED7SegPinWrite:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0020                     ?_ADCC_GetSingleConversion:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382  0020                     ?___wmul:	
  5383                           ; 2 bytes @ 0x0
  5384                           
  5385  0020                     ?___ftpack:	
  5386                           ; 2 bytes @ 0x0
  5387                           
  5388  0020                     PIN_MANAGER_Initialize@state:	
  5389                           ; 3 bytes @ 0x0
  5390                           
  5391  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0020                     LED7SegPinWrite@val:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400  0020                     marshallPatchMemory@dualADSRdata0:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403  0020                     updateModelFromPatchMemory@dualADSRdata0:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406  0020                     ___wmul@multiplier:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409  0020                     ___ftpack@arg:	
  5410                           ; 2 bytes @ 0x0
  5411                           
  5412                           
  5413                           ; 3 bytes @ 0x0
  5414  0020                     	ds	1
  5415  0021                     ??_SYSTEM_Initialize:	
  5416  0021                     I2C1_MasterTRBInsert@pflag:	
  5417                           ; 1 bytes @ 0x1
  5418                           
  5419  0021                     I2C1_MasterWriteTRBBuild@length:	
  5420                           ; 1 bytes @ 0x1
  5421                           
  5422  0021                     marshallPatchMemory@dualADSRdata1:	
  5423                           ; 1 bytes @ 0x1
  5424                           
  5425  0021                     updateModelFromPatchMemory@dualADSRdata1:	
  5426                           ; 1 bytes @ 0x1
  5427                           
  5428  0021                     InitPanelInChannels@i:	
  5429                           ; 1 bytes @ 0x1
  5430                           
  5431  0021                     InitmvcChannels@i:	
  5432                           ; 2 bytes @ 0x1
  5433                           
  5434                           
  5435                           ; 2 bytes @ 0x1
  5436  0021                     	ds	1
  5437  0022                     ??_I2C1_MasterTRBInsert:	
  5438  0022                     ??_marshallPatchMemory:	
  5439                           ; 1 bytes @ 0x2
  5440                           
  5441  0022                     ??_updateModelFromPatchMemory:	
  5442                           ; 1 bytes @ 0x2
  5443                           
  5444  0022                     I2C1_MasterWriteTRBBuild@address:	
  5445                           ; 1 bytes @ 0x2
  5446                           
  5447  0022                     ___wmul@multiplicand:	
  5448                           ; 2 bytes @ 0x2
  5449                           
  5450                           
  5451                           ; 2 bytes @ 0x2
  5452  0022                     	ds	1
  5453  0023                     ??_ADCC_GetSingleConversion:	
  5454  0023                     ADCC_GetSingleConversion@channel:	
  5455                           ; 1 bytes @ 0x3
  5456                           
  5457  0023                     I2C1_MasterTRBInsert@count:	
  5458                           ; 1 bytes @ 0x3
  5459                           
  5460  0023                     ___ftpack@exp:	
  5461                           ; 1 bytes @ 0x3
  5462                           
  5463                           
  5464                           ; 1 bytes @ 0x3
  5465  0023                     	ds	1
  5466  0024                     ??_I2C1_MasterWriteTRBBuild:	
  5467  0024                     ??___wmul:	
  5468                           ; 1 bytes @ 0x4
  5469                           
  5470  0024                     ___ftpack@sign:	
  5471                           ; 1 bytes @ 0x4
  5472                           
  5473  0024                     ___wmul@product:	
  5474                           ; 1 bytes @ 0x4
  5475                           
  5476                           
  5477                           ; 2 bytes @ 0x4
  5478  0024                     	ds	1
  5479  0025                     ??___ftpack:	
  5480                           
  5481                           ; 1 bytes @ 0x5
  5482  0025                     	ds	1
  5483  0026                     ?_delay:	
  5484  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  5485                           ; 1 bytes @ 0x6
  5486                           
  5487  0026                     updateModelFromPatchMemory@mvcChannels:	
  5488                           ; 1 bytes @ 0x6
  5489                           
  5490  0026                     delay@delaytime:	
  5491                           ; 1 bytes @ 0x6
  5492                           
  5493                           
  5494                           ; 2 bytes @ 0x6
  5495  0026                     	ds	1
  5496  0027                     ?_I2C1_MasterWrite:	
  5497  0027                     I2C1_MasterWrite@length:	
  5498                           ; 1 bytes @ 0x7
  5499                           
  5500  0027                     updateModelFromPatchMemory@i_1221:	
  5501                           ; 1 bytes @ 0x7
  5502                           
  5503                           
  5504                           ; 2 bytes @ 0x7
  5505  0027                     	ds	1
  5506  0028                     ??_delay:	
  5507  0028                     ?___awtoft:	
  5508                           ; 1 bytes @ 0x8
  5509                           
  5510  0028                     marshallPatchMemory@mvcChannels:	
  5511                           ; 3 bytes @ 0x8
  5512                           
  5513  0028                     I2C1_MasterWrite@address:	
  5514                           ; 1 bytes @ 0x8
  5515                           
  5516  0028                     ___awtoft@c:	
  5517                           ; 2 bytes @ 0x8
  5518                           
  5519                           
  5520                           ; 2 bytes @ 0x8
  5521  0028                     	ds	1
  5522  0029                     marshallPatchMemory@i:	
  5523  0029                     updateModelFromPatchMemory@i_1222:	
  5524                           ; 2 bytes @ 0x9
  5525                           
  5526  0029                     delay@adjustedDelaytime:	
  5527                           ; 2 bytes @ 0x9
  5528                           
  5529                           
  5530                           ; 4 bytes @ 0x9
  5531  0029                     	ds	1
  5532  002A                     I2C1_MasterWrite@pflag:	
  5533                           
  5534                           ; 1 bytes @ 0xA
  5535  002A                     	ds	1
  5536  002B                     ??_I2C1_MasterWrite:	
  5537  002B                     ??___awtoft:	
  5538                           ; 1 bytes @ 0xB
  5539                           
  5540  002B                     marshallPatchMemory@i_1213:	
  5541                           ; 1 bytes @ 0xB
  5542                           
  5543  002B                     updateModelFromPatchMemory@iPatchMemoryNDX:	
  5544                           ; 2 bytes @ 0xB
  5545                           
  5546                           
  5547                           ; 2 bytes @ 0xB
  5548  002B                     	ds	2
  5549  002D                     I2C1_MasterWrite@pdata:	
  5550  002D                     ___awtoft@sign:	
  5551                           ; 1 bytes @ 0xD
  5552                           
  5553  002D                     marshallPatchMemory@i_1214:	
  5554                           ; 1 bytes @ 0xD
  5555                           
  5556  002D                     updateModelFromPatchMemory@i:	
  5557                           ; 2 bytes @ 0xD
  5558                           
  5559  002D                     delay@counter:	
  5560                           ; 2 bytes @ 0xD
  5561                           
  5562                           
  5563                           ; 4 bytes @ 0xD
  5564  002D                     	ds	1
  5565  002E                     ?_MYI2C_Write16EEPROMBytes:	
  5566  002E                     ?___ftdiv:	
  5567                           ; 1 bytes @ 0xE
  5568                           
  5569  002E                     ?___ftmul:	
  5570                           ; 3 bytes @ 0xE
  5571                           
  5572  002E                     MYI2C_Write16EEPROMBytes@writeAddress:	
  5573                           ; 3 bytes @ 0xE
  5574                           
  5575  002E                     ___ftdiv@f2:	
  5576                           ; 2 bytes @ 0xE
  5577                           
  5578  002E                     ___ftmul@f1:	
  5579                           ; 3 bytes @ 0xE
  5580                           
  5581                           
  5582                           ; 3 bytes @ 0xE
  5583  002E                     	ds	1
  5584  002F                     marshallPatchMemory@iPatchMemoryNDX:	
  5585                           
  5586                           ; 2 bytes @ 0xF
  5587  002F                     	ds	1
  5588  0030                     MYI2C_Write16EEPROMBytes@pData:	
  5589                           
  5590                           ; 2 bytes @ 0x10
  5591  0030                     	ds	1
  5592  0031                     ??_LED7SegPulseClock:	
  5593  0031                     ??_LED7SegShiftOutPulseClock:	
  5594                           ; 1 bytes @ 0x11
  5595                           
  5596  0031                     ___ftdiv@f1:	
  5597                           ; 1 bytes @ 0x11
  5598                           
  5599  0031                     ___ftmul@f2:	
  5600                           ; 3 bytes @ 0x11
  5601                           
  5602                           
  5603                           ; 3 bytes @ 0x11
  5604  0031                     	ds	1
  5605  0032                     ??_MYI2C_Write16EEPROMBytes:	
  5606  0032                     LED7SegShiftOutPulseClock@val:	
  5607                           ; 1 bytes @ 0x12
  5608                           
  5609                           
  5610                           ; 1 bytes @ 0x12
  5611  0032                     	ds	1
  5612  0033                     LED7SegShiftOutPulseClock@i:	
  5613                           
  5614                           ; 1 bytes @ 0x13
  5615  0033                     	ds	1
  5616  0034                     ?_LED7SegDisplayValueByDigit:	
  5617  0034                     ??___ftdiv:	
  5618                           ; 1 bytes @ 0x14
  5619                           
  5620  0034                     ??___ftmul:	
  5621                           ; 1 bytes @ 0x14
  5622                           
  5623  0034                     LED7SegDisplayValueByDigit@iTensDigit:	
  5624                           ; 1 bytes @ 0x14
  5625                           
  5626                           
  5627                           ; 2 bytes @ 0x14
  5628  0034                     	ds	2
  5629  0036                     LED7SegDisplayValueByDigit@iUnitsDigit:	
  5630  0036                     MYI2C_Write16EEPROMBytes@writeBuffer:	
  5631                           ; 2 bytes @ 0x16
  5632                           
  5633                           
  5634                           ; 17 bytes @ 0x16
  5635  0036                     	ds	2
  5636  0038                     ??_LED7SegDisplayValueByDigit:	
  5637  0038                     ___ftdiv@cntr:	
  5638                           ; 1 bytes @ 0x18
  5639                           
  5640  0038                     ___ftmul@exp:	
  5641                           ; 1 bytes @ 0x18
  5642                           
  5643  0038                     LED7SegDisplayValueByDigit@iTensCode:	
  5644                           ; 1 bytes @ 0x18
  5645                           
  5646                           
  5647                           ; 2 bytes @ 0x18
  5648  0038                     	ds	1
  5649  0039                     ___ftdiv@f3:	
  5650  0039                     ___ftmul@f3_as_product:	
  5651                           ; 3 bytes @ 0x19
  5652                           
  5653                           
  5654                           ; 3 bytes @ 0x19
  5655  0039                     	ds	3
  5656  003C                     ___ftdiv@exp:	
  5657  003C                     ___ftmul@cntr:	
  5658                           ; 1 bytes @ 0x1C
  5659                           
  5660                           
  5661                           ; 1 bytes @ 0x1C
  5662  003C                     	ds	1
  5663  003D                     ___ftdiv@sign:	
  5664  003D                     ___ftmul@sign:	
  5665                           ; 1 bytes @ 0x1D
  5666                           
  5667                           
  5668                           ; 1 bytes @ 0x1D
  5669  003D                     	ds	1
  5670  003E                     ?___fttol:	
  5671  003E                     ___fttol@f1:	
  5672                           ; 4 bytes @ 0x1E
  5673                           
  5674                           
  5675                           ; 3 bytes @ 0x1E
  5676  003E                     	ds	4
  5677  0042                     ??___fttol:	
  5678                           
  5679                           ; 1 bytes @ 0x22
  5680  0042                     	ds	4
  5681  0046                     ___fttol@sign1:	
  5682                           
  5683                           ; 1 bytes @ 0x26
  5684  0046                     	ds	1
  5685  0047                     MYI2C_Write16EEPROMBytes@iPatchAddressLow:	
  5686  0047                     ___fttol@lval:	
  5687                           ; 1 bytes @ 0x27
  5688                           
  5689                           
  5690                           ; 4 bytes @ 0x27
  5691  0047                     	ds	1
  5692  0048                     MYI2C_Write16EEPROMBytes@nCount:	
  5693                           
  5694                           ; 2 bytes @ 0x28
  5695  0048                     	ds	2
  5696  004A                     MYI2C_Write16EEPROMBytes@timeOut:	
  5697                           
  5698                           ; 2 bytes @ 0x2A
  5699  004A                     	ds	1
  5700  004B                     ___fttol@exp1:	
  5701                           
  5702                           ; 1 bytes @ 0x2B
  5703  004B                     	ds	1
  5704  004C                     ?_putByte:	
  5705  004C                     MYI2C_Write16EEPROMBytes@pointerByte:	
  5706                           ; 1 bytes @ 0x2C
  5707                           
  5708  004C                     putByte@clockPin:	
  5709                           ; 1 bytes @ 0x2C
  5710                           
  5711                           
  5712                           ; 2 bytes @ 0x2C
  5713  004C                     	ds	1
  5714  004D                     MYI2C_Write16EEPROMBytes@slaveDeviceAddress:	
  5715                           
  5716                           ; 1 bytes @ 0x2D
  5717  004D                     	ds	1
  5718  004E                     ??_putByte:	
  5719  004E                     MYI2C_Write16EEPROMBytes@iPatchAddressHigh:	
  5720                           ; 1 bytes @ 0x2E
  5721                           
  5722                           
  5723                           ; 1 bytes @ 0x2E
  5724  004E                     	ds	1
  5725  004F                     MYI2C_Write16EEPROMBytes@counter:	
  5726                           
  5727                           ; 2 bytes @ 0x2F
  5728  004F                     	ds	2
  5729  0051                     MYI2C_Write16EEPROMBytes@i:	
  5730                           
  5731                           ; 2 bytes @ 0x31
  5732  0051                     	ds	1
  5733  0052                     putByte@data:	
  5734                           
  5735                           ; 1 bytes @ 0x32
  5736  0052                     	ds	1
  5737  0053                     putByte@mask:	
  5738  0053                     MYI2C_Write16EEPROMBytes@status:	
  5739                           ; 1 bytes @ 0x33
  5740                           
  5741                           
  5742                           ; 1 bytes @ 0x33
  5743  0053                     	ds	1
  5744  0054                     ?_savePatch:	
  5745  0054                     putByte@i:	
  5746                           ; 1 bytes @ 0x34
  5747                           
  5748  0054                     savePatch@PatchNumber:	
  5749                           ; 1 bytes @ 0x34
  5750                           
  5751                           
  5752                           ; 2 bytes @ 0x34
  5753  0054                     	ds	1
  5754  0055                     ??_initDAC528:	
  5755  0055                     ?_writeDAC528:	
  5756                           ; 1 bytes @ 0x35
  5757                           
  5758  0055                     writeDAC528@dacNumber:	
  5759                           ; 1 bytes @ 0x35
  5760                           
  5761                           
  5762                           ; 2 bytes @ 0x35
  5763  0055                     	ds	1
  5764  0056                     ??_savePatch:	
  5765                           
  5766                           ; 1 bytes @ 0x36
  5767  0056                     	ds	1
  5768  0057                     writeDAC528@dacData:	
  5769                           
  5770                           ; 1 bytes @ 0x37
  5771  0057                     	ds	1
  5772  0058                     ??_writeDAC528:	
  5773                           
  5774                           ; 1 bytes @ 0x38
  5775  0058                     	ds	1
  5776  0059                     savePatch@iPatchAddressHigh:	
  5777  0059                     writeDAC528@wkDacNumber:	
  5778                           ; 1 bytes @ 0x39
  5779                           
  5780                           
  5781                           ; 1 bytes @ 0x39
  5782  0059                     	ds	1
  5783  005A                     ?_loadPatch:	
  5784  005A                     savePatch@iPatchAddressLow:	
  5785                           ; 1 bytes @ 0x3A
  5786                           
  5787  005A                     loadPatch@PatchNumber:	
  5788                           ; 1 bytes @ 0x3A
  5789                           
  5790                           
  5791                           ; 2 bytes @ 0x3A
  5792  005A                     	ds	1
  5793  005B                     savePatch@pData:	
  5794                           
  5795                           ; 2 bytes @ 0x3B
  5796  005B                     	ds	1
  5797  005C                     ??_loadPatch:	
  5798                           
  5799                           ; 1 bytes @ 0x3C
  5800  005C                     	ds	1
  5801  005D                     savePatch@idx:	
  5802                           
  5803                           ; 2 bytes @ 0x3D
  5804  005D                     	ds	1
  5805  005E                     loadPatch@iPatchAddress:	
  5806                           
  5807                           ; 2 bytes @ 0x3E
  5808  005E                     	ds	1
  5809  005F                     savePatch@batchNum:	
  5810                           
  5811                           ; 2 bytes @ 0x3F
  5812  005F                     	ds	1
  5813  0060                     loadPatch@i:	
  5814                           
  5815                           ; 2 bytes @ 0x40
  5816  0060                     	ds	1
  5817  0061                     savePatch@iPatchAddress:	
  5818                           
  5819                           ; 2 bytes @ 0x41
  5820  0061                     	ds	2
  5821  0063                     ??_main:	
  5822                           
  5823                           ; 1 bytes @ 0x43
  5824  0063                     	ds	4
  5825                           
  5826                           	psect	maintext
  5827  0064                     __pmaintext:	
  5828 ;;
  5829 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5830 ;;
  5831 ;; *************** function _main *****************
  5832 ;; Defined at:
  5833 ;;		line 246 in file "main.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;		None
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  fx              2   18[BANK1 ] int 
  5838 ;;  fx              2   14[BANK1 ] int 
  5839 ;;  dFader8bitVa    3    0        int 
  5840 ;;  faderValue      2   16[BANK1 ] int 
  5841 ;;  SaveDebounce    2   11[BANK1 ] int 
  5842 ;;  LoadDebounce    2    9[BANK1 ] int 
  5843 ;;  iLoopCounter    2    5[BANK1 ] unsigned int 
  5844 ;;  iCounter        2    1[BANK1 ] unsigned int 
  5845 ;;  iLSByte         2    0        unsigned int 
  5846 ;;  iMSByte         2    0        unsigned int 
  5847 ;;  fader8bitVal    1   13[BANK1 ] unsigned char 
  5848 ;;  POT1Value       1    8[BANK1 ] unsigned char 
  5849 ;;  POT0Value       1    7[BANK1 ] unsigned char 
  5850 ;;  prevFader8bi    1    4[BANK1 ] unsigned char 
  5851 ;;  iChangeCount    1    3[BANK1 ] unsigned char 
  5852 ;;  readStatus      1    0[BANK1 ] enum E14267
  5853 ;;  DACDataValue    1    0        unsigned char 
  5854 ;; Return value:  Size  Location     Type
  5855 ;;                  1    wreg      void 
  5856 ;; Registers used:
  5857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5858 ;; Tracked objects:
  5859 ;;		On entry : B1F/0
  5860 ;;		On exit  : 0/0
  5861 ;;		Unchanged: 0/0
  5862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;Total ram usage:       24 bytes
  5868 ;; Hardware stack levels required when called:    8
  5869 ;; This function calls:
  5870 ;;		_ADCC_GetSingleConversion
  5871 ;;		_InitPanelInChannels
  5872 ;;		_InitmvcChannels
  5873 ;;		_LED7SegDisplayValueByDigit
  5874 ;;		_LED7SegSetup
  5875 ;;		_SYSTEM_Initialize
  5876 ;;		___awtoft
  5877 ;;		___ftdiv
  5878 ;;		___fttol
  5879 ;;		___wmul
  5880 ;;		_delay
  5881 ;;		_initDAC528
  5882 ;;		_loadPatch
  5883 ;;		_savePatch
  5884 ;;		_writeDAC528
  5885 ;; This function is called by:
  5886 ;;		Startup code after reset
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           
  5891                           ;psect for function _main
  5892  0064                     _main:	
  5893                           
  5894                           ;main.c: 248: uint16_t iCounter=0;
  5895                           
  5896                           ;incstack = 0
  5897                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5898  0064  0021               	movlb	1	; select bank1
  5899  0065  01D9               	clrf	main@iCounter^(0+128)
  5900  0066  01DA               	clrf	(main@iCounter+1)^(0+128)
  5901                           
  5902                           ;main.c: 249: uint16_t iMSByte;
  5903                           ;main.c: 250: uint16_t iLSByte;
  5904                           ;main.c: 251: const uint16_t iResetValue=100;
  5905                           ;main.c: 252: uint16_t iLoopCounter=0;
  5906  0067  01DD               	clrf	main@iLoopCounter^(0+128)
  5907  0068  01DE               	clrf	(main@iLoopCounter+1)^(0+128)
  5908                           
  5909                           ;main.c: 253: uint8_t iChangeCount=0;
  5910  0069  01DB               	clrf	main@iChangeCount^(0+128)
  5911                           
  5912                           ;main.c: 254: int faderValue;
  5913                           ;main.c: 255: uint8_t fader8bitValue;
  5914                           ;main.c: 256: uint8_t prevFader8bitValue;
  5915                           ;main.c: 257: uint8_t POT0Value;
  5916                           ;main.c: 258: uint8_t POT1Value;
  5917                           ;main.c: 259: uint8_t DACDataValue;
  5918                           ;main.c: 260: double dFader8bitValue;
  5919                           ;main.c: 261: int LoadDebounceCount=0;
  5920  006A  01E1               	clrf	main@LoadDebounceCount^(0+128)
  5921  006B  01E2               	clrf	(main@LoadDebounceCount+1)^(0+128)
  5922                           
  5923                           ;main.c: 262: int SaveDebounceCount=0;
  5924  006C  01E3               	clrf	main@SaveDebounceCount^(0+128)
  5925  006D  01E4               	clrf	(main@SaveDebounceCount+1)^(0+128)
  5926                           
  5927                           ;main.c: 264: I2C1_MESSAGE_STATUS readStatus=0;
  5928  006E  01D8               	clrf	main@readStatus^(0+128)
  5929                           
  5930                           ;main.c: 267: SYSTEM_Initialize();
  5931  006F  318A  22BA  3180   	fcall	_SYSTEM_Initialize
  5932                           
  5933                           ;main.c: 268: initDAC528();
  5934  0072  318B  2318  3180   	fcall	_initDAC528
  5935                           
  5936                           ;main.c: 269: LED7SegSetup();
  5937  0075  3187  27F0  3180   	fcall	_LED7SegSetup
  5938                           
  5939                           ;main.c: 271: InitPanelInChannels();
  5940  0078  318B  23C9  3180   	fcall	_InitPanelInChannels
  5941                           
  5942                           ;main.c: 272: InitmvcChannels();
  5943  007B  318B  235D  3180   	fcall	_InitmvcChannels
  5944                           
  5945                           ;main.c: 277: (INTCONbits.GIE = 1);
  5946  007E  178B               	bsf	11,7	;volatile
  5947                           
  5948                           ;main.c: 280: (INTCONbits.PEIE = 1);
  5949  007F  170B               	bsf	11,6	;volatile
  5950                           
  5951                           ;main.c: 291: for(int fx=0;fx<4;fx++){
  5952  0080  0021               	movlb	1	; select bank1
  5953  0081  01E6               	clrf	main@fx^(0+128)
  5954  0082  01E7               	clrf	(main@fx+1)^(0+128)
  5955  0083  0867               	movf	(main@fx+1)^(0+128),w
  5956  0084  3A80               	xorlw	128
  5957  0085  0020               	movlb	0	; select bank0
  5958  0086  00E3               	movwf	??_main
  5959  0087  3080               	movlw	128
  5960  0088  0263               	subwf	??_main,w
  5961  0089  1D03               	skipz
  5962  008A  288E               	goto	u4165
  5963  008B  3004               	movlw	4
  5964  008C  0021               	movlb	1	; select bank1
  5965  008D  0266               	subwf	main@fx^(0+128),w
  5966  008E                     u4165:	
  5967  008E  1803               	btfsc	3,0
  5968  008F  28D9               	goto	l4396
  5969  0090                     l4386:	
  5970                           
  5971                           ;main.c: 292: faderValue=ADCC_GetSingleConversion(fx);
  5972  0090  0021               	movlb	1	; select bank1
  5973  0091  0866               	movf	main@fx^(0+128),w
  5974  0092  318A  22F0  3180   	fcall	_ADCC_GetSingleConversion
  5975  0095  0020               	movlb	0	; select bank0
  5976  0096  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5977  0097  0021               	movlb	1	; select bank1
  5978  0098  00E9               	movwf	(main@faderValue+1)^(0+128)
  5979  0099  0020               	movlb	0	; select bank0
  5980  009A  0820               	movf	?_ADCC_GetSingleConversion,w
  5981  009B  0021               	movlb	1	; select bank1
  5982  009C  00E8               	movwf	main@faderValue^(0+128)
  5983                           
  5984                           ;main.c: 293: PanelInChannels[fx]=255-(faderValue>>2);
  5985  009D  0869               	movf	(main@faderValue+1)^(0+128),w
  5986  009E  0020               	movlb	0	; select bank0
  5987  009F  00E4               	movwf	??_main+1
  5988  00A0  0021               	movlb	1	; select bank1
  5989  00A1  0868               	movf	main@faderValue^(0+128),w
  5990  00A2  0020               	movlb	0	; select bank0
  5991  00A3  00E3               	movwf	??_main
  5992  00A4  0D64               	rlf	??_main+1,w
  5993  00A5  0CE4               	rrf	??_main+1,f
  5994  00A6  0CE3               	rrf	??_main,f
  5995  00A7  0D64               	rlf	??_main+1,w
  5996  00A8  0CE4               	rrf	??_main+1,f
  5997  00A9  0CE3               	rrf	??_main,f
  5998  00AA  0863               	movf	??_main,w
  5999  00AB  3AFF               	xorlw	255
  6000  00AC  3E01               	addlw	1
  6001  00AD  3EFF               	addlw	255
  6002  00AE  00E5               	movwf	??_main+2
  6003  00AF  0021               	movlb	1	; select bank1
  6004  00B0  0866               	movf	main@fx^(0+128),w
  6005  00B1  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6006  00B2  0086               	movwf	6
  6007  00B3  0187               	clrf	7
  6008  00B4  0020               	movlb	0	; select bank0
  6009  00B5  0865               	movf	??_main+2,w
  6010  00B6  0081               	movwf	1
  6011                           
  6012                           ;main.c: 294: prevPanelInChannels[fx]= PanelInChannels[fx];
  6013  00B7  0021               	movlb	1	; select bank1
  6014  00B8  0866               	movf	main@fx^(0+128),w
  6015  00B9  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6016  00BA  0086               	movwf	6
  6017  00BB  0187               	clrf	7
  6018  00BC  0801               	movf	1,w
  6019  00BD  0020               	movlb	0	; select bank0
  6020  00BE  00E3               	movwf	??_main
  6021  00BF  0021               	movlb	1	; select bank1
  6022  00C0  0866               	movf	main@fx^(0+128),w
  6023  00C1  3EA0               	addlw	(low (_prevPanelInChannels| 0))& (0+255)
  6024  00C2  0086               	movwf	6
  6025  00C3  0187               	clrf	7
  6026  00C4  0020               	movlb	0	; select bank0
  6027  00C5  0863               	movf	??_main,w
  6028  00C6  0081               	movwf	1
  6029  00C7  3001               	movlw	1
  6030  00C8  0021               	movlb	1	; select bank1
  6031  00C9  07E6               	addwf	main@fx^(0+128),f
  6032  00CA  3000               	movlw	0
  6033  00CB  3DE7               	addwfc	(main@fx+1)^(0+128),f
  6034  00CC  0867               	movf	(main@fx+1)^(0+128),w
  6035  00CD  3A80               	xorlw	128
  6036  00CE  0020               	movlb	0	; select bank0
  6037  00CF  00E3               	movwf	??_main
  6038  00D0  3080               	movlw	128
  6039  00D1  0263               	subwf	??_main,w
  6040  00D2  1D03               	skipz
  6041  00D3  28D7               	goto	u4175
  6042  00D4  3004               	movlw	4
  6043  00D5  0021               	movlb	1	; select bank1
  6044  00D6  0266               	subwf	main@fx^(0+128),w
  6045  00D7                     u4175:	
  6046  00D7  1C03               	skipc
  6047  00D8  2890               	goto	l4386
  6048  00D9                     l4396:	
  6049                           
  6050                           ;main.c: 295: }
  6051                           ;main.c: 302: PORTB |= 0x0F;
  6052  00D9  300F               	movlw	15
  6053  00DA  0020               	movlb	0	; select bank0
  6054  00DB  00E3               	movwf	??_main
  6055  00DC  0863               	movf	??_main,w
  6056  00DD  048D               	iorwf	13,f	;volatile
  6057                           
  6058                           ;main.c: 303: PORTC |= 0xE0;
  6059  00DE  30E0               	movlw	224
  6060  00DF  00E3               	movwf	??_main
  6061  00E0  0863               	movf	??_main,w
  6062  00E1  048E               	iorwf	14,f	;volatile
  6063                           
  6064                           ;main.c: 304: ODCONB &= 0xF0;
  6065  00E2  30F0               	movlw	240
  6066  00E3  00E3               	movwf	??_main
  6067  00E4  0863               	movf	??_main,w
  6068  00E5  003E               	movlb	30	; select bank30
  6069  00E6  05C5               	andwf	69,f	;volatile
  6070                           
  6071                           ;main.c: 305: ODCONC &= 0x1F;
  6072  00E7  301F               	movlw	31
  6073  00E8  0020               	movlb	0	; select bank0
  6074  00E9  00E3               	movwf	??_main
  6075  00EA  0863               	movf	??_main,w
  6076  00EB  003E               	movlb	30	; select bank30
  6077  00EC  05D0               	andwf	80,f	;volatile
  6078  00ED                     l4398:	
  6079                           ;main.c: 307: while (1) {
  6080                           
  6081                           
  6082                           ;main.c: 308: iLoopCounter++;
  6083  00ED  3001               	movlw	1
  6084  00EE  0021               	movlb	1	; select bank1
  6085  00EF  07DD               	addwf	main@iLoopCounter^(0+128),f
  6086  00F0  3000               	movlw	0
  6087  00F1  3DDE               	addwfc	(main@iLoopCounter+1)^(0+128),f
  6088                           
  6089                           ;main.c: 309: if (iResetValue<=iLoopCounter) iLoopCounter=0;
  6090  00F2  3028               	movlw	low (main@iResetValue| (0+32768))
  6091  00F3  0084               	movwf	4
  6092  00F4  3090               	movlw	high (main@iResetValue| (0+32768))
  6093  00F5  0085               	movwf	5
  6094  00F6  3F00               	moviw [0]fsr0
  6095  00F7  0020               	movlb	0	; select bank0
  6096  00F8  00E3               	movwf	??_main
  6097  00F9  3F01               	moviw [1]fsr0
  6098  00FA  00E4               	movwf	??_main+1
  6099  00FB  0864               	movf	??_main+1,w
  6100  00FC  0021               	movlb	1	; select bank1
  6101  00FD  025E               	subwf	(main@iLoopCounter+1)^(0+128),w
  6102  00FE  1D03               	skipz
  6103  00FF  2904               	goto	u4185
  6104  0100  0020               	movlb	0	; select bank0
  6105  0101  0863               	movf	??_main,w
  6106  0102  0021               	movlb	1	; select bank1
  6107  0103  025D               	subwf	main@iLoopCounter^(0+128),w
  6108  0104                     u4185:	
  6109  0104  1C03               	skipc
  6110  0105  2908               	goto	l521
  6111  0106  01DD               	clrf	main@iLoopCounter^(0+128)
  6112  0107  01DE               	clrf	(main@iLoopCounter+1)^(0+128)
  6113  0108                     l521:	
  6114                           
  6115                           ;main.c: 312: {
  6116                           ;main.c: 314: for(int fx=0;fx<cMixFaderCount;fx++){
  6117  0108  01EA               	clrf	main@fx_970^(0+128)
  6118  0109  01EB               	clrf	(main@fx_970+1)^(0+128)
  6119  010A  086B               	movf	(main@fx_970+1)^(0+128),w
  6120  010B  3A80               	xorlw	128
  6121  010C  0020               	movlb	0	; select bank0
  6122  010D  00E3               	movwf	??_main
  6123  010E  3080               	movlw	128
  6124  010F  0263               	subwf	??_main,w
  6125  0110  1D03               	skipz
  6126  0111  2915               	goto	u4195
  6127  0112  3004               	movlw	4
  6128  0113  0021               	movlb	1	; select bank1
  6129  0114  026A               	subwf	main@fx_970^(0+128),w
  6130  0115                     u4195:	
  6131  0115  1803               	btfsc	3,0
  6132  0116  29DC               	goto	l4432
  6133  0117                     l4408:	
  6134                           
  6135                           ;main.c: 315: faderValue=ADCC_GetSingleConversion(fx);
  6136  0117  0021               	movlb	1	; select bank1
  6137  0118  086A               	movf	main@fx_970^(0+128),w
  6138  0119  318A  22F0  3180   	fcall	_ADCC_GetSingleConversion
  6139  011C  0020               	movlb	0	; select bank0
  6140  011D  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6141  011E  0021               	movlb	1	; select bank1
  6142  011F  00E9               	movwf	(main@faderValue+1)^(0+128)
  6143  0120  0020               	movlb	0	; select bank0
  6144  0121  0820               	movf	?_ADCC_GetSingleConversion,w
  6145  0122  0021               	movlb	1	; select bank1
  6146  0123  00E8               	movwf	main@faderValue^(0+128)
  6147                           
  6148                           ;main.c: 316: PanelInChannels[fx]=255-(faderValue>>2);
  6149  0124  0869               	movf	(main@faderValue+1)^(0+128),w
  6150  0125  0020               	movlb	0	; select bank0
  6151  0126  00E4               	movwf	??_main+1
  6152  0127  0021               	movlb	1	; select bank1
  6153  0128  0868               	movf	main@faderValue^(0+128),w
  6154  0129  0020               	movlb	0	; select bank0
  6155  012A  00E3               	movwf	??_main
  6156  012B  0D64               	rlf	??_main+1,w
  6157  012C  0CE4               	rrf	??_main+1,f
  6158  012D  0CE3               	rrf	??_main,f
  6159  012E  0D64               	rlf	??_main+1,w
  6160  012F  0CE4               	rrf	??_main+1,f
  6161  0130  0CE3               	rrf	??_main,f
  6162  0131  0863               	movf	??_main,w
  6163  0132  3AFF               	xorlw	255
  6164  0133  3E01               	addlw	1
  6165  0134  3EFF               	addlw	255
  6166  0135  00E5               	movwf	??_main+2
  6167  0136  0021               	movlb	1	; select bank1
  6168  0137  086A               	movf	main@fx_970^(0+128),w
  6169  0138  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6170  0139  0086               	movwf	6
  6171  013A  0187               	clrf	7
  6172  013B  0020               	movlb	0	; select bank0
  6173  013C  0865               	movf	??_main+2,w
  6174  013D  0081               	movwf	1
  6175                           
  6176                           ;main.c: 318: fader8bitValue=PanelInChannels[fx];
  6177  013E  0021               	movlb	1	; select bank1
  6178  013F  086A               	movf	main@fx_970^(0+128),w
  6179  0140  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6180  0141  0086               	movwf	6
  6181  0142  0187               	clrf	7
  6182  0143  0801               	movf	1,w
  6183  0144  0020               	movlb	0	; select bank0
  6184  0145  00E3               	movwf	??_main
  6185  0146  0863               	movf	??_main,w
  6186  0147  0021               	movlb	1	; select bank1
  6187  0148  00E5               	movwf	main@fader8bitValue^(0+128)
  6188                           
  6189                           ;main.c: 319: if( (PanelInChannels[fx]<(mvcChannels[fx]+4))
  6190                           ;main.c: 320: && (PanelInChannels[fx]>(mvcChannels[fx]-4)) ) {
  6191  0149  086A               	movf	main@fx_970^(0+128),w
  6192  014A  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  6193  014B  0086               	movwf	6
  6194  014C  0187               	clrf	7
  6195  014D  0801               	movf	1,w
  6196  014E  3E04               	addlw	4
  6197  014F  0020               	movlb	0	; select bank0
  6198  0150  00E3               	movwf	??_main
  6199  0151  3000               	movlw	0
  6200  0152  1803               	skipnc
  6201  0153  3001               	movlw	1
  6202  0154  00E4               	movwf	??_main+1
  6203  0155  0021               	movlb	1	; select bank1
  6204  0156  086A               	movf	main@fx_970^(0+128),w
  6205  0157  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6206  0158  0086               	movwf	6
  6207  0159  0187               	clrf	7
  6208  015A  0020               	movlb	0	; select bank0
  6209  015B  0864               	movf	??_main+1,w
  6210  015C  3A80               	xorlw	128
  6211  015D  3C80               	sublw	128
  6212  015E  1D03               	skipz
  6213  015F  2962               	goto	u4205
  6214  0160  0863               	movf	??_main,w
  6215  0161  0201               	subwf	1,w
  6216  0162                     u4205:	
  6217  0162  1803               	skipnc
  6218  0163  2989               	goto	l524
  6219  0164  0021               	movlb	1	; select bank1
  6220  0165  086A               	movf	main@fx_970^(0+128),w
  6221  0166  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6222  0167  0086               	movwf	6
  6223  0168  0187               	clrf	7
  6224  0169  086A               	movf	main@fx_970^(0+128),w
  6225  016A  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  6226  016B  0084               	movwf	4
  6227  016C  0185               	clrf	5
  6228  016D  0800               	movf	0,w
  6229  016E  3EFC               	addlw	252
  6230  016F  0020               	movlb	0	; select bank0
  6231  0170  00E3               	movwf	??_main
  6232  0171  30FF               	movlw	255
  6233  0172  1803               	skipnc
  6234  0173  3000               	movlw	0
  6235  0174  00E4               	movwf	??_main+1
  6236  0175  0864               	movf	??_main+1,w
  6237  0176  3A80               	xorlw	128
  6238  0177  00E5               	movwf	??_main+2
  6239  0178  3080               	movlw	128
  6240  0179  0265               	subwf	??_main+2,w
  6241  017A  1D03               	skipz
  6242  017B  297E               	goto	u4215
  6243  017C  0801               	movf	1,w
  6244  017D  0263               	subwf	??_main,w
  6245  017E                     u4215:	
  6246  017E  1803               	skipnc
  6247  017F  2989               	goto	l524
  6248                           
  6249                           ;main.c: 321: faderActiveFlag[fx]=1;
  6250  0180  0021               	movlb	1	; select bank1
  6251  0181  086A               	movf	main@fx_970^(0+128),w
  6252  0182  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
  6253  0183  0086               	movwf	6
  6254  0184  0187               	clrf	7
  6255  0185  0181               	clrf	1
  6256  0186  0A81               	incf	1,f
  6257                           
  6258                           ;main.c: 322: LATB |= 0b00000010 ;
  6259  0187  0020               	movlb	0	; select bank0
  6260  0188  1497               	bsf	23,1	;volatile
  6261  0189                     l524:	
  6262                           
  6263                           ;main.c: 323: }
  6264                           ;main.c: 324: if(faderActiveFlag[fx]>0){
  6265  0189  0021               	movlb	1	; select bank1
  6266  018A  086A               	movf	main@fx_970^(0+128),w
  6267  018B  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
  6268  018C  0086               	movwf	6
  6269  018D  0187               	clrf	7
  6270  018E  0801               	movf	1,w
  6271  018F  1903               	btfsc	3,2
  6272  0190  29B3               	goto	l4426
  6273                           
  6274                           ;main.c: 325: mvcChannels[fx]=PanelInChannels[fx];
  6275  0191  086A               	movf	main@fx_970^(0+128),w
  6276  0192  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6277  0193  0086               	movwf	6
  6278  0194  0187               	clrf	7
  6279  0195  0801               	movf	1,w
  6280  0196  0020               	movlb	0	; select bank0
  6281  0197  00E3               	movwf	??_main
  6282  0198  0021               	movlb	1	; select bank1
  6283  0199  086A               	movf	main@fx_970^(0+128),w
  6284  019A  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  6285  019B  0086               	movwf	6
  6286  019C  0187               	clrf	7
  6287  019D  0020               	movlb	0	; select bank0
  6288  019E  0863               	movf	??_main,w
  6289  019F  0081               	movwf	1
  6290                           
  6291                           ;main.c: 326: writeDAC528(fx+4,fader8bitValue);
  6292  01A0  0021               	movlb	1	; select bank1
  6293  01A1  086A               	movf	main@fx_970^(0+128),w
  6294  01A2  3E04               	addlw	4
  6295  01A3  0020               	movlb	0	; select bank0
  6296  01A4  00D5               	movwf	writeDAC528@dacNumber
  6297  01A5  3000               	movlw	0
  6298  01A6  0021               	movlb	1	; select bank1
  6299  01A7  3D6B               	addwfc	(main@fx_970+1)^(0+128),w
  6300  01A8  0020               	movlb	0	; select bank0
  6301  01A9  00D6               	movwf	writeDAC528@dacNumber+1
  6302  01AA  0021               	movlb	1	; select bank1
  6303  01AB  0865               	movf	main@fader8bitValue^(0+128),w
  6304  01AC  0020               	movlb	0	; select bank0
  6305  01AD  00E3               	movwf	??_main
  6306  01AE  0863               	movf	??_main,w
  6307  01AF  00D7               	movwf	writeDAC528@dacData
  6308  01B0  318C  2429  3180   	fcall	_writeDAC528
  6309  01B3                     l4426:	
  6310                           
  6311                           ;main.c: 327: }
  6312                           ;main.c: 328: prevPanelInChannels[fx]=PanelInChannels[fx];
  6313  01B3  0021               	movlb	1	; select bank1
  6314  01B4  086A               	movf	main@fx_970^(0+128),w
  6315  01B5  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6316  01B6  0086               	movwf	6
  6317  01B7  0187               	clrf	7
  6318  01B8  0801               	movf	1,w
  6319  01B9  0020               	movlb	0	; select bank0
  6320  01BA  00E3               	movwf	??_main
  6321  01BB  0021               	movlb	1	; select bank1
  6322  01BC  086A               	movf	main@fx_970^(0+128),w
  6323  01BD  3EA0               	addlw	(low (_prevPanelInChannels| 0))& (0+255)
  6324  01BE  0086               	movwf	6
  6325  01BF  0187               	clrf	7
  6326  01C0  0020               	movlb	0	; select bank0
  6327  01C1  0863               	movf	??_main,w
  6328  01C2  0081               	movwf	1
  6329                           
  6330                           ;main.c: 330: delay(10);
  6331  01C3  300A               	movlw	10
  6332  01C4  00A6               	movwf	delay@delaytime
  6333  01C5  3000               	movlw	0
  6334  01C6  00A7               	movwf	delay@delaytime+1
  6335  01C7  318D  2574  3180   	fcall	_delay
  6336  01CA  3001               	movlw	1
  6337  01CB  0021               	movlb	1	; select bank1
  6338  01CC  07EA               	addwf	main@fx_970^(0+128),f
  6339  01CD  3000               	movlw	0
  6340  01CE  3DEB               	addwfc	(main@fx_970+1)^(0+128),f
  6341  01CF  086B               	movf	(main@fx_970+1)^(0+128),w
  6342  01D0  3A80               	xorlw	128
  6343  01D1  0020               	movlb	0	; select bank0
  6344  01D2  00E3               	movwf	??_main
  6345  01D3  3080               	movlw	128
  6346  01D4  0263               	subwf	??_main,w
  6347  01D5  1D03               	skipz
  6348  01D6  29DA               	goto	u4235
  6349  01D7  3004               	movlw	4
  6350  01D8  0021               	movlb	1	; select bank1
  6351  01D9  026A               	subwf	main@fx_970^(0+128),w
  6352  01DA                     u4235:	
  6353  01DA  1C03               	skipc
  6354  01DB  2917               	goto	l4408
  6355  01DC                     l4432:	
  6356                           
  6357                           ;main.c: 331: }
  6358                           ;main.c: 334: delay(10);
  6359  01DC  300A               	movlw	10
  6360  01DD  0020               	movlb	0	; select bank0
  6361  01DE  00A6               	movwf	delay@delaytime
  6362  01DF  3000               	movlw	0
  6363  01E0  00A7               	movwf	delay@delaytime+1
  6364  01E1  318D  2574  3180   	fcall	_delay
  6365                           
  6366                           ;main.c: 335: faderValue=ADCC_GetSingleConversion(POT0);
  6367  01E4  3004               	movlw	4
  6368  01E5  318A  22F0  3180   	fcall	_ADCC_GetSingleConversion
  6369  01E8  0020               	movlb	0	; select bank0
  6370  01E9  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6371  01EA  0021               	movlb	1	; select bank1
  6372  01EB  00E9               	movwf	(main@faderValue+1)^(0+128)
  6373  01EC  0020               	movlb	0	; select bank0
  6374  01ED  0820               	movf	?_ADCC_GetSingleConversion,w
  6375  01EE  0021               	movlb	1	; select bank1
  6376  01EF  00E8               	movwf	main@faderValue^(0+128)
  6377                           
  6378                           ;main.c: 336: faderValue=1023-faderValue;
  6379  01F0  0968               	comf	main@faderValue^(0+128),w
  6380  01F1  0020               	movlb	0	; select bank0
  6381  01F2  00E3               	movwf	??_main
  6382  01F3  0021               	movlb	1	; select bank1
  6383  01F4  0969               	comf	(main@faderValue+1)^(0+128),w
  6384  01F5  0020               	movlb	0	; select bank0
  6385  01F6  00E4               	movwf	??_main+1
  6386  01F7  0AE3               	incf	??_main,f
  6387  01F8  1903               	skipnz
  6388  01F9  0AE4               	incf	??_main+1,f
  6389  01FA  0863               	movf	??_main,w
  6390  01FB  3EFF               	addlw	255
  6391  01FC  0021               	movlb	1	; select bank1
  6392  01FD  00E8               	movwf	main@faderValue^(0+128)
  6393  01FE  3003               	movlw	3
  6394  01FF  0020               	movlb	0	; select bank0
  6395  0200  3D64               	addwfc	??_main+1,w
  6396  0201  0021               	movlb	1	; select bank1
  6397  0202  00E9               	movwf	(main@faderValue+1)^(0+128)
  6398                           
  6399                           ;main.c: 338: POT0Value=faderValue/102.3;
  6400  0203  0869               	movf	(main@faderValue+1)^(0+128),w
  6401  0204  0020               	movlb	0	; select bank0
  6402  0205  00A9               	movwf	___awtoft@c+1
  6403  0206  0021               	movlb	1	; select bank1
  6404  0207  0868               	movf	main@faderValue^(0+128),w
  6405  0208  0020               	movlb	0	; select bank0
  6406  0209  00A8               	movwf	___awtoft@c
  6407  020A  318C  2407  3180   	fcall	___awtoft
  6408  020D  0020               	movlb	0	; select bank0
  6409  020E  0828               	movf	?___awtoft,w
  6410  020F  00B1               	movwf	___ftdiv@f1
  6411  0210  0829               	movf	?___awtoft+1,w
  6412  0211  00B2               	movwf	___ftdiv@f1+1
  6413  0212  082A               	movf	?___awtoft+2,w
  6414  0213  00B3               	movwf	___ftdiv@f1+2
  6415  0214  309A               	movlw	154
  6416  0215  00AE               	movwf	___ftdiv@f2
  6417  0216  30CC               	movlw	204
  6418  0217  00AF               	movwf	___ftdiv@f2+1
  6419  0218  3042               	movlw	66
  6420  0219  00B0               	movwf	___ftdiv@f2+2
  6421  021A  3186  26E2  3180   	fcall	___ftdiv
  6422  021D  0020               	movlb	0	; select bank0
  6423  021E  082E               	movf	?___ftdiv,w
  6424  021F  00BE               	movwf	___fttol@f1
  6425  0220  082F               	movf	?___ftdiv+1,w
  6426  0221  00BF               	movwf	___fttol@f1+1
  6427  0222  0830               	movf	?___ftdiv+2,w
  6428  0223  00C0               	movwf	___fttol@f1+2
  6429  0224  318E  2640  3180   	fcall	___fttol
  6430  0227  0020               	movlb	0	; select bank0
  6431  0228  083E               	movf	?___fttol,w
  6432  0229  00E3               	movwf	??_main
  6433  022A  0863               	movf	??_main,w
  6434  022B  0021               	movlb	1	; select bank1
  6435  022C  00DF               	movwf	main@POT0Value^(0+128)
  6436                           
  6437                           ;main.c: 339: delay(10);
  6438  022D  300A               	movlw	10
  6439  022E  0020               	movlb	0	; select bank0
  6440  022F  00A6               	movwf	delay@delaytime
  6441  0230  3000               	movlw	0
  6442  0231  00A7               	movwf	delay@delaytime+1
  6443  0232  318D  2574  3180   	fcall	_delay
  6444                           
  6445                           ;main.c: 340: faderValue=ADCC_GetSingleConversion(POT1);
  6446  0235  3005               	movlw	5
  6447  0236  318A  22F0  3180   	fcall	_ADCC_GetSingleConversion
  6448  0239  0020               	movlb	0	; select bank0
  6449  023A  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6450  023B  0021               	movlb	1	; select bank1
  6451  023C  00E9               	movwf	(main@faderValue+1)^(0+128)
  6452  023D  0020               	movlb	0	; select bank0
  6453  023E  0820               	movf	?_ADCC_GetSingleConversion,w
  6454  023F  0021               	movlb	1	; select bank1
  6455  0240  00E8               	movwf	main@faderValue^(0+128)
  6456                           
  6457                           ;main.c: 341: faderValue=1023-faderValue;
  6458  0241  0968               	comf	main@faderValue^(0+128),w
  6459  0242  0020               	movlb	0	; select bank0
  6460  0243  00E3               	movwf	??_main
  6461  0244  0021               	movlb	1	; select bank1
  6462  0245  0969               	comf	(main@faderValue+1)^(0+128),w
  6463  0246  0020               	movlb	0	; select bank0
  6464  0247  00E4               	movwf	??_main+1
  6465  0248  0AE3               	incf	??_main,f
  6466  0249  1903               	skipnz
  6467  024A  0AE4               	incf	??_main+1,f
  6468  024B  0863               	movf	??_main,w
  6469  024C  3EFF               	addlw	255
  6470  024D  0021               	movlb	1	; select bank1
  6471  024E  00E8               	movwf	main@faderValue^(0+128)
  6472  024F  3003               	movlw	3
  6473  0250  0020               	movlb	0	; select bank0
  6474  0251  3D64               	addwfc	??_main+1,w
  6475  0252  0021               	movlb	1	; select bank1
  6476  0253  00E9               	movwf	(main@faderValue+1)^(0+128)
  6477                           
  6478                           ;main.c: 342: POT1Value=faderValue/102.3;
  6479  0254  0869               	movf	(main@faderValue+1)^(0+128),w
  6480  0255  0020               	movlb	0	; select bank0
  6481  0256  00A9               	movwf	___awtoft@c+1
  6482  0257  0021               	movlb	1	; select bank1
  6483  0258  0868               	movf	main@faderValue^(0+128),w
  6484  0259  0020               	movlb	0	; select bank0
  6485  025A  00A8               	movwf	___awtoft@c
  6486  025B  318C  2407  3180   	fcall	___awtoft
  6487  025E  0020               	movlb	0	; select bank0
  6488  025F  0828               	movf	?___awtoft,w
  6489  0260  00B1               	movwf	___ftdiv@f1
  6490  0261  0829               	movf	?___awtoft+1,w
  6491  0262  00B2               	movwf	___ftdiv@f1+1
  6492  0263  082A               	movf	?___awtoft+2,w
  6493  0264  00B3               	movwf	___ftdiv@f1+2
  6494  0265  309A               	movlw	154
  6495  0266  00AE               	movwf	___ftdiv@f2
  6496  0267  30CC               	movlw	204
  6497  0268  00AF               	movwf	___ftdiv@f2+1
  6498  0269  3042               	movlw	66
  6499  026A  00B0               	movwf	___ftdiv@f2+2
  6500  026B  3186  26E2  3180   	fcall	___ftdiv
  6501  026E  0020               	movlb	0	; select bank0
  6502  026F  082E               	movf	?___ftdiv,w
  6503  0270  00BE               	movwf	___fttol@f1
  6504  0271  082F               	movf	?___ftdiv+1,w
  6505  0272  00BF               	movwf	___fttol@f1+1
  6506  0273  0830               	movf	?___ftdiv+2,w
  6507  0274  00C0               	movwf	___fttol@f1+2
  6508  0275  318E  2640  3180   	fcall	___fttol
  6509  0278  0020               	movlb	0	; select bank0
  6510  0279  083E               	movf	?___fttol,w
  6511  027A  00E3               	movwf	??_main
  6512  027B  0863               	movf	??_main,w
  6513  027C  0021               	movlb	1	; select bank1
  6514  027D  00E0               	movwf	main@POT1Value^(0+128)
  6515                           
  6516                           ;main.c: 343: }
  6517                           ;main.c: 406: if (prevFader8bitValue!=fader8bitValue) {
  6518  027E  085C               	movf	main@prevFader8bitValue^(0+128),w
  6519  027F  0665               	xorwf	main@fader8bitValue^(0+128),w
  6520  0280  1903               	skipnz
  6521  0281  2A88               	goto	l4450
  6522                           
  6523                           ;main.c: 407: iChangeCount++;
  6524  0282  3001               	movlw	1
  6525  0283  0020               	movlb	0	; select bank0
  6526  0284  00E3               	movwf	??_main
  6527  0285  0863               	movf	??_main,w
  6528  0286  0021               	movlb	1	; select bank1
  6529  0287  07DB               	addwf	main@iChangeCount^(0+128),f
  6530  0288                     l4450:	
  6531                           
  6532                           ;main.c: 409: }
  6533                           ;main.c: 410: prevFader8bitValue=fader8bitValue;
  6534  0288  0865               	movf	main@fader8bitValue^(0+128),w
  6535  0289  0020               	movlb	0	; select bank0
  6536  028A  00E3               	movwf	??_main
  6537  028B  0863               	movf	??_main,w
  6538  028C  0021               	movlb	1	; select bank1
  6539  028D  00DC               	movwf	main@prevFader8bitValue^(0+128)
  6540                           
  6541                           ;main.c: 413: iCounter++;
  6542  028E  3001               	movlw	1
  6543  028F  07D9               	addwf	main@iCounter^(0+128),f
  6544  0290  3000               	movlw	0
  6545  0291  3DDA               	addwfc	(main@iCounter+1)^(0+128),f
  6546                           
  6547                           ;main.c: 414: if (fader8bitValue<252)
  6548  0292  30FC               	movlw	252
  6549  0293  0265               	subwf	main@fader8bitValue^(0+128),w
  6550  0294  1803               	skipnc
  6551  0295  2AA8               	goto	l4458
  6552                           
  6553                           ;main.c: 415: delay(1*(255-fader8bitValue));
  6554  0296  0865               	movf	main@fader8bitValue^(0+128),w
  6555  0297  0020               	movlb	0	; select bank0
  6556  0298  00E3               	movwf	??_main
  6557  0299  01E4               	clrf	??_main+1
  6558  029A  09E3               	comf	??_main,f
  6559  029B  09E4               	comf	??_main+1,f
  6560  029C  0AE3               	incf	??_main,f
  6561  029D  1903               	skipnz
  6562  029E  0AE4               	incf	??_main+1,f
  6563  029F  0863               	movf	??_main,w
  6564  02A0  3EFF               	addlw	255
  6565  02A1  00A6               	movwf	delay@delaytime
  6566  02A2  3000               	movlw	0
  6567  02A3  3D64               	addwfc	??_main+1,w
  6568  02A4  00A7               	movwf	delay@delaytime+1
  6569  02A5  318D  2574  3180   	fcall	_delay
  6570  02A8                     l4458:	
  6571                           
  6572                           ;main.c: 421: mvcPatchNumber=(POT1Value*10)+POT0Value;
  6573  02A8  0021               	movlb	1	; select bank1
  6574  02A9  085F               	movf	main@POT0Value^(0+128),w
  6575  02AA  0020               	movlb	0	; select bank0
  6576  02AB  00E3               	movwf	??_main
  6577  02AC  01E4               	clrf	??_main+1
  6578  02AD  0021               	movlb	1	; select bank1
  6579  02AE  0860               	movf	main@POT1Value^(0+128),w
  6580  02AF  0020               	movlb	0	; select bank0
  6581  02B0  00E5               	movwf	??_main+2
  6582  02B1  01E6               	clrf	??_main+3
  6583  02B2  0865               	movf	??_main+2,w
  6584  02B3  00A0               	movwf	___wmul@multiplier
  6585  02B4  0866               	movf	??_main+3,w
  6586  02B5  00A1               	movwf	___wmul@multiplier+1
  6587  02B6  300A               	movlw	10
  6588  02B7  00A2               	movwf	___wmul@multiplicand
  6589  02B8  3000               	movlw	0
  6590  02B9  00A3               	movwf	___wmul@multiplicand+1
  6591  02BA  318B  2391  3180   	fcall	___wmul
  6592  02BD  0020               	movlb	0	; select bank0
  6593  02BE  0863               	movf	??_main,w
  6594  02BF  0720               	addwf	?___wmul,w
  6595  02C0  0021               	movlb	1	; select bank1
  6596  02C1  00B9               	movwf	_mvcPatchNumber^(0+128)
  6597  02C2  0020               	movlb	0	; select bank0
  6598  02C3  0864               	movf	??_main+1,w
  6599  02C4  3D21               	addwfc	?___wmul+1,w
  6600  02C5  0021               	movlb	1	; select bank1
  6601  02C6  00BA               	movwf	(_mvcPatchNumber+1)^(0+128)
  6602                           
  6603                           ;main.c: 422: LED7SegDisplayValueByDigit(POT1Value,POT0Value);
  6604  02C7  0860               	movf	main@POT1Value^(0+128),w
  6605  02C8  0020               	movlb	0	; select bank0
  6606  02C9  00E3               	movwf	??_main
  6607  02CA  01E4               	clrf	??_main+1
  6608  02CB  0863               	movf	??_main,w
  6609  02CC  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  6610  02CD  0864               	movf	??_main+1,w
  6611  02CE  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  6612  02CF  0021               	movlb	1	; select bank1
  6613  02D0  085F               	movf	main@POT0Value^(0+128),w
  6614  02D1  0020               	movlb	0	; select bank0
  6615  02D2  00E5               	movwf	??_main+2
  6616  02D3  01E6               	clrf	??_main+3
  6617  02D4  0865               	movf	??_main+2,w
  6618  02D5  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  6619  02D6  0866               	movf	??_main+3,w
  6620  02D7  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  6621  02D8  318C  2476  3180   	fcall	_LED7SegDisplayValueByDigit
  6622                           
  6623                           ;main.c: 427: if (PORTBbits.RB4 == 0){
  6624  02DB  0020               	movlb	0	; select bank0
  6625  02DC  1A0D               	btfsc	13,4	;volatile
  6626  02DD  2B13               	goto	l4474
  6627                           
  6628                           ;main.c: 429: LoadDebounceCount++;
  6629  02DE  3001               	movlw	1
  6630  02DF  0021               	movlb	1	; select bank1
  6631  02E0  07E1               	addwf	main@LoadDebounceCount^(0+128),f
  6632  02E1  3000               	movlw	0
  6633  02E2  3DE2               	addwfc	(main@LoadDebounceCount+1)^(0+128),f
  6634                           
  6635                           ;main.c: 430: if(5<LoadDebounceCount) {
  6636  02E3  0862               	movf	(main@LoadDebounceCount+1)^(0+128),w
  6637  02E4  3A80               	xorlw	128
  6638  02E5  0020               	movlb	0	; select bank0
  6639  02E6  00E3               	movwf	??_main
  6640  02E7  3080               	movlw	128
  6641  02E8  0263               	subwf	??_main,w
  6642  02E9  1D03               	skipz
  6643  02EA  2AEE               	goto	u4275
  6644  02EB  3006               	movlw	6
  6645  02EC  0021               	movlb	1	; select bank1
  6646  02ED  0261               	subwf	main@LoadDebounceCount^(0+128),w
  6647  02EE                     u4275:	
  6648  02EE  1C03               	skipc
  6649  02EF  2B26               	goto	l4480
  6650                           
  6651                           ;main.c: 431: LATB &= 0b10011110 ;
  6652  02F0  309E               	movlw	158
  6653  02F1  0020               	movlb	0	; select bank0
  6654  02F2  00E3               	movwf	??_main
  6655  02F3  0863               	movf	??_main,w
  6656  02F4  0597               	andwf	23,f	;volatile
  6657                           
  6658                           ;main.c: 433: loadPatch(mvcPatchNumber);
  6659  02F5  0021               	movlb	1	; select bank1
  6660  02F6  083A               	movf	(_mvcPatchNumber+1)^(0+128),w
  6661  02F7  0020               	movlb	0	; select bank0
  6662  02F8  00DB               	movwf	loadPatch@PatchNumber+1
  6663  02F9  0021               	movlb	1	; select bank1
  6664  02FA  0839               	movf	_mvcPatchNumber^(0+128),w
  6665  02FB  0020               	movlb	0	; select bank0
  6666  02FC  00DA               	movwf	loadPatch@PatchNumber
  6667  02FD  318C  24EE  3180   	fcall	_loadPatch
  6668                           
  6669                           ;main.c: 435: LoadDebounceCount=1;
  6670  0300  3001               	movlw	1
  6671  0301  0021               	movlb	1	; select bank1
  6672  0302  00E1               	movwf	main@LoadDebounceCount^(0+128)
  6673  0303  3000               	movlw	0
  6674  0304  00E2               	movwf	(main@LoadDebounceCount^(0+128)+1)
  6675                           
  6676                           ;main.c: 436: _delay((unsigned long)((500)*(32000000/4000.0)));
  6677  0305  3015               	movlw	21
  6678  0306  0020               	movlb	0	; select bank0
  6679  0307  00E4               	movwf	??_main+1
  6680  0308  304B               	movlw	75
  6681  0309  00E3               	movwf	??_main
  6682  030A  30BE               	movlw	190
  6683  030B                     u4407:	
  6684  030B  0B89               	decfsz	9,f
  6685  030C  2B0B               	goto	u4407
  6686  030D  0BE3               	decfsz	??_main,f
  6687  030E  2B0B               	goto	u4407
  6688  030F  0BE4               	decfsz	??_main+1,f
  6689  0310  2B0B               	goto	u4407
  6690  0311  0000               	nop
  6691                           
  6692                           ;main.c: 437: }
  6693                           ;main.c: 438: }else{
  6694  0312  2B26               	goto	l4480
  6695  0313                     l4474:	
  6696                           
  6697                           ;main.c: 439: if(0<LoadDebounceCount){
  6698  0313  0021               	movlb	1	; select bank1
  6699  0314  0862               	movf	(main@LoadDebounceCount+1)^(0+128),w
  6700  0315  3A80               	xorlw	128
  6701  0316  0020               	movlb	0	; select bank0
  6702  0317  00E3               	movwf	??_main
  6703  0318  3080               	movlw	128
  6704  0319  0263               	subwf	??_main,w
  6705  031A  1D03               	skipz
  6706  031B  2B1F               	goto	u4285
  6707  031C  3001               	movlw	1
  6708  031D  0021               	movlb	1	; select bank1
  6709  031E  0261               	subwf	main@LoadDebounceCount^(0+128),w
  6710  031F                     u4285:	
  6711  031F  1C03               	skipc
  6712  0320  2B26               	goto	l4480
  6713                           
  6714                           ;main.c: 440: LoadDebounceCount=0;
  6715  0321  0021               	movlb	1	; select bank1
  6716  0322  01E1               	clrf	main@LoadDebounceCount^(0+128)
  6717  0323  01E2               	clrf	(main@LoadDebounceCount+1)^(0+128)
  6718                           
  6719                           ;main.c: 441: LATB |= 0b00000001 ;
  6720  0324  0020               	movlb	0	; select bank0
  6721  0325  1417               	bsf	23,0	;volatile
  6722  0326                     l4480:	
  6723                           
  6724                           ;main.c: 442: }
  6725                           ;main.c: 443: }
  6726                           ;main.c: 444: if (PORTBbits.RB5 == 0){
  6727  0326  0020               	movlb	0	; select bank0
  6728  0327  1A8D               	btfsc	13,5	;volatile
  6729  0328  2B5E               	goto	l4492
  6730                           
  6731                           ;main.c: 446: SaveDebounceCount++;
  6732  0329  3001               	movlw	1
  6733  032A  0021               	movlb	1	; select bank1
  6734  032B  07E3               	addwf	main@SaveDebounceCount^(0+128),f
  6735  032C  3000               	movlw	0
  6736  032D  3DE4               	addwfc	(main@SaveDebounceCount+1)^(0+128),f
  6737                           
  6738                           ;main.c: 447: if(5<SaveDebounceCount) {
  6739  032E  0864               	movf	(main@SaveDebounceCount+1)^(0+128),w
  6740  032F  3A80               	xorlw	128
  6741  0330  0020               	movlb	0	; select bank0
  6742  0331  00E3               	movwf	??_main
  6743  0332  3080               	movlw	128
  6744  0333  0263               	subwf	??_main,w
  6745  0334  1D03               	skipz
  6746  0335  2B39               	goto	u4305
  6747  0336  3006               	movlw	6
  6748  0337  0021               	movlb	1	; select bank1
  6749  0338  0263               	subwf	main@SaveDebounceCount^(0+128),w
  6750  0339                     u4305:	
  6751  0339  1C03               	skipc
  6752  033A  28ED               	goto	l4398
  6753                           
  6754                           ;main.c: 448: LATB &= 0b10011101 ;
  6755  033B  309D               	movlw	157
  6756  033C  0020               	movlb	0	; select bank0
  6757  033D  00E3               	movwf	??_main
  6758  033E  0863               	movf	??_main,w
  6759  033F  0597               	andwf	23,f	;volatile
  6760                           
  6761                           ;main.c: 467: savePatch(mvcPatchNumber);
  6762  0340  0021               	movlb	1	; select bank1
  6763  0341  083A               	movf	(_mvcPatchNumber+1)^(0+128),w
  6764  0342  0020               	movlb	0	; select bank0
  6765  0343  00D5               	movwf	savePatch@PatchNumber+1
  6766  0344  0021               	movlb	1	; select bank1
  6767  0345  0839               	movf	_mvcPatchNumber^(0+128),w
  6768  0346  0020               	movlb	0	; select bank0
  6769  0347  00D4               	movwf	savePatch@PatchNumber
  6770  0348  318D  25C7  3180   	fcall	_savePatch
  6771                           
  6772                           ;main.c: 472: SaveDebounceCount=1;
  6773  034B  3001               	movlw	1
  6774  034C  0021               	movlb	1	; select bank1
  6775  034D  00E3               	movwf	main@SaveDebounceCount^(0+128)
  6776  034E  3000               	movlw	0
  6777  034F  00E4               	movwf	(main@SaveDebounceCount^(0+128)+1)
  6778                           
  6779                           ;main.c: 473: _delay((unsigned long)((500)*(32000000/4000.0)));
  6780  0350  3015               	movlw	21
  6781  0351  0020               	movlb	0	; select bank0
  6782  0352  00E4               	movwf	??_main+1
  6783  0353  304B               	movlw	75
  6784  0354  00E3               	movwf	??_main
  6785  0355  30BE               	movlw	190
  6786  0356                     u4417:	
  6787  0356  0B89               	decfsz	9,f
  6788  0357  2B56               	goto	u4417
  6789  0358  0BE3               	decfsz	??_main,f
  6790  0359  2B56               	goto	u4417
  6791  035A  0BE4               	decfsz	??_main+1,f
  6792  035B  2B56               	goto	u4417
  6793  035C  0000               	nop
  6794                           
  6795                           ;main.c: 474: }
  6796                           ;main.c: 475: }else{
  6797  035D  28ED               	goto	l4398
  6798  035E                     l4492:	
  6799                           
  6800                           ;main.c: 476: if(0<SaveDebounceCount){
  6801  035E  0021               	movlb	1	; select bank1
  6802  035F  0864               	movf	(main@SaveDebounceCount+1)^(0+128),w
  6803  0360  3A80               	xorlw	128
  6804  0361  0020               	movlb	0	; select bank0
  6805  0362  00E3               	movwf	??_main
  6806  0363  3080               	movlw	128
  6807  0364  0263               	subwf	??_main,w
  6808  0365  1D03               	skipz
  6809  0366  2B6A               	goto	u4315
  6810  0367  3001               	movlw	1
  6811  0368  0021               	movlb	1	; select bank1
  6812  0369  0263               	subwf	main@SaveDebounceCount^(0+128),w
  6813  036A                     u4315:	
  6814  036A  1C03               	skipc
  6815  036B  28ED               	goto	l4398
  6816                           
  6817                           ;main.c: 477: SaveDebounceCount=0;
  6818  036C  0021               	movlb	1	; select bank1
  6819  036D  01E3               	clrf	main@SaveDebounceCount^(0+128)
  6820  036E  01E4               	clrf	(main@SaveDebounceCount+1)^(0+128)
  6821                           
  6822                           ;main.c: 478: LATB |= 0b00000010;
  6823  036F  0020               	movlb	0	; select bank0
  6824  0370  1497               	bsf	23,1	;volatile
  6825  0371  28ED               	goto	l4398
  6826  0372                     __end_of_main:	
  6827                           
  6828                           	psect	text1
  6829  0DC7                     __ptext1:	
  6830 ;; *************** function _savePatch *****************
  6831 ;; Defined at:
  6832 ;;		line 812 in file "main.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  PatchNumber     2   52[BANK0 ] int 
  6835 ;; Auto vars:     Size  Location     Type
  6836 ;;  batchNum        2   63[BANK0 ] int 
  6837 ;;  iPatchAddres    2   65[BANK0 ] int 
  6838 ;;  idx             2   61[BANK0 ] int 
  6839 ;;  pData           2   59[BANK0 ] PTR unsigned char 
  6840 ;;		 -> aPatchMemory(128), 
  6841 ;;  iPatchAddres    1   58[BANK0 ] unsigned char 
  6842 ;;  iPatchAddres    1   57[BANK0 ] unsigned char 
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6852 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;Total ram usage:       15 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    6
  6859 ;; This function calls:
  6860 ;;		_MYI2C_Write16EEPROMBytes
  6861 ;;		_marshallPatchMemory
  6862 ;; This function is called by:
  6863 ;;		_main
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           
  6868                           ;psect for function _savePatch
  6869  0DC7                     _savePatch:	
  6870                           
  6871                           ;main.c: 813: int iPatchAddress=PatchNumber*cPatchSize;
  6872                           
  6873                           ;incstack = 0
  6874                           ; Regs used in _savePatch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6875  0DC7  0020               	movlb	0	; select bank0
  6876  0DC8  0855               	movf	savePatch@PatchNumber+1,w
  6877  0DC9  00D7               	movwf	??_savePatch+1
  6878  0DCA  0854               	movf	savePatch@PatchNumber,w
  6879  0DCB  00D6               	movwf	??_savePatch
  6880  0DCC  3007               	movlw	7
  6881  0DCD                     u3025:	
  6882  0DCD  35D6               	lslf	??_savePatch,f
  6883  0DCE  0DD7               	rlf	??_savePatch+1,f
  6884  0DCF  0B89               	decfsz	9,f
  6885  0DD0  2DCD               	goto	u3025
  6886  0DD1  0856               	movf	??_savePatch,w
  6887  0DD2  00E1               	movwf	savePatch@iPatchAddress
  6888  0DD3  0857               	movf	??_savePatch+1,w
  6889  0DD4  00E2               	movwf	savePatch@iPatchAddress+1
  6890                           
  6891                           ;main.c: 814: uint8_t iPatchAddressHigh=iPatchAddress>>8;
  6892  0DD5  0862               	movf	savePatch@iPatchAddress+1,w
  6893  0DD6  00D6               	movwf	??_savePatch
  6894  0DD7  0856               	movf	??_savePatch,w
  6895  0DD8  00D9               	movwf	savePatch@iPatchAddressHigh
  6896                           
  6897                           ;main.c: 815: uint8_t iPatchAddressLow=iPatchAddress&0xFF;
  6898  0DD9  0861               	movf	savePatch@iPatchAddress,w
  6899  0DDA  00D6               	movwf	??_savePatch
  6900  0DDB  0856               	movf	??_savePatch,w
  6901  0DDC  00DA               	movwf	savePatch@iPatchAddressLow
  6902                           
  6903                           ;main.c: 818: marshallPatchMemory(mvcChannels,dualADSRdata0,dualADSRdata1);
  6904  0DDD  303C               	movlw	(low (_dualADSRdata0| (0+256)))& (0+255)
  6905  0DDE  00D6               	movwf	??_savePatch
  6906  0DDF  0856               	movf	??_savePatch,w
  6907  0DE0  00A0               	movwf	marshallPatchMemory@dualADSRdata0
  6908  0DE1  3034               	movlw	(low (_dualADSRdata1| (0+256)))& (0+255)
  6909  0DE2  00D7               	movwf	??_savePatch+1
  6910  0DE3  0857               	movf	??_savePatch+1,w
  6911  0DE4  00A1               	movwf	marshallPatchMemory@dualADSRdata1
  6912  0DE5  30C9               	movlw	(low (_mvcChannels| 0))& (0+255)
  6913  0DE6  3184  24AD  318D   	fcall	_marshallPatchMemory
  6914                           
  6915                           ;main.c: 821: uint8_t *pData;
  6916                           ;main.c: 822: int idx;
  6917                           ;main.c: 825: for(int batchNum=0;(batchNum*ciBatchSize)<cPatchSize;batchNum++){
  6918  0DE9  0020               	movlb	0	; select bank0
  6919  0DEA  01DF               	clrf	savePatch@batchNum
  6920  0DEB  01E0               	clrf	savePatch@batchNum+1
  6921  0DEC                     l3520:	
  6922  0DEC  0860               	movf	savePatch@batchNum+1,w
  6923  0DED  00D7               	movwf	??_savePatch+1
  6924  0DEE  085F               	movf	savePatch@batchNum,w
  6925  0DEF  00D6               	movwf	??_savePatch
  6926  0DF0  0ED6               	swapf	??_savePatch,f
  6927  0DF1  0ED7               	swapf	??_savePatch+1,f
  6928  0DF2  30F0               	movlw	240
  6929  0DF3  05D7               	andwf	??_savePatch+1,f
  6930  0DF4  0856               	movf	??_savePatch,w
  6931  0DF5  390F               	andlw	15
  6932  0DF6  04D7               	iorwf	??_savePatch+1,f
  6933  0DF7  30F0               	movlw	240
  6934  0DF8  05D6               	andwf	??_savePatch,f
  6935  0DF9  0857               	movf	??_savePatch+1,w
  6936  0DFA  3A80               	xorlw	128
  6937  0DFB  00D8               	movwf	??_savePatch+2
  6938  0DFC  3080               	movlw	128
  6939  0DFD  0258               	subwf	??_savePatch+2,w
  6940  0DFE  1D03               	skipz
  6941  0DFF  2E02               	goto	u3035
  6942  0E00  3080               	movlw	128
  6943  0E01  0256               	subwf	??_savePatch,w
  6944  0E02                     u3035:	
  6945  0E02  1803               	btfsc	3,0
  6946  0E03  0008               	return
  6947                           
  6948                           ;main.c: 827: idx=batchNum*ciBatchSize;
  6949  0E04  0020               	movlb	0	; select bank0
  6950  0E05  0860               	movf	savePatch@batchNum+1,w
  6951  0E06  00D7               	movwf	??_savePatch+1
  6952  0E07  085F               	movf	savePatch@batchNum,w
  6953  0E08  00D6               	movwf	??_savePatch
  6954  0E09  0ED6               	swapf	??_savePatch,f
  6955  0E0A  0ED7               	swapf	??_savePatch+1,f
  6956  0E0B  30F0               	movlw	240
  6957  0E0C  05D7               	andwf	??_savePatch+1,f
  6958  0E0D  0856               	movf	??_savePatch,w
  6959  0E0E  390F               	andlw	15
  6960  0E0F  04D7               	iorwf	??_savePatch+1,f
  6961  0E10  30F0               	movlw	240
  6962  0E11  05D6               	andwf	??_savePatch,f
  6963  0E12  0856               	movf	??_savePatch,w
  6964  0E13  00DD               	movwf	savePatch@idx
  6965  0E14  0857               	movf	??_savePatch+1,w
  6966  0E15  00DE               	movwf	savePatch@idx+1
  6967                           
  6968                           ;main.c: 828: pData=&aPatchMemory[idx];
  6969  0E16  3070               	movlw	112
  6970  0E17  00D6               	movwf	??_savePatch
  6971  0E18  3023               	movlw	35
  6972  0E19  00D7               	movwf	??_savePatch+1
  6973  0E1A  085D               	movf	savePatch@idx,w
  6974  0E1B  0756               	addwf	??_savePatch,w
  6975  0E1C  00DB               	movwf	savePatch@pData
  6976  0E1D  085E               	movf	savePatch@idx+1,w
  6977  0E1E  3D57               	addwfc	??_savePatch+1,w
  6978  0E1F  00DC               	movwf	savePatch@pData+1
  6979                           
  6980                           ;main.c: 829: MYI2C_Write16EEPROMBytes(ciI2C_EEPROM_DEVICE_ADDRESS,iPatchAddress,pData);
  6981  0E20  0862               	movf	savePatch@iPatchAddress+1,w
  6982  0E21  00AF               	movwf	MYI2C_Write16EEPROMBytes@writeAddress+1
  6983  0E22  0861               	movf	savePatch@iPatchAddress,w
  6984  0E23  00AE               	movwf	MYI2C_Write16EEPROMBytes@writeAddress
  6985  0E24  085C               	movf	savePatch@pData+1,w
  6986  0E25  00B1               	movwf	MYI2C_Write16EEPROMBytes@pData+1
  6987  0E26  085B               	movf	savePatch@pData,w
  6988  0E27  00B0               	movwf	MYI2C_Write16EEPROMBytes@pData
  6989  0E28  3050               	movlw	80
  6990  0E29  318E  26C7  318D   	fcall	_MYI2C_Write16EEPROMBytes
  6991                           
  6992                           ;main.c: 831: iPatchAddress+=ciBatchSize;
  6993  0E2C  3010               	movlw	16
  6994  0E2D  0020               	movlb	0	; select bank0
  6995  0E2E  07E1               	addwf	savePatch@iPatchAddress,f
  6996  0E2F  3000               	movlw	0
  6997  0E30  3DE2               	addwfc	savePatch@iPatchAddress+1,f
  6998                           
  6999                           ;main.c: 833: _delay((unsigned long)((5)*(32000000/4000.0)));
  7000  0E31  3034               	movlw	52
  7001  0E32  0020               	movlb	0	; select bank0
  7002  0E33  00D6               	movwf	??_savePatch
  7003  0E34  30F1               	movlw	241
  7004  0E35                     u4427:	
  7005  0E35  0B89               	decfsz	9,f
  7006  0E36  2E35               	goto	u4427
  7007  0E37  0BD6               	decfsz	??_savePatch,f
  7008  0E38  2E35               	goto	u4427
  7009  0E39  3200               	nop2
  7010  0E3A  3001               	movlw	1
  7011  0E3B  0020               	movlb	0	; select bank0
  7012  0E3C  07DF               	addwf	savePatch@batchNum,f
  7013  0E3D  3000               	movlw	0
  7014  0E3E  3DE0               	addwfc	savePatch@batchNum+1,f
  7015  0E3F  2DEC               	goto	l3520
  7016  0E40                     __end_of_savePatch:	
  7017                           
  7018                           	psect	text2
  7019  04AD                     __ptext2:	
  7020 ;; *************** function _marshallPatchMemory *****************
  7021 ;; Defined at:
  7022 ;;		line 22 in file "EEPROM_24LC256.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  mvcChannels     1    wreg     PTR unsigned char 
  7025 ;;		 -> mvcChannels(4), 
  7026 ;;  dualADSRdata    1    0[BANK0 ] PTR unsigned char 
  7027 ;;		 -> dualADSRdata0(8), 
  7028 ;;  dualADSRdata    1    1[BANK0 ] PTR unsigned char 
  7029 ;;		 -> dualADSRdata1(8), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  mvcChannels     1    8[BANK0 ] PTR unsigned char 
  7032 ;;		 -> mvcChannels(4), 
  7033 ;;  i               2   13[BANK0 ] int 
  7034 ;;  i               2   11[BANK0 ] int 
  7035 ;;  i               2    9[BANK0 ] int 
  7036 ;;  iPatchMemory    2   15[BANK0 ] int 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;Total ram usage:       17 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; Hardware stack levels required when called:    3
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_savePatch
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           
  7061                           ;psect for function _marshallPatchMemory
  7062  04AD                     _marshallPatchMemory:	
  7063                           
  7064                           ;incstack = 0
  7065                           ; Regs used in _marshallPatchMemory: [wreg+fsr1l+fsr1h+status,2+status,0]
  7066                           ;marshallPatchMemory@mvcChannels stored from wreg
  7067  04AD  0020               	movlb	0	; select bank0
  7068  04AE  00A8               	movwf	marshallPatchMemory@mvcChannels
  7069                           
  7070                           ;EEPROM_24LC256.c: 23: int iPatchMemoryNDX=0;
  7071  04AF  01AF               	clrf	marshallPatchMemory@iPatchMemoryNDX
  7072  04B0  01B0               	clrf	marshallPatchMemory@iPatchMemoryNDX+1
  7073                           
  7074                           ;EEPROM_24LC256.c: 24: for(int i=0; i<cMixFaderCount;i++) {
  7075  04B1  01A9               	clrf	marshallPatchMemory@i
  7076  04B2  01AA               	clrf	marshallPatchMemory@i+1
  7077  04B3  082A               	movf	marshallPatchMemory@i+1,w
  7078  04B4  3A80               	xorlw	128
  7079  04B5  00A2               	movwf	??_marshallPatchMemory
  7080  04B6  3080               	movlw	128
  7081  04B7  0222               	subwf	??_marshallPatchMemory,w
  7082  04B8  1D03               	skipz
  7083  04B9  2CBC               	goto	u2485
  7084  04BA  3004               	movlw	4
  7085  04BB  0229               	subwf	marshallPatchMemory@i,w
  7086  04BC                     u2485:	
  7087  04BC  1803               	btfsc	3,0
  7088  04BD  2CEA               	goto	l3110
  7089  04BE                     l3102:	
  7090                           
  7091                           ;EEPROM_24LC256.c: 25: aPatchMemory[iPatchMemoryNDX++]=mvcChannels[i];
  7092  04BE  0020               	movlb	0	; select bank0
  7093  04BF  0829               	movf	marshallPatchMemory@i,w
  7094  04C0  0728               	addwf	marshallPatchMemory@mvcChannels,w
  7095  04C1  00A2               	movwf	??_marshallPatchMemory
  7096  04C2  0822               	movf	??_marshallPatchMemory,w
  7097  04C3  0086               	movwf	6
  7098  04C4  0187               	clrf	7
  7099  04C5  0801               	movf	1,w
  7100  04C6  00A3               	movwf	??_marshallPatchMemory+1
  7101  04C7  3070               	movlw	112
  7102  04C8  00A4               	movwf	??_marshallPatchMemory+2
  7103  04C9  3023               	movlw	35
  7104  04CA  00A5               	movwf	??_marshallPatchMemory+3
  7105  04CB  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7106  04CC  0724               	addwf	??_marshallPatchMemory+2,w
  7107  04CD  00A6               	movwf	??_marshallPatchMemory+4
  7108  04CE  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7109  04CF  3D25               	addwfc	??_marshallPatchMemory+3,w
  7110  04D0  00A7               	movwf	??_marshallPatchMemory+5
  7111  04D1  0826               	movf	??_marshallPatchMemory+4,w
  7112  04D2  0086               	movwf	6
  7113  04D3  0827               	movf	??_marshallPatchMemory+5,w
  7114  04D4  0087               	movwf	7
  7115  04D5  0823               	movf	??_marshallPatchMemory+1,w
  7116  04D6  0081               	movwf	1
  7117  04D7  3001               	movlw	1
  7118  04D8  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7119  04D9  3000               	movlw	0
  7120  04DA  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7121  04DB  3001               	movlw	1
  7122  04DC  07A9               	addwf	marshallPatchMemory@i,f
  7123  04DD  3000               	movlw	0
  7124  04DE  3DAA               	addwfc	marshallPatchMemory@i+1,f
  7125  04DF  082A               	movf	marshallPatchMemory@i+1,w
  7126  04E0  3A80               	xorlw	128
  7127  04E1  00A2               	movwf	??_marshallPatchMemory
  7128  04E2  3080               	movlw	128
  7129  04E3  0222               	subwf	??_marshallPatchMemory,w
  7130  04E4  1D03               	skipz
  7131  04E5  2CE8               	goto	u2495
  7132  04E6  3004               	movlw	4
  7133  04E7  0229               	subwf	marshallPatchMemory@i,w
  7134  04E8                     u2495:	
  7135  04E8  1C03               	skipc
  7136  04E9  2CBE               	goto	l3102
  7137  04EA                     l3110:	
  7138                           
  7139                           ;EEPROM_24LC256.c: 26: }
  7140                           ;EEPROM_24LC256.c: 27: for(int i=0; i<cADSRdataBytes;i++) {
  7141  04EA  0020               	movlb	0	; select bank0
  7142  04EB  01AB               	clrf	marshallPatchMemory@i_1213
  7143  04EC  01AC               	clrf	marshallPatchMemory@i_1213+1
  7144  04ED  082C               	movf	marshallPatchMemory@i_1213+1,w
  7145  04EE  3A80               	xorlw	128
  7146  04EF  00A2               	movwf	??_marshallPatchMemory
  7147  04F0  3080               	movlw	128
  7148  04F1  0222               	subwf	??_marshallPatchMemory,w
  7149  04F2  3008               	movlw	8
  7150  04F3  1903               	btfsc	3,2
  7151  04F4  022B               	subwf	marshallPatchMemory@i_1213,w
  7152  04F5  1803               	btfsc	3,0
  7153  04F6  2D23               	goto	l3124
  7154  04F7                     l3116:	
  7155                           
  7156                           ;EEPROM_24LC256.c: 28: aPatchMemory[iPatchMemoryNDX++]=dualADSRdata0[i];
  7157  04F7  0020               	movlb	0	; select bank0
  7158  04F8  082B               	movf	marshallPatchMemory@i_1213,w
  7159  04F9  0720               	addwf	marshallPatchMemory@dualADSRdata0,w
  7160  04FA  00A2               	movwf	??_marshallPatchMemory
  7161  04FB  0822               	movf	??_marshallPatchMemory,w
  7162  04FC  0086               	movwf	6
  7163  04FD  3001               	movlw	1	; select bank2/3
  7164  04FE  0087               	movwf	7
  7165  04FF  0801               	movf	1,w
  7166  0500  00A3               	movwf	??_marshallPatchMemory+1
  7167  0501  3070               	movlw	112
  7168  0502  00A4               	movwf	??_marshallPatchMemory+2
  7169  0503  3023               	movlw	35
  7170  0504  00A5               	movwf	??_marshallPatchMemory+3
  7171  0505  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7172  0506  0724               	addwf	??_marshallPatchMemory+2,w
  7173  0507  00A6               	movwf	??_marshallPatchMemory+4
  7174  0508  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7175  0509  3D25               	addwfc	??_marshallPatchMemory+3,w
  7176  050A  00A7               	movwf	??_marshallPatchMemory+5
  7177  050B  0826               	movf	??_marshallPatchMemory+4,w
  7178  050C  0086               	movwf	6
  7179  050D  0827               	movf	??_marshallPatchMemory+5,w
  7180  050E  0087               	movwf	7
  7181  050F  0823               	movf	??_marshallPatchMemory+1,w
  7182  0510  0081               	movwf	1
  7183  0511  3001               	movlw	1
  7184  0512  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7185  0513  3000               	movlw	0
  7186  0514  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7187  0515  3001               	movlw	1
  7188  0516  07AB               	addwf	marshallPatchMemory@i_1213,f
  7189  0517  3000               	movlw	0
  7190  0518  3DAC               	addwfc	marshallPatchMemory@i_1213+1,f
  7191  0519  082C               	movf	marshallPatchMemory@i_1213+1,w
  7192  051A  3A80               	xorlw	128
  7193  051B  00A2               	movwf	??_marshallPatchMemory
  7194  051C  3080               	movlw	128
  7195  051D  0222               	subwf	??_marshallPatchMemory,w
  7196  051E  3008               	movlw	8
  7197  051F  1903               	btfsc	3,2
  7198  0520  022B               	subwf	marshallPatchMemory@i_1213,w
  7199  0521  1C03               	skipc
  7200  0522  2CF7               	goto	l3116
  7201  0523                     l3124:	
  7202                           
  7203                           ;EEPROM_24LC256.c: 29: }
  7204                           ;EEPROM_24LC256.c: 30: for(int i=0; i<cADSRdataBytes;i++) {
  7205  0523  0020               	movlb	0	; select bank0
  7206  0524  01AD               	clrf	marshallPatchMemory@i_1214
  7207  0525  01AE               	clrf	marshallPatchMemory@i_1214+1
  7208  0526  082E               	movf	marshallPatchMemory@i_1214+1,w
  7209  0527  3A80               	xorlw	128
  7210  0528  00A2               	movwf	??_marshallPatchMemory
  7211  0529  3080               	movlw	128
  7212  052A  0222               	subwf	??_marshallPatchMemory,w
  7213  052B  3008               	movlw	8
  7214  052C  1903               	btfsc	3,2
  7215  052D  022D               	subwf	marshallPatchMemory@i_1214,w
  7216  052E  1803               	btfsc	3,0
  7217  052F  2D5C               	goto	l3138
  7218  0530                     l3130:	
  7219                           
  7220                           ;EEPROM_24LC256.c: 31: aPatchMemory[iPatchMemoryNDX++]=dualADSRdata1[i];
  7221  0530  0020               	movlb	0	; select bank0
  7222  0531  082D               	movf	marshallPatchMemory@i_1214,w
  7223  0532  0721               	addwf	marshallPatchMemory@dualADSRdata1,w
  7224  0533  00A2               	movwf	??_marshallPatchMemory
  7225  0534  0822               	movf	??_marshallPatchMemory,w
  7226  0535  0086               	movwf	6
  7227  0536  3001               	movlw	1	; select bank2/3
  7228  0537  0087               	movwf	7
  7229  0538  0801               	movf	1,w
  7230  0539  00A3               	movwf	??_marshallPatchMemory+1
  7231  053A  3070               	movlw	112
  7232  053B  00A4               	movwf	??_marshallPatchMemory+2
  7233  053C  3023               	movlw	35
  7234  053D  00A5               	movwf	??_marshallPatchMemory+3
  7235  053E  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7236  053F  0724               	addwf	??_marshallPatchMemory+2,w
  7237  0540  00A6               	movwf	??_marshallPatchMemory+4
  7238  0541  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7239  0542  3D25               	addwfc	??_marshallPatchMemory+3,w
  7240  0543  00A7               	movwf	??_marshallPatchMemory+5
  7241  0544  0826               	movf	??_marshallPatchMemory+4,w
  7242  0545  0086               	movwf	6
  7243  0546  0827               	movf	??_marshallPatchMemory+5,w
  7244  0547  0087               	movwf	7
  7245  0548  0823               	movf	??_marshallPatchMemory+1,w
  7246  0549  0081               	movwf	1
  7247  054A  3001               	movlw	1
  7248  054B  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7249  054C  3000               	movlw	0
  7250  054D  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7251  054E  3001               	movlw	1
  7252  054F  07AD               	addwf	marshallPatchMemory@i_1214,f
  7253  0550  3000               	movlw	0
  7254  0551  3DAE               	addwfc	marshallPatchMemory@i_1214+1,f
  7255  0552  082E               	movf	marshallPatchMemory@i_1214+1,w
  7256  0553  3A80               	xorlw	128
  7257  0554  00A2               	movwf	??_marshallPatchMemory
  7258  0555  3080               	movlw	128
  7259  0556  0222               	subwf	??_marshallPatchMemory,w
  7260  0557  3008               	movlw	8
  7261  0558  1903               	btfsc	3,2
  7262  0559  022D               	subwf	marshallPatchMemory@i_1214,w
  7263  055A  1C03               	skipc
  7264  055B  2D30               	goto	l3130
  7265  055C                     l3138:	
  7266                           
  7267                           ;EEPROM_24LC256.c: 32: }
  7268                           ;EEPROM_24LC256.c: 34: for(;iPatchMemoryNDX<cPatchSize;iPatchMemoryNDX++){
  7269  055C  0020               	movlb	0	; select bank0
  7270  055D                     L1:	
  7271  055D  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7272  055E  3A80               	xorlw	128
  7273  055F  00A2               	movwf	??_marshallPatchMemory
  7274  0560  3080               	movlw	128
  7275  0561  0222               	subwf	??_marshallPatchMemory,w
  7276  0562  1D03               	skipz
  7277  0563  2D66               	goto	u2545
  7278  0564  3080               	movlw	128
  7279  0565  022F               	subwf	marshallPatchMemory@iPatchMemoryNDX,w
  7280  0566                     u2545:	
  7281  0566  1803               	btfsc	3,0
  7282  0567  0008               	return
  7283                           
  7284                           ;EEPROM_24LC256.c: 35: aPatchMemory[iPatchMemoryNDX]=0;
  7285  0568  3070               	movlw	112
  7286  0569  0020               	movlb	0	; select bank0
  7287  056A  00A2               	movwf	??_marshallPatchMemory
  7288  056B  3023               	movlw	35
  7289  056C  00A3               	movwf	??_marshallPatchMemory+1
  7290  056D  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7291  056E  0722               	addwf	??_marshallPatchMemory,w
  7292  056F  0086               	movwf	6
  7293  0570  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7294  0571  3D23               	addwfc	??_marshallPatchMemory+1,w
  7295  0572  0087               	movwf	7
  7296  0573  0181               	clrf	1
  7297  0574  3001               	movlw	1
  7298  0575  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7299  0576  3000               	movlw	0
  7300  0577  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7301  0578  2D5D               	goto	L1
  7302  0579                     __end_of_marshallPatchMemory:	
  7303                           
  7304                           	psect	text3
  7305  0EC7                     __ptext3:	
  7306 ;; *************** function _MYI2C_Write16EEPROMBytes *****************
  7307 ;; Defined at:
  7308 ;;		line 73 in file "EEPROM_24LC256.c"
  7309 ;; Parameters:    Size  Location     Type
  7310 ;;  slaveDeviceA    1    wreg     unsigned char 
  7311 ;;  writeAddress    2   14[BANK0 ] int 
  7312 ;;  pData           2   16[BANK0 ] PTR unsigned char 
  7313 ;;		 -> aPatchMemory(128), 
  7314 ;; Auto vars:     Size  Location     Type
  7315 ;;  slaveDeviceA    1   45[BANK0 ] unsigned char 
  7316 ;;  i               2   49[BANK0 ] int 
  7317 ;;  writeBuffer    17   22[BANK0 ] unsigned char [17]
  7318 ;;  counter         2   47[BANK0 ] unsigned int 
  7319 ;;  timeOut         2   42[BANK0 ] unsigned int 
  7320 ;;  nCount          2   40[BANK0 ] unsigned int 
  7321 ;;  status          1   51[BANK0 ] enum E14260
  7322 ;;  iPatchAddres    1   46[BANK0 ] unsigned char 
  7323 ;;  pointerByte     1   44[BANK0 ] unsigned char 
  7324 ;;  iPatchAddres    1   39[BANK0 ] unsigned char 
  7325 ;; Return value:  Size  Location     Type
  7326 ;;                  1    wreg      void 
  7327 ;; Registers used:
  7328 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7329 ;; Tracked objects:
  7330 ;;		On entry : 0/0
  7331 ;;		On exit  : 0/0
  7332 ;;		Unchanged: 0/0
  7333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7334 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7337 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7338 ;;Total ram usage:       38 bytes
  7339 ;; Hardware stack levels used:    1
  7340 ;; Hardware stack levels required when called:    5
  7341 ;; This function calls:
  7342 ;;		_I2C1_MasterWrite
  7343 ;; This function is called by:
  7344 ;;		_savePatch
  7345 ;; This function uses a non-reentrant model
  7346 ;;
  7347                           
  7348                           
  7349                           ;psect for function _MYI2C_Write16EEPROMBytes
  7350  0EC7                     _MYI2C_Write16EEPROMBytes:	
  7351                           
  7352                           ;incstack = 0
  7353                           ; Regs used in _MYI2C_Write16EEPROMBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7354                           ;MYI2C_Write16EEPROMBytes@slaveDeviceAddress stored from wreg
  7355  0EC7  0020               	movlb	0	; select bank0
  7356  0EC8  00CD               	movwf	MYI2C_Write16EEPROMBytes@slaveDeviceAddress
  7357                           
  7358                           ;EEPROM_24LC256.c: 75: uint8_t iPatchAddressHigh=writeAddress>>8;
  7359  0EC9  082F               	movf	MYI2C_Write16EEPROMBytes@writeAddress+1,w
  7360  0ECA  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7361  0ECB  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7362  0ECC  00CE               	movwf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh
  7363                           
  7364                           ;EEPROM_24LC256.c: 76: uint8_t iPatchAddressLow=writeAddress&0xFF;
  7365  0ECD  082E               	movf	MYI2C_Write16EEPROMBytes@writeAddress,w
  7366  0ECE  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7367  0ECF  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7368  0ED0  00C7               	movwf	MYI2C_Write16EEPROMBytes@iPatchAddressLow
  7369                           
  7370                           ;EEPROM_24LC256.c: 82: uint16_t nCount;
  7371                           ;EEPROM_24LC256.c: 83: uint8_t writeBuffer[ciBufferSize];
  7372                           ;EEPROM_24LC256.c: 84: uint16_t counter, timeOut;
  7373                           ;EEPROM_24LC256.c: 86: uint8_t pointerByte = 0b10100000;
  7374  0ED1  30A0               	movlw	160
  7375  0ED2  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7376  0ED3  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7377  0ED4  00CC               	movwf	MYI2C_Write16EEPROMBytes@pointerByte
  7378                           
  7379                           ;EEPROM_24LC256.c: 88: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7380  0ED5  3002               	movlw	2
  7381  0ED6  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7382  0ED7  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7383  0ED8  00D3               	movwf	MYI2C_Write16EEPROMBytes@status
  7384                           
  7385                           ;EEPROM_24LC256.c: 92: nCount = 2;
  7386  0ED9  3002               	movlw	2
  7387  0EDA  00C8               	movwf	MYI2C_Write16EEPROMBytes@nCount
  7388  0EDB  3000               	movlw	0
  7389  0EDC  00C9               	movwf	MYI2C_Write16EEPROMBytes@nCount+1
  7390                           
  7391                           ;EEPROM_24LC256.c: 95: for (counter = 0; counter < nCount; counter++)
  7392  0EDD  01CF               	clrf	MYI2C_Write16EEPROMBytes@counter
  7393  0EDE  01D0               	clrf	MYI2C_Write16EEPROMBytes@counter+1
  7394  0EDF                     l831:	
  7395  0EDF  0849               	movf	MYI2C_Write16EEPROMBytes@nCount+1,w
  7396  0EE0  0250               	subwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7397  0EE1  1D03               	skipz
  7398  0EE2  2EE5               	goto	u2655
  7399  0EE3  0848               	movf	MYI2C_Write16EEPROMBytes@nCount,w
  7400  0EE4  024F               	subwf	MYI2C_Write16EEPROMBytes@counter,w
  7401  0EE5                     u2655:	
  7402  0EE5  1803               	btfsc	3,0
  7403  0EE6  0008               	return
  7404                           
  7405                           ;EEPROM_24LC256.c: 96: {
  7406                           ;EEPROM_24LC256.c: 99: writeBuffer[0] = pointerByte;
  7407  0EE7  084C               	movf	MYI2C_Write16EEPROMBytes@pointerByte,w
  7408  0EE8  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7409  0EE9  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7410  0EEA  00B6               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer
  7411                           
  7412                           ;EEPROM_24LC256.c: 101: if(0==counter) {
  7413  0EEB  084F               	movf	MYI2C_Write16EEPROMBytes@counter,w
  7414  0EEC  0450               	iorwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7415  0EED  1D03               	btfss	3,2
  7416  0EEE  2EF8               	goto	l3166
  7417                           
  7418                           ;EEPROM_24LC256.c: 103: writeBuffer[1] = iPatchAddressHigh;
  7419  0EEF  084E               	movf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh,w
  7420  0EF0  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7421  0EF1  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7422  0EF2  00B7               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer+1
  7423                           
  7424                           ;EEPROM_24LC256.c: 104: writeBuffer[2] = iPatchAddressHigh;
  7425  0EF3  084E               	movf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh,w
  7426  0EF4  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7427  0EF5  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7428  0EF6  00B8               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer+2
  7429                           
  7430                           ;EEPROM_24LC256.c: 105: }
  7431  0EF7  2F27               	goto	l3178
  7432  0EF8                     l3166:	
  7433                           
  7434                           ;EEPROM_24LC256.c: 106: else
  7435                           ;EEPROM_24LC256.c: 107: {
  7436                           ;EEPROM_24LC256.c: 109: for(int i=1;i<ciBatchSize;i++){
  7437  0EF8  3001               	movlw	1
  7438  0EF9  00D1               	movwf	MYI2C_Write16EEPROMBytes@i
  7439  0EFA  3000               	movlw	0
  7440  0EFB  00D2               	movwf	MYI2C_Write16EEPROMBytes@i+1
  7441  0EFC  0852               	movf	MYI2C_Write16EEPROMBytes@i+1,w
  7442  0EFD  3A80               	xorlw	128
  7443  0EFE  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7444  0EFF  3080               	movlw	128
  7445  0F00  0232               	subwf	??_MYI2C_Write16EEPROMBytes,w
  7446  0F01  1D03               	skipz
  7447  0F02  2F05               	goto	u2575
  7448  0F03  3010               	movlw	16
  7449  0F04  0251               	subwf	MYI2C_Write16EEPROMBytes@i,w
  7450  0F05                     u2575:	
  7451  0F05  1803               	btfsc	3,0
  7452  0F06  2F27               	goto	l3178
  7453  0F07                     l3170:	
  7454                           
  7455                           ;EEPROM_24LC256.c: 110: writeBuffer[i]=(*pData++);
  7456  0F07  0020               	movlb	0	; select bank0
  7457  0F08  0830               	movf	MYI2C_Write16EEPROMBytes@pData,w
  7458  0F09  0086               	movwf	6
  7459  0F0A  0831               	movf	MYI2C_Write16EEPROMBytes@pData+1,w
  7460  0F0B  0087               	movwf	7
  7461  0F0C  0801               	movf	1,w
  7462  0F0D  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7463  0F0E  0851               	movf	MYI2C_Write16EEPROMBytes@i,w
  7464  0F0F  3E36               	addlw	(low (MYI2C_Write16EEPROMBytes@writeBuffer| 0))& (0+255)
  7465  0F10  0086               	movwf	6
  7466  0F11  0187               	clrf	7
  7467  0F12  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7468  0F13  0081               	movwf	1
  7469  0F14  3001               	movlw	1
  7470  0F15  07B0               	addwf	MYI2C_Write16EEPROMBytes@pData,f
  7471  0F16  3000               	movlw	0
  7472  0F17  3DB1               	addwfc	MYI2C_Write16EEPROMBytes@pData+1,f
  7473  0F18  3001               	movlw	1
  7474  0F19  07D1               	addwf	MYI2C_Write16EEPROMBytes@i,f
  7475  0F1A  3000               	movlw	0
  7476  0F1B  3DD2               	addwfc	MYI2C_Write16EEPROMBytes@i+1,f
  7477  0F1C  0852               	movf	MYI2C_Write16EEPROMBytes@i+1,w
  7478  0F1D  3A80               	xorlw	128
  7479  0F1E  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7480  0F1F  3080               	movlw	128
  7481  0F20  0232               	subwf	??_MYI2C_Write16EEPROMBytes,w
  7482  0F21  1D03               	skipz
  7483  0F22  2F25               	goto	u2585
  7484  0F23  3010               	movlw	16
  7485  0F24  0251               	subwf	MYI2C_Write16EEPROMBytes@i,w
  7486  0F25                     u2585:	
  7487  0F25  1C03               	skipc
  7488  0F26  2F07               	goto	l3170
  7489  0F27                     l3178:	
  7490                           
  7491                           ;EEPROM_24LC256.c: 111: }
  7492                           ;EEPROM_24LC256.c: 112: }
  7493                           ;EEPROM_24LC256.c: 117: timeOut = 0;
  7494  0F27  0020               	movlb	0	; select bank0
  7495  0F28  01CA               	clrf	MYI2C_Write16EEPROMBytes@timeOut
  7496  0F29  01CB               	clrf	MYI2C_Write16EEPROMBytes@timeOut+1
  7497  0F2A                     l3200:	
  7498                           ;EEPROM_24LC256.c: 118: while(status != I2C1_MESSAGE_FAIL)
  7499                           
  7500  0F2A  0353               	decf	MYI2C_Write16EEPROMBytes@status,w
  7501  0F2B  1903               	btfsc	3,2
  7502  0F2C  2F59               	goto	l3202
  7503                           
  7504                           ;EEPROM_24LC256.c: 119: {
  7505                           ;EEPROM_24LC256.c: 120: if(0==counter) {
  7506  0F2D  084F               	movf	MYI2C_Write16EEPROMBytes@counter,w
  7507  0F2E  0450               	iorwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7508  0F2F  1D03               	btfss	3,2
  7509  0F30  2F33               	goto	l3184
  7510                           
  7511                           ;EEPROM_24LC256.c: 122: I2C1_MasterWrite( writeBuffer,
  7512                           ;EEPROM_24LC256.c: 123: 3,
  7513                           ;EEPROM_24LC256.c: 124: slaveDeviceAddress,
  7514                           ;EEPROM_24LC256.c: 125: &status);
  7515  0F31  3003               	movlw	3
  7516  0F32  2F35               	goto	L2
  7517  0F33                     l3184:	
  7518                           ;EEPROM_24LC256.c: 126: } else {
  7519                           
  7520                           
  7521                           ;EEPROM_24LC256.c: 128: I2C1_MasterWrite( writeBuffer,
  7522                           ;EEPROM_24LC256.c: 129: ciBatchSize+1,
  7523                           ;EEPROM_24LC256.c: 130: slaveDeviceAddress,
  7524                           ;EEPROM_24LC256.c: 131: &status);
  7525  0F33  3011               	movlw	17
  7526  0F34  0020               	movlb	0	; select bank0
  7527  0F35                     L2:	
  7528  0F35  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7529  0F36  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7530  0F37  00A7               	movwf	I2C1_MasterWrite@length
  7531  0F38  084D               	movf	MYI2C_Write16EEPROMBytes@slaveDeviceAddress,w
  7532  0F39  00B3               	movwf	??_MYI2C_Write16EEPROMBytes+1
  7533  0F3A  01B4               	clrf	??_MYI2C_Write16EEPROMBytes+2
  7534  0F3B  0833               	movf	??_MYI2C_Write16EEPROMBytes+1,w
  7535  0F3C  00A8               	movwf	I2C1_MasterWrite@address
  7536  0F3D  0834               	movf	??_MYI2C_Write16EEPROMBytes+2,w
  7537  0F3E  00A9               	movwf	I2C1_MasterWrite@address+1
  7538  0F3F  3053               	movlw	(low (MYI2C_Write16EEPROMBytes@status| 0))& (0+255)
  7539  0F40  00B5               	movwf	??_MYI2C_Write16EEPROMBytes+3
  7540  0F41  0835               	movf	??_MYI2C_Write16EEPROMBytes+3,w
  7541  0F42  00AA               	movwf	I2C1_MasterWrite@pflag
  7542  0F43  3036               	movlw	(low (MYI2C_Write16EEPROMBytes@writeBuffer| 0))& (0+255)
  7543  0F44  318C  244E  318E   	fcall	_I2C1_MasterWrite
  7544  0F47                     l3186:	
  7545                           ;EEPROM_24LC256.c: 132: }
  7546                           ;EEPROM_24LC256.c: 135: while(status == I2C1_MESSAGE_PENDING);
  7547                           
  7548  0F47  3002               	movlw	2
  7549  0F48  0020               	movlb	0	; select bank0
  7550  0F49  0653               	xorwf	MYI2C_Write16EEPROMBytes@status,w
  7551  0F4A  1903               	btfsc	3,2
  7552  0F4B  2F47               	goto	l3186
  7553                           
  7554                           ;EEPROM_24LC256.c: 137: if (status == I2C1_MESSAGE_COMPLETE)
  7555  0F4C  0853               	movf	MYI2C_Write16EEPROMBytes@status,w
  7556  0F4D  1903               	btfsc	3,2
  7557  0F4E  2F59               	goto	l3202
  7558                           
  7559                           ;EEPROM_24LC256.c: 147: if (timeOut == 100)
  7560                           
  7561                           ;EEPROM_24LC256.c: 138: break;
  7562  0F4F  3064               	movlw	100
  7563  0F50  064A               	xorwf	MYI2C_Write16EEPROMBytes@timeOut,w
  7564  0F51  044B               	iorwf	MYI2C_Write16EEPROMBytes@timeOut+1,w
  7565  0F52  1903               	btfsc	3,2
  7566  0F53  2F59               	goto	l3202
  7567                           
  7568                           ;EEPROM_24LC256.c: 149: else
  7569                           ;EEPROM_24LC256.c: 150: timeOut++;
  7570                           
  7571                           ;EEPROM_24LC256.c: 148: break;
  7572  0F54  3001               	movlw	1
  7573  0F55  07CA               	addwf	MYI2C_Write16EEPROMBytes@timeOut,f
  7574  0F56  3000               	movlw	0
  7575  0F57  3DCB               	addwfc	MYI2C_Write16EEPROMBytes@timeOut+1,f
  7576  0F58  2F2A               	goto	l3200
  7577  0F59                     l3202:	
  7578                           
  7579                           ;EEPROM_24LC256.c: 151: }
  7580                           ;EEPROM_24LC256.c: 153: if (status == I2C1_MESSAGE_FAIL) { break; }
  7581  0F59  0353               	decf	MYI2C_Write16EEPROMBytes@status,w
  7582  0F5A  1903               	btfsc	3,2
  7583  0F5B  0008               	return
  7584  0F5C  3001               	movlw	1
  7585  0F5D  07CF               	addwf	MYI2C_Write16EEPROMBytes@counter,f
  7586  0F5E  3000               	movlw	0
  7587  0F5F  3DD0               	addwfc	MYI2C_Write16EEPROMBytes@counter+1,f
  7588  0F60  2EDF               	goto	l831
  7589  0F61                     __end_of_MYI2C_Write16EEPROMBytes:	
  7590                           
  7591                           	psect	text4
  7592  0C4E                     __ptext4:	
  7593 ;; *************** function _I2C1_MasterWrite *****************
  7594 ;; Defined at:
  7595 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  pdata           1    wreg     PTR unsigned char 
  7598 ;;		 -> MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), MYI2C_WriteFaders@writeBuffer(9),
      + 
  7599 ;;  length          1    7[BANK0 ] unsigned char 
  7600 ;;  address         2    8[BANK0 ] unsigned int 
  7601 ;;  pflag           1   10[BANK0 ] PTR enum E14260
  7602 ;;		 -> MYI2C_Write16EEPROMBytes@status(1), MYI2C_Write2LEDBytes@status(1), MYI2C_WriteFaders@status(1), 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  7605 ;;		 -> MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), MYI2C_WriteFaders@writeBuffer(9),
      + 
  7606 ;; Return value:  Size  Location     Type
  7607 ;;                  1    wreg      void 
  7608 ;; Registers used:
  7609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7610 ;; Tracked objects:
  7611 ;;		On entry : 0/0
  7612 ;;		On exit  : 0/0
  7613 ;;		Unchanged: 0/0
  7614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7615 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7618 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;Total ram usage:        7 bytes
  7620 ;; Hardware stack levels used:    1
  7621 ;; Hardware stack levels required when called:    4
  7622 ;; This function calls:
  7623 ;;		_I2C1_MasterTRBInsert
  7624 ;;		_I2C1_MasterWriteTRBBuild
  7625 ;; This function is called by:
  7626 ;;		_MYI2C_Write16EEPROMBytes
  7627 ;;		_MYI2C_WriteFaders
  7628 ;;		_MYI2C_Write2LEDBytes
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           
  7633                           ;psect for function _I2C1_MasterWrite
  7634  0C4E                     _I2C1_MasterWrite:	
  7635                           
  7636                           ;incstack = 0
  7637                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7638                           ;I2C1_MasterWrite@pdata stored from wreg
  7639  0C4E  0020               	movlb	0	; select bank0
  7640  0C4F  00AD               	movwf	I2C1_MasterWrite@pdata
  7641                           
  7642                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  7643                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  7644  0C50  1869               	btfsc	_i2c1_object+2,0
  7645  0C51  2C6F               	goto	l2948
  7646                           
  7647                           ;i2c1.c: 608: {
  7648                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  7649  0C52  082D               	movf	I2C1_MasterWrite@pdata,w
  7650  0C53  00AB               	movwf	??_I2C1_MasterWrite
  7651  0C54  082B               	movf	??_I2C1_MasterWrite,w
  7652  0C55  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  7653  0C56  0827               	movf	I2C1_MasterWrite@length,w
  7654  0C57  00AC               	movwf	??_I2C1_MasterWrite+1
  7655  0C58  082C               	movf	??_I2C1_MasterWrite+1,w
  7656  0C59  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  7657  0C5A  0829               	movf	I2C1_MasterWrite@address+1,w
  7658  0C5B  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  7659  0C5C  0828               	movf	I2C1_MasterWrite@address,w
  7660  0C5D  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  7661  0C5E  30D1               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  7662  0C5F  318B  23E7  318C   	fcall	_I2C1_MasterWriteTRBBuild
  7663                           
  7664                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  7665  0C62  30D1               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  7666  0C63  0020               	movlb	0	; select bank0
  7667  0C64  00AB               	movwf	??_I2C1_MasterWrite
  7668  0C65  082B               	movf	??_I2C1_MasterWrite,w
  7669  0C66  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  7670  0C67  082A               	movf	I2C1_MasterWrite@pflag,w
  7671  0C68  00AC               	movwf	??_I2C1_MasterWrite+1
  7672  0C69  082C               	movf	??_I2C1_MasterWrite+1,w
  7673  0C6A  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  7674  0C6B  3001               	movlw	1
  7675  0C6C  318D  252E         	fcall	_I2C1_MasterTRBInsert
  7676                           
  7677                           ;i2c1.c: 611: }
  7678  0C6E  0008               	return
  7679  0C6F                     l2948:	
  7680                           
  7681                           ;i2c1.c: 612: else
  7682                           ;i2c1.c: 613: {
  7683                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  7684  0C6F  0020               	movlb	0	; select bank0
  7685  0C70  082A               	movf	I2C1_MasterWrite@pflag,w
  7686  0C71  0086               	movwf	6
  7687  0C72  0187               	clrf	7
  7688  0C73  0181               	clrf	1
  7689  0C74  0A81               	incf	1,f
  7690  0C75  0008               	return
  7691  0C76                     __end_of_I2C1_MasterWrite:	
  7692                           
  7693                           	psect	text5
  7694  0BE7                     __ptext5:	
  7695 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  7696 ;; Defined at:
  7697 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  ptrb            1    wreg     PTR struct .
  7700 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  7701 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  7702 ;;		 -> MYI2C_ReadPatch@pointerByte(1), MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), M
      +YI2C_WriteFaders@writeBuffer(9), 
  7703 ;;		 -> MYI2C_ReadFaders@pointerByte(1), 
  7704 ;;  length          1    1[BANK0 ] unsigned char 
  7705 ;;  address         2    2[BANK0 ] unsigned int 
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;  ptrb            1    6[BANK0 ] PTR struct .
  7708 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  1    wreg      void 
  7711 ;; Registers used:
  7712 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        7 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:    3
  7725 ;; This function calls:
  7726 ;;		Nothing
  7727 ;; This function is called by:
  7728 ;;		_I2C1_MasterWrite
  7729 ;;		_MYI2C_ReadFaders
  7730 ;;		_MYI2C_ReadPatch
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           
  7735                           ;psect for function _I2C1_MasterWriteTRBBuild
  7736  0BE7                     _I2C1_MasterWriteTRBBuild:	
  7737                           
  7738                           ;incstack = 0
  7739                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  7740                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  7741  0BE7  0020               	movlb	0	; select bank0
  7742  0BE8  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  7743                           
  7744                           ;i2c1.c: 713: ptrb->address = address << 1;
  7745  0BE9  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  7746  0BEA  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  7747  0BEB  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  7748  0BEC  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  7749  0BED  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  7750  0BEE  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  7751  0BEF  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  7752  0BF0  0086               	movwf	6
  7753  0BF1  0187               	clrf	7
  7754  0BF2  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  7755  0BF3  3FC0               	movwi [0]fsr1
  7756  0BF4  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  7757  0BF5  3FC1               	movwi [1]fsr1
  7758                           
  7759                           ;i2c1.c: 714: ptrb->length = length;
  7760  0BF6  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  7761  0BF7  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  7762  0BF8  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  7763  0BF9  3E02               	addlw	2
  7764  0BFA  0086               	movwf	6
  7765  0BFB  0187               	clrf	7
  7766  0BFC  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  7767  0BFD  0081               	movwf	1
  7768                           
  7769                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  7770  0BFE  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  7771  0BFF  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  7772  0C00  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  7773  0C01  3E03               	addlw	3
  7774  0C02  0086               	movwf	6
  7775  0C03  0187               	clrf	7
  7776  0C04  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  7777  0C05  0081               	movwf	1
  7778  0C06  0008               	return
  7779  0C07                     __end_of_I2C1_MasterWriteTRBBuild:	
  7780                           
  7781                           	psect	text6
  7782  0D2E                     __ptext6:	
  7783 ;; *************** function _I2C1_MasterTRBInsert *****************
  7784 ;; Defined at:
  7785 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;  count           1    wreg     unsigned char 
  7788 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  7789 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4)
      +, 
  7790 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  7791 ;;		 -> MYI2C_ReadPatch@status(1), MYI2C_Write16EEPROMBytes@status(1), MYI2C_Write2LEDBytes@status(1), MYI2C_WriteFaders
      +@status(1), 
  7792 ;;		 -> MYI2C_ReadFaders@status(1), 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  count           1    3[BANK0 ] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7808 ;;Total ram usage:        4 bytes
  7809 ;; Hardware stack levels used:    1
  7810 ;; Hardware stack levels required when called:    3
  7811 ;; This function calls:
  7812 ;;		Nothing
  7813 ;; This function is called by:
  7814 ;;		_I2C1_MasterWrite
  7815 ;;		_I2C1_MasterRead
  7816 ;;		_MYI2C_ReadFaders
  7817 ;;		_MYI2C_ReadPatch
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           
  7822                           ;psect for function _I2C1_MasterTRBInsert
  7823  0D2E                     _I2C1_MasterTRBInsert:	
  7824                           
  7825                           ;incstack = 0
  7826                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  7827                           ;I2C1_MasterTRBInsert@count stored from wreg
  7828  0D2E  0020               	movlb	0	; select bank0
  7829  0D2F  00A3               	movwf	I2C1_MasterTRBInsert@count
  7830                           
  7831                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  7832  0D30  1869               	btfsc	_i2c1_object+2,0
  7833  0D31  2D62               	goto	l2822
  7834                           
  7835                           ;i2c1.c: 649: {
  7836                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  7837  0D32  3002               	movlw	2
  7838  0D33  00A2               	movwf	??_I2C1_MasterTRBInsert
  7839  0D34  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7840  0D35  0086               	movwf	6
  7841  0D36  0187               	clrf	7
  7842  0D37  0822               	movf	??_I2C1_MasterTRBInsert,w
  7843  0D38  0081               	movwf	1
  7844                           
  7845                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  7846  0D39  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  7847  0D3A  00A2               	movwf	??_I2C1_MasterTRBInsert
  7848  0D3B  0A67               	incf	_i2c1_object,w
  7849  0D3C  0086               	movwf	6
  7850  0D3D  0187               	clrf	7
  7851  0D3E  0822               	movf	??_I2C1_MasterTRBInsert,w
  7852  0D3F  0081               	movwf	1
  7853                           
  7854                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  7855  0D40  0823               	movf	I2C1_MasterTRBInsert@count,w
  7856  0D41  00A2               	movwf	??_I2C1_MasterTRBInsert
  7857  0D42  0867               	movf	_i2c1_object,w
  7858  0D43  0086               	movwf	6
  7859  0D44  0187               	clrf	7
  7860  0D45  0822               	movf	??_I2C1_MasterTRBInsert,w
  7861  0D46  0081               	movwf	1
  7862                           
  7863                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  7864  0D47  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7865  0D48  00A2               	movwf	??_I2C1_MasterTRBInsert
  7866  0D49  0867               	movf	_i2c1_object,w
  7867  0D4A  3E02               	addlw	2
  7868  0D4B  0086               	movwf	6
  7869  0D4C  0187               	clrf	7
  7870  0D4D  0822               	movf	??_I2C1_MasterTRBInsert,w
  7871  0D4E  0081               	movwf	1
  7872                           
  7873                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  7874  0D4F  3003               	movlw	3
  7875  0D50  00A2               	movwf	??_I2C1_MasterTRBInsert
  7876  0D51  0822               	movf	??_I2C1_MasterTRBInsert,w
  7877  0D52  07E7               	addwf	_i2c1_object,f
  7878                           
  7879                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  7880  0D53  0867               	movf	_i2c1_object,w
  7881  0D54  3AD8               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  7882  0D55  1D03               	skipz
  7883  0D56  2D5B               	goto	l2818
  7884                           
  7885                           ;i2c1.c: 659: {
  7886                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  7887  0D57  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7888  0D58  00A2               	movwf	??_I2C1_MasterTRBInsert
  7889  0D59  0822               	movf	??_I2C1_MasterTRBInsert,w
  7890  0D5A  00E7               	movwf	_i2c1_object
  7891  0D5B                     l2818:	
  7892                           
  7893                           ;i2c1.c: 662: }
  7894                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  7895  0D5B  10E9               	bcf	_i2c1_object+2,1
  7896                           
  7897                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  7898  0D5C  0868               	movf	low ((_i2c1_object| 0+1)),w
  7899  0D5D  0667               	xorwf	_i2c1_object,w
  7900  0D5E  1D03               	skipz
  7901  0D5F  2D67               	goto	l2824
  7902                           
  7903                           ;i2c1.c: 670: {
  7904                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  7905  0D60  1469               	bsf	_i2c1_object+2,0
  7906                           
  7907                           ;i2c1.c: 673: }
  7908                           ;i2c1.c: 675: }
  7909  0D61  2D67               	goto	l2824
  7910  0D62                     l2822:	
  7911                           
  7912                           ;i2c1.c: 676: else
  7913                           ;i2c1.c: 677: {
  7914                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  7915  0D62  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7916  0D63  0086               	movwf	6
  7917  0D64  0187               	clrf	7
  7918  0D65  0181               	clrf	1
  7919  0D66  0A81               	incf	1,f
  7920  0D67                     l2824:	
  7921                           
  7922                           ;i2c1.c: 679: }
  7923                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  7924  0D67  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7925  0D68  0086               	movwf	6
  7926  0D69  0187               	clrf	7
  7927  0D6A  3002               	movlw	2
  7928  0D6B  0601               	xorwf	1,w
  7929  0D6C  1D03               	btfss	3,2
  7930  0D6D  0008               	return
  7931  0D6E                     l2828:	
  7932                           ;i2c1.c: 683: {
  7933                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
  7934                           
  7935  0D6E  086F               	movf	_i2c1_state,w
  7936  0D6F  1D03               	btfss	3,2
  7937  0D70  2D6E               	goto	l2828
  7938                           
  7939                           ;i2c1.c: 685: {
  7940                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
  7941  0D71  002E               	movlb	14	; select bank14
  7942  0D72  140F               	bsf	15,0	;volatile
  7943  0D73  0008               	return
  7944  0D74                     __end_of_I2C1_MasterTRBInsert:	
  7945                           
  7946                           	psect	text7
  7947  0CEE                     __ptext7:	
  7948 ;; *************** function _loadPatch *****************
  7949 ;; Defined at:
  7950 ;;		line 851 in file "main.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  PatchNumber     2   58[BANK0 ] int 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  i               2   64[BANK0 ] int 
  7955 ;;  iPatchAddres    2   62[BANK0 ] int 
  7956 ;;  idx             2    0        int 
  7957 ;;  pData           2    0        PTR unsigned char 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7967 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7971 ;;Total ram usage:        8 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    7
  7974 ;; This function calls:
  7975 ;;		_updateModelFromPatchMemory
  7976 ;;		_writeDAC528
  7977 ;; This function is called by:
  7978 ;;		_main
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function _loadPatch
  7984  0CEE                     _loadPatch:	
  7985                           
  7986                           ;main.c: 852: int iPatchAddress=PatchNumber*cPatchSize;
  7987                           
  7988                           ;incstack = 0
  7989                           ; Regs used in _loadPatch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7990  0CEE  0020               	movlb	0	; select bank0
  7991  0CEF  085B               	movf	loadPatch@PatchNumber+1,w
  7992  0CF0  00DD               	movwf	??_loadPatch+1
  7993  0CF1  085A               	movf	loadPatch@PatchNumber,w
  7994  0CF2  00DC               	movwf	??_loadPatch
  7995  0CF3  3007               	movlw	7
  7996  0CF4                     u2995:	
  7997  0CF4  35DC               	lslf	??_loadPatch,f
  7998  0CF5  0DDD               	rlf	??_loadPatch+1,f
  7999  0CF6  0B89               	decfsz	9,f
  8000  0CF7  2CF4               	goto	u2995
  8001  0CF8  085C               	movf	??_loadPatch,w
  8002  0CF9  00DE               	movwf	loadPatch@iPatchAddress
  8003  0CFA  085D               	movf	??_loadPatch+1,w
  8004  0CFB  00DF               	movwf	loadPatch@iPatchAddress+1
  8005                           
  8006                           ;main.c: 855: uint8_t *pData;
  8007                           ;main.c: 856: int idx;
  8008                           ;main.c: 869: updateModelFromPatchMemory(mvcChannels,dualADSRdata0,dualADSRdata1);
  8009  0CFC  303C               	movlw	(low (_dualADSRdata0| (0+256)))& (0+255)
  8010  0CFD  00DC               	movwf	??_loadPatch
  8011  0CFE  085C               	movf	??_loadPatch,w
  8012  0CFF  00A0               	movwf	updateModelFromPatchMemory@dualADSRdata0
  8013  0D00  3034               	movlw	(low (_dualADSRdata1| (0+256)))& (0+255)
  8014  0D01  00DD               	movwf	??_loadPatch+1
  8015  0D02  085D               	movf	??_loadPatch+1,w
  8016  0D03  00A1               	movwf	updateModelFromPatchMemory@dualADSRdata1
  8017  0D04  30C9               	movlw	(low (_mvcChannels| 0))& (0+255)
  8018  0D05  318F  2761  318C   	fcall	_updateModelFromPatchMemory
  8019                           
  8020                           ;main.c: 872: for(int i=0;i<cMixFaderCount;i++){
  8021  0D08  0020               	movlb	0	; select bank0
  8022  0D09  01E0               	clrf	loadPatch@i
  8023  0D0A  01E1               	clrf	loadPatch@i+1
  8024  0D0B                     L3:	
  8025  0D0B  0861               	movf	loadPatch@i+1,w
  8026  0D0C  3A80               	xorlw	128
  8027  0D0D  00DC               	movwf	??_loadPatch
  8028  0D0E  3080               	movlw	128
  8029  0D0F  025C               	subwf	??_loadPatch,w
  8030  0D10  1D03               	skipz
  8031  0D11  2D14               	goto	u3005
  8032  0D12  3004               	movlw	4
  8033  0D13  0260               	subwf	loadPatch@i,w
  8034  0D14                     u3005:	
  8035  0D14  1803               	btfsc	3,0
  8036  0D15  0008               	return
  8037                           
  8038                           ;main.c: 873: writeDAC528(i+4,mvcChannels[i]);
  8039  0D16  0020               	movlb	0	; select bank0
  8040  0D17  0860               	movf	loadPatch@i,w
  8041  0D18  3E04               	addlw	4
  8042  0D19  00D5               	movwf	writeDAC528@dacNumber
  8043  0D1A  3000               	movlw	0
  8044  0D1B  3D61               	addwfc	loadPatch@i+1,w
  8045  0D1C  00D6               	movwf	writeDAC528@dacNumber+1
  8046  0D1D  0860               	movf	loadPatch@i,w
  8047  0D1E  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  8048  0D1F  0086               	movwf	6
  8049  0D20  0187               	clrf	7
  8050  0D21  0801               	movf	1,w
  8051  0D22  00DC               	movwf	??_loadPatch
  8052  0D23  085C               	movf	??_loadPatch,w
  8053  0D24  00D7               	movwf	writeDAC528@dacData
  8054  0D25  318C  2429  318C   	fcall	_writeDAC528
  8055  0D28  3001               	movlw	1
  8056  0D29  0020               	movlb	0	; select bank0
  8057  0D2A  07E0               	addwf	loadPatch@i,f
  8058  0D2B  3000               	movlw	0
  8059  0D2C  3DE1               	addwfc	loadPatch@i+1,f
  8060  0D2D  2D0B               	goto	L3
  8061  0D2E                     __end_of_loadPatch:	
  8062                           
  8063                           	psect	text8
  8064  0C29                     __ptext8:	
  8065 ;; *************** function _writeDAC528 *****************
  8066 ;; Defined at:
  8067 ;;		line 57 in file "VCAMIX_SPI_Master.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  dacNumber       2   53[BANK0 ] int 
  8070 ;;  dacData         1   55[BANK0 ] unsigned char 
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;  wkDacNumber     1   57[BANK0 ] unsigned char 
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8082 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8085 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;Total ram usage:        5 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    6
  8089 ;; This function calls:
  8090 ;;		_putByte
  8091 ;; This function is called by:
  8092 ;;		_main
  8093 ;;		_loadPatch
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           
  8098                           ;psect for function _writeDAC528
  8099  0C29                     _writeDAC528:	
  8100                           
  8101                           ;VCAMIX_SPI_Master.c: 58: uint8_t wkDacNumber=0;
  8102                           
  8103                           ;incstack = 0
  8104                           ; Regs used in _writeDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8105  0C29  0020               	movlb	0	; select bank0
  8106  0C2A  01D9               	clrf	writeDAC528@wkDacNumber
  8107                           
  8108                           ;VCAMIX_SPI_Master.c: 59: wkDacNumber=cPowerOfTwo[dacNumber];
  8109  0C2B  0856               	movf	writeDAC528@dacNumber+1,w
  8110  0C2C  0085               	movwf	5
  8111  0C2D  0855               	movf	writeDAC528@dacNumber,w
  8112  0C2E  0084               	movwf	4
  8113  0C2F  3584               	lslf	4,f
  8114  0C30  0D85               	rlf	5,f
  8115  0C31  3000               	movlw	low (_cPowerOfTwo| (0+32768))
  8116  0C32  0784               	addwf	4,f
  8117  0C33  3090               	movlw	high (_cPowerOfTwo| (0+32768))
  8118  0C34  3D85               	addwfc	5,f
  8119  0C35  0800               	movf	0,w	;code access
  8120  0C36  00D8               	movwf	??_writeDAC528
  8121  0C37  0858               	movf	??_writeDAC528,w
  8122  0C38  00D9               	movwf	writeDAC528@wkDacNumber
  8123                           
  8124                           ;VCAMIX_SPI_Master.c: 61: LATA &= 0x7F ;
  8125  0C39  307F               	movlw	127
  8126  0C3A  00D8               	movwf	??_writeDAC528
  8127  0C3B  0858               	movf	??_writeDAC528,w
  8128  0C3C  0596               	andwf	22,f	;volatile
  8129                           
  8130                           ;VCAMIX_SPI_Master.c: 63: putByte(wkDacNumber,0);
  8131  0C3D  3000               	movlw	0
  8132  0C3E  00CC               	movwf	putByte@clockPin
  8133  0C3F  00CD               	movwf	putByte@clockPin+1
  8134  0C40  0859               	movf	writeDAC528@wkDacNumber,w
  8135  0C41  3185  2579  318C   	fcall	_putByte
  8136                           
  8137                           ;VCAMIX_SPI_Master.c: 65: putByte(dacData,0);
  8138  0C44  3000               	movlw	0
  8139  0C45  0020               	movlb	0	; select bank0
  8140  0C46  00CC               	movwf	putByte@clockPin
  8141  0C47  00CD               	movwf	putByte@clockPin+1
  8142  0C48  0857               	movf	writeDAC528@dacData,w
  8143  0C49  3185  2579         	fcall	_putByte
  8144                           
  8145                           ;VCAMIX_SPI_Master.c: 67: LATA |= 0x80 ;
  8146  0C4B  0020               	movlb	0	; select bank0
  8147  0C4C  1796               	bsf	22,7	;volatile
  8148  0C4D  0008               	return
  8149  0C4E                     __end_of_writeDAC528:	
  8150                           
  8151                           	psect	text9
  8152  0F61                     __ptext9:	
  8153 ;; *************** function _updateModelFromPatchMemory *****************
  8154 ;; Defined at:
  8155 ;;		line 39 in file "EEPROM_24LC256.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  mvcChannels     1    wreg     PTR unsigned char 
  8158 ;;		 -> mvcChannels(4), 
  8159 ;;  dualADSRdata    1    0[BANK0 ] PTR unsigned char 
  8160 ;;		 -> dualADSRdata0(8), 
  8161 ;;  dualADSRdata    1    1[BANK0 ] PTR unsigned char 
  8162 ;;		 -> dualADSRdata1(8), 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;  mvcChannels     1    6[BANK0 ] PTR unsigned char 
  8165 ;;		 -> mvcChannels(4), 
  8166 ;;  i               2    9[BANK0 ] int 
  8167 ;;  i               2    7[BANK0 ] int 
  8168 ;;  i               2   13[BANK0 ] int 
  8169 ;;  iPatchMemory    2   11[BANK0 ] int 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      void 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8180 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;Total ram usage:       15 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    3
  8186 ;; This function calls:
  8187 ;;		Nothing
  8188 ;; This function is called by:
  8189 ;;		_loadPatch
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           
  8194                           ;psect for function _updateModelFromPatchMemory
  8195  0F61                     _updateModelFromPatchMemory:	
  8196                           
  8197                           ;incstack = 0
  8198                           ; Regs used in _updateModelFromPatchMemory: [wreg+fsr1l+fsr1h+status,2+status,0]
  8199                           ;updateModelFromPatchMemory@mvcChannels stored from wreg
  8200  0F61  0020               	movlb	0	; select bank0
  8201  0F62  00A6               	movwf	updateModelFromPatchMemory@mvcChannels
  8202                           
  8203                           ;EEPROM_24LC256.c: 40: int iPatchMemoryNDX=0;
  8204  0F63  01AB               	clrf	updateModelFromPatchMemory@iPatchMemoryNDX
  8205  0F64  01AC               	clrf	updateModelFromPatchMemory@iPatchMemoryNDX+1
  8206                           
  8207                           ;EEPROM_24LC256.c: 41: for(int i=0; i<cMixFaderCount;i++) {
  8208  0F65  01AD               	clrf	updateModelFromPatchMemory@i
  8209  0F66  01AE               	clrf	updateModelFromPatchMemory@i+1
  8210  0F67  082E               	movf	updateModelFromPatchMemory@i+1,w
  8211  0F68  3A80               	xorlw	128
  8212  0F69  00A2               	movwf	??_updateModelFromPatchMemory
  8213  0F6A  3080               	movlw	128
  8214  0F6B  0222               	subwf	??_updateModelFromPatchMemory,w
  8215  0F6C  1D03               	skipz
  8216  0F6D  2F70               	goto	u2665
  8217  0F6E  3004               	movlw	4
  8218  0F6F  022D               	subwf	updateModelFromPatchMemory@i,w
  8219  0F70                     u2665:	
  8220  0F70  1803               	btfsc	3,0
  8221  0F71  2F9F               	goto	l3220
  8222  0F72                     l3214:	
  8223                           
  8224                           ;EEPROM_24LC256.c: 42: mvcChannels[i]=aPatchMemory[iPatchMemoryNDX++];
  8225  0F72  3070               	movlw	112
  8226  0F73  0020               	movlb	0	; select bank0
  8227  0F74  00A2               	movwf	??_updateModelFromPatchMemory
  8228  0F75  3023               	movlw	35
  8229  0F76  00A3               	movwf	??_updateModelFromPatchMemory+1
  8230  0F77  082B               	movf	updateModelFromPatchMemory@iPatchMemoryNDX,w
  8231  0F78  0722               	addwf	??_updateModelFromPatchMemory,w
  8232  0F79  0086               	movwf	6
  8233  0F7A  082C               	movf	updateModelFromPatchMemory@iPatchMemoryNDX+1,w
  8234  0F7B  3D23               	addwfc	??_updateModelFromPatchMemory+1,w
  8235  0F7C  0087               	movwf	7
  8236  0F7D  0801               	movf	1,w
  8237  0F7E  00A4               	movwf	??_updateModelFromPatchMemory+2
  8238  0F7F  082D               	movf	updateModelFromPatchMemory@i,w
  8239  0F80  0726               	addwf	updateModelFromPatchMemory@mvcChannels,w
  8240  0F81  00A5               	movwf	??_updateModelFromPatchMemory+3
  8241  0F82  0825               	movf	??_updateModelFromPatchMemory+3,w
  8242  0F83  0086               	movwf	6
  8243  0F84  0187               	clrf	7
  8244  0F85  0824               	movf	??_updateModelFromPatchMemory+2,w
  8245  0F86  0081               	movwf	1
  8246  0F87  3001               	movlw	1
  8247  0F88  07AB               	addwf	updateModelFromPatchMemory@iPatchMemoryNDX,f
  8248  0F89  3000               	movlw	0
  8249  0F8A  3DAC               	addwfc	updateModelFromPatchMemory@iPatchMemoryNDX+1,f
  8250                           
  8251                           ;EEPROM_24LC256.c: 43: faderActiveFlag[i]=0;
  8252  0F8B  082D               	movf	updateModelFromPatchMemory@i,w
  8253  0F8C  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
  8254  0F8D  0086               	movwf	6
  8255  0F8E  0187               	clrf	7
  8256  0F8F  0181               	clrf	1
  8257  0F90  3001               	movlw	1
  8258  0F91  07AD               	addwf	updateModelFromPatchMemory@i,f
  8259  0F92  3000               	movlw	0
  8260  0F93  3DAE               	addwfc	updateModelFromPatchMemory@i+1,f
  8261  0F94  082E               	movf	updateModelFromPatchMemory@i+1,w
  8262  0F95  3A80               	xorlw	128
  8263  0F96  00A2               	movwf	??_updateModelFromPatchMemory
  8264  0F97  3080               	movlw	128
  8265  0F98  0222               	subwf	??_updateModelFromPatchMemory,w
  8266  0F99  1D03               	skipz
  8267  0F9A  2F9D               	goto	u2675
  8268  0F9B  3004               	movlw	4
  8269  0F9C  022D               	subwf	updateModelFromPatchMemory@i,w
  8270  0F9D                     u2675:	
  8271  0F9D  1C03               	skipc
  8272  0F9E  2F72               	goto	l3214
  8273  0F9F                     l3220:	
  8274                           
  8275                           ;EEPROM_24LC256.c: 44: }
  8276                           ;EEPROM_24LC256.c: 45: for(int i=0; i<cADSRdataBytes;i++) {
  8277  0F9F  0020               	movlb	0	; select bank0
  8278  0FA0  01A7               	clrf	updateModelFromPatchMemory@i_1221
  8279  0FA1  01A8               	clrf	updateModelFromPatchMemory@i_1221+1
  8280  0FA2  0828               	movf	updateModelFromPatchMemory@i_1221+1,w
  8281  0FA3  3A80               	xorlw	128
  8282  0FA4  00A2               	movwf	??_updateModelFromPatchMemory
  8283  0FA5  3080               	movlw	128
  8284  0FA6  0222               	subwf	??_updateModelFromPatchMemory,w
  8285  0FA7  3008               	movlw	8
  8286  0FA8  1903               	btfsc	3,2
  8287  0FA9  0227               	subwf	updateModelFromPatchMemory@i_1221,w
  8288  0FAA  1803               	btfsc	3,0
  8289  0FAB  2FD4               	goto	l3234
  8290  0FAC                     l3226:	
  8291                           
  8292                           ;EEPROM_24LC256.c: 46: dualADSRdata0[i]=aPatchMemory[iPatchMemoryNDX++];
  8293  0FAC  3070               	movlw	112
  8294  0FAD  0020               	movlb	0	; select bank0
  8295  0FAE  00A2               	movwf	??_updateModelFromPatchMemory
  8296  0FAF  3023               	movlw	35
  8297  0FB0  00A3               	movwf	??_updateModelFromPatchMemory+1
  8298  0FB1  082B               	movf	updateModelFromPatchMemory@iPatchMemoryNDX,w
  8299  0FB2  0722               	addwf	??_updateModelFromPatchMemory,w
  8300  0FB3  0086               	movwf	6
  8301  0FB4  082C               	movf	updateModelFromPatchMemory@iPatchMemoryNDX+1,w
  8302  0FB5  3D23               	addwfc	??_updateModelFromPatchMemory+1,w
  8303  0FB6  0087               	movwf	7
  8304  0FB7  0801               	movf	1,w
  8305  0FB8  00A4               	movwf	??_updateModelFromPatchMemory+2
  8306  0FB9  0827               	movf	updateModelFromPatchMemory@i_1221,w
  8307  0FBA  0720               	addwf	updateModelFromPatchMemory@dualADSRdata0,w
  8308  0FBB  00A5               	movwf	??_updateModelFromPatchMemory+3
  8309  0FBC  0825               	movf	??_updateModelFromPatchMemory+3,w
  8310  0FBD  0086               	movwf	6
  8311  0FBE  3001               	movlw	1	; select bank2/3
  8312  0FBF  0087               	movwf	7
  8313  0FC0  0824               	movf	??_updateModelFromPatchMemory+2,w
  8314  0FC1  0081               	movwf	1
  8315  0FC2  3001               	movlw	1
  8316  0FC3  07AB               	addwf	updateModelFromPatchMemory@iPatchMemoryNDX,f
  8317  0FC4  3000               	movlw	0
  8318  0FC5  3DAC               	addwfc	updateModelFromPatchMemory@iPatchMemoryNDX+1,f
  8319  0FC6  3001               	movlw	1
  8320  0FC7  07A7               	addwf	updateModelFromPatchMemory@i_1221,f
  8321  0FC8  3000               	movlw	0
  8322  0FC9  3DA8               	addwfc	updateModelFromPatchMemory@i_1221+1,f
  8323  0FCA  0828               	movf	updateModelFromPatchMemory@i_1221+1,w
  8324  0FCB  3A80               	xorlw	128
  8325  0FCC  00A2               	movwf	??_updateModelFromPatchMemory
  8326  0FCD  3080               	movlw	128
  8327  0FCE  0222               	subwf	??_updateModelFromPatchMemory,w
  8328  0FCF  3008               	movlw	8
  8329  0FD0  1903               	btfsc	3,2
  8330  0FD1  0227               	subwf	updateModelFromPatchMemory@i_1221,w
  8331  0FD2  1C03               	skipc
  8332  0FD3  2FAC               	goto	l3226
  8333  0FD4                     l3234:	
  8334                           
  8335                           ;EEPROM_24LC256.c: 47: }
  8336                           ;EEPROM_24LC256.c: 48: for(int i=0; i<cADSRdataBytes;i++) {
  8337  0FD4  0020               	movlb	0	; select bank0
  8338  0FD5  01A9               	clrf	updateModelFromPatchMemory@i_1222
  8339  0FD6  01AA               	clrf	updateModelFromPatchMemory@i_1222+1
  8340  0FD7                     L4:	
  8341  0FD7  082A               	movf	updateModelFromPatchMemory@i_1222+1,w
  8342  0FD8  3A80               	xorlw	128
  8343  0FD9  00A2               	movwf	??_updateModelFromPatchMemory
  8344  0FDA  3080               	movlw	128
  8345  0FDB  0222               	subwf	??_updateModelFromPatchMemory,w
  8346  0FDC  3008               	movlw	8
  8347  0FDD  1903               	btfsc	3,2
  8348  0FDE  0229               	subwf	updateModelFromPatchMemory@i_1222,w
  8349  0FDF  1803               	btfsc	3,0
  8350  0FE0  0008               	return
  8351                           
  8352                           ;EEPROM_24LC256.c: 49: dualADSRdata1[i]=aPatchMemory[iPatchMemoryNDX++];
  8353  0FE1  3070               	movlw	112
  8354  0FE2  0020               	movlb	0	; select bank0
  8355  0FE3  00A2               	movwf	??_updateModelFromPatchMemory
  8356  0FE4  3023               	movlw	35
  8357  0FE5  00A3               	movwf	??_updateModelFromPatchMemory+1
  8358  0FE6  082B               	movf	updateModelFromPatchMemory@iPatchMemoryNDX,w
  8359  0FE7  0722               	addwf	??_updateModelFromPatchMemory,w
  8360  0FE8  0086               	movwf	6
  8361  0FE9  082C               	movf	updateModelFromPatchMemory@iPatchMemoryNDX+1,w
  8362  0FEA  3D23               	addwfc	??_updateModelFromPatchMemory+1,w
  8363  0FEB  0087               	movwf	7
  8364  0FEC  0801               	movf	1,w
  8365  0FED  00A4               	movwf	??_updateModelFromPatchMemory+2
  8366  0FEE  0829               	movf	updateModelFromPatchMemory@i_1222,w
  8367  0FEF  0721               	addwf	updateModelFromPatchMemory@dualADSRdata1,w
  8368  0FF0  00A5               	movwf	??_updateModelFromPatchMemory+3
  8369  0FF1  0825               	movf	??_updateModelFromPatchMemory+3,w
  8370  0FF2  0086               	movwf	6
  8371  0FF3  3001               	movlw	1	; select bank2/3
  8372  0FF4  0087               	movwf	7
  8373  0FF5  0824               	movf	??_updateModelFromPatchMemory+2,w
  8374  0FF6  0081               	movwf	1
  8375  0FF7  3001               	movlw	1
  8376  0FF8  07AB               	addwf	updateModelFromPatchMemory@iPatchMemoryNDX,f
  8377  0FF9  3000               	movlw	0
  8378  0FFA  3DAC               	addwfc	updateModelFromPatchMemory@iPatchMemoryNDX+1,f
  8379  0FFB  3001               	movlw	1
  8380  0FFC  07A9               	addwf	updateModelFromPatchMemory@i_1222,f
  8381  0FFD  3000               	movlw	0
  8382  0FFE  3DAA               	addwfc	updateModelFromPatchMemory@i_1222+1,f
  8383  0FFF  2FD7               	goto	L4
  8384  1000                     __end_of_updateModelFromPatchMemory:	
  8385                           
  8386                           	psect	text10
  8387  0B18                     __ptext10:	
  8388 ;; *************** function _initDAC528 *****************
  8389 ;; Defined at:
  8390 ;;		line 44 in file "VCAMIX_SPI_Master.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;		None
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;		None
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;Total ram usage:        1 bytes
  8409 ;; Hardware stack levels used:    1
  8410 ;; Hardware stack levels required when called:    6
  8411 ;; This function calls:
  8412 ;;		_putByte
  8413 ;; This function is called by:
  8414 ;;		_main
  8415 ;; This function uses a non-reentrant model
  8416 ;;
  8417                           
  8418                           
  8419                           ;psect for function _initDAC528
  8420  0B18                     _initDAC528:	
  8421                           
  8422                           ;VCAMIX_SPI_Master.c: 48: LATA &= 0x7F ;
  8423                           
  8424                           ;incstack = 0
  8425                           ; Regs used in _initDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8426  0B18  307F               	movlw	127
  8427  0B19  0020               	movlb	0	; select bank0
  8428  0B1A  00D5               	movwf	??_initDAC528
  8429  0B1B  0855               	movf	??_initDAC528,w
  8430  0B1C  0596               	andwf	22,f	;volatile
  8431                           
  8432                           ;VCAMIX_SPI_Master.c: 50: putByte(0x00,0);
  8433  0B1D  3000               	movlw	0
  8434  0B1E  00CC               	movwf	putByte@clockPin
  8435  0B1F  00CD               	movwf	putByte@clockPin+1
  8436  0B20  3000               	movlw	0
  8437  0B21  3185  2579  318B   	fcall	_putByte
  8438                           
  8439                           ;VCAMIX_SPI_Master.c: 52: putByte(0xFF,0);
  8440  0B24  3000               	movlw	0
  8441  0B25  0020               	movlb	0	; select bank0
  8442  0B26  00CC               	movwf	putByte@clockPin
  8443  0B27  00CD               	movwf	putByte@clockPin+1
  8444  0B28  30FF               	movlw	255
  8445  0B29  3185  2579         	fcall	_putByte
  8446                           
  8447                           ;VCAMIX_SPI_Master.c: 54: LATA |= 0x80 ;
  8448  0B2B  0020               	movlb	0	; select bank0
  8449  0B2C  1796               	bsf	22,7	;volatile
  8450  0B2D  0008               	return
  8451  0B2E                     __end_of_initDAC528:	
  8452                           
  8453                           	psect	text11
  8454  0579                     __ptext11:	
  8455 ;; *************** function _putByte *****************
  8456 ;; Defined at:
  8457 ;;		line 14 in file "VCAMIX_SPI_Master.c"
  8458 ;; Parameters:    Size  Location     Type
  8459 ;;  data            1    wreg     unsigned char 
  8460 ;;  clockPin        2   44[BANK0 ] int 
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;  data            1   50[BANK0 ] unsigned char 
  8463 ;;  i               1   52[BANK0 ] unsigned char 
  8464 ;;  mask            1   51[BANK0 ] unsigned char 
  8465 ;; Return value:  Size  Location     Type
  8466 ;;                  1    wreg      void 
  8467 ;; Registers used:
  8468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8469 ;; Tracked objects:
  8470 ;;		On entry : 0/0
  8471 ;;		On exit  : 0/0
  8472 ;;		Unchanged: 0/0
  8473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8476 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8477 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;Total ram usage:        9 bytes
  8479 ;; Hardware stack levels used:    1
  8480 ;; Hardware stack levels required when called:    5
  8481 ;; This function calls:
  8482 ;;		___awtoft
  8483 ;;		___ftmul
  8484 ;;		___fttol
  8485 ;; This function is called by:
  8486 ;;		_initDAC528
  8487 ;;		_writeDAC528
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           
  8492                           ;psect for function _putByte
  8493  0579                     _putByte:	
  8494                           
  8495                           ;incstack = 0
  8496                           ; Regs used in _putByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8497                           ;putByte@data stored from wreg
  8498  0579  0020               	movlb	0	; select bank0
  8499  057A  00D2               	movwf	putByte@data
  8500                           
  8501                           ;VCAMIX_SPI_Master.c: 15: uint8_t i = 8;
  8502  057B  3008               	movlw	8
  8503  057C  00CE               	movwf	??_putByte
  8504  057D  084E               	movf	??_putByte,w
  8505  057E  00D4               	movwf	putByte@i
  8506  057F                     l773:	
  8507                           ;VCAMIX_SPI_Master.c: 16: uint8_t mask;
  8508                           ;VCAMIX_SPI_Master.c: 17: while(i > 0) {
  8509                           
  8510  057F  0854               	movf	putByte@i,w
  8511  0580  1903               	btfsc	3,2
  8512  0581  0008               	return
  8513                           
  8514                           ;VCAMIX_SPI_Master.c: 18: mask = 0x01 << (i - 1);
  8515  0582  3001               	movlw	1
  8516  0583  00CE               	movwf	??_putByte
  8517  0584  0854               	movf	putByte@i,w
  8518  0585  3EFF               	addlw	-1
  8519  0586  0A89               	incf	9,f
  8520  0587  2D89               	goto	u2414
  8521  0588                     u2415:	
  8522  0588  35CE               	lslf	??_putByte,f
  8523  0589                     u2414:	
  8524  0589  0B89               	decfsz	9,f
  8525  058A  2D88               	goto	u2415
  8526  058B  084E               	movf	??_putByte,w
  8527  058C  00CF               	movwf	??_putByte+1
  8528  058D  084F               	movf	??_putByte+1,w
  8529  058E  00D3               	movwf	putByte@mask
  8530                           
  8531                           ;VCAMIX_SPI_Master.c: 20: LATB &= 0xBF ;
  8532  058F  30BF               	movlw	191
  8533  0590  00CE               	movwf	??_putByte
  8534  0591  084E               	movf	??_putByte,w
  8535  0592  0597               	andwf	23,f	;volatile
  8536                           
  8537                           ;VCAMIX_SPI_Master.c: 22: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8538  0593  3018               	movlw	low (_clockMicroTime| (0+32768))
  8539  0594  0084               	movwf	4
  8540  0595  3090               	movlw	high (_clockMicroTime| (0+32768))
  8541  0596  0085               	movwf	5
  8542  0597  3F00               	moviw [0]fsr0
  8543  0598  00A8               	movwf	___awtoft@c
  8544  0599  3F01               	moviw [1]fsr0
  8545  059A  00A9               	movwf	___awtoft@c+1
  8546  059B  318C  2407  3185   	fcall	___awtoft
  8547  059E  0020               	movlb	0	; select bank0
  8548  059F  0828               	movf	?___awtoft,w
  8549  05A0  00B1               	movwf	___ftmul@f2
  8550  05A1  0829               	movf	?___awtoft+1,w
  8551  05A2  00B2               	movwf	___ftmul@f2+1
  8552  05A3  082A               	movf	?___awtoft+2,w
  8553  05A4  00B3               	movwf	___ftmul@f2+2
  8554  05A5  3000               	movlw	0
  8555  05A6  00AE               	movwf	___ftmul@f1
  8556  05A7  3000               	movlw	0
  8557  05A8  00AF               	movwf	___ftmul@f1+1
  8558  05A9  3041               	movlw	65
  8559  05AA  00B0               	movwf	___ftmul@f1+2
  8560  05AB  3186  262E  3185   	fcall	___ftmul
  8561  05AE  0020               	movlb	0	; select bank0
  8562  05AF  082E               	movf	?___ftmul,w
  8563  05B0  00BE               	movwf	___fttol@f1
  8564  05B1  082F               	movf	?___ftmul+1,w
  8565  05B2  00BF               	movwf	___fttol@f1+1
  8566  05B3  0830               	movf	?___ftmul+2,w
  8567  05B4  00C0               	movwf	___fttol@f1+2
  8568  05B5  318E  2640  3185   	fcall	___fttol
  8569  05B8  0020               	movlb	0	; select bank0
  8570  05B9  083E               	movf	?___fttol,w
  8571  05BA  00CE               	movwf	??_putByte
  8572  05BB  083F               	movf	?___fttol+1,w
  8573  05BC  00CF               	movwf	??_putByte+1
  8574  05BD  0840               	movf	?___fttol+2,w
  8575  05BE  00D0               	movwf	??_putByte+2
  8576  05BF  0841               	movf	?___fttol+3,w
  8577  05C0  00D1               	movwf	??_putByte+3
  8578                           
  8579                           ;VCAMIX_SPI_Master.c: 23: if (data & mask){
  8580  05C1  0020               	movlb	0	; select bank0
  8581  05C2  0852               	movf	putByte@data,w
  8582  05C3  0553               	andwf	putByte@mask,w
  8583  05C4  1903               	btfsc	3,2
  8584  05C5  2DC8               	goto	l2966
  8585                           
  8586                           ;VCAMIX_SPI_Master.c: 25: LATB |= 0x80 ;
  8587  05C6  1797               	bsf	23,7	;volatile
  8588                           
  8589                           ;VCAMIX_SPI_Master.c: 26: }else{
  8590  05C7  2DCC               	goto	l2968
  8591  05C8                     l2966:	
  8592                           
  8593                           ;VCAMIX_SPI_Master.c: 28: LATB &= 0x7F ;
  8594  05C8  307F               	movlw	127
  8595  05C9  00CE               	movwf	??_putByte
  8596  05CA  084E               	movf	??_putByte,w
  8597  05CB  0597               	andwf	23,f	;volatile
  8598  05CC                     l2968:	
  8599                           
  8600                           ;VCAMIX_SPI_Master.c: 29: }
  8601                           ;VCAMIX_SPI_Master.c: 31: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8602  05CC  3018               	movlw	low (_clockMicroTime| (0+32768))
  8603  05CD  0084               	movwf	4
  8604  05CE  3090               	movlw	high (_clockMicroTime| (0+32768))
  8605  05CF  0085               	movwf	5
  8606  05D0  3F00               	moviw [0]fsr0
  8607  05D1  00A8               	movwf	___awtoft@c
  8608  05D2  3F01               	moviw [1]fsr0
  8609  05D3  00A9               	movwf	___awtoft@c+1
  8610  05D4  318C  2407  3185   	fcall	___awtoft
  8611  05D7  0020               	movlb	0	; select bank0
  8612  05D8  0828               	movf	?___awtoft,w
  8613  05D9  00B1               	movwf	___ftmul@f2
  8614  05DA  0829               	movf	?___awtoft+1,w
  8615  05DB  00B2               	movwf	___ftmul@f2+1
  8616  05DC  082A               	movf	?___awtoft+2,w
  8617  05DD  00B3               	movwf	___ftmul@f2+2
  8618  05DE  3000               	movlw	0
  8619  05DF  00AE               	movwf	___ftmul@f1
  8620  05E0  3000               	movlw	0
  8621  05E1  00AF               	movwf	___ftmul@f1+1
  8622  05E2  3041               	movlw	65
  8623  05E3  00B0               	movwf	___ftmul@f1+2
  8624  05E4  3186  262E  3185   	fcall	___ftmul
  8625  05E7  0020               	movlb	0	; select bank0
  8626  05E8  082E               	movf	?___ftmul,w
  8627  05E9  00BE               	movwf	___fttol@f1
  8628  05EA  082F               	movf	?___ftmul+1,w
  8629  05EB  00BF               	movwf	___fttol@f1+1
  8630  05EC  0830               	movf	?___ftmul+2,w
  8631  05ED  00C0               	movwf	___fttol@f1+2
  8632  05EE  318E  2640  3185   	fcall	___fttol
  8633  05F1  0020               	movlb	0	; select bank0
  8634  05F2  083E               	movf	?___fttol,w
  8635  05F3  00CE               	movwf	??_putByte
  8636  05F4  083F               	movf	?___fttol+1,w
  8637  05F5  00CF               	movwf	??_putByte+1
  8638  05F6  0840               	movf	?___fttol+2,w
  8639  05F7  00D0               	movwf	??_putByte+2
  8640  05F8  0841               	movf	?___fttol+3,w
  8641  05F9  00D1               	movwf	??_putByte+3
  8642                           
  8643                           ;VCAMIX_SPI_Master.c: 33: LATB |= 0x40 ;
  8644  05FA  0020               	movlb	0	; select bank0
  8645  05FB  1717               	bsf	23,6	;volatile
  8646                           
  8647                           ;VCAMIX_SPI_Master.c: 35: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8648  05FC  3018               	movlw	low (_clockMicroTime| (0+32768))
  8649  05FD  0084               	movwf	4
  8650  05FE  3090               	movlw	high (_clockMicroTime| (0+32768))
  8651  05FF  0085               	movwf	5
  8652  0600  3F00               	moviw [0]fsr0
  8653  0601  00A8               	movwf	___awtoft@c
  8654  0602  3F01               	moviw [1]fsr0
  8655  0603  00A9               	movwf	___awtoft@c+1
  8656  0604  318C  2407  3185   	fcall	___awtoft
  8657  0607  0020               	movlb	0	; select bank0
  8658  0608  0828               	movf	?___awtoft,w
  8659  0609  00B1               	movwf	___ftmul@f2
  8660  060A  0829               	movf	?___awtoft+1,w
  8661  060B  00B2               	movwf	___ftmul@f2+1
  8662  060C  082A               	movf	?___awtoft+2,w
  8663  060D  00B3               	movwf	___ftmul@f2+2
  8664  060E  3000               	movlw	0
  8665  060F  00AE               	movwf	___ftmul@f1
  8666  0610  3000               	movlw	0
  8667  0611  00AF               	movwf	___ftmul@f1+1
  8668  0612  3041               	movlw	65
  8669  0613  00B0               	movwf	___ftmul@f1+2
  8670  0614  3186  262E  3185   	fcall	___ftmul
  8671  0617  0020               	movlb	0	; select bank0
  8672  0618  082E               	movf	?___ftmul,w
  8673  0619  00BE               	movwf	___fttol@f1
  8674  061A  082F               	movf	?___ftmul+1,w
  8675  061B  00BF               	movwf	___fttol@f1+1
  8676  061C  0830               	movf	?___ftmul+2,w
  8677  061D  00C0               	movwf	___fttol@f1+2
  8678  061E  318E  2640  3185   	fcall	___fttol
  8679  0621  0020               	movlb	0	; select bank0
  8680  0622  083E               	movf	?___fttol,w
  8681  0623  00CE               	movwf	??_putByte
  8682  0624  083F               	movf	?___fttol+1,w
  8683  0625  00CF               	movwf	??_putByte+1
  8684  0626  0840               	movf	?___fttol+2,w
  8685  0627  00D0               	movwf	??_putByte+2
  8686  0628  0841               	movf	?___fttol+3,w
  8687  0629  00D1               	movwf	??_putByte+3
  8688                           
  8689                           ;VCAMIX_SPI_Master.c: 36: --i;
  8690  062A  3001               	movlw	1
  8691  062B  0020               	movlb	0	; select bank0
  8692  062C  02D4               	subwf	putByte@i,f
  8693  062D  2D7F               	goto	l773
  8694  062E                     __end_of_putByte:	
  8695                           
  8696                           	psect	text12
  8697  0E40                     __ptext12:	
  8698 ;; *************** function ___fttol *****************
  8699 ;; Defined at:
  8700 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;  f1              3   30[BANK0 ] float 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  lval            4   39[BANK0 ] unsigned long 
  8705 ;;  exp1            1   43[BANK0 ] unsigned char 
  8706 ;;  sign1           1   38[BANK0 ] unsigned char 
  8707 ;; Return value:  Size  Location     Type
  8708 ;;                  4   30[BANK0 ] long 
  8709 ;; Registers used:
  8710 ;;		wreg, status,2, status,0
  8711 ;; Tracked objects:
  8712 ;;		On entry : 0/0
  8713 ;;		On exit  : 0/0
  8714 ;;		Unchanged: 0/0
  8715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8720 ;;Total ram usage:       14 bytes
  8721 ;; Hardware stack levels used:    1
  8722 ;; Hardware stack levels required when called:    3
  8723 ;; This function calls:
  8724 ;;		Nothing
  8725 ;; This function is called by:
  8726 ;;		_main
  8727 ;;		_putByte
  8728 ;;		_LED7SegDisplayValue
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           
  8733                           ;psect for function ___fttol
  8734  0E40                     ___fttol:	
  8735                           
  8736                           ;incstack = 0
  8737                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8738  0E40  0020               	movlb	0	; select bank0
  8739  0E41  083E               	movf	___fttol@f1,w
  8740  0E42  00C2               	movwf	??___fttol
  8741  0E43  083F               	movf	___fttol@f1+1,w
  8742  0E44  00C3               	movwf	??___fttol+1
  8743  0E45  0840               	movf	___fttol@f1+2,w
  8744  0E46  00C4               	movwf	??___fttol+2
  8745  0E47  1003               	clrc
  8746  0E48  0D43               	rlf	??___fttol+1,w
  8747  0E49  0D44               	rlf	??___fttol+2,w
  8748  0E4A  00C5               	movwf	??___fttol+3
  8749  0E4B  0845               	movf	??___fttol+3,w
  8750  0E4C  00CB               	movwf	___fttol@exp1
  8751  0E4D  084B               	movf	___fttol@exp1,w
  8752  0E4E  1D03               	btfss	3,2
  8753  0E4F  2E59               	goto	l2908
  8754  0E50  3000               	movlw	0
  8755  0E51  00C1               	movwf	?___fttol+3
  8756  0E52  3000               	movlw	0
  8757  0E53  00C0               	movwf	?___fttol+2
  8758  0E54  3000               	movlw	0
  8759  0E55  00BF               	movwf	?___fttol+1
  8760  0E56  3000               	movlw	0
  8761  0E57  00BE               	movwf	?___fttol
  8762  0E58  0008               	return
  8763  0E59                     l2908:	
  8764  0E59  083E               	movf	___fttol@f1,w
  8765  0E5A  00C2               	movwf	??___fttol
  8766  0E5B  083F               	movf	___fttol@f1+1,w
  8767  0E5C  00C3               	movwf	??___fttol+1
  8768  0E5D  0840               	movf	___fttol@f1+2,w
  8769  0E5E  00C4               	movwf	??___fttol+2
  8770  0E5F  3017               	movlw	23
  8771  0E60                     u2305:	
  8772  0E60  36C4               	lsrf	??___fttol+2,f
  8773  0E61  0CC3               	rrf	??___fttol+1,f
  8774  0E62  0CC2               	rrf	??___fttol,f
  8775  0E63  0B89               	decfsz	9,f
  8776  0E64  2E60               	goto	u2305
  8777  0E65  0842               	movf	??___fttol,w
  8778  0E66  00C5               	movwf	??___fttol+3
  8779  0E67  0845               	movf	??___fttol+3,w
  8780  0E68  00C6               	movwf	___fttol@sign1
  8781  0E69  17BF               	bsf	___fttol@f1+1,7
  8782  0E6A  30FF               	movlw	255
  8783  0E6B  05BE               	andwf	___fttol@f1,f
  8784  0E6C  30FF               	movlw	255
  8785  0E6D  05BF               	andwf	___fttol@f1+1,f
  8786  0E6E  3000               	movlw	0
  8787  0E6F  05C0               	andwf	___fttol@f1+2,f
  8788  0E70  083E               	movf	___fttol@f1,w
  8789  0E71  00C7               	movwf	___fttol@lval
  8790  0E72  083F               	movf	___fttol@f1+1,w
  8791  0E73  00C8               	movwf	___fttol@lval+1
  8792  0E74  0840               	movf	___fttol@f1+2,w
  8793  0E75  00C9               	movwf	___fttol@lval+2
  8794  0E76  01CA               	clrf	___fttol@lval+3
  8795  0E77  308E               	movlw	142
  8796  0E78  02CB               	subwf	___fttol@exp1,f
  8797  0E79  1FCB               	btfss	___fttol@exp1,7
  8798  0E7A  2E97               	goto	l2928
  8799  0E7B  084B               	movf	___fttol@exp1,w
  8800  0E7C  3A80               	xorlw	128
  8801  0E7D  3E8F               	addlw	143
  8802  0E7E  1803               	skipnc
  8803  0E7F  2E89               	goto	l2926
  8804  0E80  3000               	movlw	0
  8805  0E81  00C1               	movwf	?___fttol+3
  8806  0E82  3000               	movlw	0
  8807  0E83  00C0               	movwf	?___fttol+2
  8808  0E84  3000               	movlw	0
  8809  0E85  00BF               	movwf	?___fttol+1
  8810  0E86  3000               	movlw	0
  8811  0E87  00BE               	movwf	?___fttol
  8812  0E88  0008               	return
  8813  0E89                     l2926:	
  8814  0E89  3001               	movlw	1
  8815  0E8A                     u2335:	
  8816  0E8A  36CA               	lsrf	___fttol@lval+3,f
  8817  0E8B  0CC9               	rrf	___fttol@lval+2,f
  8818  0E8C  0CC8               	rrf	___fttol@lval+1,f
  8819  0E8D  0CC7               	rrf	___fttol@lval,f
  8820  0E8E  0B89               	decfsz	9,f
  8821  0E8F  2E8A               	goto	u2335
  8822  0E90  3001               	movlw	1
  8823  0E91  00C2               	movwf	??___fttol
  8824  0E92  0842               	movf	??___fttol,w
  8825  0E93  07CB               	addwf	___fttol@exp1,f
  8826  0E94  1903               	btfsc	3,2
  8827  0E95  2EB0               	goto	l2936
  8828  0E96  2E89               	goto	l2926
  8829  0E97                     l2928:	
  8830  0E97  3018               	movlw	24
  8831  0E98  024B               	subwf	___fttol@exp1,w
  8832  0E99  1C03               	skipc
  8833  0E9A  2EAD               	goto	l1200
  8834  0E9B  3000               	movlw	0
  8835  0E9C  00C1               	movwf	?___fttol+3
  8836  0E9D  3000               	movlw	0
  8837  0E9E  00C0               	movwf	?___fttol+2
  8838  0E9F  3000               	movlw	0
  8839  0EA0  00BF               	movwf	?___fttol+1
  8840  0EA1  3000               	movlw	0
  8841  0EA2  00BE               	movwf	?___fttol
  8842  0EA3  0008               	return
  8843  0EA4                     l2934:	
  8844  0EA4  3001               	movlw	1
  8845  0EA5                     u2365:	
  8846  0EA5  35C7               	lslf	___fttol@lval,f
  8847  0EA6  0DC8               	rlf	___fttol@lval+1,f
  8848  0EA7  0DC9               	rlf	___fttol@lval+2,f
  8849  0EA8  0DCA               	rlf	___fttol@lval+3,f
  8850  0EA9  0B89               	decfsz	9,f
  8851  0EAA  2EA5               	goto	u2365
  8852  0EAB  3001               	movlw	1
  8853  0EAC  02CB               	subwf	___fttol@exp1,f
  8854  0EAD                     l1200:	
  8855  0EAD  084B               	movf	___fttol@exp1,w
  8856  0EAE  1D03               	btfss	3,2
  8857  0EAF  2EA4               	goto	l2934
  8858  0EB0                     l2936:	
  8859  0EB0  0846               	movf	___fttol@sign1,w
  8860  0EB1  1903               	btfsc	3,2
  8861  0EB2  2EBE               	goto	l2940
  8862  0EB3  09C7               	comf	___fttol@lval,f
  8863  0EB4  09C8               	comf	___fttol@lval+1,f
  8864  0EB5  09C9               	comf	___fttol@lval+2,f
  8865  0EB6  09CA               	comf	___fttol@lval+3,f
  8866  0EB7  0AC7               	incf	___fttol@lval,f
  8867  0EB8  1903               	skipnz
  8868  0EB9  0AC8               	incf	___fttol@lval+1,f
  8869  0EBA  1903               	skipnz
  8870  0EBB  0AC9               	incf	___fttol@lval+2,f
  8871  0EBC  1903               	skipnz
  8872  0EBD  0ACA               	incf	___fttol@lval+3,f
  8873  0EBE                     l2940:	
  8874  0EBE  084A               	movf	___fttol@lval+3,w
  8875  0EBF  00C1               	movwf	?___fttol+3
  8876  0EC0  0849               	movf	___fttol@lval+2,w
  8877  0EC1  00C0               	movwf	?___fttol+2
  8878  0EC2  0848               	movf	___fttol@lval+1,w
  8879  0EC3  00BF               	movwf	?___fttol+1
  8880  0EC4  0847               	movf	___fttol@lval,w
  8881  0EC5  00BE               	movwf	?___fttol
  8882  0EC6  0008               	return
  8883  0EC7                     __end_of___fttol:	
  8884                           
  8885                           	psect	text13
  8886  062E                     __ptext13:	
  8887 ;; *************** function ___ftmul *****************
  8888 ;; Defined at:
  8889 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8890 ;; Parameters:    Size  Location     Type
  8891 ;;  f1              3   14[BANK0 ] float 
  8892 ;;  f2              3   17[BANK0 ] float 
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8895 ;;  sign            1   29[BANK0 ] unsigned char 
  8896 ;;  cntr            1   28[BANK0 ] unsigned char 
  8897 ;;  exp             1   24[BANK0 ] unsigned char 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  3   14[BANK0 ] float 
  8900 ;; Registers used:
  8901 ;;		wreg, status,2, status,0, pclath, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8907 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8908 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8909 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8910 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;Total ram usage:       16 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:    4
  8914 ;; This function calls:
  8915 ;;		___ftpack
  8916 ;; This function is called by:
  8917 ;;		_putByte
  8918 ;; This function uses a non-reentrant model
  8919 ;;
  8920                           
  8921                           
  8922                           ;psect for function ___ftmul
  8923  062E                     ___ftmul:	
  8924                           
  8925                           ;incstack = 0
  8926                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8927  062E  0020               	movlb	0	; select bank0
  8928  062F  082E               	movf	___ftmul@f1,w
  8929  0630  00B4               	movwf	??___ftmul
  8930  0631  082F               	movf	___ftmul@f1+1,w
  8931  0632  00B5               	movwf	??___ftmul+1
  8932  0633  0830               	movf	___ftmul@f1+2,w
  8933  0634  00B6               	movwf	??___ftmul+2
  8934  0635  1003               	clrc
  8935  0636  0D35               	rlf	??___ftmul+1,w
  8936  0637  0D36               	rlf	??___ftmul+2,w
  8937  0638  00B7               	movwf	??___ftmul+3
  8938  0639  0837               	movf	??___ftmul+3,w
  8939  063A  00B8               	movwf	___ftmul@exp
  8940  063B  0838               	movf	___ftmul@exp,w
  8941  063C  1D03               	btfss	3,2
  8942  063D  2E45               	goto	l2858
  8943  063E  3000               	movlw	0
  8944  063F  00AE               	movwf	?___ftmul
  8945  0640  3000               	movlw	0
  8946  0641  00AF               	movwf	?___ftmul+1
  8947  0642  3000               	movlw	0
  8948  0643  00B0               	movwf	?___ftmul+2
  8949  0644  0008               	return
  8950  0645                     l2858:	
  8951  0645  0831               	movf	___ftmul@f2,w
  8952  0646  00B4               	movwf	??___ftmul
  8953  0647  0832               	movf	___ftmul@f2+1,w
  8954  0648  00B5               	movwf	??___ftmul+1
  8955  0649  0833               	movf	___ftmul@f2+2,w
  8956  064A  00B6               	movwf	??___ftmul+2
  8957  064B  1003               	clrc
  8958  064C  0D35               	rlf	??___ftmul+1,w
  8959  064D  0D36               	rlf	??___ftmul+2,w
  8960  064E  00B7               	movwf	??___ftmul+3
  8961  064F  0837               	movf	??___ftmul+3,w
  8962  0650  00BD               	movwf	___ftmul@sign
  8963  0651  083D               	movf	___ftmul@sign,w
  8964  0652  1D03               	btfss	3,2
  8965  0653  2E5B               	goto	l2864
  8966  0654  3000               	movlw	0
  8967  0655  00AE               	movwf	?___ftmul
  8968  0656  3000               	movlw	0
  8969  0657  00AF               	movwf	?___ftmul+1
  8970  0658  3000               	movlw	0
  8971  0659  00B0               	movwf	?___ftmul+2
  8972  065A  0008               	return
  8973  065B                     l2864:	
  8974  065B  083D               	movf	___ftmul@sign,w
  8975  065C  3E7B               	addlw	123
  8976  065D  00B4               	movwf	??___ftmul
  8977  065E  0834               	movf	??___ftmul,w
  8978  065F  07B8               	addwf	___ftmul@exp,f
  8979  0660  082E               	movf	___ftmul@f1,w
  8980  0661  00B4               	movwf	??___ftmul
  8981  0662  082F               	movf	___ftmul@f1+1,w
  8982  0663  00B5               	movwf	??___ftmul+1
  8983  0664  0830               	movf	___ftmul@f1+2,w
  8984  0665  00B6               	movwf	??___ftmul+2
  8985  0666  3010               	movlw	16
  8986  0667                     u2195:	
  8987  0667  36B6               	lsrf	??___ftmul+2,f
  8988  0668  0CB5               	rrf	??___ftmul+1,f
  8989  0669  0CB4               	rrf	??___ftmul,f
  8990  066A  0B89               	decfsz	9,f
  8991  066B  2E67               	goto	u2195
  8992  066C  0834               	movf	??___ftmul,w
  8993  066D  00B7               	movwf	??___ftmul+3
  8994  066E  0837               	movf	??___ftmul+3,w
  8995  066F  00BD               	movwf	___ftmul@sign
  8996  0670  0831               	movf	___ftmul@f2,w
  8997  0671  00B4               	movwf	??___ftmul
  8998  0672  0832               	movf	___ftmul@f2+1,w
  8999  0673  00B5               	movwf	??___ftmul+1
  9000  0674  0833               	movf	___ftmul@f2+2,w
  9001  0675  00B6               	movwf	??___ftmul+2
  9002  0676  3010               	movlw	16
  9003  0677                     u2205:	
  9004  0677  36B6               	lsrf	??___ftmul+2,f
  9005  0678  0CB5               	rrf	??___ftmul+1,f
  9006  0679  0CB4               	rrf	??___ftmul,f
  9007  067A  0B89               	decfsz	9,f
  9008  067B  2E77               	goto	u2205
  9009  067C  0834               	movf	??___ftmul,w
  9010  067D  00B7               	movwf	??___ftmul+3
  9011  067E  0837               	movf	??___ftmul+3,w
  9012  067F  06BD               	xorwf	___ftmul@sign,f
  9013  0680  3080               	movlw	128
  9014  0681  00B4               	movwf	??___ftmul
  9015  0682  0834               	movf	??___ftmul,w
  9016  0683  05BD               	andwf	___ftmul@sign,f
  9017  0684  17AF               	bsf	___ftmul@f1+1,7
  9018  0685  17B2               	bsf	___ftmul@f2+1,7
  9019  0686  30FF               	movlw	255
  9020  0687  05B1               	andwf	___ftmul@f2,f
  9021  0688  30FF               	movlw	255
  9022  0689  05B2               	andwf	___ftmul@f2+1,f
  9023  068A  3000               	movlw	0
  9024  068B  05B3               	andwf	___ftmul@f2+2,f
  9025  068C  3000               	movlw	0
  9026  068D  00B9               	movwf	___ftmul@f3_as_product
  9027  068E  3000               	movlw	0
  9028  068F  00BA               	movwf	___ftmul@f3_as_product+1
  9029  0690  3000               	movlw	0
  9030  0691  00BB               	movwf	___ftmul@f3_as_product+2
  9031  0692  3007               	movlw	7
  9032  0693  00B4               	movwf	??___ftmul
  9033  0694  0834               	movf	??___ftmul,w
  9034  0695  00BC               	movwf	___ftmul@cntr
  9035  0696                     l2876:	
  9036  0696  1C2E               	btfss	___ftmul@f1,0
  9037  0697  2E9E               	goto	l2880
  9038  0698  0831               	movf	___ftmul@f2,w
  9039  0699  07B9               	addwf	___ftmul@f3_as_product,f
  9040  069A  0832               	movf	___ftmul@f2+1,w
  9041  069B  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  9042  069C  0833               	movf	___ftmul@f2+2,w
  9043  069D  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  9044  069E                     l2880:	
  9045  069E  3001               	movlw	1
  9046  069F                     u2225:	
  9047  069F  36B0               	lsrf	___ftmul@f1+2,f
  9048  06A0  0CAF               	rrf	___ftmul@f1+1,f
  9049  06A1  0CAE               	rrf	___ftmul@f1,f
  9050  06A2  0B89               	decfsz	9,f
  9051  06A3  2E9F               	goto	u2225
  9052  06A4  3001               	movlw	1
  9053  06A5                     u2235:	
  9054  06A5  35B1               	lslf	___ftmul@f2,f
  9055  06A6  0DB2               	rlf	___ftmul@f2+1,f
  9056  06A7  0DB3               	rlf	___ftmul@f2+2,f
  9057  06A8  0B89               	decfsz	9,f
  9058  06A9  2EA5               	goto	u2235
  9059  06AA  3001               	movlw	1
  9060  06AB  02BC               	subwf	___ftmul@cntr,f
  9061  06AC  1D03               	btfss	3,2
  9062  06AD  2E96               	goto	l2876
  9063  06AE  3009               	movlw	9
  9064  06AF  00B4               	movwf	??___ftmul
  9065  06B0  0834               	movf	??___ftmul,w
  9066  06B1  00BC               	movwf	___ftmul@cntr
  9067  06B2                     l2888:	
  9068  06B2  1C2E               	btfss	___ftmul@f1,0
  9069  06B3  2EBA               	goto	l2892
  9070  06B4  0831               	movf	___ftmul@f2,w
  9071  06B5  07B9               	addwf	___ftmul@f3_as_product,f
  9072  06B6  0832               	movf	___ftmul@f2+1,w
  9073  06B7  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  9074  06B8  0833               	movf	___ftmul@f2+2,w
  9075  06B9  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  9076  06BA                     l2892:	
  9077  06BA  3001               	movlw	1
  9078  06BB                     u2265:	
  9079  06BB  36B0               	lsrf	___ftmul@f1+2,f
  9080  06BC  0CAF               	rrf	___ftmul@f1+1,f
  9081  06BD  0CAE               	rrf	___ftmul@f1,f
  9082  06BE  0B89               	decfsz	9,f
  9083  06BF  2EBB               	goto	u2265
  9084  06C0  3001               	movlw	1
  9085  06C1                     u2275:	
  9086  06C1  36BB               	lsrf	___ftmul@f3_as_product+2,f
  9087  06C2  0CBA               	rrf	___ftmul@f3_as_product+1,f
  9088  06C3  0CB9               	rrf	___ftmul@f3_as_product,f
  9089  06C4  0B89               	decfsz	9,f
  9090  06C5  2EC1               	goto	u2275
  9091  06C6  3001               	movlw	1
  9092  06C7  02BC               	subwf	___ftmul@cntr,f
  9093  06C8  1D03               	btfss	3,2
  9094  06C9  2EB2               	goto	l2888
  9095  06CA  0839               	movf	___ftmul@f3_as_product,w
  9096  06CB  00A0               	movwf	___ftpack@arg
  9097  06CC  083A               	movf	___ftmul@f3_as_product+1,w
  9098  06CD  00A1               	movwf	___ftpack@arg+1
  9099  06CE  083B               	movf	___ftmul@f3_as_product+2,w
  9100  06CF  00A2               	movwf	___ftpack@arg+2
  9101  06D0  0838               	movf	___ftmul@exp,w
  9102  06D1  00B4               	movwf	??___ftmul
  9103  06D2  0834               	movf	??___ftmul,w
  9104  06D3  00A3               	movwf	___ftpack@exp
  9105  06D4  083D               	movf	___ftmul@sign,w
  9106  06D5  00B5               	movwf	??___ftmul+1
  9107  06D6  0835               	movf	??___ftmul+1,w
  9108  06D7  00A4               	movwf	___ftpack@sign
  9109  06D8  3187  278B         	fcall	___ftpack
  9110  06DA  0020               	movlb	0	; select bank0
  9111  06DB  0820               	movf	?___ftpack,w
  9112  06DC  00AE               	movwf	?___ftmul
  9113  06DD  0821               	movf	?___ftpack+1,w
  9114  06DE  00AF               	movwf	?___ftmul+1
  9115  06DF  0822               	movf	?___ftpack+2,w
  9116  06E0  00B0               	movwf	?___ftmul+2
  9117  06E1  0008               	return
  9118  06E2                     __end_of___ftmul:	
  9119                           
  9120                           	psect	text14
  9121  0C07                     __ptext14:	
  9122 ;; *************** function ___awtoft *****************
  9123 ;; Defined at:
  9124 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  c               2    8[BANK0 ] int 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  sign            1   13[BANK0 ] unsigned char 
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  3    8[BANK0 ] float 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0, pclath, cstack
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9138 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;Total ram usage:        6 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    4
  9145 ;; This function calls:
  9146 ;;		___ftpack
  9147 ;; This function is called by:
  9148 ;;		_main
  9149 ;;		_putByte
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           
  9154                           ;psect for function ___awtoft
  9155  0C07                     ___awtoft:	
  9156                           
  9157                           ;incstack = 0
  9158                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9159  0C07  0020               	movlb	0	; select bank0
  9160  0C08  01AD               	clrf	___awtoft@sign
  9161  0C09  1FA9               	btfss	___awtoft@c+1,7
  9162  0C0A  2C12               	goto	l2848
  9163  0C0B  09A8               	comf	___awtoft@c,f
  9164  0C0C  09A9               	comf	___awtoft@c+1,f
  9165  0C0D  0AA8               	incf	___awtoft@c,f
  9166  0C0E  1903               	skipnz
  9167  0C0F  0AA9               	incf	___awtoft@c+1,f
  9168  0C10  01AD               	clrf	___awtoft@sign
  9169  0C11  0AAD               	incf	___awtoft@sign,f
  9170  0C12                     l2848:	
  9171  0C12  0828               	movf	___awtoft@c,w
  9172  0C13  00A0               	movwf	___ftpack@arg
  9173  0C14  0829               	movf	___awtoft@c+1,w
  9174  0C15  00A1               	movwf	___ftpack@arg+1
  9175  0C16  01A2               	clrf	___ftpack@arg+2
  9176  0C17  308E               	movlw	142
  9177  0C18  00AB               	movwf	??___awtoft
  9178  0C19  082B               	movf	??___awtoft,w
  9179  0C1A  00A3               	movwf	___ftpack@exp
  9180  0C1B  082D               	movf	___awtoft@sign,w
  9181  0C1C  00AC               	movwf	??___awtoft+1
  9182  0C1D  082C               	movf	??___awtoft+1,w
  9183  0C1E  00A4               	movwf	___ftpack@sign
  9184  0C1F  3187  278B         	fcall	___ftpack
  9185  0C21  0020               	movlb	0	; select bank0
  9186  0C22  0820               	movf	?___ftpack,w
  9187  0C23  00A8               	movwf	?___awtoft
  9188  0C24  0821               	movf	?___ftpack+1,w
  9189  0C25  00A9               	movwf	?___awtoft+1
  9190  0C26  0822               	movf	?___ftpack+2,w
  9191  0C27  00AA               	movwf	?___awtoft+2
  9192  0C28  0008               	return
  9193  0C29                     __end_of___awtoft:	
  9194                           
  9195                           	psect	text15
  9196  06E2                     __ptext15:	
  9197 ;; *************** function ___ftdiv *****************
  9198 ;; Defined at:
  9199 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;  f2              3   14[BANK0 ] float 
  9202 ;;  f1              3   17[BANK0 ] float 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  f3              3   25[BANK0 ] float 
  9205 ;;  sign            1   29[BANK0 ] unsigned char 
  9206 ;;  exp             1   28[BANK0 ] unsigned char 
  9207 ;;  cntr            1   24[BANK0 ] unsigned char 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  3   14[BANK0 ] float 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0, pclath, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9217 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;Total ram usage:       16 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; Hardware stack levels required when called:    4
  9224 ;; This function calls:
  9225 ;;		___ftpack
  9226 ;; This function is called by:
  9227 ;;		_main
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           
  9232                           ;psect for function ___ftdiv
  9233  06E2                     ___ftdiv:	
  9234                           
  9235                           ;incstack = 0
  9236                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9237  06E2  0020               	movlb	0	; select bank0
  9238  06E3  0831               	movf	___ftdiv@f1,w
  9239  06E4  00B4               	movwf	??___ftdiv
  9240  06E5  0832               	movf	___ftdiv@f1+1,w
  9241  06E6  00B5               	movwf	??___ftdiv+1
  9242  06E7  0833               	movf	___ftdiv@f1+2,w
  9243  06E8  00B6               	movwf	??___ftdiv+2
  9244  06E9  1003               	clrc
  9245  06EA  0D35               	rlf	??___ftdiv+1,w
  9246  06EB  0D36               	rlf	??___ftdiv+2,w
  9247  06EC  00B7               	movwf	??___ftdiv+3
  9248  06ED  0837               	movf	??___ftdiv+3,w
  9249  06EE  00BC               	movwf	___ftdiv@exp
  9250  06EF  083C               	movf	___ftdiv@exp,w
  9251  06F0  1D03               	btfss	3,2
  9252  06F1  2EF9               	goto	l3596
  9253  06F2  3000               	movlw	0
  9254  06F3  00AE               	movwf	?___ftdiv
  9255  06F4  3000               	movlw	0
  9256  06F5  00AF               	movwf	?___ftdiv+1
  9257  06F6  3000               	movlw	0
  9258  06F7  00B0               	movwf	?___ftdiv+2
  9259  06F8  0008               	return
  9260  06F9                     l3596:	
  9261  06F9  082E               	movf	___ftdiv@f2,w
  9262  06FA  00B4               	movwf	??___ftdiv
  9263  06FB  082F               	movf	___ftdiv@f2+1,w
  9264  06FC  00B5               	movwf	??___ftdiv+1
  9265  06FD  0830               	movf	___ftdiv@f2+2,w
  9266  06FE  00B6               	movwf	??___ftdiv+2
  9267  06FF  1003               	clrc
  9268  0700  0D35               	rlf	??___ftdiv+1,w
  9269  0701  0D36               	rlf	??___ftdiv+2,w
  9270  0702  00B7               	movwf	??___ftdiv+3
  9271  0703  0837               	movf	??___ftdiv+3,w
  9272  0704  00BD               	movwf	___ftdiv@sign
  9273  0705  083D               	movf	___ftdiv@sign,w
  9274  0706  1D03               	btfss	3,2
  9275  0707  2F0F               	goto	l3602
  9276  0708  3000               	movlw	0
  9277  0709  00AE               	movwf	?___ftdiv
  9278  070A  3000               	movlw	0
  9279  070B  00AF               	movwf	?___ftdiv+1
  9280  070C  3000               	movlw	0
  9281  070D  00B0               	movwf	?___ftdiv+2
  9282  070E  0008               	return
  9283  070F                     l3602:	
  9284  070F  3000               	movlw	0
  9285  0710  00B9               	movwf	___ftdiv@f3
  9286  0711  3000               	movlw	0
  9287  0712  00BA               	movwf	___ftdiv@f3+1
  9288  0713  3000               	movlw	0
  9289  0714  00BB               	movwf	___ftdiv@f3+2
  9290  0715  3089               	movlw	137
  9291  0716  073D               	addwf	___ftdiv@sign,w
  9292  0717  00B4               	movwf	??___ftdiv
  9293  0718  0834               	movf	??___ftdiv,w
  9294  0719  02BC               	subwf	___ftdiv@exp,f
  9295  071A  0831               	movf	___ftdiv@f1,w
  9296  071B  00B4               	movwf	??___ftdiv
  9297  071C  0832               	movf	___ftdiv@f1+1,w
  9298  071D  00B5               	movwf	??___ftdiv+1
  9299  071E  0833               	movf	___ftdiv@f1+2,w
  9300  071F  00B6               	movwf	??___ftdiv+2
  9301  0720  3010               	movlw	16
  9302  0721                     u3155:	
  9303  0721  36B6               	lsrf	??___ftdiv+2,f
  9304  0722  0CB5               	rrf	??___ftdiv+1,f
  9305  0723  0CB4               	rrf	??___ftdiv,f
  9306  0724  0B89               	decfsz	9,f
  9307  0725  2F21               	goto	u3155
  9308  0726  0834               	movf	??___ftdiv,w
  9309  0727  00B7               	movwf	??___ftdiv+3
  9310  0728  0837               	movf	??___ftdiv+3,w
  9311  0729  00BD               	movwf	___ftdiv@sign
  9312  072A  082E               	movf	___ftdiv@f2,w
  9313  072B  00B4               	movwf	??___ftdiv
  9314  072C  082F               	movf	___ftdiv@f2+1,w
  9315  072D  00B5               	movwf	??___ftdiv+1
  9316  072E  0830               	movf	___ftdiv@f2+2,w
  9317  072F  00B6               	movwf	??___ftdiv+2
  9318  0730  3010               	movlw	16
  9319  0731                     u3165:	
  9320  0731  36B6               	lsrf	??___ftdiv+2,f
  9321  0732  0CB5               	rrf	??___ftdiv+1,f
  9322  0733  0CB4               	rrf	??___ftdiv,f
  9323  0734  0B89               	decfsz	9,f
  9324  0735  2F31               	goto	u3165
  9325  0736  0834               	movf	??___ftdiv,w
  9326  0737  00B7               	movwf	??___ftdiv+3
  9327  0738  0837               	movf	??___ftdiv+3,w
  9328  0739  06BD               	xorwf	___ftdiv@sign,f
  9329  073A  3080               	movlw	128
  9330  073B  00B4               	movwf	??___ftdiv
  9331  073C  0834               	movf	??___ftdiv,w
  9332  073D  05BD               	andwf	___ftdiv@sign,f
  9333  073E  17B2               	bsf	___ftdiv@f1+1,7
  9334  073F  30FF               	movlw	255
  9335  0740  05B1               	andwf	___ftdiv@f1,f
  9336  0741  30FF               	movlw	255
  9337  0742  05B2               	andwf	___ftdiv@f1+1,f
  9338  0743  3000               	movlw	0
  9339  0744  05B3               	andwf	___ftdiv@f1+2,f
  9340  0745  17AF               	bsf	___ftdiv@f2+1,7
  9341  0746  30FF               	movlw	255
  9342  0747  05AE               	andwf	___ftdiv@f2,f
  9343  0748  30FF               	movlw	255
  9344  0749  05AF               	andwf	___ftdiv@f2+1,f
  9345  074A  3000               	movlw	0
  9346  074B  05B0               	andwf	___ftdiv@f2+2,f
  9347  074C  3018               	movlw	24
  9348  074D  00B4               	movwf	??___ftdiv
  9349  074E  0834               	movf	??___ftdiv,w
  9350  074F  00B8               	movwf	___ftdiv@cntr
  9351  0750                     l3616:	
  9352  0750  3001               	movlw	1
  9353  0751                     u3175:	
  9354  0751  35B9               	lslf	___ftdiv@f3,f
  9355  0752  0DBA               	rlf	___ftdiv@f3+1,f
  9356  0753  0DBB               	rlf	___ftdiv@f3+2,f
  9357  0754  0B89               	decfsz	9,f
  9358  0755  2F51               	goto	u3175
  9359  0756  0830               	movf	___ftdiv@f2+2,w
  9360  0757  0233               	subwf	___ftdiv@f1+2,w
  9361  0758  1D03               	skipz
  9362  0759  2F60               	goto	u3185
  9363  075A  082F               	movf	___ftdiv@f2+1,w
  9364  075B  0232               	subwf	___ftdiv@f1+1,w
  9365  075C  1D03               	skipz
  9366  075D  2F60               	goto	u3185
  9367  075E  082E               	movf	___ftdiv@f2,w
  9368  075F  0231               	subwf	___ftdiv@f1,w
  9369  0760                     u3185:	
  9370  0760  1C03               	skipc
  9371  0761  2F69               	goto	l3624
  9372  0762  082E               	movf	___ftdiv@f2,w
  9373  0763  02B1               	subwf	___ftdiv@f1,f
  9374  0764  082F               	movf	___ftdiv@f2+1,w
  9375  0765  3BB2               	subwfb	___ftdiv@f1+1,f
  9376  0766  0830               	movf	___ftdiv@f2+2,w
  9377  0767  3BB3               	subwfb	___ftdiv@f1+2,f
  9378  0768  1439               	bsf	___ftdiv@f3,0
  9379  0769                     l3624:	
  9380  0769  3001               	movlw	1
  9381  076A                     u3195:	
  9382  076A  35B1               	lslf	___ftdiv@f1,f
  9383  076B  0DB2               	rlf	___ftdiv@f1+1,f
  9384  076C  0DB3               	rlf	___ftdiv@f1+2,f
  9385  076D  0B89               	decfsz	9,f
  9386  076E  2F6A               	goto	u3195
  9387  076F  3001               	movlw	1
  9388  0770  02B8               	subwf	___ftdiv@cntr,f
  9389  0771  1D03               	btfss	3,2
  9390  0772  2F50               	goto	l3616
  9391  0773  0839               	movf	___ftdiv@f3,w
  9392  0774  00A0               	movwf	___ftpack@arg
  9393  0775  083A               	movf	___ftdiv@f3+1,w
  9394  0776  00A1               	movwf	___ftpack@arg+1
  9395  0777  083B               	movf	___ftdiv@f3+2,w
  9396  0778  00A2               	movwf	___ftpack@arg+2
  9397  0779  083C               	movf	___ftdiv@exp,w
  9398  077A  00B4               	movwf	??___ftdiv
  9399  077B  0834               	movf	??___ftdiv,w
  9400  077C  00A3               	movwf	___ftpack@exp
  9401  077D  083D               	movf	___ftdiv@sign,w
  9402  077E  00B5               	movwf	??___ftdiv+1
  9403  077F  0835               	movf	??___ftdiv+1,w
  9404  0780  00A4               	movwf	___ftpack@sign
  9405  0781  3187  278B         	fcall	___ftpack
  9406  0783  0020               	movlb	0	; select bank0
  9407  0784  0820               	movf	?___ftpack,w
  9408  0785  00AE               	movwf	?___ftdiv
  9409  0786  0821               	movf	?___ftpack+1,w
  9410  0787  00AF               	movwf	?___ftdiv+1
  9411  0788  0822               	movf	?___ftpack+2,w
  9412  0789  00B0               	movwf	?___ftdiv+2
  9413  078A  0008               	return
  9414  078B                     __end_of___ftdiv:	
  9415                           
  9416                           	psect	text16
  9417  078B                     __ptext16:	
  9418 ;; *************** function ___ftpack *****************
  9419 ;; Defined at:
  9420 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  arg             3    0[BANK0 ] unsigned um
  9423 ;;  exp             1    3[BANK0 ] unsigned char 
  9424 ;;  sign            1    4[BANK0 ] unsigned char 
  9425 ;; Auto vars:     Size  Location     Type
  9426 ;;		None
  9427 ;; Return value:  Size  Location     Type
  9428 ;;                  3    0[BANK0 ] float 
  9429 ;; Registers used:
  9430 ;;		wreg, status,2, status,0
  9431 ;; Tracked objects:
  9432 ;;		On entry : 0/0
  9433 ;;		On exit  : 0/0
  9434 ;;		Unchanged: 0/0
  9435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9436 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9438 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9439 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9440 ;;Total ram usage:        8 bytes
  9441 ;; Hardware stack levels used:    1
  9442 ;; Hardware stack levels required when called:    3
  9443 ;; This function calls:
  9444 ;;		Nothing
  9445 ;; This function is called by:
  9446 ;;		___awtoft
  9447 ;;		___ftdiv
  9448 ;;		___ftmul
  9449 ;;		___lwtoft
  9450 ;; This function uses a non-reentrant model
  9451 ;;
  9452                           
  9453                           
  9454                           ;psect for function ___ftpack
  9455  078B                     ___ftpack:	
  9456                           
  9457                           ;incstack = 0
  9458                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9459  078B  0020               	movlb	0	; select bank0
  9460  078C  0823               	movf	___ftpack@exp,w
  9461  078D  1903               	btfsc	3,2
  9462  078E  2F94               	goto	l2778
  9463  078F  0822               	movf	___ftpack@arg+2,w
  9464  0790  0421               	iorwf	___ftpack@arg+1,w
  9465  0791  0420               	iorwf	___ftpack@arg,w
  9466  0792  1D03               	skipz
  9467  0793  2FA5               	goto	l2784
  9468  0794                     l2778:	
  9469  0794  3000               	movlw	0
  9470  0795  00A0               	movwf	?___ftpack
  9471  0796  3000               	movlw	0
  9472  0797  00A1               	movwf	?___ftpack+1
  9473  0798  3000               	movlw	0
  9474  0799  00A2               	movwf	?___ftpack+2
  9475  079A  0008               	return
  9476  079B                     l2782:	
  9477  079B  3001               	movlw	1
  9478  079C  00A5               	movwf	??___ftpack
  9479  079D  0825               	movf	??___ftpack,w
  9480  079E  07A3               	addwf	___ftpack@exp,f
  9481  079F  3001               	movlw	1
  9482  07A0                     u1995:	
  9483  07A0  36A2               	lsrf	___ftpack@arg+2,f
  9484  07A1  0CA1               	rrf	___ftpack@arg+1,f
  9485  07A2  0CA0               	rrf	___ftpack@arg,f
  9486  07A3  0B89               	decfsz	9,f
  9487  07A4  2FA0               	goto	u1995
  9488  07A5                     l2784:	
  9489  07A5  30FE               	movlw	254
  9490  07A6  0522               	andwf	___ftpack@arg+2,w
  9491  07A7  1903               	btfsc	3,2
  9492  07A8  2FBE               	goto	l1109
  9493  07A9  2F9B               	goto	l2782
  9494  07AA                     l2786:	
  9495  07AA  3001               	movlw	1
  9496  07AB  00A5               	movwf	??___ftpack
  9497  07AC  0825               	movf	??___ftpack,w
  9498  07AD  07A3               	addwf	___ftpack@exp,f
  9499  07AE  3001               	movlw	1
  9500  07AF  07A0               	addwf	___ftpack@arg,f
  9501  07B0  3000               	movlw	0
  9502  07B1  1803               	skipnc
  9503  07B2  3001               	movlw	1
  9504  07B3  07A1               	addwf	___ftpack@arg+1,f
  9505  07B4  3000               	movlw	0
  9506  07B5  1803               	skipnc
  9507  07B6  3001               	movlw	1
  9508  07B7  07A2               	addwf	___ftpack@arg+2,f
  9509  07B8  3001               	movlw	1
  9510  07B9                     u2015:	
  9511  07B9  36A2               	lsrf	___ftpack@arg+2,f
  9512  07BA  0CA1               	rrf	___ftpack@arg+1,f
  9513  07BB  0CA0               	rrf	___ftpack@arg,f
  9514  07BC  0B89               	decfsz	9,f
  9515  07BD  2FB9               	goto	u2015
  9516  07BE                     l1109:	
  9517  07BE  30FF               	movlw	255
  9518  07BF  0522               	andwf	___ftpack@arg+2,w
  9519  07C0  1903               	btfsc	3,2
  9520  07C1  2FCB               	goto	l2794
  9521  07C2  2FAA               	goto	l2786
  9522  07C3                     l2792:	
  9523  07C3  3001               	movlw	1
  9524  07C4  02A3               	subwf	___ftpack@exp,f
  9525  07C5  3001               	movlw	1
  9526  07C6                     u2035:	
  9527  07C6  35A0               	lslf	___ftpack@arg,f
  9528  07C7  0DA1               	rlf	___ftpack@arg+1,f
  9529  07C8  0DA2               	rlf	___ftpack@arg+2,f
  9530  07C9  0B89               	decfsz	9,f
  9531  07CA  2FC6               	goto	u2035
  9532  07CB                     l2794:	
  9533  07CB  1BA1               	btfsc	___ftpack@arg+1,7
  9534  07CC  2FD1               	goto	l1116
  9535  07CD  3002               	movlw	2
  9536  07CE  0223               	subwf	___ftpack@exp,w
  9537  07CF  1803               	skipnc
  9538  07D0  2FC3               	goto	l2792
  9539  07D1                     l1116:	
  9540  07D1  1823               	btfsc	___ftpack@exp,0
  9541  07D2  2FD9               	goto	l1117
  9542  07D3  30FF               	movlw	255
  9543  07D4  05A0               	andwf	___ftpack@arg,f
  9544  07D5  307F               	movlw	127
  9545  07D6  05A1               	andwf	___ftpack@arg+1,f
  9546  07D7  30FF               	movlw	255
  9547  07D8  05A2               	andwf	___ftpack@arg+2,f
  9548  07D9                     l1117:	
  9549  07D9  1003               	clrc
  9550  07DA  0CA3               	rrf	___ftpack@exp,f
  9551  07DB  0823               	movf	___ftpack@exp,w
  9552  07DC  00A5               	movwf	??___ftpack
  9553  07DD  01A6               	clrf	??___ftpack+1
  9554  07DE  01A7               	clrf	??___ftpack+2
  9555  07DF  3010               	movlw	16
  9556  07E0                     u2075:	
  9557  07E0  35A5               	lslf	??___ftpack,f
  9558  07E1  0DA6               	rlf	??___ftpack+1,f
  9559  07E2  0DA7               	rlf	??___ftpack+2,f
  9560  07E3  0B89               	decfsz	9,f
  9561  07E4  2FE0               	goto	u2075
  9562  07E5  0825               	movf	??___ftpack,w
  9563  07E6  04A0               	iorwf	___ftpack@arg,f
  9564  07E7  0826               	movf	??___ftpack+1,w
  9565  07E8  04A1               	iorwf	___ftpack@arg+1,f
  9566  07E9  0827               	movf	??___ftpack+2,w
  9567  07EA  04A2               	iorwf	___ftpack@arg+2,f
  9568  07EB  0824               	movf	___ftpack@sign,w
  9569  07EC  1903               	btfsc	3,2
  9570  07ED  0008               	return
  9571  07EE  17A2               	bsf	___ftpack@arg+2,7
  9572  07EF  0008               	return
  9573  07F0                     __end_of___ftpack:	
  9574                           
  9575                           	psect	text17
  9576  0ABA                     __ptext17:	
  9577 ;; *************** function _SYSTEM_Initialize *****************
  9578 ;; Defined at:
  9579 ;;		line 83 in file "mcc_generated_files/mcc.c"
  9580 ;; Parameters:    Size  Location     Type
  9581 ;;		None
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      void 
  9586 ;; Registers used:
  9587 ;;		wreg, status,2, status,0, pclath, cstack
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9597 ;;Total ram usage:        0 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; Hardware stack levels required when called:    4
  9600 ;; This function calls:
  9601 ;;		_ADCC_Initialize
  9602 ;;		_I2C1_Initialize
  9603 ;;		_OSCILLATOR_Initialize
  9604 ;;		_PIN_MANAGER_Initialize
  9605 ;; This function is called by:
  9606 ;;		_main
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           
  9611                           ;psect for function _SYSTEM_Initialize
  9612  0ABA                     _SYSTEM_Initialize:	
  9613                           
  9614                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  9615                           
  9616                           ;incstack = 0
  9617                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9618  0ABA  318C  24AF  318A   	fcall	_PIN_MANAGER_Initialize
  9619                           
  9620                           ;mcc.c: 87: OSCILLATOR_Initialize();
  9621  0ABD  318A  22A6  318A   	fcall	_OSCILLATOR_Initialize
  9622                           
  9623                           ;mcc.c: 88: I2C1_Initialize();
  9624  0AC0  318B  232E  318A   	fcall	_I2C1_Initialize
  9625                           
  9626                           ;mcc.c: 89: ADCC_Initialize();
  9627  0AC3  318B  2376         	fcall	_ADCC_Initialize
  9628  0AC5  0008               	return
  9629  0AC6                     __end_of_SYSTEM_Initialize:	
  9630                           
  9631                           	psect	text18
  9632  0CAF                     __ptext18:	
  9633 ;; *************** function _PIN_MANAGER_Initialize *****************
  9634 ;; Defined at:
  9635 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;		None
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  state           1    0[BANK0 ] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;Total ram usage:        1 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    3
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_SYSTEM_Initialize
  9660 ;; This function uses a non-reentrant model
  9661 ;;
  9662                           
  9663                           
  9664                           ;psect for function _PIN_MANAGER_Initialize
  9665  0CAF                     _PIN_MANAGER_Initialize:	
  9666                           
  9667                           ;pin_manager.c: 57: LATA = 0x00;
  9668                           
  9669                           ;incstack = 0
  9670                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  9671  0CAF  0020               	movlb	0	; select bank0
  9672  0CB0  0196               	clrf	22	;volatile
  9673                           
  9674                           ;pin_manager.c: 58: LATB = 0x00;
  9675  0CB1  0197               	clrf	23	;volatile
  9676                           
  9677                           ;pin_manager.c: 59: LATC = 0x00;
  9678  0CB2  0198               	clrf	24	;volatile
  9679                           
  9680                           ;pin_manager.c: 64: TRISA = 0x7F;
  9681  0CB3  307F               	movlw	127
  9682  0CB4  0091               	movwf	17	;volatile
  9683                           
  9684                           ;pin_manager.c: 65: TRISB = 0x30;
  9685  0CB5  3030               	movlw	48
  9686  0CB6  0092               	movwf	18	;volatile
  9687                           
  9688                           ;pin_manager.c: 66: TRISC = 0x1D;
  9689  0CB7  301D               	movlw	29
  9690  0CB8  0093               	movwf	19	;volatile
  9691                           
  9692                           ;pin_manager.c: 71: ANSELC = 0xE7;
  9693  0CB9  30E7               	movlw	231
  9694  0CBA  003E               	movlb	30	; select bank30
  9695  0CBB  00CE               	movwf	78	;volatile
  9696                           
  9697                           ;pin_manager.c: 72: ANSELB = 0xCF;
  9698  0CBC  30CF               	movlw	207
  9699  0CBD  00C3               	movwf	67	;volatile
  9700                           
  9701                           ;pin_manager.c: 73: ANSELA = 0xFF;
  9702  0CBE  30FF               	movlw	255
  9703  0CBF  00B8               	movwf	56	;volatile
  9704                           
  9705                           ;pin_manager.c: 78: WPUE = 0x00;
  9706  0CC0  01E5               	clrf	101	;volatile
  9707                           
  9708                           ;pin_manager.c: 79: WPUB = 0x30;
  9709  0CC1  3030               	movlw	48
  9710  0CC2  00C4               	movwf	68	;volatile
  9711                           
  9712                           ;pin_manager.c: 80: WPUA = 0x00;
  9713  0CC3  01B9               	clrf	57	;volatile
  9714                           
  9715                           ;pin_manager.c: 81: WPUC = 0x00;
  9716  0CC4  01CF               	clrf	79	;volatile
  9717                           
  9718                           ;pin_manager.c: 86: ODCONA = 0x00;
  9719  0CC5  01BA               	clrf	58	;volatile
  9720                           
  9721                           ;pin_manager.c: 87: ODCONB = 0x00;
  9722  0CC6  01C5               	clrf	69	;volatile
  9723                           
  9724                           ;pin_manager.c: 88: ODCONC = 0x00;
  9725  0CC7  01D0               	clrf	80	;volatile
  9726                           
  9727                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  9728  0CC8  3000               	movlw	0
  9729  0CC9  1B8B               	btfsc	11,7	;volatile
  9730  0CCA  3001               	movlw	1
  9731  0CCB  0020               	movlb	0	; select bank0
  9732  0CCC  00A0               	movwf	PIN_MANAGER_Initialize@state
  9733                           
  9734                           ;pin_manager.c: 96: GIE = 0;
  9735  0CCD  138B               	bcf	11,7	;volatile
  9736                           
  9737                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  9738  0CCE  3055               	movlw	85
  9739  0CCF  003D               	movlb	29	; select bank29
  9740  0CD0  008F               	movwf	15	;volsfr
  9741                           
  9742                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  9743  0CD1  30AA               	movlw	170
  9744  0CD2  008F               	movwf	15	;volsfr
  9745                           
  9746                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  9747  0CD3  100F               	bcf	15,0	;volsfr
  9748                           
  9749                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  9750  0CD4  0846               	movf	70,w	;volatile
  9751  0CD5  39E0               	andlw	-32
  9752  0CD6  3813               	iorlw	19
  9753  0CD7  00C6               	movwf	70	;volatile
  9754                           
  9755                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  9756  0CD8  0845               	movf	69,w	;volatile
  9757  0CD9  39E0               	andlw	-32
  9758  0CDA  3814               	iorlw	20
  9759  0CDB  00C5               	movwf	69	;volatile
  9760                           
  9761                           ;pin_manager.c: 103: RC3PPS = 0x15;
  9762  0CDC  3015               	movlw	21
  9763  0CDD  003E               	movlb	30	; select bank30
  9764  0CDE  00A3               	movwf	35	;volatile
  9765                           
  9766                           ;pin_manager.c: 104: RC4PPS = 0x14;
  9767  0CDF  3014               	movlw	20
  9768  0CE0  00A4               	movwf	36	;volatile
  9769                           
  9770                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  9771  0CE1  3055               	movlw	85
  9772  0CE2  003D               	movlb	29	; select bank29
  9773  0CE3  008F               	movwf	15	;volsfr
  9774                           
  9775                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  9776  0CE4  30AA               	movlw	170
  9777  0CE5  008F               	movwf	15	;volsfr
  9778                           
  9779                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  9780  0CE6  140F               	bsf	15,0	;volsfr
  9781                           
  9782                           ;pin_manager.c: 110: GIE = state;
  9783  0CE7  0020               	movlb	0	; select bank0
  9784  0CE8  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  9785  0CE9  2CEC               	goto	u4050
  9786  0CEA  178B               	bsf	11,7	;volatile
  9787  0CEB  0008               	return
  9788  0CEC                     u4050:	
  9789  0CEC  138B               	bcf	11,7	;volatile
  9790  0CED  0008               	return
  9791  0CEE                     __end_of_PIN_MANAGER_Initialize:	
  9792                           
  9793                           	psect	text19
  9794  0AA6                     __ptext19:	
  9795 ;; *************** function _OSCILLATOR_Initialize *****************
  9796 ;; Defined at:
  9797 ;;		line 92 in file "mcc_generated_files/mcc.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;		None
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;		None
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  1    wreg      void 
  9804 ;; Registers used:
  9805 ;;		wreg, status,2
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;Total ram usage:        0 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:    3
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_SYSTEM_Initialize
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           
  9826                           ;psect for function _OSCILLATOR_Initialize
  9827  0AA6                     _OSCILLATOR_Initialize:	
  9828                           
  9829                           ;mcc.c: 95: OSCCON1 = 0x60;
  9830                           
  9831                           ;incstack = 0
  9832                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9833  0AA6  3060               	movlw	96
  9834  0AA7  0031               	movlb	17	; select bank17
  9835  0AA8  008D               	movwf	13	;volatile
  9836                           
  9837                           ;mcc.c: 97: OSCCON3 = 0x00;
  9838  0AA9  018F               	clrf	15	;volatile
  9839                           
  9840                           ;mcc.c: 99: OSCEN = 0x00;
  9841  0AAA  0191               	clrf	17	;volatile
  9842                           
  9843                           ;mcc.c: 101: OSCFRQ = 0x06;
  9844  0AAB  3006               	movlw	6
  9845  0AAC  0093               	movwf	19	;volatile
  9846                           
  9847                           ;mcc.c: 103: OSCTUNE = 0x00;
  9848  0AAD  0192               	clrf	18	;volatile
  9849  0AAE  0008               	return
  9850  0AAF                     __end_of_OSCILLATOR_Initialize:	
  9851                           
  9852                           	psect	text20
  9853  0B2E                     __ptext20:	
  9854 ;; *************** function _I2C1_Initialize *****************
  9855 ;; Defined at:
  9856 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  9857 ;; Parameters:    Size  Location     Type
  9858 ;;		None
  9859 ;; Auto vars:     Size  Location     Type
  9860 ;;		None
  9861 ;; Return value:  Size  Location     Type
  9862 ;;                  1    wreg      void 
  9863 ;; Registers used:
  9864 ;;		wreg, status,2
  9865 ;; Tracked objects:
  9866 ;;		On entry : 0/0
  9867 ;;		On exit  : 0/0
  9868 ;;		Unchanged: 0/0
  9869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9872 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9874 ;;Total ram usage:        1 bytes
  9875 ;; Hardware stack levels used:    1
  9876 ;; Hardware stack levels required when called:    3
  9877 ;; This function calls:
  9878 ;;		Nothing
  9879 ;; This function is called by:
  9880 ;;		_SYSTEM_Initialize
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           
  9885                           ;psect for function _I2C1_Initialize
  9886  0B2E                     _I2C1_Initialize:	
  9887                           
  9888                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  9889                           
  9890                           ;incstack = 0
  9891                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  9892  0B2E  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9893  0B2F  0020               	movlb	0	; select bank0
  9894  0B30  00A0               	movwf	??_I2C1_Initialize
  9895  0B31  0820               	movf	??_I2C1_Initialize,w
  9896  0B32  00E8               	movwf	low ((_i2c1_object| 0+1))
  9897                           
  9898                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  9899  0B33  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9900  0B34  00A0               	movwf	??_I2C1_Initialize
  9901  0B35  0820               	movf	??_I2C1_Initialize,w
  9902  0B36  00E7               	movwf	_i2c1_object
  9903                           
  9904                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  9905  0B37  14E9               	bsf	_i2c1_object+2,1
  9906                           
  9907                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  9908  0B38  1069               	bcf	_i2c1_object+2,0
  9909                           
  9910                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  9911  0B39  01EB               	clrf	_i2c1_object+4
  9912                           
  9913                           ;i2c1.c: 208: SSP1STAT = 0x00;
  9914  0B3A  0023               	movlb	3	; select bank3
  9915  0B3B  018F               	clrf	15	;volatile
  9916                           
  9917                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  9918  0B3C  3028               	movlw	40
  9919  0B3D  0090               	movwf	16	;volatile
  9920                           
  9921                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  9922  0B3E  0192               	clrf	18	;volatile
  9923                           
  9924                           ;i2c1.c: 214: SSP1ADD = 0x13;
  9925  0B3F  3013               	movlw	19
  9926  0B40  008D               	movwf	13	;volatile
  9927                           
  9928                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  9929  0B41  002E               	movlb	14	; select bank14
  9930  0B42  100F               	bcf	15,0	;volatile
  9931                           
  9932                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  9933  0B43  1419               	bsf	25,0	;volatile
  9934  0B44  0008               	return
  9935  0B45                     __end_of_I2C1_Initialize:	
  9936                           
  9937                           	psect	text21
  9938  0B76                     __ptext21:	
  9939 ;; *************** function _ADCC_Initialize *****************
  9940 ;; Defined at:
  9941 ;;		line 62 in file "mcc_generated_files/adcc.c"
  9942 ;; Parameters:    Size  Location     Type
  9943 ;;		None
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;		None
  9946 ;; Return value:  Size  Location     Type
  9947 ;;                  1    wreg      void 
  9948 ;; Registers used:
  9949 ;;		wreg, status,2
  9950 ;; Tracked objects:
  9951 ;;		On entry : 0/0
  9952 ;;		On exit  : 0/0
  9953 ;;		Unchanged: 0/0
  9954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9959 ;;Total ram usage:        0 bytes
  9960 ;; Hardware stack levels used:    1
  9961 ;; Hardware stack levels required when called:    3
  9962 ;; This function calls:
  9963 ;;		Nothing
  9964 ;; This function is called by:
  9965 ;;		_SYSTEM_Initialize
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           
  9969                           
  9970                           ;psect for function _ADCC_Initialize
  9971  0B76                     _ADCC_Initialize:	
  9972                           
  9973                           ;adcc.c: 66: ADCON1 = 0x00;
  9974                           
  9975                           ;incstack = 0
  9976                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9977  0B76  0021               	movlb	1	; select bank1
  9978  0B77  0194               	clrf	20	;volatile
  9979                           
  9980                           ;adcc.c: 68: ADCON2 = 0x03;
  9981  0B78  3003               	movlw	3
  9982  0B79  0095               	movwf	21	;volatile
  9983                           
  9984                           ;adcc.c: 70: ADCON3 = 0x00;
  9985  0B7A  0196               	clrf	22	;volatile
  9986                           
  9987                           ;adcc.c: 72: ADACT = 0x00;
  9988  0B7B  0199               	clrf	25	;volatile
  9989                           
  9990                           ;adcc.c: 74: ADSTAT = 0x00;
  9991  0B7C  0197               	clrf	23	;volatile
  9992                           
  9993                           ;adcc.c: 76: ADCLK = 0x13;
  9994  0B7D  3013               	movlw	19
  9995  0B7E  0098               	movwf	24	;volatile
  9996                           
  9997                           ;adcc.c: 78: ADREF = 0x00;
  9998  0B7F  019A               	clrf	26	;volatile
  9999                           
 10000                           ;adcc.c: 80: ADCAP = 0x00;
 10001  0B80  019B               	clrf	27	;volatile
 10002                           
 10003                           ;adcc.c: 82: ADPRE = 0x00;
 10004  0B81  019C               	clrf	28	;volatile
 10005                           
 10006                           ;adcc.c: 84: ADACQ = 0x04;
 10007  0B82  3004               	movlw	4
 10008  0B83  009D               	movwf	29	;volatile
 10009                           
 10010                           ;adcc.c: 86: ADPCH = 0x00;
 10011  0B84  019E               	clrf	30	;volatile
 10012                           
 10013                           ;adcc.c: 88: ADRPT = 0x00;
 10014  0B85  0022               	movlb	2	; select bank2
 10015  0B86  018D               	clrf	13	;volatile
 10016                           
 10017                           ;adcc.c: 90: ADLTHL = 0x00;
 10018  0B87  018E               	clrf	14	;volatile
 10019                           
 10020                           ;adcc.c: 92: ADLTHH = 0x00;
 10021  0B88  018F               	clrf	15	;volatile
 10022                           
 10023                           ;adcc.c: 94: ADUTHL = 0x00;
 10024  0B89  0190               	clrf	16	;volatile
 10025                           
 10026                           ;adcc.c: 96: ADUTHH = 0x00;
 10027  0B8A  0191               	clrf	17	;volatile
 10028                           
 10029                           ;adcc.c: 98: ADSTPTL = 0x00;
 10030  0B8B  0192               	clrf	18	;volatile
 10031                           
 10032                           ;adcc.c: 100: ADSTPTH = 0x00;
 10033  0B8C  0193               	clrf	19	;volatile
 10034                           
 10035                           ;adcc.c: 103: ADCON0 = 0x84;
 10036  0B8D  3084               	movlw	132
 10037  0B8E  0021               	movlb	1	; select bank1
 10038  0B8F  0093               	movwf	19	;volatile
 10039  0B90  0008               	return
 10040  0B91                     __end_of_ADCC_Initialize:	
 10041                           
 10042                           	psect	text22
 10043  07F0                     __ptext22:	
 10044 ;; *************** function _LED7SegSetup *****************
 10045 ;; Defined at:
 10046 ;;		line 31 in file "LED7Seg.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;		None
 10049 ;; Auto vars:     Size  Location     Type
 10050 ;;		None
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      void 
 10053 ;; Registers used:
 10054 ;;		None
 10055 ;; Tracked objects:
 10056 ;;		On entry : 0/0
 10057 ;;		On exit  : 0/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;Total ram usage:        0 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; Hardware stack levels required when called:    3
 10067 ;; This function calls:
 10068 ;;		Nothing
 10069 ;; This function is called by:
 10070 ;;		_main
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           
 10075                           ;psect for function _LED7SegSetup
 10076  07F0                     _LED7SegSetup:	
 10077                           
 10078                           ;incstack = 0
 10079                           ; Regs used in _LED7SegSetup: []
 10080                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
 10081  07F0  003E               	movlb	30	; select bank30
 10082  07F1  12CE               	bcf	78,5	;volatile
 10083                           
 10084                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
 10085  07F2  0020               	movlb	0	; select bank0
 10086  07F3  1293               	bcf	19,5	;volatile
 10087                           
 10088                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
 10089  07F4  003E               	movlb	30	; select bank30
 10090  07F5  134E               	bcf	78,6	;volatile
 10091                           
 10092                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
 10093  07F6  0020               	movlb	0	; select bank0
 10094  07F7  1313               	bcf	19,6	;volatile
 10095                           
 10096                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
 10097  07F8  003E               	movlb	30	; select bank30
 10098  07F9  13CE               	bcf	78,7	;volatile
 10099                           
 10100                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
 10101  07FA  0020               	movlb	0	; select bank0
 10102  07FB  1393               	bcf	19,7	;volatile
 10103  07FC  0008               	return
 10104  07FD                     __end_of_LED7SegSetup:	
 10105                           
 10106                           	psect	text23
 10107  0C76                     __ptext23:	
 10108 ;; *************** function _LED7SegDisplayValueByDigit *****************
 10109 ;; Defined at:
 10110 ;;		line 95 in file "LED7Seg.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  iTensDigit      2   20[BANK0 ] unsigned int 
 10113 ;;  iUnitsDigit     2   22[BANK0 ] unsigned int 
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;  iTensCode       2   24[BANK0 ] unsigned int 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      void 
 10118 ;; Registers used:
 10119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10125 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10129 ;;Total ram usage:        6 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:    7
 10132 ;; This function calls:
 10133 ;;		_LED7SegShiftOutPulseClock
 10134 ;; This function is called by:
 10135 ;;		_main
 10136 ;;		_LED7SegDisplayValue
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           
 10141                           ;psect for function _LED7SegDisplayValueByDigit
 10142  0C76                     _LED7SegDisplayValueByDigit:	
 10143                           
 10144                           ;LED7Seg.c: 99: if(iUnitsDigit>9) iUnitsDigit=9;
 10145                           
 10146                           ;LED7Seg.c: 96: unsigned int iTensCode;
 10147                           ;LED7Seg.c: 98: if(0>iUnitsDigit) iUnitsDigit=0;
 10148                           
 10149                           ;incstack = 0
 10150                           ; Regs used in _LED7SegDisplayValueByDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10151  0C76  3000               	movlw	0
 10152  0C77  0020               	movlb	0	; select bank0
 10153  0C78  0237               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit+1,w
 10154  0C79  300A               	movlw	10
 10155  0C7A  1903               	skipnz
 10156  0C7B  0236               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit,w
 10157  0C7C  1C03               	skipc
 10158  0C7D  2C82               	goto	l4296
 10159  0C7E  3009               	movlw	9
 10160  0C7F  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
 10161  0C80  3000               	movlw	0
 10162  0C81  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
 10163  0C82                     l4296:	
 10164                           ;LED7Seg.c: 101: if(0>iTensDigit) iTensDigit=0;
 10165                           
 10166                           
 10167                           ;LED7Seg.c: 102: if(iTensDigit>9) iTensDigit=9;
 10168  0C82  3000               	movlw	0
 10169  0C83  0235               	subwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
 10170  0C84  300A               	movlw	10
 10171  0C85  1903               	skipnz
 10172  0C86  0234               	subwf	LED7SegDisplayValueByDigit@iTensDigit,w
 10173  0C87  1C03               	skipc
 10174  0C88  2C8D               	goto	l4300
 10175  0C89  3009               	movlw	9
 10176  0C8A  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
 10177  0C8B  3000               	movlw	0
 10178  0C8C  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
 10179  0C8D                     l4300:	
 10180                           
 10181                           ;LED7Seg.c: 104: iTensCode=segdisp[iTensDigit];
 10182  0C8D  3534               	lslf	LED7SegDisplayValueByDigit@iTensDigit,w
 10183  0C8E  3E20               	addlw	(low (_segdisp| (0+256)))& (0+255)
 10184  0C8F  0086               	movwf	6
 10185  0C90  3001               	movlw	1	; select bank2/3
 10186  0C91  0087               	movwf	7
 10187  0C92  3F40               	moviw [0]fsr1
 10188  0C93  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
 10189  0C94  3F41               	moviw [1]fsr1
 10190  0C95  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
 10191                           
 10192                           ;LED7Seg.c: 105: if(0==iTensDigit) iTensCode=255;
 10193  0C96  0834               	movf	LED7SegDisplayValueByDigit@iTensDigit,w
 10194  0C97  0435               	iorwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
 10195  0C98  1D03               	btfss	3,2
 10196  0C99  2C9E               	goto	l4306
 10197  0C9A  30FF               	movlw	255
 10198  0C9B  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
 10199  0C9C  3000               	movlw	0
 10200  0C9D  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
 10201  0C9E                     l4306:	
 10202                           
 10203                           ;LED7Seg.c: 107: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
 10204  0C9E  3536               	lslf	LED7SegDisplayValueByDigit@iUnitsDigit,w
 10205  0C9F  3E20               	addlw	(low (_segdisp| (0+256)))& (0+255)
 10206  0CA0  0086               	movwf	6
 10207  0CA1  3001               	movlw	1	; select bank2/3
 10208  0CA2  0087               	movwf	7
 10209  0CA3  0801               	movf	1,w
 10210  0CA4  318B  23AD  318C   	fcall	_LED7SegShiftOutPulseClock
 10211                           
 10212                           ;LED7Seg.c: 108: LED7SegShiftOutPulseClock( iTensCode );
 10213  0CA7  0020               	movlb	0	; select bank0
 10214  0CA8  0838               	movf	LED7SegDisplayValueByDigit@iTensCode,w
 10215  0CA9  318B  23AD         	fcall	_LED7SegShiftOutPulseClock
 10216                           
 10217                           ;LED7Seg.c: 110: do { LATCbits.LATC5 = 1; } while(0);
 10218  0CAB  0020               	movlb	0	; select bank0
 10219  0CAC  1698               	bsf	24,5	;volatile
 10220                           
 10221                           ;LED7Seg.c: 111: do { LATCbits.LATC5 = 0; } while(0);
 10222  0CAD  1298               	bcf	24,5	;volatile
 10223  0CAE  0008               	return
 10224  0CAF                     __end_of_LED7SegDisplayValueByDigit:	
 10225                           
 10226                           	psect	text24
 10227  0BAD                     __ptext24:	
 10228 ;; *************** function _LED7SegShiftOutPulseClock *****************
 10229 ;; Defined at:
 10230 ;;		line 69 in file "LED7Seg.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  val             1    wreg     unsigned char 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  val             1   18[BANK0 ] unsigned char 
 10235 ;;  i               1   19[BANK0 ] unsigned char 
 10236 ;; Return value:  Size  Location     Type
 10237 ;;                  1    wreg      void 
 10238 ;; Registers used:
 10239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10240 ;; Tracked objects:
 10241 ;;		On entry : 0/0
 10242 ;;		On exit  : 0/0
 10243 ;;		Unchanged: 0/0
 10244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10246 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10249 ;;Total ram usage:        3 bytes
 10250 ;; Hardware stack levels used:    1
 10251 ;; Hardware stack levels required when called:    6
 10252 ;; This function calls:
 10253 ;;		_LED7SegPinWrite
 10254 ;;		_LED7SegPulseClock
 10255 ;; This function is called by:
 10256 ;;		_LED7SegDisplayValueByDigit
 10257 ;;		_LED7SegBlankDisplay
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           
 10262                           ;psect for function _LED7SegShiftOutPulseClock
 10263  0BAD                     _LED7SegShiftOutPulseClock:	
 10264                           
 10265                           ;incstack = 0
 10266                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10267                           ;LED7SegShiftOutPulseClock@val stored from wreg
 10268  0BAD  0020               	movlb	0	; select bank0
 10269  0BAE  00B2               	movwf	LED7SegShiftOutPulseClock@val
 10270                           
 10271                           ;LED7Seg.c: 71: char i;
 10272                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
 10273  0BAF  01B3               	clrf	LED7SegShiftOutPulseClock@i
 10274  0BB0                     L5:	
 10275  0BB0  3008               	movlw	8
 10276  0BB1  0233               	subwf	LED7SegShiftOutPulseClock@i,w
 10277  0BB2  1803               	btfsc	3,0
 10278  0BB3  0008               	return
 10279                           
 10280                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
 10281  0BB4  3001               	movlw	1
 10282  0BB5  00B1               	movwf	??_LED7SegShiftOutPulseClock
 10283  0BB6  0A33               	incf	LED7SegShiftOutPulseClock@i,w
 10284  0BB7  2BB9               	goto	u4084
 10285  0BB8                     u4085:	
 10286  0BB8  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
 10287  0BB9                     u4084:	
 10288  0BB9  0B89               	decfsz	9,f
 10289  0BBA  2BB8               	goto	u4085
 10290  0BBB  0831               	movf	??_LED7SegShiftOutPulseClock,w
 10291  0BBC  0532               	andwf	LED7SegShiftOutPulseClock@val,w
 10292  0BBD  318A  229D  318B   	fcall	_LED7SegPinWrite
 10293                           
 10294                           ;LED7Seg.c: 77: LED7SegPulseClock();
 10295  0BC0  318A  22AF  318B   	fcall	_LED7SegPulseClock
 10296  0BC3  3001               	movlw	1
 10297  0BC4  0020               	movlb	0	; select bank0
 10298  0BC5  00B1               	movwf	??_LED7SegShiftOutPulseClock
 10299  0BC6  0831               	movf	??_LED7SegShiftOutPulseClock,w
 10300  0BC7  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
 10301  0BC8  2BB0               	goto	L5
 10302  0BC9                     __end_of_LED7SegShiftOutPulseClock:	
 10303                           
 10304                           	psect	text25
 10305  0AAF                     __ptext25:	
 10306 ;; *************** function _LED7SegPulseClock *****************
 10307 ;; Defined at:
 10308 ;;		line 60 in file "LED7Seg.c"
 10309 ;; Parameters:    Size  Location     Type
 10310 ;;		None
 10311 ;; Auto vars:     Size  Location     Type
 10312 ;;		None
 10313 ;; Return value:  Size  Location     Type
 10314 ;;                  1    wreg      void 
 10315 ;; Registers used:
 10316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10317 ;; Tracked objects:
 10318 ;;		On entry : 0/0
 10319 ;;		On exit  : 0/0
 10320 ;;		Unchanged: 0/0
 10321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;Total ram usage:        0 bytes
 10327 ;; Hardware stack levels used:    1
 10328 ;; Hardware stack levels required when called:    5
 10329 ;; This function calls:
 10330 ;;		_delay
 10331 ;; This function is called by:
 10332 ;;		_LED7SegShiftOutPulseClock
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _LED7SegPulseClock
 10338  0AAF                     _LED7SegPulseClock:	
 10339                           
 10340                           ;incstack = 0
 10341                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10342                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
 10343  0AAF  0020               	movlb	0	; select bank0
 10344  0AB0  1718               	bsf	24,6	;volatile
 10345                           
 10346                           ;LED7Seg.c: 64: delay(1);
 10347  0AB1  3001               	movlw	1
 10348  0AB2  00A6               	movwf	delay@delaytime
 10349  0AB3  3000               	movlw	0
 10350  0AB4  00A7               	movwf	delay@delaytime+1
 10351  0AB5  318D  2574         	fcall	_delay
 10352                           
 10353                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
 10354  0AB7  0020               	movlb	0	; select bank0
 10355  0AB8  1318               	bcf	24,6	;volatile
 10356  0AB9  0008               	return
 10357  0ABA                     __end_of_LED7SegPulseClock:	
 10358                           
 10359                           	psect	text26
 10360  0D74                     __ptext26:	
 10361 ;; *************** function _delay *****************
 10362 ;; Defined at:
 10363 ;;		line 194 in file "main.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;  delaytime       2    6[BANK0 ] int 
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;  counter         4   13[BANK0 ] long 
 10368 ;;  adjustedDela    4    9[BANK0 ] long 
 10369 ;; Return value:  Size  Location     Type
 10370 ;;                  1    wreg      void 
 10371 ;; Registers used:
 10372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10373 ;; Tracked objects:
 10374 ;;		On entry : 0/0
 10375 ;;		On exit  : 0/0
 10376 ;;		Unchanged: 0/0
 10377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10379 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10381 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10382 ;;Total ram usage:       11 bytes
 10383 ;; Hardware stack levels used:    1
 10384 ;; Hardware stack levels required when called:    4
 10385 ;; This function calls:
 10386 ;;		___wmul
 10387 ;; This function is called by:
 10388 ;;		_main
 10389 ;;		_LED7SegPulseClock
 10390 ;;		_blinkyLoop
 10391 ;;		_LED7SegLoop
 10392 ;; This function uses a non-reentrant model
 10393 ;;
 10394                           
 10395                           
 10396                           ;psect for function _delay
 10397  0D74                     _delay:	
 10398                           
 10399                           ;main.c: 195: long counter = 0;
 10400                           
 10401                           ;incstack = 0
 10402                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10403  0D74  3000               	movlw	0
 10404  0D75  0020               	movlb	0	; select bank0
 10405  0D76  00B0               	movwf	delay@counter+3
 10406  0D77  3000               	movlw	0
 10407  0D78  00AF               	movwf	delay@counter+2
 10408  0D79  3000               	movlw	0
 10409  0D7A  00AE               	movwf	delay@counter+1
 10410  0D7B  3000               	movlw	0
 10411  0D7C  00AD               	movwf	delay@counter
 10412                           
 10413                           ;main.c: 196: long adjustedDelaytime=delaytime*cMstrClkAdjust;
 10414  0D7D  0827               	movf	delay@delaytime+1,w
 10415  0D7E  00A1               	movwf	___wmul@multiplier+1
 10416  0D7F  0826               	movf	delay@delaytime,w
 10417  0D80  00A0               	movwf	___wmul@multiplier
 10418  0D81  302A               	movlw	low (_cMstrClkAdjust| (0+32768))
 10419  0D82  0084               	movwf	4
 10420  0D83  3090               	movlw	high (_cMstrClkAdjust| (0+32768))
 10421  0D84  0085               	movwf	5
 10422  0D85  3F00               	moviw [0]fsr0
 10423  0D86  00A2               	movwf	___wmul@multiplicand
 10424  0D87  3F01               	moviw [1]fsr0
 10425  0D88  00A3               	movwf	___wmul@multiplicand+1
 10426  0D89  318B  2391  318D   	fcall	___wmul
 10427  0D8C  0020               	movlb	0	; select bank0
 10428  0D8D  0820               	movf	?___wmul,w
 10429  0D8E  00A9               	movwf	delay@adjustedDelaytime
 10430  0D8F  0821               	movf	?___wmul+1,w
 10431  0D90  00AA               	movwf	delay@adjustedDelaytime+1
 10432  0D91  0D89               	rlf	9,f
 10433  0D92  3B89               	subwfb	9,f
 10434  0D93  0989               	comf	9,f
 10435  0D94  00AB               	movwf	delay@adjustedDelaytime+2
 10436  0D95  00AC               	movwf	delay@adjustedDelaytime+3
 10437                           
 10438                           ;main.c: 198: if (0<delaytime)
 10439  0D96  0827               	movf	delay@delaytime+1,w
 10440  0D97  3A80               	xorlw	128
 10441  0D98  00A8               	movwf	??_delay
 10442  0D99  3080               	movlw	128
 10443  0D9A  0228               	subwf	??_delay,w
 10444  0D9B  1D03               	skipz
 10445  0D9C  2D9F               	goto	u4025
 10446  0D9D  3001               	movlw	1
 10447  0D9E  0226               	subwf	delay@delaytime,w
 10448  0D9F                     u4025:	
 10449  0D9F  1C03               	skipc
 10450  0DA0  0008               	return
 10451                           
 10452                           ;main.c: 199: for (counter = 0; counter<adjustedDelaytime; counter++);
 10453  0DA1  3000               	movlw	0
 10454  0DA2  0020               	movlb	0	; select bank0
 10455  0DA3  00B0               	movwf	delay@counter+3
 10456  0DA4  3000               	movlw	0
 10457  0DA5  00AF               	movwf	delay@counter+2
 10458  0DA6  3000               	movlw	0
 10459  0DA7  00AE               	movwf	delay@counter+1
 10460  0DA8  3000               	movlw	0
 10461  0DA9  00AD               	movwf	delay@counter
 10462  0DAA                     l502:	
 10463  0DAA  0830               	movf	delay@counter+3,w
 10464  0DAB  3A80               	xorlw	128
 10465  0DAC  00A8               	movwf	??_delay
 10466  0DAD  082C               	movf	delay@adjustedDelaytime+3,w
 10467  0DAE  3A80               	xorlw	128
 10468  0DAF  0228               	subwf	??_delay,w
 10469  0DB0  1D03               	skipz
 10470  0DB1  2DBC               	goto	u4033
 10471  0DB2  082B               	movf	delay@adjustedDelaytime+2,w
 10472  0DB3  022F               	subwf	delay@counter+2,w
 10473  0DB4  1D03               	skipz
 10474  0DB5  2DBC               	goto	u4033
 10475  0DB6  082A               	movf	delay@adjustedDelaytime+1,w
 10476  0DB7  022E               	subwf	delay@counter+1,w
 10477  0DB8  1D03               	skipz
 10478  0DB9  2DBC               	goto	u4033
 10479  0DBA  0829               	movf	delay@adjustedDelaytime,w
 10480  0DBB  022D               	subwf	delay@counter,w
 10481  0DBC                     u4033:	
 10482  0DBC  1803               	btfsc	3,0
 10483  0DBD  0008               	return
 10484  0DBE  3001               	movlw	1
 10485  0DBF  07AD               	addwf	delay@counter,f
 10486  0DC0  3000               	movlw	0
 10487  0DC1  3DAE               	addwfc	delay@counter+1,f
 10488  0DC2  3000               	movlw	0
 10489  0DC3  3DAF               	addwfc	delay@counter+2,f
 10490  0DC4  3000               	movlw	0
 10491  0DC5  3DB0               	addwfc	delay@counter+3,f
 10492  0DC6  2DAA               	goto	l502
 10493  0DC7                     __end_of_delay:	
 10494                           
 10495                           	psect	text27
 10496  0B91                     __ptext27:	
 10497 ;; *************** function ___wmul *****************
 10498 ;; Defined at:
 10499 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10502 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;  product         2    4[BANK0 ] unsigned int 
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  2    0[BANK0 ] unsigned int 
 10507 ;; Registers used:
 10508 ;;		wreg, status,2, status,0
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10514 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10518 ;;Total ram usage:        6 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:    3
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_delay
 10525 ;;		_main
 10526 ;;		_blinkyLoop
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           
 10531                           ;psect for function ___wmul
 10532  0B91                     ___wmul:	
 10533                           
 10534                           ;incstack = 0
 10535                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10536  0B91  0020               	movlb	0	; select bank0
 10537  0B92  01A4               	clrf	___wmul@product
 10538  0B93  01A5               	clrf	___wmul@product+1
 10539  0B94                     l4148:	
 10540  0B94  1C20               	btfss	___wmul@multiplier,0
 10541  0B95  2B9A               	goto	l948
 10542  0B96  0822               	movf	___wmul@multiplicand,w
 10543  0B97  07A4               	addwf	___wmul@product,f
 10544  0B98  0823               	movf	___wmul@multiplicand+1,w
 10545  0B99  3DA5               	addwfc	___wmul@product+1,f
 10546  0B9A                     l948:	
 10547  0B9A  3001               	movlw	1
 10548  0B9B                     u3995:	
 10549  0B9B  35A2               	lslf	___wmul@multiplicand,f
 10550  0B9C  0DA3               	rlf	___wmul@multiplicand+1,f
 10551  0B9D  0B89               	decfsz	9,f
 10552  0B9E  2B9B               	goto	u3995
 10553  0B9F  3001               	movlw	1
 10554  0BA0                     u4005:	
 10555  0BA0  36A1               	lsrf	___wmul@multiplier+1,f
 10556  0BA1  0CA0               	rrf	___wmul@multiplier,f
 10557  0BA2  0B89               	decfsz	9,f
 10558  0BA3  2BA0               	goto	u4005
 10559  0BA4  0820               	movf	___wmul@multiplier,w
 10560  0BA5  0421               	iorwf	___wmul@multiplier+1,w
 10561  0BA6  1D03               	btfss	3,2
 10562  0BA7  2B94               	goto	l4148
 10563  0BA8  0825               	movf	___wmul@product+1,w
 10564  0BA9  00A1               	movwf	?___wmul+1
 10565  0BAA  0824               	movf	___wmul@product,w
 10566  0BAB  00A0               	movwf	?___wmul
 10567  0BAC  0008               	return
 10568  0BAD                     __end_of___wmul:	
 10569                           
 10570                           	psect	text28
 10571  0A9D                     __ptext28:	
 10572 ;; *************** function _LED7SegPinWrite *****************
 10573 ;; Defined at:
 10574 ;;		line 48 in file "LED7Seg.c"
 10575 ;; Parameters:    Size  Location     Type
 10576 ;;  val             1    wreg     unsigned char 
 10577 ;; Auto vars:     Size  Location     Type
 10578 ;;  val             1    0[BANK0 ] unsigned char 
 10579 ;; Return value:  Size  Location     Type
 10580 ;;                  1    wreg      void 
 10581 ;; Registers used:
 10582 ;;		wreg, status,2, status,0
 10583 ;; Tracked objects:
 10584 ;;		On entry : 0/0
 10585 ;;		On exit  : 0/0
 10586 ;;		Unchanged: 0/0
 10587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;Total ram usage:        1 bytes
 10593 ;; Hardware stack levels used:    1
 10594 ;; Hardware stack levels required when called:    3
 10595 ;; This function calls:
 10596 ;;		Nothing
 10597 ;; This function is called by:
 10598 ;;		_LED7SegShiftOutPulseClock
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           
 10603                           ;psect for function _LED7SegPinWrite
 10604  0A9D                     _LED7SegPinWrite:	
 10605                           
 10606                           ;incstack = 0
 10607                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
 10608                           ;LED7SegPinWrite@val stored from wreg
 10609  0A9D  0020               	movlb	0	; select bank0
 10610  0A9E  00A0               	movwf	LED7SegPinWrite@val
 10611                           
 10612                           ;LED7Seg.c: 50: if (val){
 10613  0A9F  0820               	movf	LED7SegPinWrite@val,w
 10614  0AA0  1903               	btfsc	3,2
 10615  0AA1  2AA4               	goto	l709
 10616                           
 10617                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
 10618  0AA2  1798               	bsf	24,7	;volatile
 10619                           
 10620                           ;LED7Seg.c: 53: } else {
 10621  0AA3  0008               	return
 10622  0AA4                     l709:	
 10623                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
 10624                           
 10625  0AA4  1398               	bcf	24,7	;volatile
 10626  0AA5  0008               	return
 10627  0AA6                     __end_of_LED7SegPinWrite:	
 10628                           
 10629                           	psect	text29
 10630  0B5D                     __ptext29:	
 10631 ;; *************** function _InitmvcChannels *****************
 10632 ;; Defined at:
 10633 ;;		line 182 in file "main.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;		None
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  i               2    1[BANK0 ] int 
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      void 
 10640 ;; Registers used:
 10641 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;Total ram usage:        3 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; Hardware stack levels required when called:    3
 10654 ;; This function calls:
 10655 ;;		Nothing
 10656 ;; This function is called by:
 10657 ;;		_main
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           
 10662                           ;psect for function _InitmvcChannels
 10663  0B5D                     _InitmvcChannels:	
 10664                           
 10665                           ;main.c: 183: for(int i=0; i<cMixFaderCount;i++) {
 10666                           
 10667                           ;incstack = 0
 10668                           ; Regs used in _InitmvcChannels: [wreg+fsr1l+fsr1h+status,2+status,0]
 10669  0B5D  0020               	movlb	0	; select bank0
 10670  0B5E  01A1               	clrf	InitmvcChannels@i
 10671  0B5F  01A2               	clrf	InitmvcChannels@i+1
 10672  0B60                     L6:	
 10673  0B60  0822               	movf	InitmvcChannels@i+1,w
 10674  0B61  3A80               	xorlw	128
 10675  0B62  00A0               	movwf	??_InitmvcChannels
 10676  0B63  3080               	movlw	128
 10677  0B64  0220               	subwf	??_InitmvcChannels,w
 10678  0B65  1D03               	skipz
 10679  0B66  2B69               	goto	u2945
 10680  0B67  3004               	movlw	4
 10681  0B68  0221               	subwf	InitmvcChannels@i,w
 10682  0B69                     u2945:	
 10683  0B69  1803               	btfsc	3,0
 10684  0B6A  0008               	return
 10685                           
 10686                           ;main.c: 184: mvcChannels[i]=0;
 10687  0B6B  0020               	movlb	0	; select bank0
 10688  0B6C  0821               	movf	InitmvcChannels@i,w
 10689  0B6D  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
 10690  0B6E  0086               	movwf	6
 10691  0B6F  0187               	clrf	7
 10692  0B70  0181               	clrf	1
 10693  0B71  3001               	movlw	1
 10694  0B72  07A1               	addwf	InitmvcChannels@i,f
 10695  0B73  3000               	movlw	0
 10696  0B74  3DA2               	addwfc	InitmvcChannels@i+1,f
 10697  0B75  2B60               	goto	L6
 10698  0B76                     __end_of_InitmvcChannels:	
 10699                           
 10700                           	psect	text30
 10701  0BC9                     __ptext30:	
 10702 ;; *************** function _InitPanelInChannels *****************
 10703 ;; Defined at:
 10704 ;;		line 176 in file "main.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;		None
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  i               2    1[BANK0 ] int 
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10713 ;; Tracked objects:
 10714 ;;		On entry : 0/0
 10715 ;;		On exit  : 0/0
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;Total ram usage:        3 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; Hardware stack levels required when called:    3
 10725 ;; This function calls:
 10726 ;;		Nothing
 10727 ;; This function is called by:
 10728 ;;		_main
 10729 ;; This function uses a non-reentrant model
 10730 ;;
 10731                           
 10732                           
 10733                           ;psect for function _InitPanelInChannels
 10734  0BC9                     _InitPanelInChannels:	
 10735                           
 10736                           ;main.c: 177: for(int i=0; i<cMixFaderCount;i++) {
 10737                           
 10738                           ;incstack = 0
 10739                           ; Regs used in _InitPanelInChannels: [wreg+fsr1l+fsr1h+status,2+status,0]
 10740  0BC9  0020               	movlb	0	; select bank0
 10741  0BCA  01A1               	clrf	InitPanelInChannels@i
 10742  0BCB  01A2               	clrf	InitPanelInChannels@i+1
 10743  0BCC                     L7:	
 10744  0BCC  0822               	movf	InitPanelInChannels@i+1,w
 10745  0BCD  3A80               	xorlw	128
 10746  0BCE  00A0               	movwf	??_InitPanelInChannels
 10747  0BCF  3080               	movlw	128
 10748  0BD0  0220               	subwf	??_InitPanelInChannels,w
 10749  0BD1  1D03               	skipz
 10750  0BD2  2BD5               	goto	u2925
 10751  0BD3  3004               	movlw	4
 10752  0BD4  0221               	subwf	InitPanelInChannels@i,w
 10753  0BD5                     u2925:	
 10754  0BD5  1803               	btfsc	3,0
 10755  0BD6  0008               	return
 10756                           
 10757                           ;main.c: 178: PanelInChannels[i]=0;
 10758  0BD7  0020               	movlb	0	; select bank0
 10759  0BD8  0821               	movf	InitPanelInChannels@i,w
 10760  0BD9  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
 10761  0BDA  0086               	movwf	6
 10762  0BDB  0187               	clrf	7
 10763  0BDC  0181               	clrf	1
 10764                           
 10765                           ;main.c: 179: faderActiveFlag[i]=0;
 10766  0BDD  0821               	movf	InitPanelInChannels@i,w
 10767  0BDE  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
 10768  0BDF  0086               	movwf	6
 10769  0BE0  0187               	clrf	7
 10770  0BE1  0181               	clrf	1
 10771  0BE2  3001               	movlw	1
 10772  0BE3  07A1               	addwf	InitPanelInChannels@i,f
 10773  0BE4  3000               	movlw	0
 10774  0BE5  3DA2               	addwfc	InitPanelInChannels@i+1,f
 10775  0BE6  2BCC               	goto	L7
 10776  0BE7                     __end_of_InitPanelInChannels:	
 10777                           
 10778                           	psect	text31
 10779  0AF0                     __ptext31:	
 10780 ;; *************** function _ADCC_GetSingleConversion *****************
 10781 ;; Defined at:
 10782 ;;		line 132 in file "mcc_generated_files/adcc.c"
 10783 ;; Parameters:    Size  Location     Type
 10784 ;;  channel         1    wreg     enum E14259
 10785 ;; Auto vars:     Size  Location     Type
 10786 ;;  channel         1    3[BANK0 ] enum E14259
 10787 ;; Return value:  Size  Location     Type
 10788 ;;                  2    0[BANK0 ] unsigned int 
 10789 ;; Registers used:
 10790 ;;		wreg
 10791 ;; Tracked objects:
 10792 ;;		On entry : 0/0
 10793 ;;		On exit  : 0/0
 10794 ;;		Unchanged: 0/0
 10795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10796 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;Total ram usage:        4 bytes
 10801 ;; Hardware stack levels used:    1
 10802 ;; Hardware stack levels required when called:    3
 10803 ;; This function calls:
 10804 ;;		Nothing
 10805 ;; This function is called by:
 10806 ;;		_main
 10807 ;; This function uses a non-reentrant model
 10808 ;;
 10809                           
 10810                           
 10811                           ;psect for function _ADCC_GetSingleConversion
 10812  0AF0                     _ADCC_GetSingleConversion:	
 10813                           
 10814                           ;incstack = 0
 10815                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 10816                           ;ADCC_GetSingleConversion@channel stored from wreg
 10817  0AF0  0020               	movlb	0	; select bank0
 10818  0AF1  00A3               	movwf	ADCC_GetSingleConversion@channel
 10819                           
 10820                           ;adcc.c: 135: ADPCH = channel;
 10821  0AF2  0823               	movf	ADCC_GetSingleConversion@channel,w
 10822  0AF3  0021               	movlb	1	; select bank1
 10823  0AF4  009E               	movwf	30	;volatile
 10824                           
 10825                           ;adcc.c: 138: ADCON0bits.ADON = 1;
 10826  0AF5  1793               	bsf	19,7	;volatile
 10827                           
 10828                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
 10829  0AF6  1313               	bcf	19,6	;volatile
 10830                           
 10831                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
 10832  0AF7  1413               	bsf	19,0	;volatile
 10833                           
 10834                           ;adcc.c: 147: __nop();
 10835  0AF8  0000               	nop
 10836  0AF9                     l163:	
 10837                           ;adcc.c: 151: {
 10838                           
 10839                           ;adcc.c: 150: while (ADCON0bits.ADGO)
 10840                           
 10841  0AF9  0021               	movlb	1	; select bank1
 10842  0AFA  1813               	btfsc	19,0	;volatile
 10843  0AFB  2AF9               	goto	l163
 10844                           
 10845                           ;adcc.c: 152: }
 10846                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10847  0AFC  080D               	movf	13,w	;volatile
 10848  0AFD  0020               	movlb	0	; select bank0
 10849  0AFE  00A1               	movwf	?_ADCC_GetSingleConversion+1
 10850  0AFF  0021               	movlb	1	; select bank1
 10851  0B00  080C               	movf	12,w	;volatile
 10852  0B01  0020               	movlb	0	; select bank0
 10853  0B02  00A0               	movwf	?_ADCC_GetSingleConversion
 10854  0B03  0008               	return
 10855  0B04                     __end_of_ADCC_GetSingleConversion:	
 10856                           
 10857                           	psect	intentry
 10858  0004                     __pintentry:	
 10859 ;; *************** function _INTERRUPT_InterruptManager *****************
 10860 ;; Defined at:
 10861 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;		None
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10877 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10878 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10879 ;;Total ram usage:        1 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    2
 10882 ;; This function calls:
 10883 ;;		_I2C1_BusCollisionISR
 10884 ;;		_I2C1_ISR
 10885 ;; This function is called by:
 10886 ;;		Interrupt level 1
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890  0004                     _INTERRUPT_InterruptManager:	
 10891                           
 10892                           ;incstack = 0
 10893  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10894                           
 10895                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10896  0005  3180               	pagesel	$
 10897  0006  0020               	movlb	0	; select bank0
 10898  0007  087F               	movf	127,w
 10899  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
 10900                           
 10901                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
 10902  0009  1F0B               	btfss	11,6	;volatile
 10903  000A  2813               	goto	i1l394
 10904  000B  002E               	movlb	14	; select bank14
 10905  000C  1899               	btfsc	25,1	;volatile
 10906  000D  1C8F               	btfss	15,1	;volatile
 10907  000E  2813               	goto	i1l394
 10908                           
 10909                           ;interrupt_manager.c: 55: {
 10910                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
 10911  000F  3187  27FD  3180   	fcall	_I2C1_BusCollisionISR
 10912                           
 10913                           ;interrupt_manager.c: 57: }
 10914  0012  281B               	goto	i1l398
 10915  0013                     i1l394:	
 10916                           
 10917                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
 10918  0013  1F0B               	btfss	11,6	;volatile
 10919  0014  281B               	goto	i1l398
 10920  0015  002E               	movlb	14	; select bank14
 10921  0016  1819               	btfsc	25,0	;volatile
 10922  0017  1C0F               	btfss	15,0	;volatile
 10923  0018  281B               	goto	i1l398
 10924                           
 10925                           ;interrupt_manager.c: 59: {
 10926                           ;interrupt_manager.c: 60: I2C1_ISR();
 10927  0019  3183  2372         	fcall	_I2C1_ISR
 10928  001B                     i1l398:	
 10929                           ;interrupt_manager.c: 62: else
 10930                           ;interrupt_manager.c: 63: {
 10931                           
 10932                           ;interrupt_manager.c: 61: }
 10933                           
 10934  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
 10935  001C  0020               	movlb	0	; select bank0
 10936  001D  00FF               	movwf	127
 10937  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10938  001F  0009               	retfie
 10939  0020                     __end_of_INTERRUPT_InterruptManager:	
 10940                           
 10941                           	psect	text33
 10942  0372                     __ptext33:	
 10943 ;; *************** function _I2C1_ISR *****************
 10944 ;; Defined at:
 10945 ;;		line 233 in file "mcc_generated_files/i2c1.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;		None
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10961 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10963 ;;Total ram usage:        4 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    1
 10966 ;; This function calls:
 10967 ;;		_I2C1_FunctionComplete
 10968 ;;		_I2C1_Stop
 10969 ;; This function is called by:
 10970 ;;		_INTERRUPT_InterruptManager
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           
 10975                           ;psect for function _I2C1_ISR
 10976  0372                     _I2C1_ISR:	
 10977                           
 10978                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
 10979                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
 10980                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
 10981                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
 10982                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
 10983                           
 10984                           ;incstack = 0
 10985                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10986  0372  002E               	movlb	14	; select bank14
 10987  0373  100F               	bcf	15,0	;volatile
 10988                           
 10989                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
 10990  0374  0023               	movlb	3	; select bank3
 10991  0375  1F90               	btfss	16,7	;volatile
 10992  0376  2CA1               	goto	i1l3414
 10993                           
 10994                           ;i2c1.c: 246: {
 10995                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
 10996  0377  1390               	bcf	16,7	;volatile
 10997                           
 10998                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
 10999  0378  0020               	movlb	0	; select bank0
 11000  0379  01EF               	clrf	_i2c1_state
 11001                           
 11002                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 11003  037A  0872               	movf	_p_i2c1_current,w
 11004  037B  3E02               	addlw	2
 11005  037C  0086               	movwf	6
 11006  037D  0187               	clrf	7
 11007  037E  0801               	movf	1,w
 11008  037F  0086               	movwf	6
 11009  0380  0187               	clrf	7
 11010  0381  0181               	clrf	1
 11011  0382  0A81               	incf	1,f
 11012                           
 11013                           ;i2c1.c: 253: p_i2c1_current = (0);
 11014  0383  01F2               	clrf	_p_i2c1_current
 11015                           
 11016                           ;i2c1.c: 255: return;
 11017  0384  0008               	return
 11018  0385                     i1l292:	
 11019                           ;i2c1.c: 260: {
 11020                           ;i2c1.c: 261: case S_MASTER_IDLE:
 11021                           
 11022                           ;i2c1.c: 256: }
 11023                           ;i2c1.c: 259: switch(i2c1_state)
 11024                           
 11025                           
 11026                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
 11027  0385  18E9               	btfsc	_i2c1_object+2,1
 11028  0386  0008               	return
 11029                           
 11030                           ;i2c1.c: 264: {
 11031                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
 11032  0387  0868               	movf	low ((_i2c1_object| 0+1)),w
 11033  0388  00F9               	movwf	??_I2C1_ISR
 11034  0389  0879               	movf	??_I2C1_ISR,w
 11035  038A  00F2               	movwf	_p_i2c1_current
 11036                           
 11037                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
 11038  038B  0868               	movf	low ((_i2c1_object| 0+1)),w
 11039  038C  0086               	movwf	6
 11040  038D  0187               	clrf	7
 11041  038E  0801               	movf	1,w
 11042  038F  00F9               	movwf	??_I2C1_ISR
 11043  0390  0879               	movf	??_I2C1_ISR,w
 11044  0391  00F4               	movwf	_i2c1_trb_count
 11045                           
 11046                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 11047  0392  0868               	movf	low ((_i2c1_object| 0+1)),w
 11048  0393  0086               	movwf	6
 11049  0394  0187               	clrf	7
 11050  0395  3F41               	moviw [1]fsr1
 11051  0396  00F3               	movwf	_p_i2c1_trb_current
 11052                           
 11053                           ;i2c1.c: 270: i2c1_object.pTrHead++;
 11054  0397  3003               	movlw	3
 11055  0398  00F9               	movwf	??_I2C1_ISR
 11056  0399  0879               	movf	??_I2C1_ISR,w
 11057  039A  07E8               	addwf	low ((_i2c1_object| 0+1)),f
 11058                           
 11059                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 11060  039B  0868               	movf	low ((_i2c1_object| 0+1)),w
 11061  039C  3AD8               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 11062  039D  1D03               	skipz
 11063  039E  2BA3               	goto	i1l3302
 11064                           
 11065                           ;i2c1.c: 274: {
 11066                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
 11067  039F  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 11068  03A0  00F9               	movwf	??_I2C1_ISR
 11069  03A1  0879               	movf	??_I2C1_ISR,w
 11070  03A2  00E8               	movwf	low ((_i2c1_object| 0+1))
 11071  03A3                     i1l3302:	
 11072                           
 11073                           ;i2c1.c: 277: }
 11074                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
 11075  03A3  1069               	bcf	_i2c1_object+2,0
 11076                           
 11077                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 11078  03A4  0868               	movf	low ((_i2c1_object| 0+1)),w
 11079  03A5  0667               	xorwf	_i2c1_object,w
 11080  03A6  1903               	btfsc	3,2
 11081                           
 11082                           ;i2c1.c: 285: {
 11083                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
 11084  03A7  14E9               	bsf	_i2c1_object+2,1
 11085                           
 11086                           ;i2c1.c: 288: }
 11087                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
 11088  03A8  0023               	movlb	3	; select bank3
 11089  03A9  1411               	bsf	17,0	;volatile
 11090                           
 11091                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
 11092  03AA  3002               	movlw	2
 11093  03AB  00F9               	movwf	??_I2C1_ISR
 11094  03AC  0879               	movf	??_I2C1_ISR,w
 11095  03AD  0020               	movlb	0	; select bank0
 11096  03AE  00EF               	movwf	_i2c1_state
 11097                           
 11098                           ;i2c1.c: 295: }
 11099                           ;i2c1.c: 297: break;
 11100  03AF  0008               	return
 11101  03B0                     i1l297:	
 11102                           ;i2c1.c: 299: case S_MASTER_RESTART:
 11103                           
 11104                           
 11105                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
 11106  03B0  0023               	movlb	3	; select bank3
 11107  03B1  1491               	bsf	17,1	;volatile
 11108                           
 11109                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
 11110  03B2  3002               	movlw	2
 11111  03B3  00F9               	movwf	??_I2C1_ISR
 11112  03B4  0879               	movf	??_I2C1_ISR,w
 11113  03B5  0020               	movlb	0	; select bank0
 11114  03B6  00EF               	movwf	_i2c1_state
 11115                           
 11116                           ;i2c1.c: 309: break;
 11117  03B7  0008               	return
 11118  03B8                     i1l298:	
 11119                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
 11120                           
 11121                           
 11122                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
 11123  03B8  0023               	movlb	3	; select bank3
 11124  03B9  1F11               	btfss	17,6	;volatile
 11125  03BA  2BC4               	goto	i1l3314
 11126                           
 11127                           ;i2c1.c: 314: {
 11128                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
 11129  03BB  3001               	movlw	1
 11130  03BC  00F9               	movwf	??_I2C1_ISR
 11131  03BD  0879               	movf	??_I2C1_ISR,w
 11132  03BE  0020               	movlb	0	; select bank0
 11133  03BF  07EB               	addwf	_i2c1_object+4,f
 11134                           
 11135                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11136  03C0  3004               	movlw	4
 11137  03C1  318B  2345         	fcall	_I2C1_Stop
 11138                           
 11139                           ;i2c1.c: 317: }
 11140  03C3  0008               	return
 11141  03C4                     i1l3314:	
 11142                           
 11143                           ;i2c1.c: 318: else
 11144                           ;i2c1.c: 319: {
 11145                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11146  03C4  0876               	movf	I2C1_ISR@i2c_address+1,w
 11147  03C5  00FA               	movwf	??_I2C1_ISR+1
 11148  03C6  0875               	movf	I2C1_ISR@i2c_address,w
 11149  03C7  00F9               	movwf	??_I2C1_ISR
 11150  03C8  36FA               	lsrf	??_I2C1_ISR+1,f
 11151  03C9  0CF9               	rrf	??_I2C1_ISR,f
 11152  03CA  0879               	movf	??_I2C1_ISR,w
 11153  03CB  0023               	movlb	3	; select bank3
 11154  03CC  008C               	movwf	12	;volatile
 11155                           
 11156                           ;i2c1.c: 324: if(i2c_address & 0x01)
 11157  03CD  1C75               	btfss	I2C1_ISR@i2c_address,0
 11158  03CE  2BD5               	goto	i1l3320
 11159                           
 11160                           ;i2c1.c: 325: {
 11161                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
 11162  03CF  300B               	movlw	11
 11163  03D0  00F9               	movwf	??_I2C1_ISR
 11164  03D1  0879               	movf	??_I2C1_ISR,w
 11165  03D2  0020               	movlb	0	; select bank0
 11166  03D3  00EF               	movwf	_i2c1_state
 11167                           
 11168                           ;i2c1.c: 329: }
 11169  03D4  0008               	return
 11170  03D5                     i1l3320:	
 11171                           
 11172                           ;i2c1.c: 330: else
 11173                           ;i2c1.c: 331: {
 11174                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
 11175  03D5  3003               	movlw	3
 11176  03D6  00F9               	movwf	??_I2C1_ISR
 11177  03D7  0879               	movf	??_I2C1_ISR,w
 11178  03D8  0020               	movlb	0	; select bank0
 11179  03D9  00EF               	movwf	_i2c1_state
 11180                           
 11181                           ;i2c1.c: 334: }
 11182                           ;i2c1.c: 335: }
 11183                           ;i2c1.c: 337: break;
 11184  03DA  0008               	return
 11185  03DB                     i1l303:	
 11186                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
 11187                           
 11188                           
 11189                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
 11190  03DB  0023               	movlb	3	; select bank3
 11191  03DC  1F11               	btfss	17,6	;volatile
 11192  03DD  2BE7               	goto	i1l304
 11193                           
 11194                           ;i2c1.c: 342: {
 11195                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
 11196  03DE  3001               	movlw	1
 11197  03DF  00F9               	movwf	??_I2C1_ISR
 11198  03E0  0879               	movf	??_I2C1_ISR,w
 11199  03E1  0020               	movlb	0	; select bank0
 11200  03E2  07EB               	addwf	_i2c1_object+4,f
 11201                           
 11202                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11203  03E3  3004               	movlw	4
 11204  03E4  318B  2345         	fcall	_I2C1_Stop
 11205                           
 11206                           ;i2c1.c: 345: }
 11207  03E6  0008               	return
 11208  03E7                     i1l304:	
 11209                           
 11210                           ;i2c1.c: 346: else
 11211                           ;i2c1.c: 347: {
 11212                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
 11213  03E7  1491               	bsf	17,1	;volatile
 11214                           
 11215                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 11216  03E8  0876               	movf	I2C1_ISR@i2c_address+1,w
 11217  03E9  00FA               	movwf	??_I2C1_ISR+1
 11218  03EA  0875               	movf	I2C1_ISR@i2c_address,w
 11219  03EB  00F9               	movwf	??_I2C1_ISR
 11220  03EC  087A               	movf	??_I2C1_ISR+1,w
 11221  03ED  00F9               	movwf	??_I2C1_ISR
 11222  03EE  01FA               	clrf	??_I2C1_ISR+1
 11223  03EF  3006               	movlw	6
 11224  03F0  0579               	andwf	??_I2C1_ISR,w
 11225  03F1  00FB               	movwf	??_I2C1_ISR+2
 11226  03F2  3000               	movlw	0
 11227  03F3  057A               	andwf	??_I2C1_ISR+1,w
 11228  03F4  00FC               	movwf	??_I2C1_ISR+3
 11229  03F5  30F0               	movlw	240
 11230  03F6  047B               	iorwf	??_I2C1_ISR+2,w
 11231  03F7  00F5               	movwf	I2C1_ISR@i2c_address
 11232  03F8  3000               	movlw	0
 11233  03F9  047C               	iorwf	??_I2C1_ISR+3,w
 11234  03FA  00F6               	movwf	I2C1_ISR@i2c_address+1
 11235                           
 11236                           ;i2c1.c: 357: i2c_address |= 0x0001;
 11237  03FB  1475               	bsf	I2C1_ISR@i2c_address,0
 11238                           
 11239                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
 11240  03FC  0020               	movlb	0	; select bank0
 11241  03FD  01EE               	clrf	I2C1_ISR@i2c_10bit_address_restart
 11242  03FE  0AEE               	incf	I2C1_ISR@i2c_10bit_address_restart,f
 11243                           
 11244                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
 11245  03FF  3002               	movlw	2
 11246  0400  00F9               	movwf	??_I2C1_ISR
 11247  0401  0879               	movf	??_I2C1_ISR,w
 11248  0402  00EF               	movwf	_i2c1_state
 11249                           
 11250                           ;i2c1.c: 364: }
 11251                           ;i2c1.c: 366: break;
 11252  0403  0008               	return
 11253  0404                     i1l3334:	
 11254                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
 11255                           
 11256                           
 11257                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
 11258  0404  036E               	decf	I2C1_ISR@i2c_10bit_address_restart,w
 11259  0405  1903               	btfsc	3,2
 11260  0406  2C18               	goto	i1l3354
 11261                           
 11262                           ;i2c1.c: 382: {
 11263                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
 11264  0407  0873               	movf	_p_i2c1_trb_current,w
 11265  0408  0086               	movwf	6
 11266  0409  0187               	clrf	7
 11267  040A  3F40               	moviw [0]fsr1
 11268  040B  00F5               	movwf	I2C1_ISR@i2c_address
 11269  040C  3F41               	moviw [1]fsr1
 11270  040D  00F6               	movwf	I2C1_ISR@i2c_address+1
 11271                           
 11272                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 11273  040E  0873               	movf	_p_i2c1_trb_current,w
 11274  040F  0086               	movwf	6
 11275  0410  0187               	clrf	7
 11276  0411  3F43               	moviw [3]fsr1
 11277  0412  00F1               	movwf	I2C1_ISR@pi2c_buf_ptr
 11278                           
 11279                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
 11280  0413  0873               	movf	_p_i2c1_trb_current,w
 11281  0414  0086               	movwf	6
 11282  0415  0187               	clrf	7
 11283  0416  3F42               	moviw [2]fsr1
 11284  0417  00F0               	movwf	I2C1_ISR@i2c_bytes_left
 11285  0418                     i1l3354:	
 11286                           ;i2c1.c: 407: }
 11287                           ;i2c1.c: 408: }
 11288                           
 11289                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
 11290                           
 11291                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
 11292                           
 11293                           ;i2c1.c: 400: else
 11294                           ;i2c1.c: 401: {
 11295                           ;i2c1.c: 403: SSP1BUF = i2c_address;
 11296                           
 11297                           ;i2c1.c: 399: }
 11298                           
 11299                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
 11300                           
 11301                           ;i2c1.c: 393: {
 11302                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
 11303                           
 11304                           ;i2c1.c: 391: {
 11305                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
 11306                           
 11307                           ;i2c1.c: 387: }
 11308                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
 11309                           
 11310                           
 11311                           ;i2c1.c: 409: else
 11312                           ;i2c1.c: 410: {
 11313                           ;i2c1.c: 412: SSP1BUF = i2c_address;
 11314  0418  0875               	movf	I2C1_ISR@i2c_address,w
 11315  0419  0023               	movlb	3	; select bank3
 11316  041A  008C               	movwf	12	;volatile
 11317                           
 11318                           ;i2c1.c: 413: if(i2c_address & 0x01)
 11319  041B  1C75               	btfss	I2C1_ISR@i2c_address,0
 11320  041C  2C23               	goto	i1l3360
 11321                           
 11322                           ;i2c1.c: 414: {
 11323                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
 11324  041D  3005               	movlw	5
 11325  041E  00F9               	movwf	??_I2C1_ISR
 11326  041F  0879               	movf	??_I2C1_ISR,w
 11327  0420  0020               	movlb	0	; select bank0
 11328  0421  00EF               	movwf	_i2c1_state
 11329                           
 11330                           ;i2c1.c: 417: }
 11331  0422  0008               	return
 11332  0423                     i1l3360:	
 11333                           
 11334                           ;i2c1.c: 418: else
 11335                           ;i2c1.c: 419: {
 11336                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
 11337  0423  3003               	movlw	3
 11338  0424  00F9               	movwf	??_I2C1_ISR
 11339  0425  0879               	movf	??_I2C1_ISR,w
 11340  0426  0020               	movlb	0	; select bank0
 11341  0427  00EF               	movwf	_i2c1_state
 11342                           
 11343                           ;i2c1.c: 422: }
 11344                           ;i2c1.c: 423: }
 11345                           ;i2c1.c: 424: break;
 11346  0428  0008               	return
 11347  0429                     i1l314:	
 11348                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
 11349                           
 11350                           
 11351                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
 11352  0429  0023               	movlb	3	; select bank3
 11353  042A  1F11               	btfss	17,6	;volatile
 11354  042B  2C37               	goto	i1l3368
 11355                           
 11356                           ;i2c1.c: 430: {
 11357                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
 11358  042C  3001               	movlw	1
 11359  042D  00F9               	movwf	??_I2C1_ISR
 11360  042E  0879               	movf	??_I2C1_ISR,w
 11361  042F  0020               	movlb	0	; select bank0
 11362  0430  07EB               	addwf	_i2c1_object+4,f
 11363                           
 11364                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
 11365  0431  0023               	movlb	3	; select bank3
 11366  0432  1311               	bcf	17,6	;volatile
 11367                           
 11368                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
 11369  0433  3005               	movlw	5
 11370  0434  318B  2345         	fcall	_I2C1_Stop
 11371                           
 11372                           ;i2c1.c: 440: }
 11373  0436  0008               	return
 11374  0437                     i1l3368:	
 11375                           
 11376                           ;i2c1.c: 441: else
 11377                           ;i2c1.c: 442: {
 11378                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
 11379  0437  3001               	movlw	1
 11380  0438  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
 11381  0439  0A70               	incf	I2C1_ISR@i2c_bytes_left,w
 11382  043A  1D03               	btfss	3,2
 11383  043B  2C50               	goto	i1l3376
 11384                           
 11385                           ;i2c1.c: 445: {
 11386                           ;i2c1.c: 449: p_i2c1_trb_current++;
 11387  043C  3004               	movlw	4
 11388  043D  00F9               	movwf	??_I2C1_ISR
 11389  043E  0879               	movf	??_I2C1_ISR,w
 11390  043F  07F3               	addwf	_p_i2c1_trb_current,f
 11391                           
 11392                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
 11393  0440  3001               	movlw	1
 11394  0441  02F4               	subwf	_i2c1_trb_count,f
 11395  0442  1D03               	btfss	3,2
 11396  0443  2C48               	goto	i1l318
 11397                           
 11398                           ;i2c1.c: 453: {
 11399                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11400  0444  3000               	movlw	0
 11401  0445  318B  2345         	fcall	_I2C1_Stop
 11402                           
 11403                           ;i2c1.c: 455: }
 11404  0447  0008               	return
 11405  0448                     i1l318:	
 11406                           
 11407                           ;i2c1.c: 456: else
 11408                           ;i2c1.c: 457: {
 11409                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
 11410  0448  0023               	movlb	3	; select bank3
 11411  0449  1491               	bsf	17,1	;volatile
 11412                           
 11413                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
 11414  044A  3002               	movlw	2
 11415  044B  00F9               	movwf	??_I2C1_ISR
 11416  044C  0879               	movf	??_I2C1_ISR,w
 11417  044D  0020               	movlb	0	; select bank0
 11418  044E  00EF               	movwf	_i2c1_state
 11419                           
 11420                           ;i2c1.c: 469: }
 11421                           ;i2c1.c: 470: }
 11422  044F  0008               	return
 11423  0450                     i1l3376:	
 11424                           
 11425                           ;i2c1.c: 471: else
 11426                           ;i2c1.c: 472: {
 11427                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
 11428  0450  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11429  0451  0086               	movwf	6
 11430  0452  0187               	clrf	7
 11431  0453  0801               	movf	1,w
 11432  0454  0023               	movlb	3	; select bank3
 11433  0455  008C               	movwf	12	;volatile
 11434  0456  3001               	movlw	1
 11435  0457  00F9               	movwf	??_I2C1_ISR
 11436  0458  0879               	movf	??_I2C1_ISR,w
 11437  0459  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11438                           
 11439                           ;i2c1.c: 475: }
 11440                           ;i2c1.c: 476: }
 11441                           ;i2c1.c: 477: break;
 11442  045A  0008               	return
 11443  045B                     i1l321:	
 11444                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
 11445                           
 11446                           
 11447                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
 11448  045B  0023               	movlb	3	; select bank3
 11449  045C  1F11               	btfss	17,6	;volatile
 11450  045D  2C69               	goto	i1l322
 11451                           
 11452                           ;i2c1.c: 483: {
 11453                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
 11454  045E  3001               	movlw	1
 11455  045F  00F9               	movwf	??_I2C1_ISR
 11456  0460  0879               	movf	??_I2C1_ISR,w
 11457  0461  0020               	movlb	0	; select bank0
 11458  0462  07EB               	addwf	_i2c1_object+4,f
 11459                           
 11460                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11461  0463  3004               	movlw	4
 11462  0464  318B  2345         	fcall	_I2C1_Stop
 11463                           
 11464                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
 11465  0466  0023               	movlb	3	; select bank3
 11466  0467  1311               	bcf	17,6	;volatile
 11467                           
 11468                           ;i2c1.c: 493: }
 11469  0468  0008               	return
 11470  0469                     i1l322:	
 11471                           
 11472                           ;i2c1.c: 494: else
 11473                           ;i2c1.c: 495: {
 11474                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
 11475  0469  1591               	bsf	17,3	;volatile
 11476                           
 11477                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11478  046A  3008               	movlw	8
 11479  046B  00F9               	movwf	??_I2C1_ISR
 11480  046C  0879               	movf	??_I2C1_ISR,w
 11481  046D  0020               	movlb	0	; select bank0
 11482  046E  00EF               	movwf	_i2c1_state
 11483                           
 11484                           ;i2c1.c: 498: }
 11485                           ;i2c1.c: 499: break;
 11486  046F  0008               	return
 11487  0470                     i1l3388:	
 11488                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
 11489                           
 11490                           
 11491                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11492  0470  3008               	movlw	8
 11493  0471  00F9               	movwf	??_I2C1_ISR
 11494  0472  0879               	movf	??_I2C1_ISR,w
 11495  0473  00EF               	movwf	_i2c1_state
 11496                           
 11497                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
 11498  0474  0023               	movlb	3	; select bank3
 11499  0475  1591               	bsf	17,3	;volatile
 11500                           
 11501                           ;i2c1.c: 511: break;
 11502  0476  0008               	return
 11503  0477                     i1l3392:	
 11504                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
 11505                           
 11506                           
 11507                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
 11508  0477  0023               	movlb	3	; select bank3
 11509  0478  080C               	movf	12,w	;volatile
 11510  0479  00F9               	movwf	??_I2C1_ISR
 11511  047A  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11512  047B  0086               	movwf	6
 11513  047C  0187               	clrf	7
 11514  047D  0879               	movf	??_I2C1_ISR,w
 11515  047E  0081               	movwf	1
 11516  047F  3001               	movlw	1
 11517  0480  00F9               	movwf	??_I2C1_ISR
 11518  0481  0879               	movf	??_I2C1_ISR,w
 11519  0482  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11520                           
 11521                           ;i2c1.c: 519: if(--i2c_bytes_left)
 11522  0483  3001               	movlw	1
 11523  0484  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
 11524  0485  1903               	btfsc	3,2
 11525  0486  2C8E               	goto	i1l326
 11526                           
 11527                           ;i2c1.c: 520: {
 11528                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
 11529  0487  1291               	bcf	17,5	;volatile
 11530                           
 11531                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
 11532  0488  3006               	movlw	6
 11533  0489  00F9               	movwf	??_I2C1_ISR
 11534  048A  0879               	movf	??_I2C1_ISR,w
 11535  048B  0020               	movlb	0	; select bank0
 11536  048C  00EF               	movwf	_i2c1_state
 11537                           
 11538                           ;i2c1.c: 530: }
 11539  048D  2C91               	goto	i1l3404
 11540  048E                     i1l326:	
 11541                           
 11542                           ;i2c1.c: 531: else
 11543                           ;i2c1.c: 532: {
 11544                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
 11545  048E  1691               	bsf	17,5	;volatile
 11546                           
 11547                           ;i2c1.c: 538: I2C1_FunctionComplete();
 11548  048F  318A  22DE         	fcall	_I2C1_FunctionComplete
 11549  0491                     i1l3404:	
 11550                           
 11551                           ;i2c1.c: 539: }
 11552                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
 11553  0491  0023               	movlb	3	; select bank3
 11554  0492  1611               	bsf	17,4	;volatile
 11555                           
 11556                           ;i2c1.c: 543: break;
 11557  0493  0008               	return
 11558  0494                     i1l3406:	
 11559                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
 11560                           
 11561                           
 11562                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
 11563                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11564  0494  3000               	movlw	0
 11565  0495  318B  2345         	fcall	_I2C1_Stop
 11566                           
 11567                           ;i2c1.c: 550: break;
 11568  0497  0008               	return
 11569  0498                     i1l3408:	
 11570                           ;i2c1.c: 552: default:
 11571                           
 11572                           
 11573                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
 11574  0498  3001               	movlw	1
 11575  0499  00F9               	movwf	??_I2C1_ISR
 11576  049A  0879               	movf	??_I2C1_ISR,w
 11577  049B  0020               	movlb	0	; select bank0
 11578  049C  07EB               	addwf	_i2c1_object+4,f
 11579                           
 11580                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
 11581  049D  3006               	movlw	6
 11582  049E  318B  2345         	fcall	_I2C1_Stop
 11583                           
 11584                           ;i2c1.c: 560: }
 11585                           
 11586                           ;i2c1.c: 558: break;
 11587  04A0  0008               	return
 11588  04A1                     i1l3414:	
 11589  04A1  0020               	movlb	0	; select bank0
 11590  04A2  086F               	movf	_i2c1_state,w
 11591                           
 11592                           ; Switch size 1, requested type "space"
 11593                           ; Number of cases is 11, Range of values is 0 to 11
 11594                           ; switch strategies available:
 11595                           ; Name         Instructions Cycles
 11596                           ; direct_byte           30     6 (fixed)
 11597                           ; simple_byte           34    18 (average)
 11598                           ; jumptable            260     6 (fixed)
 11599                           ;	Chosen strategy is direct_byte
 11600  04A3  0084               	movwf	4
 11601  04A4  300C               	movlw	12
 11602  04A5  0204               	subwf	4,w
 11603  04A6  1803               	skipnc
 11604  04A7  2C98               	goto	i1l3408
 11605  04A8  3188               	movlp	high i1S4568
 11606  04A9  3504               	lslf	4,w
 11607  04AA  3E00               	addlw	low i1S4568
 11608  04AB  0082               	movwf	2
 11609  04AC  0008               	return
 11610  04AD                     __end_of_I2C1_ISR:	
 11611                           
 11612                           	psect	swtext1
 11613  0800                     __pswtext1:	
 11614  0800                     i1S4568:	
 11615  0800  3183  2B85         	ljmp	i1l292
 11616  0802  3183  2BB0         	ljmp	i1l297
 11617  0804  3184  2C04         	ljmp	i1l3334
 11618  0806  3184  2C29         	ljmp	i1l314
 11619  0808  3184  2C94         	ljmp	i1l3406
 11620  080A  3184  2C5B         	ljmp	i1l321
 11621  080C  3184  2C70         	ljmp	i1l3388
 11622  080E  3184  2C94         	ljmp	i1l3406
 11623  0810  3184  2C77         	ljmp	i1l3392
 11624  0812  3184  2C98         	ljmp	i1l3408
 11625  0814  3183  2BB8         	ljmp	i1l298
 11626  0816  3183  2BDB         	ljmp	i1l303
 11627                           
 11628                           	psect	text34
 11629  0B45                     __ptext34:	
 11630 ;; *************** function _I2C1_Stop *****************
 11631 ;; Defined at:
 11632 ;;		line 581 in file "mcc_generated_files/i2c1.c"
 11633 ;; Parameters:    Size  Location     Type
 11634 ;;  completion_c    1    wreg     enum E14260
 11635 ;; Auto vars:     Size  Location     Type
 11636 ;;  completion_c    1    1[COMMON] enum E14260
 11637 ;; Return value:  Size  Location     Type
 11638 ;;                  1    wreg      void 
 11639 ;; Registers used:
 11640 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11641 ;; Tracked objects:
 11642 ;;		On entry : 0/0
 11643 ;;		On exit  : 0/0
 11644 ;;		Unchanged: 0/0
 11645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11648 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11650 ;;Total ram usage:        2 bytes
 11651 ;; Hardware stack levels used:    1
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_I2C1_ISR
 11656 ;; This function uses a non-reentrant model
 11657 ;;
 11658                           
 11659                           
 11660                           ;psect for function _I2C1_Stop
 11661  0B45                     _I2C1_Stop:	
 11662                           
 11663                           ;incstack = 0
 11664                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 11665                           ;I2C1_Stop@completion_code stored from wreg
 11666  0B45  00F8               	movwf	I2C1_Stop@completion_code
 11667                           
 11668                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
 11669  0B46  0023               	movlb	3	; select bank3
 11670  0B47  1511               	bsf	17,2	;volatile
 11671                           
 11672                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
 11673  0B48  0872               	movf	_p_i2c1_current,w
 11674  0B49  3E02               	addlw	2
 11675  0B4A  0086               	movwf	6
 11676  0B4B  0187               	clrf	7
 11677  0B4C  0801               	movf	1,w
 11678  0B4D  1903               	btfsc	3,2
 11679  0B4E  2B5A               	goto	i1l3078
 11680                           
 11681                           ;i2c1.c: 588: {
 11682                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
 11683  0B4F  0878               	movf	I2C1_Stop@completion_code,w
 11684  0B50  00F7               	movwf	??_I2C1_Stop
 11685  0B51  0872               	movf	_p_i2c1_current,w
 11686  0B52  3E02               	addlw	2
 11687  0B53  0086               	movwf	6
 11688  0B54  0187               	clrf	7
 11689  0B55  0801               	movf	1,w
 11690  0B56  0086               	movwf	6
 11691  0B57  0187               	clrf	7
 11692  0B58  0877               	movf	??_I2C1_Stop,w
 11693  0B59  0081               	movwf	1
 11694  0B5A                     i1l3078:	
 11695                           
 11696                           ;i2c1.c: 591: }
 11697                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
 11698  0B5A  0020               	movlb	0	; select bank0
 11699  0B5B  01EF               	clrf	_i2c1_state
 11700  0B5C  0008               	return
 11701  0B5D                     __end_of_I2C1_Stop:	
 11702                           
 11703                           	psect	text35
 11704  0ADE                     __ptext35:	
 11705 ;; *************** function _I2C1_FunctionComplete *****************
 11706 ;; Defined at:
 11707 ;;		line 563 in file "mcc_generated_files/i2c1.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;		None
 11710 ;; Auto vars:     Size  Location     Type
 11711 ;;		None
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  1    wreg      void 
 11714 ;; Registers used:
 11715 ;;		wreg, status,2, status,0
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11723 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;Total ram usage:        1 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; This function calls:
 11728 ;;		Nothing
 11729 ;; This function is called by:
 11730 ;;		_I2C1_ISR
 11731 ;; This function uses a non-reentrant model
 11732 ;;
 11733                           
 11734                           
 11735                           ;psect for function _I2C1_FunctionComplete
 11736  0ADE                     _I2C1_FunctionComplete:	
 11737                           
 11738                           ;i2c1.c: 567: p_i2c1_trb_current++;
 11739                           
 11740                           ;incstack = 0
 11741                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 11742  0ADE  3004               	movlw	4
 11743  0ADF  00F7               	movwf	??_I2C1_FunctionComplete
 11744  0AE0  0877               	movf	??_I2C1_FunctionComplete,w
 11745  0AE1  07F3               	addwf	_p_i2c1_trb_current,f
 11746                           
 11747                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
 11748  0AE2  3001               	movlw	1
 11749  0AE3  02F4               	subwf	_i2c1_trb_count,f
 11750  0AE4  1D03               	btfss	3,2
 11751  0AE5  2AEC               	goto	i1l333
 11752                           
 11753                           ;i2c1.c: 571: {
 11754                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
 11755  0AE6  3004               	movlw	4
 11756  0AE7  00F7               	movwf	??_I2C1_FunctionComplete
 11757  0AE8  0877               	movf	??_I2C1_FunctionComplete,w
 11758  0AE9  0020               	movlb	0	; select bank0
 11759  0AEA  00EF               	movwf	_i2c1_state
 11760                           
 11761                           ;i2c1.c: 573: }
 11762  0AEB  0008               	return
 11763  0AEC                     i1l333:	
 11764                           
 11765                           ;i2c1.c: 574: else
 11766                           ;i2c1.c: 575: {
 11767                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
 11768  0AEC  0020               	movlb	0	; select bank0
 11769  0AED  01EF               	clrf	_i2c1_state
 11770  0AEE  0AEF               	incf	_i2c1_state,f
 11771  0AEF  0008               	return
 11772  0AF0                     __end_of_I2C1_FunctionComplete:	
 11773                           
 11774                           	psect	text36
 11775  07FD                     __ptext36:	
 11776 ;; *************** function _I2C1_BusCollisionISR *****************
 11777 ;; Defined at:
 11778 ;;		line 728 in file "mcc_generated_files/i2c1.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;		None
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;		None
 11783 ;; Return value:  Size  Location     Type
 11784 ;;                  1    wreg      void 
 11785 ;; Registers used:
 11786 ;;		None
 11787 ;; Tracked objects:
 11788 ;;		On entry : 0/0
 11789 ;;		On exit  : 0/0
 11790 ;;		Unchanged: 0/0
 11791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11796 ;;Total ram usage:        0 bytes
 11797 ;; Hardware stack levels used:    1
 11798 ;; This function calls:
 11799 ;;		Nothing
 11800 ;; This function is called by:
 11801 ;;		_INTERRUPT_InterruptManager
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           
 11806                           ;psect for function _I2C1_BusCollisionISR
 11807  07FD                     _I2C1_BusCollisionISR:	
 11808                           
 11809                           ;incstack = 0
 11810                           ; Regs used in _I2C1_BusCollisionISR: []
 11811  07FD  0008               	return
 11812  07FE                     __end_of_I2C1_BusCollisionISR:	
 11813  007E                     btemp	set	126	;btemp
 11814  007E                     int$flags	set	126
 11815  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    49
    Data        20
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     71      80
    BANK1            80     20      76
    BANK2            80      0      36
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    MYI2C_ReadPatch@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    MYI2C_Write16EEPROMBytes@pData	PTR unsigned char  size(2) Largest target is 128
		 -> aPatchMemory(BIGRAM[128]), 

    updateModelFromPatchMemory@dualADSRdata1	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata1(BANK2[8]), 

    updateModelFromPatchMemory@dualADSRdata0	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata0(BANK2[8]), 

    updateModelFromPatchMemory@mvcChannels	PTR unsigned char  size(1) Largest target is 4
		 -> mvcChannels(BANK1[4]), 

    marshallPatchMemory@dualADSRdata1	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata1(BANK2[8]), 

    marshallPatchMemory@dualADSRdata0	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata0(BANK2[8]), 

    marshallPatchMemory@mvcChannels	PTR unsigned char  size(1) Largest target is 4
		 -> mvcChannels(BANK1[4]), 

    savePatch@pData	PTR unsigned char  size(2) Largest target is 128
		 -> aPatchMemory(BIGRAM[128]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@status(COMMON[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterWrite@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_Write16EEPROMBytes@status(BANK0[1]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@status(COMMON[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 
		 -> NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S374$pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S397$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S397$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_savePatch
    _savePatch->_MYI2C_Write16EEPROMBytes
    _MYI2C_Write16EEPROMBytes->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _loadPatch->_writeDAC528
    _writeDAC528->_putByte
    _initDAC528->_putByte
    _putByte->___fttol
    ___fttol->___ftdiv
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftdiv->___awtoft
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED7SegDisplayValueByDigit->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0   31006
                                             67 BANK0      4     4      0
                                              0 BANK1     20    20      0
           _ADCC_GetSingleConversion
                _InitPanelInChannels
                    _InitmvcChannels
         _LED7SegDisplayValueByDigit
                       _LED7SegSetup
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                              _delay
                         _initDAC528
                          _loadPatch
                          _savePatch
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _savePatch                                           15    13      2    3617
                                             52 BANK0     15    13      2
           _MYI2C_Write16EEPROMBytes
                _marshallPatchMemory
 ---------------------------------------------------------------------------------
 (2) _marshallPatchMemory                                 17    15      2     540
                                              0 BANK0     17    15      2
 ---------------------------------------------------------------------------------
 (2) _MYI2C_Write16EEPROMBytes                            38    34      4    2840
                                             14 BANK0     38    34      4
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     3      4    2100
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             7     3      4     690
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 4     2      2     556
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _loadPatch                                           12    10      2    6209
                                             58 BANK0      8     6      2
         _updateModelFromPatchMemory
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _writeDAC528                                          5     2      3    5548
                                             53 BANK0      5     2      3
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _updateModelFromPatchMemory                          15    13      2     495
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (1) _initDAC528                                           1     1      0    5268
                                             53 BANK0      1     1      0
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _putByte                                              9     7      2    5268
                                             44 BANK0      9     7      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     623
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2315
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2027
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2163
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1671
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegDisplayValueByDigit                           6     2      4    2002
                                             20 BANK0      6     2      4
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (2) _LED7SegShiftOutPulseClock                            3     3      0    1538
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegPulseClock                                    0     0      0    1377
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1377
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     526
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitmvcChannels                                      3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitPanelInChannels                                  3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _InitPanelInChannels
   _InitmvcChannels
   _LED7SegDisplayValueByDigit
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
   _LED7SegSetup
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
   _delay
     ___wmul
   _initDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _loadPatch
     _updateModelFromPatchMemory
     _writeDAC528
       _putByte
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _savePatch
     _MYI2C_Write16EEPROMBytes
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _marshallPatchMemory
   _writeDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      CE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      CE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 26 11:46:45 2018

                                         _b 00AF                                           _c 00B7  
                                         _d 00AC                                           _e 00B5  
                                         pc 0002                                 __CFG_CP$OFF 0000  
              __end_of_cPointerByteWriteLED 102F                  __size_of_LED7SegPulseClock 000B  
                       ___wmul@multiplicand 0022                                         l163 0AF9  
                                       l502 0DAA                                         l521 0108  
                                       l524 0189                                         l709 0AA4  
                                       l831 0EDF                                         l773 057F  
                                       l948 0B9A                                         _GIE 005F  
                              __CFG_CPD$OFF 0000                         _marshallPatchMemory 04AD  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_LVP$OFF 0000                            ?_InitmvcChannels 0077  
                              __CFG_ZCD$OFF 0000                                ___ftdiv@cntr 0038  
                          __end_of_I2C1_ISR 04AD                                ___ftdiv@sign 003D  
                                      l1200 0EAD                                        l1116 07D1  
                                      l1117 07D9                                        l1109 07BE  
                                      l3110 04EA                                        l3102 04BE  
                                      l3200 0F2A                                        l3202 0F59  
                                      l3130 0530                                        l3220 0F9F  
                                      l3124 0523                                        l3116 04F7  
                                      l3214 0F72                                        l3234 0FD4  
                                      l3226 0FAC                                        l3170 0F07  
                                      l3138 055C                                        l4300 0C8D  
                                      l3166 0EF8                                        l3184 0F33  
                                      l3520 0DEC                                        l4306 0C9E  
                                      l3602 070F                                        l3186 0F47  
                                      l3178 0F27                                        l4148 0B94  
                                      l2822 0D62                                        l3624 0769  
                                      l3616 0750                                        l2824 0D67  
                                      l4432 01DC                                        l4408 0117  
                                      l2818 0D5B                                        l4450 0288  
                                      l4426 01B3                                        l2940 0EBE  
                                      l2908 0E59                                        l2828 0D6E  
                                      l2782 079B                                        l2934 0EA4  
                                      l2926 0E89                                        l4296 0C82  
                                      l2792 07C3                                        l2784 07A5  
                                      l2848 0C12                                        l2880 069E  
                                      l2864 065B                                        l2936 0EB0  
                                      l2928 0E97                                        l4480 0326  
                                      l2794 07CB                                        l2786 07AA  
                                      l2778 0794                                        l2858 0645  
                                      l4474 0313                                        l4458 02A8  
                                      l4386 0090                                        l3596 06F9  
                                      l2892 06BA                                        l2876 0696  
                                      l2948 0C6F                                        l4492 035E  
                                      l4396 00D9                                        l2966 05C8  
                                      l4398 00ED                                        l2888 06B2  
                                      l2968 05CC                                        u2015 07B9  
                                      u2035 07C6                                        u2205 0677  
                                      u3005 0D14                                        _LATA 0016  
                                      _LATB 0017                                        _LATC 0018  
                                      u2225 069F                                        u2305 0E60  
                                      u3025 0DCD                                        u2075 07E0  
                                      u2235 06A5                                        u3035 0E02  
                                      u4005 0BA0                                        u2414 0589  
                                      u2335 0E8A                                        u2415 0588  
                                      u4033 0DBC                                        u4025 0D9F  
                                      u2265 06BB                                        u4050 0CEC  
                                      u3155 0721                                        u2275 06C1  
                                      u2195 0667                                        u3165 0731  
                                      u2365 0EA5                                        u4205 0162  
                                      u3175 0751                                        u4215 017E  
                                      u3185 0760                                        u2545 0566  
                                      u4305 0339                                        u3195 076A  
                                      u4315 036A                                        u4235 01DA  
                                      u4084 0BB9                                        u4085 0BB8  
                                      u2485 04BC                                        u4165 008E  
                                      u2655 0EE5                                        u2575 0F05  
                                      u2495 04E8                                        u4407 030B  
                                      u4175 00D7                                        u2665 0F70  
                                      u2585 0F25                                        u4417 0356  
                                      u4185 0104                                        u2675 0F9D  
                                      u4427 0E35                                        u4275 02EE  
                                      u4195 0115                                        u2925 0BD5  
                                      u4285 031F                                        u2945 0B69  
                                      u1995 07A0                                        u2995 0CF4  
                                      u3995 0B9B                                        _WPUA 0F39  
                                      _WPUB 0F44                                        _WPUC 0F4F  
                                      _WPUE 0F65                                __CFG_WRT$OFF 0000  
                             __CFG_FCMEN$ON 0000                                        _main 0064  
                              ___ftpack@arg 0020                                ___ftpack@exp 0023  
                                      fsr0h 0005                                        fsr1h 0007  
                                      indf0 0000                                        fsr0l 0004  
                                      indf1 0001                                        fsr1l 0006  
                                      _twoK 101E                      ??_I2C1_MasterTRBInsert 0022  
                                      btemp 007E                                main@iCounter 00D9  
      LED7SegDisplayValueByDigit@iTensDigit 0034                               __CFG_BOREN$ON 0000  
                   __end_of_LED7SegPinWrite 0AA6                                        start 0020  
                      ?_marshallPatchMemory 0020                                 _writeDAC528 0C29  
                             __CFG_CSWEN$ON 0000                               __CFG_MCLRE$ON 0000  
                              ___ftmul@cntr 003C                                ___ftmul@sign 003D  
            I2C1_MasterWriteTRBBuild@length 0021                                ___fttol@exp1 004B  
                              ___fttol@lval 0047          __end_of_updateModelFromPatchMemory 1000  
                _updateModelFromPatchMemory 0F61                                  _i2c1_state 006F  
            __size_of_OSCILLATOR_Initialize 0009                   I2C1_MasterTRBInsert@count 0023  
             __end_of_OSCILLATOR_Initialize 0AAF                   I2C1_MasterTRBInsert@pflag 0021  
                                     _ADACQ 009D                                       _ADACT 0099  
                                     _ADCAP 009B                                       ?_main 0077  
                                     _ADCLK 0098                                       _ADCNT 010C  
                                     _ADPCH 009E                                       _ADREF 009A  
                         __end_of_I2C1_Stop 0B5D                                       _ADPRE 009C  
                             __CFG_WDTE$OFF 0000                                       _ADRPT 010D  
                           __end_of___ftdiv 078B                             __end_of___ftmul 06E2  
                           __end_of___fttol 0EC7                              __CFG_DEBUG$OFF 0000  
                                     i1l303 03DB                                       i1l304 03E7  
                                     i1l321 045B                                       i1l322 0469  
                                     i1l314 0429                                       i1l333 0AEC  
                                     i1l326 048E                                       i1l318 0448  
                                     i1l292 0385                                       i1l297 03B0  
                                     i1l298 03B8                                       i1l394 0013  
                                     i1l398 001B                                       _OSCEN 0891  
                                     _PORTB 000D                                       _PORTC 000E  
                                     _TRISA 0011                                       _TRISB 0012  
                                     _TRISC 0013                             __end_of_datapin 1024  
              __end_of_I2C1_BusCollisionISR 07FE                           ??_I2C1_Initialize 0020  
           __end_of_cPointerByteWriteFaders 1031                               ___awtoft@sign 002D  
                                     _delay 0D74                               ___ftpack@sign 0024  
                                     _speed 1020                           savePatch@batchNum 005F  
                           __end_of_putByte 062E                                       status 0003  
                                     wtemp0 007E                       ??_marshallPatchMemory 0022  
           I2C1_MasterWriteTRBBuild@address 0022                                  _iLEDs0_LSB 00C0  
                                _iLEDs0_MSB 006C                                  _iLEDs1_LSB 00BE  
                                _iLEDs1_MSB 00BF                        __end_of_LED7SegSetup 07FD  
                           __initialization 0022                       I2C1_MasterWrite@pdata 002D  
                     I2C1_MasterWrite@pflag 002A                                __end_of_main 0372  
                              __end_of_twoK 1020            __end_of_MYI2C_Write16EEPROMBytes 0F61  
               ?_INTERRUPT_InterruptManager 0077                         _lineSettleMicroTime 101A  
                            _iI2CFaderValue 00C1                                 _i2c1_object 0067  
                                    ??_main 0063                               ___fttol@sign1 0046  
               ??_LED7SegShiftOutPulseClock 0031                             putByte@clockPin 004C  
     LED7SegDisplayValueByDigit@iUnitsDigit 0036                   savePatch@iPatchAddressLow 005A  
                                    ?_delay 0026                                      _ADACCH 0091  
                                    _ADACCL 0090                                      _ADCON0 0093  
                                    _ADCON1 0094                                      _ADCON2 0095  
                                    _ADCON3 0096                                      _ADERRH 0117  
                                    _ADERRL 0116                                      i1S4568 0800  
                                    _ADLTHH 010F                                      _ADLTHL 010E  
                                    _ADRESH 008D                                      _ADRESL 008C  
                                    _ADSTAT 0097                                      _ADUTHH 0111  
                                    _ADUTHL 0110                            __end_of___awtoft 0C29  
                                    _ANSELA 0F38                                      _ANSELB 0F43  
                                    _ANSELC 0F4E                            __end_of___ftpack 07F0  
                        __CFG_RSTOSC$HFINT1 0000                                      _RC3PPS 0F23  
                                    _RC4PPS 0F24                                      _ODCONA 0F3A  
                                    _ODCONB 0F45                                      _ODCONC 0F50  
                                    i1l3302 03A3                                      i1l3320 03D5  
                                    i1l3314 03C4                                      i1l3404 0491  
                                    i1l3078 0B5A                                      i1l3406 0494  
                                    i1l3334 0404                                      i1l3414 04A1  
                                    i1l3408 0498                                      i1l3360 0423  
                                    i1l3354 0418                                      i1l3392 0477  
                                    i1l3376 0450                                      i1l3368 0437  
                                    i1l3388 0470                              __CFG_WDTCCS$SC 0000  
       MYI2C_Write16EEPROMBytes@pointerByte 004C                        _cPointerByteWriteLED 102E  
                                    _OSCFRQ 0893                           ?_I2C1_MasterWrite 0027  
                     main@SaveDebounceCount 00E3                            ?_LED7SegPinWrite 0077  
                            __CFG_PWRTE$OFF 0000        MYI2C_Write16EEPROMBytes@writeAddress 002E  
                       __end_of_MvcMaxValue 1016                            __end_of_clockpin 1026  
                        ??_I2C1_MasterWrite 002B                         __end_of_MvcMinValue 1018  
                            _p_i2c1_current 0072                            __end_of_maxBanks 1012  
                                    ___wmul 0B91                              __CFG_STVREN$ON 0000  
                                 ??___ftdiv 0034                                   ??___ftmul 0034  
                                 ??___fttol 0042                            __end_of_latchpin 1028  
                ??_I2C1_MasterWriteTRBBuild 0024                                   ?_I2C1_ISR 0077  
                                    _wkByte 00BB                                      main@fx 00E6  
                     ___ftmul@f3_as_product 0039                             _ADCC_Initialize 0B76  
                                 ??_putByte 004E           __size_of_ADCC_GetSingleConversion 0014  
                 ?_ADCC_GetSingleConversion 0020               I2C1_MasterWriteTRBBuild@pdata 0020  
                         _SYSTEM_Initialize 0ABA                   _LED7SegShiftOutPulseClock 0BAD  
                   __end_of__initialization 0060                          ?_SYSTEM_Initialize 0077  
                                ___ftdiv@f1 0031                                  ___ftdiv@f2 002E  
                                ___ftdiv@f3 0039                              _i2c1_trb_count 0074  
                                ___awtoft@c 0028                                  ___ftmul@f1 002E  
                                ___ftmul@f2 0031                       _I2C1_FunctionComplete 0ADE  
                      _I2C1_BusCollisionISR 07FD                                  ___fttol@f1 003E  
                            __pcstackCOMMON 0077                      I2C1_MasterWrite@length 0027  
                              __pidataBANK2 0B04                         ??_SYSTEM_Initialize 0021  
                             __end_of_delay 0DC7                              main@faderValue 00E8  
                             __end_of_speed 1022                                  ??_I2C1_ISR 0079  
     updateModelFromPatchMemory@mvcChannels 0026                    _MYI2C_Write16EEPROMBytes 0EC7  
                        main@fader8bitValue 00E5                                     ??_delay 0028  
                 __end_of_SYSTEM_Initialize 0AC6         MYI2C_Write16EEPROMBytes@writeBuffer 0036  
                          InitmvcChannels@i 0021                  __end_of_i2c_addr_dualADSR0 102E  
                __end_of_i2c_addr_dualADSR1 102D                                  __pbssBANK0 0067  
                                __pbssBANK1 00A0                                  __pbssBANK2 0134  
                               _MvcMaxValue 1014                          __size_of_loadPatch 0040  
                               _MvcMinValue 1016                       __size_of_LED7SegSetup 000D  
                    savePatch@iPatchAddress 0061                  LED7SegShiftOutPulseClock@i 0033  
                              ?_writeDAC528 0055                       ?_I2C1_BusCollisionISR 0077  
                            _SSP1DATPPSbits 0EC6                                  __pmaintext 0064  
              __size_of_InitPanelInChannels 001E                                     ?___wmul 0020  
                           __CFG_PPS1WAY$ON 0000                     __end_of_ADCC_Initialize 0B91  
                        __size_of_savePatch 0079                                  __pintentry 0004  
                           _I2C1_Initialize 0B2E                                     _ADFLTRH 0115  
               ?_updateModelFromPatchMemory 0020                                     _ADFLTRL 0114  
                                   _ADPREVH 008F                                     _ADPREVL 008E  
                                 ?___awtoft 0028                                   ?___ftpack 0020  
                                   _ADSTPTH 0113                                     _ADSTPTL 0112  
                            _SSP1CLKPPSbits 0EC5                                     _OSCCON1 088D  
                                   _OSCCON3 088F                                   _I2C1_Stop 0B45  
                                   _OSCTUNE 0892                                _LED7SegSetup 07F0  
                     main@LoadDebounceCount 00E1                                     _SSP1ADD 018D  
                                   _PPSLOCK 0E8F                                     _SSP1BUF 018C  
            marshallPatchMemory@mvcChannels 0028                                  _initDAC528 0B18  
                            main@readStatus 00D8               I2C1_MasterTRBInsert@ptrb_list 0020  
                       __end_of_cPowerOfTwo 1010                                  _maxPatches 1012  
                  __size_of_InitmvcChannels 0019                      ?_I2C1_FunctionComplete 0077  
             __size_of_I2C1_MasterTRBInsert 0046                          _p_i2c1_trb_current 0073  
                           _PanelInChannels 00A4                        __CFG_SCANE$available 0000  
                                   ___ftdiv 06E2                             __size_of___wmul 001C  
                                   ___ftmul 062E                                     ___fttol 0E40  
                        writeDAC528@dacData 0057          marshallPatchMemory@iPatchMemoryNDX 002F  
                                ??___awtoft 002B                                  ??___ftpack 0025  
                                   _datapin 1022                                     __ptext1 0DC7  
                                   __ptext2 04AD                                     __ptext3 0EC7  
                                   __ptext4 0C4E                                     __ptext5 0BE7  
                                   __ptext6 0D2E                                     __ptext7 0CEE  
                                   __ptext8 0C29                                     __ptext9 0F61  
                         __end_of_loadPatch 0D2E                       _OSCILLATOR_Initialize 0AA6  
                                   _wkFloat 00B2                                     _segdisp 0120  
                  ??_PIN_MANAGER_Initialize 0020                        loadPatch@PatchNumber 005A  
                                ?_I2C1_Stop 0077                                     _putByte 0579  
                __size_of_SYSTEM_Initialize 000C                        I2C1_ISR@pi2c_buf_ptr 0071  
                                   clrloop0 0AC7                           __end_of_savePatch 0E40  
               __end_of_marshallPatchMemory 0579                        end_of_initialization 0060  
              ??_LED7SegDisplayValueByDigit 0038                                     init_ram 0AD2  
                                   initloop 0AD3   updateModelFromPatchMemory@iPatchMemoryNDX 002B  
                    ??_I2C1_BusCollisionISR 0077                     __end_of_I2C1_Initialize 0B45  
                         __end_of_toggleDly 101E                     _cPointerByteWriteFaders 1030  
          marshallPatchMemory@dualADSRdata0 0020            marshallPatchMemory@dualADSRdata1 0021  
                          ?_ADCC_Initialize 0077            __end_of_ADCC_GetSingleConversion 0B04  
 MYI2C_Write16EEPROMBytes@iPatchAddressHigh 004E                       __CFG_WDTCPS$WDTCPS_31 0000  
                                 _PORTBbits 000D                   __size_of_I2C1_MasterWrite 0028  
                         __size_of_I2C1_ISR 013B         __size_of_LED7SegDisplayValueByDigit 0039  
                                 _MY_CONSTS 006D                                   _TRISCbits 0013  
                               _cPowerOfTwo 1000                            __CFG_FEXTOSC$OFF 0000  
                               putByte@data 0052                             main@iResetValue 1028  
                               ?_initDAC528 0077                                 putByte@mask 0053  
         I2C1_ISR@i2c_10bit_address_restart 006E                   marshallPatchMemory@i_1213 002B  
                 marshallPatchMemory@i_1214 002D                                  main@fx_970 00EA  
                               ___ftdiv@exp 003C                     I2C1_MasterWrite@address 0028  
                               ___ftmul@exp 0038                  ??_MYI2C_Write16EEPROMBytes 0032  
                      __size_of_writeDAC528 0025     updateModelFromPatchMemory@dualADSRdata0 0020  
   updateModelFromPatchMemory@dualADSRdata1 0021                      delay@adjustedDelaytime 0029  
                         ??_InitmvcChannels 0020                    __size_of_LED7SegPinWrite 0009  
                            __end_of___wmul 0BAD                     I2C1_MasterWrite@trBlock 00D1  
                  I2C1_Stop@completion_code 0078                      ?_OSCILLATOR_Initialize 0077  
                            _clockMicroTime 1018                 __end_of_lineSettleMicroTime 101C  
                       start_initialization 0022                                 ??_I2C1_Stop 0077  
           __size_of_PIN_MANAGER_Initialize 003F                         _InitPanelInChannels 0BC9  
         __size_of_I2C1_MasterWriteTRBBuild 0020                   ?_I2C1_MasterWriteTRBBuild 0020  
                                loadPatch@i 0060                      _cPointerByteReadFaders 102F  
                          ?_I2C1_Initialize 0077                            __CFG_LPBOREN$OFF 0000  
                      savePatch@PatchNumber 0054                        ?_InitPanelInChannels 0077  
                        _i2c_addr_dualADSR0 102D                          _i2c_addr_dualADSR1 102C  
                                  ??___wmul 0024                                 __pdataBANK2 0120  
                    __end_of_clockMicroTime 101A                         __size_of_initDAC528 0016  
              I2C1_MasterWriteTRBBuild@ptrb 0026                           __size_of___awtoft 0022  
                  _ADCC_GetSingleConversion 0AF0                           __size_of___ftpack 0065  
                               __pbssBIGRAM 2370                     __end_ofmain@iResetValue 102A  
                               __pbssCOMMON 0070                                   ___latbits 0002  
                             __pcstackBANK0 0020                               __pcstackBANK1 00D8  
                             _i2c1_tr_queue 00D5          __end_of_LED7SegDisplayValueByDigit 0CAF  
                _LED7SegDisplayValueByDigit 0C76                      loadPatch@iPatchAddress 005E  
                      writeDAC528@dacNumber 0055                     ??_I2C1_FunctionComplete 0077  
             MYI2C_Write16EEPROMBytes@pData 0030                      _PIN_MANAGER_Initialize 0CAF  
                     ??_InitPanelInChannels 0020             ADCC_GetSingleConversion@channel 0023  
                                  ?___ftdiv 002E                                    ?___ftmul 002E  
                                  ?___fttol 003E                                    _I2C1_ISR 0372  
              ??_INTERRUPT_InterruptManager 007D                        marshallPatchMemory@i 0029  
                                 __pswtext1 0800                            _I2C1_MasterWrite 0C4E  
                        LED7SegPinWrite@val 0020                                savePatch@idx 005D  
              __end_of_I2C1_MasterTRBInsert 0D74                      main@prevFader8bitValue 00DC  
                         ??_LED7SegPinWrite 0020                                   _loadPatch 0CEE  
                                  ?_putByte 004C                                _wkFaderValue 00BD  
                            __size_of_delay 0053                                delay@counter 002D  
                    I2C1_MasterRead@trBlock 00CD                              ___wmul@product 0024  
                          main@iChangeCount 00DB                                    _LATCbits 0018  
                                 _savePatch 0DC7                                   clear_ram0 0AC6  
                                  _PIE3bits 0719         __size_of_INTERRUPT_InterruptManager 001C  
                                  _PIR3bits 070F         LED7SegDisplayValueByDigit@iTensCode 0038  
                                  _SSP1CON1 0190                                    _SSP1CON3 0192  
  MYI2C_Write16EEPROMBytes@iPatchAddressLow 0047                                    _SSP1STAT 018F  
                                 _toggleDly 101C                                  _ADCON0bits 0093  
                                _ADCON1bits 0094                                  _ADCON2bits 0095  
                                _ADCON3bits 0096                           ___wmul@multiplier 0020  
                             _dualADSRdata0 013C                               _dualADSRdata1 0134  
                            savePatch@pData 005B                                  ?_loadPatch 005A  
               updateModelFromPatchMemory@i 002D                                ??_initDAC528 0055  
                           _faderActiveFlag 00A8  MYI2C_Write16EEPROMBytes@slaveDeviceAddress 004D  
                           _InitmvcChannels 0B5D                                  ?_savePatch 0054  
                                _ADSTATbits 0097                __size_of_marshallPatchMemory 00CC  
                              _aPatchMemory 2370               __size_of_I2C1_BusCollisionISR 0001  
                    I2C1_ISR@i2c_bytes_left 0070                     ??_OSCILLATOR_Initialize 0020  
                            delay@delaytime 0026                            __size_of___ftdiv 00A9  
                          __size_of___ftmul 00B4                            __size_of___fttol 0087  
                                  ___awtoft 0C07                                    ___ftpack 078B  
          __end_of_I2C1_MasterWriteTRBBuild 0C07                          __end_of_initDAC528 0B2E  
                         _LED7SegPulseClock 0AAF                                  _ANSELCbits 0F4E  
                        ?_LED7SegPulseClock 0077                    __size_of_ADCC_Initialize 001B  
                        __end_of_maxPatches 1014                         I2C1_ISR@i2c_address 0075  
                                  __ptext10 0B18                                    __ptext11 0579  
                                  __ptext20 0B2E                                    __ptext12 0E40  
                                  __ptext21 0B76                                    __ptext13 062E  
                                  __ptext30 0BC9                                    __ptext22 07F0  
                                  __ptext14 0C07                                    __ptext31 0AF0  
                                  __ptext23 0C76                                    __ptext15 06E2  
                                  __ptext24 0BAD                                    __ptext16 078B  
                                  __ptext33 0372                                    __ptext25 0AAF  
                                  __ptext17 0ABA                                    __ptext34 0B45  
                                  __ptext26 0D74                                    __ptext18 0CAF  
                                  __ptext35 0ADE                                    __ptext27 0B91  
                                  __ptext19 0AA6                                    __ptext36 07FD  
                                  __ptext28 0A9D                                    __ptext29 0B5D  
                              _SSP1CON1bits 0190                                _SSP1CON2bits 0191  
           MYI2C_Write16EEPROMBytes@counter 004F                                    _clockpin 1024  
                               _mvcChannels 00C9                            __size_of_putByte 00B5  
                                  _maxBanks 1010                         ??_LED7SegPulseClock 0031  
                                  _wkMIDICC 00BC             MYI2C_Write16EEPROMBytes@timeOut 004A  
                                  _latchpin 1026                               __size_of_main 030E  
                      InitPanelInChannels@i 0021                               ??_writeDAC528 0058  
                      __CFG_WDTCWS$WDTCWS_7 0000                        _I2C1_MasterTRBInsert 0D2E  
                    writeDAC528@wkDacNumber 0059                  ??_ADCC_GetSingleConversion 0023  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 0020  
                _INTERRUPT_InterruptManager 0004                   __end_of_LED7SegPulseClock 0ABA  
        __size_of_LED7SegShiftOutPulseClock 001C                ??_updateModelFromPatchMemory 0022  
                ?_LED7SegShiftOutPulseClock 0077                 PIN_MANAGER_Initialize@state 0020  
              LED7SegShiftOutPulseClock@val 0032                              _cMstrClkAdjust 102A  
                                _INTCONbits 000B           __size_of_MYI2C_Write16EEPROMBytes 009A  
                               ??_loadPatch 005C                   ?_MYI2C_Write16EEPROMBytes 002E  
                             ?_LED7SegSetup 0077                              __pstringtext10 1020  
                            __pstringtext11 1022                              __pstringtext20 1030  
                            __pstringtext12 1024                              __pstringtext13 1026  
                            __pstringtext14 1028                              __pstringtext15 102A  
                            __pstringtext16 102C                              __pstringtext17 102D  
                            __pstringtext18 102E                              __pstringtext19 102F  
                   __end_of_InitmvcChannels 0B76              __end_of_cPointerByteReadFaders 1030  
                                  intlevel1 0000                 ?_LED7SegDisplayValueByDigit 0034  
            MYI2C_Write16EEPROMBytes@nCount 0048                              _mvcPatchNumber 00B9  
                   ?_PIN_MANAGER_Initialize 0077                    __end_of_I2C1_MasterWrite 0C76  
                               ??_savePatch 0056                           __CFG_CLKOUTEN$OFF 0000  
            __size_of_I2C1_FunctionComplete 0012               __end_of_I2C1_FunctionComplete 0AF0  
          updateModelFromPatchMemory@i_1221 0027            updateModelFromPatchMemory@i_1222 0029  
                               _PPSLOCKbits 0E8F              MYI2C_Write16EEPROMBytes@status 0053  
                     ?_I2C1_MasterTRBInsert 0020                  savePatch@iPatchAddressHigh 0059  
       __size_of_updateModelFromPatchMemory 009F                                    putByte@i 0054  
                           _LED7SegPinWrite 0A9D                         __end_of_writeDAC528 0C4E  
                    __end_of_cMstrClkAdjust 102C                    __size_of_I2C1_Initialize 0017  
                             __pstringtext1 1000                               __pstringtext2 1010  
                             __pstringtext3 1012                               __pstringtext4 1014  
                             __pstringtext5 1016                               __pstringtext6 1018  
                             __pstringtext7 101A                               __pstringtext8 101C  
                             __pstringtext9 101E           __end_of_LED7SegShiftOutPulseClock 0BC9  
                             main@POT0Value 00DF                               main@POT1Value 00E0  
                            ??_LED7SegSetup 0020                    _I2C1_MasterWriteTRBBuild 0BE7  
                          main@iLoopCounter 00DD              __end_of_PIN_MANAGER_Initialize 0CEE  
                         ??_ADCC_Initialize 0020                          __size_of_I2C1_Stop 0018  
               __end_of_InitPanelInChannels 0BE7                   MYI2C_Write16EEPROMBytes@i 0051  
                       _prevPanelInChannels 00A0  
