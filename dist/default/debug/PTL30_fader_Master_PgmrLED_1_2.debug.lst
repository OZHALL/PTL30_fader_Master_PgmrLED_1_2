

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 19 16:26:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    26                           	psect	text1,local,class=CODE,merge=1,delta=2
    27                           	psect	text2,local,class=CODE,merge=1,delta=2
    28                           	psect	text3,local,class=CODE,merge=1,delta=2
    29                           	psect	text4,local,class=CODE,merge=1,delta=2
    30                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text9,local,class=CODE,merge=1,delta=2
    35                           	psect	text10,local,class=CODE,merge=1,delta=2
    36                           	psect	text11,local,class=CODE,merge=1,delta=2
    37                           	psect	text12,local,class=CODE,merge=1,delta=2
    38                           	psect	text13,local,class=CODE,merge=1,delta=2
    39                           	psect	text14,local,class=CODE,merge=1,delta=2
    40                           	psect	text15,local,class=CODE,merge=1,delta=2
    41                           	psect	text16,local,class=CODE,merge=1,delta=2
    42                           	psect	text17,local,class=CODE,merge=1,delta=2
    43                           	psect	text18,local,class=CODE,merge=1,delta=2
    44                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text20,local,class=CODE,merge=1,delta=2
    46                           	psect	text21,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text23,local,class=CODE,merge=1,delta=2
    49                           	psect	swtext1,local,class=CONST,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 1.45
    56                           ; Generated 16/11/2017 GMT
    57                           ; 
    58                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F18855 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  001C                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  008C                     	;# 
   118  008C                     	;# 
   119  008D                     	;# 
   120  008E                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0110                     	;# 
   144  0110                     	;# 
   145  0111                     	;# 
   146  0112                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0114                     	;# 
   151  0115                     	;# 
   152  0116                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0119                     	;# 
   156  0119                     	;# 
   157  0119                     	;# 
   158  011A                     	;# 
   159  011A                     	;# 
   160  011A                     	;# 
   161  011B                     	;# 
   162  011B                     	;# 
   163  011B                     	;# 
   164  011B                     	;# 
   165  011B                     	;# 
   166  011C                     	;# 
   167  011C                     	;# 
   168  011C                     	;# 
   169  011D                     	;# 
   170  011D                     	;# 
   171  011D                     	;# 
   172  011E                     	;# 
   173  011E                     	;# 
   174  011E                     	;# 
   175  011F                     	;# 
   176  011F                     	;# 
   177  011F                     	;# 
   178  011F                     	;# 
   179  011F                     	;# 
   180  018C                     	;# 
   181  018D                     	;# 
   182  018E                     	;# 
   183  018F                     	;# 
   184  0190                     	;# 
   185  0191                     	;# 
   186  0192                     	;# 
   187  0196                     	;# 
   188  0197                     	;# 
   189  0198                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019B                     	;# 
   193  019C                     	;# 
   194  020C                     	;# 
   195  020C                     	;# 
   196  020D                     	;# 
   197  020E                     	;# 
   198  020F                     	;# 
   199  020F                     	;# 
   200  0210                     	;# 
   201  0210                     	;# 
   202  0211                     	;# 
   203  0211                     	;# 
   204  0212                     	;# 
   205  0212                     	;# 
   206  0213                     	;# 
   207  0214                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  0218                     	;# 
   215  0218                     	;# 
   216  0219                     	;# 
   217  021A                     	;# 
   218  021B                     	;# 
   219  021B                     	;# 
   220  021C                     	;# 
   221  021C                     	;# 
   222  021D                     	;# 
   223  021D                     	;# 
   224  021E                     	;# 
   225  021F                     	;# 
   226  028C                     	;# 
   227  028C                     	;# 
   228  028D                     	;# 
   229  028D                     	;# 
   230  028E                     	;# 
   231  028F                     	;# 
   232  0290                     	;# 
   233  0290                     	;# 
   234  0291                     	;# 
   235  0292                     	;# 
   236  0292                     	;# 
   237  0293                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0295                     	;# 
   241  0296                     	;# 
   242  0296                     	;# 
   243  0297                     	;# 
   244  0298                     	;# 
   245  0298                     	;# 
   246  0299                     	;# 
   247  0299                     	;# 
   248  029A                     	;# 
   249  029B                     	;# 
   250  029C                     	;# 
   251  029C                     	;# 
   252  029D                     	;# 
   253  030C                     	;# 
   254  030C                     	;# 
   255  030D                     	;# 
   256  030E                     	;# 
   257  030F                     	;# 
   258  0310                     	;# 
   259  0310                     	;# 
   260  0311                     	;# 
   261  0312                     	;# 
   262  0313                     	;# 
   263  0314                     	;# 
   264  0314                     	;# 
   265  0315                     	;# 
   266  0316                     	;# 
   267  0317                     	;# 
   268  0318                     	;# 
   269  0318                     	;# 
   270  0319                     	;# 
   271  031A                     	;# 
   272  031B                     	;# 
   273  031C                     	;# 
   274  031C                     	;# 
   275  031D                     	;# 
   276  031E                     	;# 
   277  031F                     	;# 
   278  038C                     	;# 
   279  038D                     	;# 
   280  038E                     	;# 
   281  0390                     	;# 
   282  0391                     	;# 
   283  0392                     	;# 
   284  040C                     	;# 
   285  040D                     	;# 
   286  040E                     	;# 
   287  040F                     	;# 
   288  0410                     	;# 
   289  0411                     	;# 
   290  0416                     	;# 
   291  0416                     	;# 
   292  0417                     	;# 
   293  0418                     	;# 
   294  0418                     	;# 
   295  0419                     	;# 
   296  041A                     	;# 
   297  041A                     	;# 
   298  041B                     	;# 
   299  041C                     	;# 
   300  041C                     	;# 
   301  041D                     	;# 
   302  041E                     	;# 
   303  041F                     	;# 
   304  048C                     	;# 
   305  048C                     	;# 
   306  048D                     	;# 
   307  048E                     	;# 
   308  048F                     	;# 
   309  048F                     	;# 
   310  0490                     	;# 
   311  0491                     	;# 
   312  0492                     	;# 
   313  0492                     	;# 
   314  0493                     	;# 
   315  0494                     	;# 
   316  0495                     	;# 
   317  0495                     	;# 
   318  0496                     	;# 
   319  0497                     	;# 
   320  0498                     	;# 
   321  0499                     	;# 
   322  049A                     	;# 
   323  049B                     	;# 
   324  049C                     	;# 
   325  049D                     	;# 
   326  050C                     	;# 
   327  050C                     	;# 
   328  050D                     	;# 
   329  050E                     	;# 
   330  050F                     	;# 
   331  050F                     	;# 
   332  0510                     	;# 
   333  0511                     	;# 
   334  0512                     	;# 
   335  0512                     	;# 
   336  0513                     	;# 
   337  0514                     	;# 
   338  0515                     	;# 
   339  0515                     	;# 
   340  0516                     	;# 
   341  0517                     	;# 
   342  0518                     	;# 
   343  0519                     	;# 
   344  051A                     	;# 
   345  051B                     	;# 
   346  051C                     	;# 
   347  051D                     	;# 
   348  058C                     	;# 
   349  058C                     	;# 
   350  058D                     	;# 
   351  058E                     	;# 
   352  058F                     	;# 
   353  058F                     	;# 
   354  0590                     	;# 
   355  0591                     	;# 
   356  0592                     	;# 
   357  0593                     	;# 
   358  060C                     	;# 
   359  060D                     	;# 
   360  060E                     	;# 
   361  060F                     	;# 
   362  0610                     	;# 
   363  0611                     	;# 
   364  0612                     	;# 
   365  0613                     	;# 
   366  0614                     	;# 
   367  0616                     	;# 
   368  0617                     	;# 
   369  0618                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061D                     	;# 
   375  061E                     	;# 
   376  068C                     	;# 
   377  068D                     	;# 
   378  068E                     	;# 
   379  068F                     	;# 
   380  0690                     	;# 
   381  0691                     	;# 
   382  0692                     	;# 
   383  0693                     	;# 
   384  0694                     	;# 
   385  070C                     	;# 
   386  070D                     	;# 
   387  070E                     	;# 
   388  070F                     	;# 
   389  0710                     	;# 
   390  0711                     	;# 
   391  0712                     	;# 
   392  0713                     	;# 
   393  0714                     	;# 
   394  0716                     	;# 
   395  0717                     	;# 
   396  0718                     	;# 
   397  0719                     	;# 
   398  071A                     	;# 
   399  071B                     	;# 
   400  071C                     	;# 
   401  071D                     	;# 
   402  071E                     	;# 
   403  0796                     	;# 
   404  0797                     	;# 
   405  0798                     	;# 
   406  0799                     	;# 
   407  079A                     	;# 
   408  079B                     	;# 
   409  080C                     	;# 
   410  080D                     	;# 
   411  080E                     	;# 
   412  080F                     	;# 
   413  0810                     	;# 
   414  0811                     	;# 
   415  0812                     	;# 
   416  0813                     	;# 
   417  0814                     	;# 
   418  081A                     	;# 
   419  081B                     	;# 
   420  081C                     	;# 
   421  081D                     	;# 
   422  081E                     	;# 
   423  081F                     	;# 
   424  088C                     	;# 
   425  088D                     	;# 
   426  088E                     	;# 
   427  088F                     	;# 
   428  0890                     	;# 
   429  0891                     	;# 
   430  0892                     	;# 
   431  0893                     	;# 
   432  0895                     	;# 
   433  0896                     	;# 
   434  0897                     	;# 
   435  0898                     	;# 
   436  0899                     	;# 
   437  089A                     	;# 
   438  089B                     	;# 
   439  090C                     	;# 
   440  090E                     	;# 
   441  090F                     	;# 
   442  091F                     	;# 
   443  091F                     	;# 
   444  098F                     	;# 
   445  098F                     	;# 
   446  0990                     	;# 
   447  0991                     	;# 
   448  0992                     	;# 
   449  0993                     	;# 
   450  0994                     	;# 
   451  0995                     	;# 
   452  0996                     	;# 
   453  0997                     	;# 
   454  0E0F                     	;# 
   455  0E10                     	;# 
   456  0E11                     	;# 
   457  0E12                     	;# 
   458  0E13                     	;# 
   459  0E14                     	;# 
   460  0E15                     	;# 
   461  0E16                     	;# 
   462  0E17                     	;# 
   463  0E18                     	;# 
   464  0E19                     	;# 
   465  0E1A                     	;# 
   466  0E1B                     	;# 
   467  0E1C                     	;# 
   468  0E1D                     	;# 
   469  0E1E                     	;# 
   470  0E1F                     	;# 
   471  0E20                     	;# 
   472  0E21                     	;# 
   473  0E22                     	;# 
   474  0E23                     	;# 
   475  0E24                     	;# 
   476  0E25                     	;# 
   477  0E26                     	;# 
   478  0E27                     	;# 
   479  0E28                     	;# 
   480  0E29                     	;# 
   481  0E2A                     	;# 
   482  0E2B                     	;# 
   483  0E2C                     	;# 
   484  0E2D                     	;# 
   485  0E2E                     	;# 
   486  0E2F                     	;# 
   487  0E30                     	;# 
   488  0E31                     	;# 
   489  0E32                     	;# 
   490  0E33                     	;# 
   491  0E34                     	;# 
   492  0E35                     	;# 
   493  0E36                     	;# 
   494  0E37                     	;# 
   495  0E8F                     	;# 
   496  0E90                     	;# 
   497  0E91                     	;# 
   498  0E92                     	;# 
   499  0E93                     	;# 
   500  0E94                     	;# 
   501  0E95                     	;# 
   502  0E96                     	;# 
   503  0E97                     	;# 
   504  0E9C                     	;# 
   505  0E9D                     	;# 
   506  0E9E                     	;# 
   507  0EA1                     	;# 
   508  0EA2                     	;# 
   509  0EA3                     	;# 
   510  0EA4                     	;# 
   511  0EA5                     	;# 
   512  0EA9                     	;# 
   513  0EAA                     	;# 
   514  0EAB                     	;# 
   515  0EAC                     	;# 
   516  0EB1                     	;# 
   517  0EB2                     	;# 
   518  0EB3                     	;# 
   519  0EB8                     	;# 
   520  0EB9                     	;# 
   521  0EBA                     	;# 
   522  0EBB                     	;# 
   523  0EBC                     	;# 
   524  0EBD                     	;# 
   525  0EBE                     	;# 
   526  0EC3                     	;# 
   527  0EC5                     	;# 
   528  0EC6                     	;# 
   529  0EC7                     	;# 
   530  0EC8                     	;# 
   531  0EC9                     	;# 
   532  0ECA                     	;# 
   533  0ECB                     	;# 
   534  0ECC                     	;# 
   535  0F10                     	;# 
   536  0F11                     	;# 
   537  0F12                     	;# 
   538  0F13                     	;# 
   539  0F14                     	;# 
   540  0F15                     	;# 
   541  0F16                     	;# 
   542  0F17                     	;# 
   543  0F18                     	;# 
   544  0F19                     	;# 
   545  0F1A                     	;# 
   546  0F1B                     	;# 
   547  0F1C                     	;# 
   548  0F1D                     	;# 
   549  0F1E                     	;# 
   550  0F1F                     	;# 
   551  0F20                     	;# 
   552  0F21                     	;# 
   553  0F22                     	;# 
   554  0F23                     	;# 
   555  0F24                     	;# 
   556  0F25                     	;# 
   557  0F26                     	;# 
   558  0F27                     	;# 
   559  0F38                     	;# 
   560  0F39                     	;# 
   561  0F3A                     	;# 
   562  0F3B                     	;# 
   563  0F3C                     	;# 
   564  0F3D                     	;# 
   565  0F3E                     	;# 
   566  0F3F                     	;# 
   567  0F40                     	;# 
   568  0F41                     	;# 
   569  0F43                     	;# 
   570  0F44                     	;# 
   571  0F45                     	;# 
   572  0F46                     	;# 
   573  0F47                     	;# 
   574  0F48                     	;# 
   575  0F49                     	;# 
   576  0F4A                     	;# 
   577  0F4B                     	;# 
   578  0F4C                     	;# 
   579  0F4E                     	;# 
   580  0F4F                     	;# 
   581  0F50                     	;# 
   582  0F51                     	;# 
   583  0F52                     	;# 
   584  0F53                     	;# 
   585  0F54                     	;# 
   586  0F55                     	;# 
   587  0F56                     	;# 
   588  0F57                     	;# 
   589  0F65                     	;# 
   590  0F68                     	;# 
   591  0F69                     	;# 
   592  0F6A                     	;# 
   593  0F6B                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605  0000                     	;# 
   606  0001                     	;# 
   607  0002                     	;# 
   608  0003                     	;# 
   609  0004                     	;# 
   610  0005                     	;# 
   611  0006                     	;# 
   612  0007                     	;# 
   613  0008                     	;# 
   614  0009                     	;# 
   615  000A                     	;# 
   616  000B                     	;# 
   617  000C                     	;# 
   618  000D                     	;# 
   619  000E                     	;# 
   620  0010                     	;# 
   621  0011                     	;# 
   622  0012                     	;# 
   623  0013                     	;# 
   624  0016                     	;# 
   625  0017                     	;# 
   626  0018                     	;# 
   627  001C                     	;# 
   628  001C                     	;# 
   629  001D                     	;# 
   630  001D                     	;# 
   631  001E                     	;# 
   632  001F                     	;# 
   633  008C                     	;# 
   634  008C                     	;# 
   635  008D                     	;# 
   636  008E                     	;# 
   637  008E                     	;# 
   638  008F                     	;# 
   639  0090                     	;# 
   640  0090                     	;# 
   641  0091                     	;# 
   642  0093                     	;# 
   643  0094                     	;# 
   644  0095                     	;# 
   645  0096                     	;# 
   646  0097                     	;# 
   647  0098                     	;# 
   648  0099                     	;# 
   649  009A                     	;# 
   650  009B                     	;# 
   651  009C                     	;# 
   652  009D                     	;# 
   653  009E                     	;# 
   654  010C                     	;# 
   655  010D                     	;# 
   656  010E                     	;# 
   657  010E                     	;# 
   658  010F                     	;# 
   659  0110                     	;# 
   660  0110                     	;# 
   661  0111                     	;# 
   662  0112                     	;# 
   663  0112                     	;# 
   664  0113                     	;# 
   665  0114                     	;# 
   666  0114                     	;# 
   667  0115                     	;# 
   668  0116                     	;# 
   669  0116                     	;# 
   670  0117                     	;# 
   671  0119                     	;# 
   672  0119                     	;# 
   673  0119                     	;# 
   674  011A                     	;# 
   675  011A                     	;# 
   676  011A                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011B                     	;# 
   680  011B                     	;# 
   681  011B                     	;# 
   682  011C                     	;# 
   683  011C                     	;# 
   684  011C                     	;# 
   685  011D                     	;# 
   686  011D                     	;# 
   687  011D                     	;# 
   688  011E                     	;# 
   689  011E                     	;# 
   690  011E                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  011F                     	;# 
   694  011F                     	;# 
   695  011F                     	;# 
   696  018C                     	;# 
   697  018D                     	;# 
   698  018E                     	;# 
   699  018F                     	;# 
   700  0190                     	;# 
   701  0191                     	;# 
   702  0192                     	;# 
   703  0196                     	;# 
   704  0197                     	;# 
   705  0198                     	;# 
   706  0199                     	;# 
   707  019A                     	;# 
   708  019B                     	;# 
   709  019C                     	;# 
   710  020C                     	;# 
   711  020C                     	;# 
   712  020D                     	;# 
   713  020E                     	;# 
   714  020F                     	;# 
   715  020F                     	;# 
   716  0210                     	;# 
   717  0210                     	;# 
   718  0211                     	;# 
   719  0211                     	;# 
   720  0212                     	;# 
   721  0212                     	;# 
   722  0213                     	;# 
   723  0214                     	;# 
   724  0215                     	;# 
   725  0215                     	;# 
   726  0216                     	;# 
   727  0216                     	;# 
   728  0217                     	;# 
   729  0217                     	;# 
   730  0218                     	;# 
   731  0218                     	;# 
   732  0219                     	;# 
   733  021A                     	;# 
   734  021B                     	;# 
   735  021B                     	;# 
   736  021C                     	;# 
   737  021C                     	;# 
   738  021D                     	;# 
   739  021D                     	;# 
   740  021E                     	;# 
   741  021F                     	;# 
   742  028C                     	;# 
   743  028C                     	;# 
   744  028D                     	;# 
   745  028D                     	;# 
   746  028E                     	;# 
   747  028F                     	;# 
   748  0290                     	;# 
   749  0290                     	;# 
   750  0291                     	;# 
   751  0292                     	;# 
   752  0292                     	;# 
   753  0293                     	;# 
   754  0293                     	;# 
   755  0294                     	;# 
   756  0295                     	;# 
   757  0296                     	;# 
   758  0296                     	;# 
   759  0297                     	;# 
   760  0298                     	;# 
   761  0298                     	;# 
   762  0299                     	;# 
   763  0299                     	;# 
   764  029A                     	;# 
   765  029B                     	;# 
   766  029C                     	;# 
   767  029C                     	;# 
   768  029D                     	;# 
   769  030C                     	;# 
   770  030C                     	;# 
   771  030D                     	;# 
   772  030E                     	;# 
   773  030F                     	;# 
   774  0310                     	;# 
   775  0310                     	;# 
   776  0311                     	;# 
   777  0312                     	;# 
   778  0313                     	;# 
   779  0314                     	;# 
   780  0314                     	;# 
   781  0315                     	;# 
   782  0316                     	;# 
   783  0317                     	;# 
   784  0318                     	;# 
   785  0318                     	;# 
   786  0319                     	;# 
   787  031A                     	;# 
   788  031B                     	;# 
   789  031C                     	;# 
   790  031C                     	;# 
   791  031D                     	;# 
   792  031E                     	;# 
   793  031F                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0391                     	;# 
   799  0392                     	;# 
   800  040C                     	;# 
   801  040D                     	;# 
   802  040E                     	;# 
   803  040F                     	;# 
   804  0410                     	;# 
   805  0411                     	;# 
   806  0416                     	;# 
   807  0416                     	;# 
   808  0417                     	;# 
   809  0418                     	;# 
   810  0418                     	;# 
   811  0419                     	;# 
   812  041A                     	;# 
   813  041A                     	;# 
   814  041B                     	;# 
   815  041C                     	;# 
   816  041C                     	;# 
   817  041D                     	;# 
   818  041E                     	;# 
   819  041F                     	;# 
   820  048C                     	;# 
   821  048C                     	;# 
   822  048D                     	;# 
   823  048E                     	;# 
   824  048F                     	;# 
   825  048F                     	;# 
   826  0490                     	;# 
   827  0491                     	;# 
   828  0492                     	;# 
   829  0492                     	;# 
   830  0493                     	;# 
   831  0494                     	;# 
   832  0495                     	;# 
   833  0495                     	;# 
   834  0496                     	;# 
   835  0497                     	;# 
   836  0498                     	;# 
   837  0499                     	;# 
   838  049A                     	;# 
   839  049B                     	;# 
   840  049C                     	;# 
   841  049D                     	;# 
   842  050C                     	;# 
   843  050C                     	;# 
   844  050D                     	;# 
   845  050E                     	;# 
   846  050F                     	;# 
   847  050F                     	;# 
   848  0510                     	;# 
   849  0511                     	;# 
   850  0512                     	;# 
   851  0512                     	;# 
   852  0513                     	;# 
   853  0514                     	;# 
   854  0515                     	;# 
   855  0515                     	;# 
   856  0516                     	;# 
   857  0517                     	;# 
   858  0518                     	;# 
   859  0519                     	;# 
   860  051A                     	;# 
   861  051B                     	;# 
   862  051C                     	;# 
   863  051D                     	;# 
   864  058C                     	;# 
   865  058C                     	;# 
   866  058D                     	;# 
   867  058E                     	;# 
   868  058F                     	;# 
   869  058F                     	;# 
   870  0590                     	;# 
   871  0591                     	;# 
   872  0592                     	;# 
   873  0593                     	;# 
   874  060C                     	;# 
   875  060D                     	;# 
   876  060E                     	;# 
   877  060F                     	;# 
   878  0610                     	;# 
   879  0611                     	;# 
   880  0612                     	;# 
   881  0613                     	;# 
   882  0614                     	;# 
   883  0616                     	;# 
   884  0617                     	;# 
   885  0618                     	;# 
   886  0619                     	;# 
   887  061A                     	;# 
   888  061B                     	;# 
   889  061C                     	;# 
   890  061D                     	;# 
   891  061E                     	;# 
   892  068C                     	;# 
   893  068D                     	;# 
   894  068E                     	;# 
   895  068F                     	;# 
   896  0690                     	;# 
   897  0691                     	;# 
   898  0692                     	;# 
   899  0693                     	;# 
   900  0694                     	;# 
   901  070C                     	;# 
   902  070D                     	;# 
   903  070E                     	;# 
   904  070F                     	;# 
   905  0710                     	;# 
   906  0711                     	;# 
   907  0712                     	;# 
   908  0713                     	;# 
   909  0714                     	;# 
   910  0716                     	;# 
   911  0717                     	;# 
   912  0718                     	;# 
   913  0719                     	;# 
   914  071A                     	;# 
   915  071B                     	;# 
   916  071C                     	;# 
   917  071D                     	;# 
   918  071E                     	;# 
   919  0796                     	;# 
   920  0797                     	;# 
   921  0798                     	;# 
   922  0799                     	;# 
   923  079A                     	;# 
   924  079B                     	;# 
   925  080C                     	;# 
   926  080D                     	;# 
   927  080E                     	;# 
   928  080F                     	;# 
   929  0810                     	;# 
   930  0811                     	;# 
   931  0812                     	;# 
   932  0813                     	;# 
   933  0814                     	;# 
   934  081A                     	;# 
   935  081B                     	;# 
   936  081C                     	;# 
   937  081D                     	;# 
   938  081E                     	;# 
   939  081F                     	;# 
   940  088C                     	;# 
   941  088D                     	;# 
   942  088E                     	;# 
   943  088F                     	;# 
   944  0890                     	;# 
   945  0891                     	;# 
   946  0892                     	;# 
   947  0893                     	;# 
   948  0895                     	;# 
   949  0896                     	;# 
   950  0897                     	;# 
   951  0898                     	;# 
   952  0899                     	;# 
   953  089A                     	;# 
   954  089B                     	;# 
   955  090C                     	;# 
   956  090E                     	;# 
   957  090F                     	;# 
   958  091F                     	;# 
   959  091F                     	;# 
   960  098F                     	;# 
   961  098F                     	;# 
   962  0990                     	;# 
   963  0991                     	;# 
   964  0992                     	;# 
   965  0993                     	;# 
   966  0994                     	;# 
   967  0995                     	;# 
   968  0996                     	;# 
   969  0997                     	;# 
   970  0E0F                     	;# 
   971  0E10                     	;# 
   972  0E11                     	;# 
   973  0E12                     	;# 
   974  0E13                     	;# 
   975  0E14                     	;# 
   976  0E15                     	;# 
   977  0E16                     	;# 
   978  0E17                     	;# 
   979  0E18                     	;# 
   980  0E19                     	;# 
   981  0E1A                     	;# 
   982  0E1B                     	;# 
   983  0E1C                     	;# 
   984  0E1D                     	;# 
   985  0E1E                     	;# 
   986  0E1F                     	;# 
   987  0E20                     	;# 
   988  0E21                     	;# 
   989  0E22                     	;# 
   990  0E23                     	;# 
   991  0E24                     	;# 
   992  0E25                     	;# 
   993  0E26                     	;# 
   994  0E27                     	;# 
   995  0E28                     	;# 
   996  0E29                     	;# 
   997  0E2A                     	;# 
   998  0E2B                     	;# 
   999  0E2C                     	;# 
  1000  0E2D                     	;# 
  1001  0E2E                     	;# 
  1002  0E2F                     	;# 
  1003  0E30                     	;# 
  1004  0E31                     	;# 
  1005  0E32                     	;# 
  1006  0E33                     	;# 
  1007  0E34                     	;# 
  1008  0E35                     	;# 
  1009  0E36                     	;# 
  1010  0E37                     	;# 
  1011  0E8F                     	;# 
  1012  0E90                     	;# 
  1013  0E91                     	;# 
  1014  0E92                     	;# 
  1015  0E93                     	;# 
  1016  0E94                     	;# 
  1017  0E95                     	;# 
  1018  0E96                     	;# 
  1019  0E97                     	;# 
  1020  0E9C                     	;# 
  1021  0E9D                     	;# 
  1022  0E9E                     	;# 
  1023  0EA1                     	;# 
  1024  0EA2                     	;# 
  1025  0EA3                     	;# 
  1026  0EA4                     	;# 
  1027  0EA5                     	;# 
  1028  0EA9                     	;# 
  1029  0EAA                     	;# 
  1030  0EAB                     	;# 
  1031  0EAC                     	;# 
  1032  0EB1                     	;# 
  1033  0EB2                     	;# 
  1034  0EB3                     	;# 
  1035  0EB8                     	;# 
  1036  0EB9                     	;# 
  1037  0EBA                     	;# 
  1038  0EBB                     	;# 
  1039  0EBC                     	;# 
  1040  0EBD                     	;# 
  1041  0EBE                     	;# 
  1042  0EC3                     	;# 
  1043  0EC5                     	;# 
  1044  0EC6                     	;# 
  1045  0EC7                     	;# 
  1046  0EC8                     	;# 
  1047  0EC9                     	;# 
  1048  0ECA                     	;# 
  1049  0ECB                     	;# 
  1050  0ECC                     	;# 
  1051  0F10                     	;# 
  1052  0F11                     	;# 
  1053  0F12                     	;# 
  1054  0F13                     	;# 
  1055  0F14                     	;# 
  1056  0F15                     	;# 
  1057  0F16                     	;# 
  1058  0F17                     	;# 
  1059  0F18                     	;# 
  1060  0F19                     	;# 
  1061  0F1A                     	;# 
  1062  0F1B                     	;# 
  1063  0F1C                     	;# 
  1064  0F1D                     	;# 
  1065  0F1E                     	;# 
  1066  0F1F                     	;# 
  1067  0F20                     	;# 
  1068  0F21                     	;# 
  1069  0F22                     	;# 
  1070  0F23                     	;# 
  1071  0F24                     	;# 
  1072  0F25                     	;# 
  1073  0F26                     	;# 
  1074  0F27                     	;# 
  1075  0F38                     	;# 
  1076  0F39                     	;# 
  1077  0F3A                     	;# 
  1078  0F3B                     	;# 
  1079  0F3C                     	;# 
  1080  0F3D                     	;# 
  1081  0F3E                     	;# 
  1082  0F3F                     	;# 
  1083  0F40                     	;# 
  1084  0F41                     	;# 
  1085  0F43                     	;# 
  1086  0F44                     	;# 
  1087  0F45                     	;# 
  1088  0F46                     	;# 
  1089  0F47                     	;# 
  1090  0F48                     	;# 
  1091  0F49                     	;# 
  1092  0F4A                     	;# 
  1093  0F4B                     	;# 
  1094  0F4C                     	;# 
  1095  0F4E                     	;# 
  1096  0F4F                     	;# 
  1097  0F50                     	;# 
  1098  0F51                     	;# 
  1099  0F52                     	;# 
  1100  0F53                     	;# 
  1101  0F54                     	;# 
  1102  0F55                     	;# 
  1103  0F56                     	;# 
  1104  0F57                     	;# 
  1105  0F65                     	;# 
  1106  0F68                     	;# 
  1107  0F69                     	;# 
  1108  0F6A                     	;# 
  1109  0F6B                     	;# 
  1110  0FE4                     	;# 
  1111  0FE5                     	;# 
  1112  0FE6                     	;# 
  1113  0FE7                     	;# 
  1114  0FE8                     	;# 
  1115  0FE9                     	;# 
  1116  0FEA                     	;# 
  1117  0FEB                     	;# 
  1118  0FED                     	;# 
  1119  0FEE                     	;# 
  1120  0FEF                     	;# 
  1121  0000                     	;# 
  1122  0001                     	;# 
  1123  0002                     	;# 
  1124  0003                     	;# 
  1125  0004                     	;# 
  1126  0005                     	;# 
  1127  0006                     	;# 
  1128  0007                     	;# 
  1129  0008                     	;# 
  1130  0009                     	;# 
  1131  000A                     	;# 
  1132  000B                     	;# 
  1133  000C                     	;# 
  1134  000D                     	;# 
  1135  000E                     	;# 
  1136  0010                     	;# 
  1137  0011                     	;# 
  1138  0012                     	;# 
  1139  0013                     	;# 
  1140  0016                     	;# 
  1141  0017                     	;# 
  1142  0018                     	;# 
  1143  001C                     	;# 
  1144  001C                     	;# 
  1145  001D                     	;# 
  1146  001D                     	;# 
  1147  001E                     	;# 
  1148  001F                     	;# 
  1149  008C                     	;# 
  1150  008C                     	;# 
  1151  008D                     	;# 
  1152  008E                     	;# 
  1153  008E                     	;# 
  1154  008F                     	;# 
  1155  0090                     	;# 
  1156  0090                     	;# 
  1157  0091                     	;# 
  1158  0093                     	;# 
  1159  0094                     	;# 
  1160  0095                     	;# 
  1161  0096                     	;# 
  1162  0097                     	;# 
  1163  0098                     	;# 
  1164  0099                     	;# 
  1165  009A                     	;# 
  1166  009B                     	;# 
  1167  009C                     	;# 
  1168  009D                     	;# 
  1169  009E                     	;# 
  1170  010C                     	;# 
  1171  010D                     	;# 
  1172  010E                     	;# 
  1173  010E                     	;# 
  1174  010F                     	;# 
  1175  0110                     	;# 
  1176  0110                     	;# 
  1177  0111                     	;# 
  1178  0112                     	;# 
  1179  0112                     	;# 
  1180  0113                     	;# 
  1181  0114                     	;# 
  1182  0114                     	;# 
  1183  0115                     	;# 
  1184  0116                     	;# 
  1185  0116                     	;# 
  1186  0117                     	;# 
  1187  0119                     	;# 
  1188  0119                     	;# 
  1189  0119                     	;# 
  1190  011A                     	;# 
  1191  011A                     	;# 
  1192  011A                     	;# 
  1193  011B                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011B                     	;# 
  1197  011B                     	;# 
  1198  011C                     	;# 
  1199  011C                     	;# 
  1200  011C                     	;# 
  1201  011D                     	;# 
  1202  011D                     	;# 
  1203  011D                     	;# 
  1204  011E                     	;# 
  1205  011E                     	;# 
  1206  011E                     	;# 
  1207  011F                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  011F                     	;# 
  1211  011F                     	;# 
  1212  018C                     	;# 
  1213  018D                     	;# 
  1214  018E                     	;# 
  1215  018F                     	;# 
  1216  0190                     	;# 
  1217  0191                     	;# 
  1218  0192                     	;# 
  1219  0196                     	;# 
  1220  0197                     	;# 
  1221  0198                     	;# 
  1222  0199                     	;# 
  1223  019A                     	;# 
  1224  019B                     	;# 
  1225  019C                     	;# 
  1226  020C                     	;# 
  1227  020C                     	;# 
  1228  020D                     	;# 
  1229  020E                     	;# 
  1230  020F                     	;# 
  1231  020F                     	;# 
  1232  0210                     	;# 
  1233  0210                     	;# 
  1234  0211                     	;# 
  1235  0211                     	;# 
  1236  0212                     	;# 
  1237  0212                     	;# 
  1238  0213                     	;# 
  1239  0214                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0216                     	;# 
  1243  0216                     	;# 
  1244  0217                     	;# 
  1245  0217                     	;# 
  1246  0218                     	;# 
  1247  0218                     	;# 
  1248  0219                     	;# 
  1249  021A                     	;# 
  1250  021B                     	;# 
  1251  021B                     	;# 
  1252  021C                     	;# 
  1253  021C                     	;# 
  1254  021D                     	;# 
  1255  021D                     	;# 
  1256  021E                     	;# 
  1257  021F                     	;# 
  1258  028C                     	;# 
  1259  028C                     	;# 
  1260  028D                     	;# 
  1261  028D                     	;# 
  1262  028E                     	;# 
  1263  028F                     	;# 
  1264  0290                     	;# 
  1265  0290                     	;# 
  1266  0291                     	;# 
  1267  0292                     	;# 
  1268  0292                     	;# 
  1269  0293                     	;# 
  1270  0293                     	;# 
  1271  0294                     	;# 
  1272  0295                     	;# 
  1273  0296                     	;# 
  1274  0296                     	;# 
  1275  0297                     	;# 
  1276  0298                     	;# 
  1277  0298                     	;# 
  1278  0299                     	;# 
  1279  0299                     	;# 
  1280  029A                     	;# 
  1281  029B                     	;# 
  1282  029C                     	;# 
  1283  029C                     	;# 
  1284  029D                     	;# 
  1285  030C                     	;# 
  1286  030C                     	;# 
  1287  030D                     	;# 
  1288  030E                     	;# 
  1289  030F                     	;# 
  1290  0310                     	;# 
  1291  0310                     	;# 
  1292  0311                     	;# 
  1293  0312                     	;# 
  1294  0313                     	;# 
  1295  0314                     	;# 
  1296  0314                     	;# 
  1297  0315                     	;# 
  1298  0316                     	;# 
  1299  0317                     	;# 
  1300  0318                     	;# 
  1301  0318                     	;# 
  1302  0319                     	;# 
  1303  031A                     	;# 
  1304  031B                     	;# 
  1305  031C                     	;# 
  1306  031C                     	;# 
  1307  031D                     	;# 
  1308  031E                     	;# 
  1309  031F                     	;# 
  1310  038C                     	;# 
  1311  038D                     	;# 
  1312  038E                     	;# 
  1313  0390                     	;# 
  1314  0391                     	;# 
  1315  0392                     	;# 
  1316  040C                     	;# 
  1317  040D                     	;# 
  1318  040E                     	;# 
  1319  040F                     	;# 
  1320  0410                     	;# 
  1321  0411                     	;# 
  1322  0416                     	;# 
  1323  0416                     	;# 
  1324  0417                     	;# 
  1325  0418                     	;# 
  1326  0418                     	;# 
  1327  0419                     	;# 
  1328  041A                     	;# 
  1329  041A                     	;# 
  1330  041B                     	;# 
  1331  041C                     	;# 
  1332  041C                     	;# 
  1333  041D                     	;# 
  1334  041E                     	;# 
  1335  041F                     	;# 
  1336  048C                     	;# 
  1337  048C                     	;# 
  1338  048D                     	;# 
  1339  048E                     	;# 
  1340  048F                     	;# 
  1341  048F                     	;# 
  1342  0490                     	;# 
  1343  0491                     	;# 
  1344  0492                     	;# 
  1345  0492                     	;# 
  1346  0493                     	;# 
  1347  0494                     	;# 
  1348  0495                     	;# 
  1349  0495                     	;# 
  1350  0496                     	;# 
  1351  0497                     	;# 
  1352  0498                     	;# 
  1353  0499                     	;# 
  1354  049A                     	;# 
  1355  049B                     	;# 
  1356  049C                     	;# 
  1357  049D                     	;# 
  1358  050C                     	;# 
  1359  050C                     	;# 
  1360  050D                     	;# 
  1361  050E                     	;# 
  1362  050F                     	;# 
  1363  050F                     	;# 
  1364  0510                     	;# 
  1365  0511                     	;# 
  1366  0512                     	;# 
  1367  0512                     	;# 
  1368  0513                     	;# 
  1369  0514                     	;# 
  1370  0515                     	;# 
  1371  0515                     	;# 
  1372  0516                     	;# 
  1373  0517                     	;# 
  1374  0518                     	;# 
  1375  0519                     	;# 
  1376  051A                     	;# 
  1377  051B                     	;# 
  1378  051C                     	;# 
  1379  051D                     	;# 
  1380  058C                     	;# 
  1381  058C                     	;# 
  1382  058D                     	;# 
  1383  058E                     	;# 
  1384  058F                     	;# 
  1385  058F                     	;# 
  1386  0590                     	;# 
  1387  0591                     	;# 
  1388  0592                     	;# 
  1389  0593                     	;# 
  1390  060C                     	;# 
  1391  060D                     	;# 
  1392  060E                     	;# 
  1393  060F                     	;# 
  1394  0610                     	;# 
  1395  0611                     	;# 
  1396  0612                     	;# 
  1397  0613                     	;# 
  1398  0614                     	;# 
  1399  0616                     	;# 
  1400  0617                     	;# 
  1401  0618                     	;# 
  1402  0619                     	;# 
  1403  061A                     	;# 
  1404  061B                     	;# 
  1405  061C                     	;# 
  1406  061D                     	;# 
  1407  061E                     	;# 
  1408  068C                     	;# 
  1409  068D                     	;# 
  1410  068E                     	;# 
  1411  068F                     	;# 
  1412  0690                     	;# 
  1413  0691                     	;# 
  1414  0692                     	;# 
  1415  0693                     	;# 
  1416  0694                     	;# 
  1417  070C                     	;# 
  1418  070D                     	;# 
  1419  070E                     	;# 
  1420  070F                     	;# 
  1421  0710                     	;# 
  1422  0711                     	;# 
  1423  0712                     	;# 
  1424  0713                     	;# 
  1425  0714                     	;# 
  1426  0716                     	;# 
  1427  0717                     	;# 
  1428  0718                     	;# 
  1429  0719                     	;# 
  1430  071A                     	;# 
  1431  071B                     	;# 
  1432  071C                     	;# 
  1433  071D                     	;# 
  1434  071E                     	;# 
  1435  0796                     	;# 
  1436  0797                     	;# 
  1437  0798                     	;# 
  1438  0799                     	;# 
  1439  079A                     	;# 
  1440  079B                     	;# 
  1441  080C                     	;# 
  1442  080D                     	;# 
  1443  080E                     	;# 
  1444  080F                     	;# 
  1445  0810                     	;# 
  1446  0811                     	;# 
  1447  0812                     	;# 
  1448  0813                     	;# 
  1449  0814                     	;# 
  1450  081A                     	;# 
  1451  081B                     	;# 
  1452  081C                     	;# 
  1453  081D                     	;# 
  1454  081E                     	;# 
  1455  081F                     	;# 
  1456  088C                     	;# 
  1457  088D                     	;# 
  1458  088E                     	;# 
  1459  088F                     	;# 
  1460  0890                     	;# 
  1461  0891                     	;# 
  1462  0892                     	;# 
  1463  0893                     	;# 
  1464  0895                     	;# 
  1465  0896                     	;# 
  1466  0897                     	;# 
  1467  0898                     	;# 
  1468  0899                     	;# 
  1469  089A                     	;# 
  1470  089B                     	;# 
  1471  090C                     	;# 
  1472  090E                     	;# 
  1473  090F                     	;# 
  1474  091F                     	;# 
  1475  091F                     	;# 
  1476  098F                     	;# 
  1477  098F                     	;# 
  1478  0990                     	;# 
  1479  0991                     	;# 
  1480  0992                     	;# 
  1481  0993                     	;# 
  1482  0994                     	;# 
  1483  0995                     	;# 
  1484  0996                     	;# 
  1485  0997                     	;# 
  1486  0E0F                     	;# 
  1487  0E10                     	;# 
  1488  0E11                     	;# 
  1489  0E12                     	;# 
  1490  0E13                     	;# 
  1491  0E14                     	;# 
  1492  0E15                     	;# 
  1493  0E16                     	;# 
  1494  0E17                     	;# 
  1495  0E18                     	;# 
  1496  0E19                     	;# 
  1497  0E1A                     	;# 
  1498  0E1B                     	;# 
  1499  0E1C                     	;# 
  1500  0E1D                     	;# 
  1501  0E1E                     	;# 
  1502  0E1F                     	;# 
  1503  0E20                     	;# 
  1504  0E21                     	;# 
  1505  0E22                     	;# 
  1506  0E23                     	;# 
  1507  0E24                     	;# 
  1508  0E25                     	;# 
  1509  0E26                     	;# 
  1510  0E27                     	;# 
  1511  0E28                     	;# 
  1512  0E29                     	;# 
  1513  0E2A                     	;# 
  1514  0E2B                     	;# 
  1515  0E2C                     	;# 
  1516  0E2D                     	;# 
  1517  0E2E                     	;# 
  1518  0E2F                     	;# 
  1519  0E30                     	;# 
  1520  0E31                     	;# 
  1521  0E32                     	;# 
  1522  0E33                     	;# 
  1523  0E34                     	;# 
  1524  0E35                     	;# 
  1525  0E36                     	;# 
  1526  0E37                     	;# 
  1527  0E8F                     	;# 
  1528  0E90                     	;# 
  1529  0E91                     	;# 
  1530  0E92                     	;# 
  1531  0E93                     	;# 
  1532  0E94                     	;# 
  1533  0E95                     	;# 
  1534  0E96                     	;# 
  1535  0E97                     	;# 
  1536  0E9C                     	;# 
  1537  0E9D                     	;# 
  1538  0E9E                     	;# 
  1539  0EA1                     	;# 
  1540  0EA2                     	;# 
  1541  0EA3                     	;# 
  1542  0EA4                     	;# 
  1543  0EA5                     	;# 
  1544  0EA9                     	;# 
  1545  0EAA                     	;# 
  1546  0EAB                     	;# 
  1547  0EAC                     	;# 
  1548  0EB1                     	;# 
  1549  0EB2                     	;# 
  1550  0EB3                     	;# 
  1551  0EB8                     	;# 
  1552  0EB9                     	;# 
  1553  0EBA                     	;# 
  1554  0EBB                     	;# 
  1555  0EBC                     	;# 
  1556  0EBD                     	;# 
  1557  0EBE                     	;# 
  1558  0EC3                     	;# 
  1559  0EC5                     	;# 
  1560  0EC6                     	;# 
  1561  0EC7                     	;# 
  1562  0EC8                     	;# 
  1563  0EC9                     	;# 
  1564  0ECA                     	;# 
  1565  0ECB                     	;# 
  1566  0ECC                     	;# 
  1567  0F10                     	;# 
  1568  0F11                     	;# 
  1569  0F12                     	;# 
  1570  0F13                     	;# 
  1571  0F14                     	;# 
  1572  0F15                     	;# 
  1573  0F16                     	;# 
  1574  0F17                     	;# 
  1575  0F18                     	;# 
  1576  0F19                     	;# 
  1577  0F1A                     	;# 
  1578  0F1B                     	;# 
  1579  0F1C                     	;# 
  1580  0F1D                     	;# 
  1581  0F1E                     	;# 
  1582  0F1F                     	;# 
  1583  0F20                     	;# 
  1584  0F21                     	;# 
  1585  0F22                     	;# 
  1586  0F23                     	;# 
  1587  0F24                     	;# 
  1588  0F25                     	;# 
  1589  0F26                     	;# 
  1590  0F27                     	;# 
  1591  0F38                     	;# 
  1592  0F39                     	;# 
  1593  0F3A                     	;# 
  1594  0F3B                     	;# 
  1595  0F3C                     	;# 
  1596  0F3D                     	;# 
  1597  0F3E                     	;# 
  1598  0F3F                     	;# 
  1599  0F40                     	;# 
  1600  0F41                     	;# 
  1601  0F43                     	;# 
  1602  0F44                     	;# 
  1603  0F45                     	;# 
  1604  0F46                     	;# 
  1605  0F47                     	;# 
  1606  0F48                     	;# 
  1607  0F49                     	;# 
  1608  0F4A                     	;# 
  1609  0F4B                     	;# 
  1610  0F4C                     	;# 
  1611  0F4E                     	;# 
  1612  0F4F                     	;# 
  1613  0F50                     	;# 
  1614  0F51                     	;# 
  1615  0F52                     	;# 
  1616  0F53                     	;# 
  1617  0F54                     	;# 
  1618  0F55                     	;# 
  1619  0F56                     	;# 
  1620  0F57                     	;# 
  1621  0F65                     	;# 
  1622  0F68                     	;# 
  1623  0F69                     	;# 
  1624  0F6A                     	;# 
  1625  0F6B                     	;# 
  1626  0FE4                     	;# 
  1627  0FE5                     	;# 
  1628  0FE6                     	;# 
  1629  0FE7                     	;# 
  1630  0FE8                     	;# 
  1631  0FE9                     	;# 
  1632  0FEA                     	;# 
  1633  0FEB                     	;# 
  1634  0FED                     	;# 
  1635  0FEE                     	;# 
  1636  0FEF                     	;# 
  1637  0000                     	;# 
  1638  0001                     	;# 
  1639  0002                     	;# 
  1640  0003                     	;# 
  1641  0004                     	;# 
  1642  0005                     	;# 
  1643  0006                     	;# 
  1644  0007                     	;# 
  1645  0008                     	;# 
  1646  0009                     	;# 
  1647  000A                     	;# 
  1648  000B                     	;# 
  1649  000C                     	;# 
  1650  000D                     	;# 
  1651  000E                     	;# 
  1652  0010                     	;# 
  1653  0011                     	;# 
  1654  0012                     	;# 
  1655  0013                     	;# 
  1656  0016                     	;# 
  1657  0017                     	;# 
  1658  0018                     	;# 
  1659  001C                     	;# 
  1660  001C                     	;# 
  1661  001D                     	;# 
  1662  001D                     	;# 
  1663  001E                     	;# 
  1664  001F                     	;# 
  1665  008C                     	;# 
  1666  008C                     	;# 
  1667  008D                     	;# 
  1668  008E                     	;# 
  1669  008E                     	;# 
  1670  008F                     	;# 
  1671  0090                     	;# 
  1672  0090                     	;# 
  1673  0091                     	;# 
  1674  0093                     	;# 
  1675  0094                     	;# 
  1676  0095                     	;# 
  1677  0096                     	;# 
  1678  0097                     	;# 
  1679  0098                     	;# 
  1680  0099                     	;# 
  1681  009A                     	;# 
  1682  009B                     	;# 
  1683  009C                     	;# 
  1684  009D                     	;# 
  1685  009E                     	;# 
  1686  010C                     	;# 
  1687  010D                     	;# 
  1688  010E                     	;# 
  1689  010E                     	;# 
  1690  010F                     	;# 
  1691  0110                     	;# 
  1692  0110                     	;# 
  1693  0111                     	;# 
  1694  0112                     	;# 
  1695  0112                     	;# 
  1696  0113                     	;# 
  1697  0114                     	;# 
  1698  0114                     	;# 
  1699  0115                     	;# 
  1700  0116                     	;# 
  1701  0116                     	;# 
  1702  0117                     	;# 
  1703  0119                     	;# 
  1704  0119                     	;# 
  1705  0119                     	;# 
  1706  011A                     	;# 
  1707  011A                     	;# 
  1708  011A                     	;# 
  1709  011B                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011C                     	;# 
  1715  011C                     	;# 
  1716  011C                     	;# 
  1717  011D                     	;# 
  1718  011D                     	;# 
  1719  011D                     	;# 
  1720  011E                     	;# 
  1721  011E                     	;# 
  1722  011E                     	;# 
  1723  011F                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  018C                     	;# 
  1729  018D                     	;# 
  1730  018E                     	;# 
  1731  018F                     	;# 
  1732  0190                     	;# 
  1733  0191                     	;# 
  1734  0192                     	;# 
  1735  0196                     	;# 
  1736  0197                     	;# 
  1737  0198                     	;# 
  1738  0199                     	;# 
  1739  019A                     	;# 
  1740  019B                     	;# 
  1741  019C                     	;# 
  1742  020C                     	;# 
  1743  020C                     	;# 
  1744  020D                     	;# 
  1745  020E                     	;# 
  1746  020F                     	;# 
  1747  020F                     	;# 
  1748  0210                     	;# 
  1749  0210                     	;# 
  1750  0211                     	;# 
  1751  0211                     	;# 
  1752  0212                     	;# 
  1753  0212                     	;# 
  1754  0213                     	;# 
  1755  0214                     	;# 
  1756  0215                     	;# 
  1757  0215                     	;# 
  1758  0216                     	;# 
  1759  0216                     	;# 
  1760  0217                     	;# 
  1761  0217                     	;# 
  1762  0218                     	;# 
  1763  0218                     	;# 
  1764  0219                     	;# 
  1765  021A                     	;# 
  1766  021B                     	;# 
  1767  021B                     	;# 
  1768  021C                     	;# 
  1769  021C                     	;# 
  1770  021D                     	;# 
  1771  021D                     	;# 
  1772  021E                     	;# 
  1773  021F                     	;# 
  1774  028C                     	;# 
  1775  028C                     	;# 
  1776  028D                     	;# 
  1777  028D                     	;# 
  1778  028E                     	;# 
  1779  028F                     	;# 
  1780  0290                     	;# 
  1781  0290                     	;# 
  1782  0291                     	;# 
  1783  0292                     	;# 
  1784  0292                     	;# 
  1785  0293                     	;# 
  1786  0293                     	;# 
  1787  0294                     	;# 
  1788  0295                     	;# 
  1789  0296                     	;# 
  1790  0296                     	;# 
  1791  0297                     	;# 
  1792  0298                     	;# 
  1793  0298                     	;# 
  1794  0299                     	;# 
  1795  0299                     	;# 
  1796  029A                     	;# 
  1797  029B                     	;# 
  1798  029C                     	;# 
  1799  029C                     	;# 
  1800  029D                     	;# 
  1801  030C                     	;# 
  1802  030C                     	;# 
  1803  030D                     	;# 
  1804  030E                     	;# 
  1805  030F                     	;# 
  1806  0310                     	;# 
  1807  0310                     	;# 
  1808  0311                     	;# 
  1809  0312                     	;# 
  1810  0313                     	;# 
  1811  0314                     	;# 
  1812  0314                     	;# 
  1813  0315                     	;# 
  1814  0316                     	;# 
  1815  0317                     	;# 
  1816  0318                     	;# 
  1817  0318                     	;# 
  1818  0319                     	;# 
  1819  031A                     	;# 
  1820  031B                     	;# 
  1821  031C                     	;# 
  1822  031C                     	;# 
  1823  031D                     	;# 
  1824  031E                     	;# 
  1825  031F                     	;# 
  1826  038C                     	;# 
  1827  038D                     	;# 
  1828  038E                     	;# 
  1829  0390                     	;# 
  1830  0391                     	;# 
  1831  0392                     	;# 
  1832  040C                     	;# 
  1833  040D                     	;# 
  1834  040E                     	;# 
  1835  040F                     	;# 
  1836  0410                     	;# 
  1837  0411                     	;# 
  1838  0416                     	;# 
  1839  0416                     	;# 
  1840  0417                     	;# 
  1841  0418                     	;# 
  1842  0418                     	;# 
  1843  0419                     	;# 
  1844  041A                     	;# 
  1845  041A                     	;# 
  1846  041B                     	;# 
  1847  041C                     	;# 
  1848  041C                     	;# 
  1849  041D                     	;# 
  1850  041E                     	;# 
  1851  041F                     	;# 
  1852  048C                     	;# 
  1853  048C                     	;# 
  1854  048D                     	;# 
  1855  048E                     	;# 
  1856  048F                     	;# 
  1857  048F                     	;# 
  1858  0490                     	;# 
  1859  0491                     	;# 
  1860  0492                     	;# 
  1861  0492                     	;# 
  1862  0493                     	;# 
  1863  0494                     	;# 
  1864  0495                     	;# 
  1865  0495                     	;# 
  1866  0496                     	;# 
  1867  0497                     	;# 
  1868  0498                     	;# 
  1869  0499                     	;# 
  1870  049A                     	;# 
  1871  049B                     	;# 
  1872  049C                     	;# 
  1873  049D                     	;# 
  1874  050C                     	;# 
  1875  050C                     	;# 
  1876  050D                     	;# 
  1877  050E                     	;# 
  1878  050F                     	;# 
  1879  050F                     	;# 
  1880  0510                     	;# 
  1881  0511                     	;# 
  1882  0512                     	;# 
  1883  0512                     	;# 
  1884  0513                     	;# 
  1885  0514                     	;# 
  1886  0515                     	;# 
  1887  0515                     	;# 
  1888  0516                     	;# 
  1889  0517                     	;# 
  1890  0518                     	;# 
  1891  0519                     	;# 
  1892  051A                     	;# 
  1893  051B                     	;# 
  1894  051C                     	;# 
  1895  051D                     	;# 
  1896  058C                     	;# 
  1897  058C                     	;# 
  1898  058D                     	;# 
  1899  058E                     	;# 
  1900  058F                     	;# 
  1901  058F                     	;# 
  1902  0590                     	;# 
  1903  0591                     	;# 
  1904  0592                     	;# 
  1905  0593                     	;# 
  1906  060C                     	;# 
  1907  060D                     	;# 
  1908  060E                     	;# 
  1909  060F                     	;# 
  1910  0610                     	;# 
  1911  0611                     	;# 
  1912  0612                     	;# 
  1913  0613                     	;# 
  1914  0614                     	;# 
  1915  0616                     	;# 
  1916  0617                     	;# 
  1917  0618                     	;# 
  1918  0619                     	;# 
  1919  061A                     	;# 
  1920  061B                     	;# 
  1921  061C                     	;# 
  1922  061D                     	;# 
  1923  061E                     	;# 
  1924  068C                     	;# 
  1925  068D                     	;# 
  1926  068E                     	;# 
  1927  068F                     	;# 
  1928  0690                     	;# 
  1929  0691                     	;# 
  1930  0692                     	;# 
  1931  0693                     	;# 
  1932  0694                     	;# 
  1933  070C                     	;# 
  1934  070D                     	;# 
  1935  070E                     	;# 
  1936  070F                     	;# 
  1937  0710                     	;# 
  1938  0711                     	;# 
  1939  0712                     	;# 
  1940  0713                     	;# 
  1941  0714                     	;# 
  1942  0716                     	;# 
  1943  0717                     	;# 
  1944  0718                     	;# 
  1945  0719                     	;# 
  1946  071A                     	;# 
  1947  071B                     	;# 
  1948  071C                     	;# 
  1949  071D                     	;# 
  1950  071E                     	;# 
  1951  0796                     	;# 
  1952  0797                     	;# 
  1953  0798                     	;# 
  1954  0799                     	;# 
  1955  079A                     	;# 
  1956  079B                     	;# 
  1957  080C                     	;# 
  1958  080D                     	;# 
  1959  080E                     	;# 
  1960  080F                     	;# 
  1961  0810                     	;# 
  1962  0811                     	;# 
  1963  0812                     	;# 
  1964  0813                     	;# 
  1965  0814                     	;# 
  1966  081A                     	;# 
  1967  081B                     	;# 
  1968  081C                     	;# 
  1969  081D                     	;# 
  1970  081E                     	;# 
  1971  081F                     	;# 
  1972  088C                     	;# 
  1973  088D                     	;# 
  1974  088E                     	;# 
  1975  088F                     	;# 
  1976  0890                     	;# 
  1977  0891                     	;# 
  1978  0892                     	;# 
  1979  0893                     	;# 
  1980  0895                     	;# 
  1981  0896                     	;# 
  1982  0897                     	;# 
  1983  0898                     	;# 
  1984  0899                     	;# 
  1985  089A                     	;# 
  1986  089B                     	;# 
  1987  090C                     	;# 
  1988  090E                     	;# 
  1989  090F                     	;# 
  1990  091F                     	;# 
  1991  091F                     	;# 
  1992  098F                     	;# 
  1993  098F                     	;# 
  1994  0990                     	;# 
  1995  0991                     	;# 
  1996  0992                     	;# 
  1997  0993                     	;# 
  1998  0994                     	;# 
  1999  0995                     	;# 
  2000  0996                     	;# 
  2001  0997                     	;# 
  2002  0E0F                     	;# 
  2003  0E10                     	;# 
  2004  0E11                     	;# 
  2005  0E12                     	;# 
  2006  0E13                     	;# 
  2007  0E14                     	;# 
  2008  0E15                     	;# 
  2009  0E16                     	;# 
  2010  0E17                     	;# 
  2011  0E18                     	;# 
  2012  0E19                     	;# 
  2013  0E1A                     	;# 
  2014  0E1B                     	;# 
  2015  0E1C                     	;# 
  2016  0E1D                     	;# 
  2017  0E1E                     	;# 
  2018  0E1F                     	;# 
  2019  0E20                     	;# 
  2020  0E21                     	;# 
  2021  0E22                     	;# 
  2022  0E23                     	;# 
  2023  0E24                     	;# 
  2024  0E25                     	;# 
  2025  0E26                     	;# 
  2026  0E27                     	;# 
  2027  0E28                     	;# 
  2028  0E29                     	;# 
  2029  0E2A                     	;# 
  2030  0E2B                     	;# 
  2031  0E2C                     	;# 
  2032  0E2D                     	;# 
  2033  0E2E                     	;# 
  2034  0E2F                     	;# 
  2035  0E30                     	;# 
  2036  0E31                     	;# 
  2037  0E32                     	;# 
  2038  0E33                     	;# 
  2039  0E34                     	;# 
  2040  0E35                     	;# 
  2041  0E36                     	;# 
  2042  0E37                     	;# 
  2043  0E8F                     	;# 
  2044  0E90                     	;# 
  2045  0E91                     	;# 
  2046  0E92                     	;# 
  2047  0E93                     	;# 
  2048  0E94                     	;# 
  2049  0E95                     	;# 
  2050  0E96                     	;# 
  2051  0E97                     	;# 
  2052  0E9C                     	;# 
  2053  0E9D                     	;# 
  2054  0E9E                     	;# 
  2055  0EA1                     	;# 
  2056  0EA2                     	;# 
  2057  0EA3                     	;# 
  2058  0EA4                     	;# 
  2059  0EA5                     	;# 
  2060  0EA9                     	;# 
  2061  0EAA                     	;# 
  2062  0EAB                     	;# 
  2063  0EAC                     	;# 
  2064  0EB1                     	;# 
  2065  0EB2                     	;# 
  2066  0EB3                     	;# 
  2067  0EB8                     	;# 
  2068  0EB9                     	;# 
  2069  0EBA                     	;# 
  2070  0EBB                     	;# 
  2071  0EBC                     	;# 
  2072  0EBD                     	;# 
  2073  0EBE                     	;# 
  2074  0EC3                     	;# 
  2075  0EC5                     	;# 
  2076  0EC6                     	;# 
  2077  0EC7                     	;# 
  2078  0EC8                     	;# 
  2079  0EC9                     	;# 
  2080  0ECA                     	;# 
  2081  0ECB                     	;# 
  2082  0ECC                     	;# 
  2083  0F10                     	;# 
  2084  0F11                     	;# 
  2085  0F12                     	;# 
  2086  0F13                     	;# 
  2087  0F14                     	;# 
  2088  0F15                     	;# 
  2089  0F16                     	;# 
  2090  0F17                     	;# 
  2091  0F18                     	;# 
  2092  0F19                     	;# 
  2093  0F1A                     	;# 
  2094  0F1B                     	;# 
  2095  0F1C                     	;# 
  2096  0F1D                     	;# 
  2097  0F1E                     	;# 
  2098  0F1F                     	;# 
  2099  0F20                     	;# 
  2100  0F21                     	;# 
  2101  0F22                     	;# 
  2102  0F23                     	;# 
  2103  0F24                     	;# 
  2104  0F25                     	;# 
  2105  0F26                     	;# 
  2106  0F27                     	;# 
  2107  0F38                     	;# 
  2108  0F39                     	;# 
  2109  0F3A                     	;# 
  2110  0F3B                     	;# 
  2111  0F3C                     	;# 
  2112  0F3D                     	;# 
  2113  0F3E                     	;# 
  2114  0F3F                     	;# 
  2115  0F40                     	;# 
  2116  0F41                     	;# 
  2117  0F43                     	;# 
  2118  0F44                     	;# 
  2119  0F45                     	;# 
  2120  0F46                     	;# 
  2121  0F47                     	;# 
  2122  0F48                     	;# 
  2123  0F49                     	;# 
  2124  0F4A                     	;# 
  2125  0F4B                     	;# 
  2126  0F4C                     	;# 
  2127  0F4E                     	;# 
  2128  0F4F                     	;# 
  2129  0F50                     	;# 
  2130  0F51                     	;# 
  2131  0F52                     	;# 
  2132  0F53                     	;# 
  2133  0F54                     	;# 
  2134  0F55                     	;# 
  2135  0F56                     	;# 
  2136  0F57                     	;# 
  2137  0F65                     	;# 
  2138  0F68                     	;# 
  2139  0F69                     	;# 
  2140  0F6A                     	;# 
  2141  0F6B                     	;# 
  2142  0FE4                     	;# 
  2143  0FE5                     	;# 
  2144  0FE6                     	;# 
  2145  0FE7                     	;# 
  2146  0FE8                     	;# 
  2147  0FE9                     	;# 
  2148  0FEA                     	;# 
  2149  0FEB                     	;# 
  2150  0FED                     	;# 
  2151  0FEE                     	;# 
  2152  0FEF                     	;# 
  2153  0000                     	;# 
  2154  0001                     	;# 
  2155  0002                     	;# 
  2156  0003                     	;# 
  2157  0004                     	;# 
  2158  0005                     	;# 
  2159  0006                     	;# 
  2160  0007                     	;# 
  2161  0008                     	;# 
  2162  0009                     	;# 
  2163  000A                     	;# 
  2164  000B                     	;# 
  2165  000C                     	;# 
  2166  000D                     	;# 
  2167  000E                     	;# 
  2168  0010                     	;# 
  2169  0011                     	;# 
  2170  0012                     	;# 
  2171  0013                     	;# 
  2172  0016                     	;# 
  2173  0017                     	;# 
  2174  0018                     	;# 
  2175  001C                     	;# 
  2176  001C                     	;# 
  2177  001D                     	;# 
  2178  001D                     	;# 
  2179  001E                     	;# 
  2180  001F                     	;# 
  2181  008C                     	;# 
  2182  008C                     	;# 
  2183  008D                     	;# 
  2184  008E                     	;# 
  2185  008E                     	;# 
  2186  008F                     	;# 
  2187  0090                     	;# 
  2188  0090                     	;# 
  2189  0091                     	;# 
  2190  0093                     	;# 
  2191  0094                     	;# 
  2192  0095                     	;# 
  2193  0096                     	;# 
  2194  0097                     	;# 
  2195  0098                     	;# 
  2196  0099                     	;# 
  2197  009A                     	;# 
  2198  009B                     	;# 
  2199  009C                     	;# 
  2200  009D                     	;# 
  2201  009E                     	;# 
  2202  010C                     	;# 
  2203  010D                     	;# 
  2204  010E                     	;# 
  2205  010E                     	;# 
  2206  010F                     	;# 
  2207  0110                     	;# 
  2208  0110                     	;# 
  2209  0111                     	;# 
  2210  0112                     	;# 
  2211  0112                     	;# 
  2212  0113                     	;# 
  2213  0114                     	;# 
  2214  0114                     	;# 
  2215  0115                     	;# 
  2216  0116                     	;# 
  2217  0116                     	;# 
  2218  0117                     	;# 
  2219  0119                     	;# 
  2220  0119                     	;# 
  2221  0119                     	;# 
  2222  011A                     	;# 
  2223  011A                     	;# 
  2224  011A                     	;# 
  2225  011B                     	;# 
  2226  011B                     	;# 
  2227  011B                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011C                     	;# 
  2231  011C                     	;# 
  2232  011C                     	;# 
  2233  011D                     	;# 
  2234  011D                     	;# 
  2235  011D                     	;# 
  2236  011E                     	;# 
  2237  011E                     	;# 
  2238  011E                     	;# 
  2239  011F                     	;# 
  2240  011F                     	;# 
  2241  011F                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  018C                     	;# 
  2245  018D                     	;# 
  2246  018E                     	;# 
  2247  018F                     	;# 
  2248  0190                     	;# 
  2249  0191                     	;# 
  2250  0192                     	;# 
  2251  0196                     	;# 
  2252  0197                     	;# 
  2253  0198                     	;# 
  2254  0199                     	;# 
  2255  019A                     	;# 
  2256  019B                     	;# 
  2257  019C                     	;# 
  2258  020C                     	;# 
  2259  020C                     	;# 
  2260  020D                     	;# 
  2261  020E                     	;# 
  2262  020F                     	;# 
  2263  020F                     	;# 
  2264  0210                     	;# 
  2265  0210                     	;# 
  2266  0211                     	;# 
  2267  0211                     	;# 
  2268  0212                     	;# 
  2269  0212                     	;# 
  2270  0213                     	;# 
  2271  0214                     	;# 
  2272  0215                     	;# 
  2273  0215                     	;# 
  2274  0216                     	;# 
  2275  0216                     	;# 
  2276  0217                     	;# 
  2277  0217                     	;# 
  2278  0218                     	;# 
  2279  0218                     	;# 
  2280  0219                     	;# 
  2281  021A                     	;# 
  2282  021B                     	;# 
  2283  021B                     	;# 
  2284  021C                     	;# 
  2285  021C                     	;# 
  2286  021D                     	;# 
  2287  021D                     	;# 
  2288  021E                     	;# 
  2289  021F                     	;# 
  2290  028C                     	;# 
  2291  028C                     	;# 
  2292  028D                     	;# 
  2293  028D                     	;# 
  2294  028E                     	;# 
  2295  028F                     	;# 
  2296  0290                     	;# 
  2297  0290                     	;# 
  2298  0291                     	;# 
  2299  0292                     	;# 
  2300  0292                     	;# 
  2301  0293                     	;# 
  2302  0293                     	;# 
  2303  0294                     	;# 
  2304  0295                     	;# 
  2305  0296                     	;# 
  2306  0296                     	;# 
  2307  0297                     	;# 
  2308  0298                     	;# 
  2309  0298                     	;# 
  2310  0299                     	;# 
  2311  0299                     	;# 
  2312  029A                     	;# 
  2313  029B                     	;# 
  2314  029C                     	;# 
  2315  029C                     	;# 
  2316  029D                     	;# 
  2317  030C                     	;# 
  2318  030C                     	;# 
  2319  030D                     	;# 
  2320  030E                     	;# 
  2321  030F                     	;# 
  2322  0310                     	;# 
  2323  0310                     	;# 
  2324  0311                     	;# 
  2325  0312                     	;# 
  2326  0313                     	;# 
  2327  0314                     	;# 
  2328  0314                     	;# 
  2329  0315                     	;# 
  2330  0316                     	;# 
  2331  0317                     	;# 
  2332  0318                     	;# 
  2333  0318                     	;# 
  2334  0319                     	;# 
  2335  031A                     	;# 
  2336  031B                     	;# 
  2337  031C                     	;# 
  2338  031C                     	;# 
  2339  031D                     	;# 
  2340  031E                     	;# 
  2341  031F                     	;# 
  2342  038C                     	;# 
  2343  038D                     	;# 
  2344  038E                     	;# 
  2345  0390                     	;# 
  2346  0391                     	;# 
  2347  0392                     	;# 
  2348  040C                     	;# 
  2349  040D                     	;# 
  2350  040E                     	;# 
  2351  040F                     	;# 
  2352  0410                     	;# 
  2353  0411                     	;# 
  2354  0416                     	;# 
  2355  0416                     	;# 
  2356  0417                     	;# 
  2357  0418                     	;# 
  2358  0418                     	;# 
  2359  0419                     	;# 
  2360  041A                     	;# 
  2361  041A                     	;# 
  2362  041B                     	;# 
  2363  041C                     	;# 
  2364  041C                     	;# 
  2365  041D                     	;# 
  2366  041E                     	;# 
  2367  041F                     	;# 
  2368  048C                     	;# 
  2369  048C                     	;# 
  2370  048D                     	;# 
  2371  048E                     	;# 
  2372  048F                     	;# 
  2373  048F                     	;# 
  2374  0490                     	;# 
  2375  0491                     	;# 
  2376  0492                     	;# 
  2377  0492                     	;# 
  2378  0493                     	;# 
  2379  0494                     	;# 
  2380  0495                     	;# 
  2381  0495                     	;# 
  2382  0496                     	;# 
  2383  0497                     	;# 
  2384  0498                     	;# 
  2385  0499                     	;# 
  2386  049A                     	;# 
  2387  049B                     	;# 
  2388  049C                     	;# 
  2389  049D                     	;# 
  2390  050C                     	;# 
  2391  050C                     	;# 
  2392  050D                     	;# 
  2393  050E                     	;# 
  2394  050F                     	;# 
  2395  050F                     	;# 
  2396  0510                     	;# 
  2397  0511                     	;# 
  2398  0512                     	;# 
  2399  0512                     	;# 
  2400  0513                     	;# 
  2401  0514                     	;# 
  2402  0515                     	;# 
  2403  0515                     	;# 
  2404  0516                     	;# 
  2405  0517                     	;# 
  2406  0518                     	;# 
  2407  0519                     	;# 
  2408  051A                     	;# 
  2409  051B                     	;# 
  2410  051C                     	;# 
  2411  051D                     	;# 
  2412  058C                     	;# 
  2413  058C                     	;# 
  2414  058D                     	;# 
  2415  058E                     	;# 
  2416  058F                     	;# 
  2417  058F                     	;# 
  2418  0590                     	;# 
  2419  0591                     	;# 
  2420  0592                     	;# 
  2421  0593                     	;# 
  2422  060C                     	;# 
  2423  060D                     	;# 
  2424  060E                     	;# 
  2425  060F                     	;# 
  2426  0610                     	;# 
  2427  0611                     	;# 
  2428  0612                     	;# 
  2429  0613                     	;# 
  2430  0614                     	;# 
  2431  0616                     	;# 
  2432  0617                     	;# 
  2433  0618                     	;# 
  2434  0619                     	;# 
  2435  061A                     	;# 
  2436  061B                     	;# 
  2437  061C                     	;# 
  2438  061D                     	;# 
  2439  061E                     	;# 
  2440  068C                     	;# 
  2441  068D                     	;# 
  2442  068E                     	;# 
  2443  068F                     	;# 
  2444  0690                     	;# 
  2445  0691                     	;# 
  2446  0692                     	;# 
  2447  0693                     	;# 
  2448  0694                     	;# 
  2449  070C                     	;# 
  2450  070D                     	;# 
  2451  070E                     	;# 
  2452  070F                     	;# 
  2453  0710                     	;# 
  2454  0711                     	;# 
  2455  0712                     	;# 
  2456  0713                     	;# 
  2457  0714                     	;# 
  2458  0716                     	;# 
  2459  0717                     	;# 
  2460  0718                     	;# 
  2461  0719                     	;# 
  2462  071A                     	;# 
  2463  071B                     	;# 
  2464  071C                     	;# 
  2465  071D                     	;# 
  2466  071E                     	;# 
  2467  0796                     	;# 
  2468  0797                     	;# 
  2469  0798                     	;# 
  2470  0799                     	;# 
  2471  079A                     	;# 
  2472  079B                     	;# 
  2473  080C                     	;# 
  2474  080D                     	;# 
  2475  080E                     	;# 
  2476  080F                     	;# 
  2477  0810                     	;# 
  2478  0811                     	;# 
  2479  0812                     	;# 
  2480  0813                     	;# 
  2481  0814                     	;# 
  2482  081A                     	;# 
  2483  081B                     	;# 
  2484  081C                     	;# 
  2485  081D                     	;# 
  2486  081E                     	;# 
  2487  081F                     	;# 
  2488  088C                     	;# 
  2489  088D                     	;# 
  2490  088E                     	;# 
  2491  088F                     	;# 
  2492  0890                     	;# 
  2493  0891                     	;# 
  2494  0892                     	;# 
  2495  0893                     	;# 
  2496  0895                     	;# 
  2497  0896                     	;# 
  2498  0897                     	;# 
  2499  0898                     	;# 
  2500  0899                     	;# 
  2501  089A                     	;# 
  2502  089B                     	;# 
  2503  090C                     	;# 
  2504  090E                     	;# 
  2505  090F                     	;# 
  2506  091F                     	;# 
  2507  091F                     	;# 
  2508  098F                     	;# 
  2509  098F                     	;# 
  2510  0990                     	;# 
  2511  0991                     	;# 
  2512  0992                     	;# 
  2513  0993                     	;# 
  2514  0994                     	;# 
  2515  0995                     	;# 
  2516  0996                     	;# 
  2517  0997                     	;# 
  2518  0E0F                     	;# 
  2519  0E10                     	;# 
  2520  0E11                     	;# 
  2521  0E12                     	;# 
  2522  0E13                     	;# 
  2523  0E14                     	;# 
  2524  0E15                     	;# 
  2525  0E16                     	;# 
  2526  0E17                     	;# 
  2527  0E18                     	;# 
  2528  0E19                     	;# 
  2529  0E1A                     	;# 
  2530  0E1B                     	;# 
  2531  0E1C                     	;# 
  2532  0E1D                     	;# 
  2533  0E1E                     	;# 
  2534  0E1F                     	;# 
  2535  0E20                     	;# 
  2536  0E21                     	;# 
  2537  0E22                     	;# 
  2538  0E23                     	;# 
  2539  0E24                     	;# 
  2540  0E25                     	;# 
  2541  0E26                     	;# 
  2542  0E27                     	;# 
  2543  0E28                     	;# 
  2544  0E29                     	;# 
  2545  0E2A                     	;# 
  2546  0E2B                     	;# 
  2547  0E2C                     	;# 
  2548  0E2D                     	;# 
  2549  0E2E                     	;# 
  2550  0E2F                     	;# 
  2551  0E30                     	;# 
  2552  0E31                     	;# 
  2553  0E32                     	;# 
  2554  0E33                     	;# 
  2555  0E34                     	;# 
  2556  0E35                     	;# 
  2557  0E36                     	;# 
  2558  0E37                     	;# 
  2559  0E8F                     	;# 
  2560  0E90                     	;# 
  2561  0E91                     	;# 
  2562  0E92                     	;# 
  2563  0E93                     	;# 
  2564  0E94                     	;# 
  2565  0E95                     	;# 
  2566  0E96                     	;# 
  2567  0E97                     	;# 
  2568  0E9C                     	;# 
  2569  0E9D                     	;# 
  2570  0E9E                     	;# 
  2571  0EA1                     	;# 
  2572  0EA2                     	;# 
  2573  0EA3                     	;# 
  2574  0EA4                     	;# 
  2575  0EA5                     	;# 
  2576  0EA9                     	;# 
  2577  0EAA                     	;# 
  2578  0EAB                     	;# 
  2579  0EAC                     	;# 
  2580  0EB1                     	;# 
  2581  0EB2                     	;# 
  2582  0EB3                     	;# 
  2583  0EB8                     	;# 
  2584  0EB9                     	;# 
  2585  0EBA                     	;# 
  2586  0EBB                     	;# 
  2587  0EBC                     	;# 
  2588  0EBD                     	;# 
  2589  0EBE                     	;# 
  2590  0EC3                     	;# 
  2591  0EC5                     	;# 
  2592  0EC6                     	;# 
  2593  0EC7                     	;# 
  2594  0EC8                     	;# 
  2595  0EC9                     	;# 
  2596  0ECA                     	;# 
  2597  0ECB                     	;# 
  2598  0ECC                     	;# 
  2599  0F10                     	;# 
  2600  0F11                     	;# 
  2601  0F12                     	;# 
  2602  0F13                     	;# 
  2603  0F14                     	;# 
  2604  0F15                     	;# 
  2605  0F16                     	;# 
  2606  0F17                     	;# 
  2607  0F18                     	;# 
  2608  0F19                     	;# 
  2609  0F1A                     	;# 
  2610  0F1B                     	;# 
  2611  0F1C                     	;# 
  2612  0F1D                     	;# 
  2613  0F1E                     	;# 
  2614  0F1F                     	;# 
  2615  0F20                     	;# 
  2616  0F21                     	;# 
  2617  0F22                     	;# 
  2618  0F23                     	;# 
  2619  0F24                     	;# 
  2620  0F25                     	;# 
  2621  0F26                     	;# 
  2622  0F27                     	;# 
  2623  0F38                     	;# 
  2624  0F39                     	;# 
  2625  0F3A                     	;# 
  2626  0F3B                     	;# 
  2627  0F3C                     	;# 
  2628  0F3D                     	;# 
  2629  0F3E                     	;# 
  2630  0F3F                     	;# 
  2631  0F40                     	;# 
  2632  0F41                     	;# 
  2633  0F43                     	;# 
  2634  0F44                     	;# 
  2635  0F45                     	;# 
  2636  0F46                     	;# 
  2637  0F47                     	;# 
  2638  0F48                     	;# 
  2639  0F49                     	;# 
  2640  0F4A                     	;# 
  2641  0F4B                     	;# 
  2642  0F4C                     	;# 
  2643  0F4E                     	;# 
  2644  0F4F                     	;# 
  2645  0F50                     	;# 
  2646  0F51                     	;# 
  2647  0F52                     	;# 
  2648  0F53                     	;# 
  2649  0F54                     	;# 
  2650  0F55                     	;# 
  2651  0F56                     	;# 
  2652  0F57                     	;# 
  2653  0F65                     	;# 
  2654  0F68                     	;# 
  2655  0F69                     	;# 
  2656  0F6A                     	;# 
  2657  0F6B                     	;# 
  2658  0FE4                     	;# 
  2659  0FE5                     	;# 
  2660  0FE6                     	;# 
  2661  0FE7                     	;# 
  2662  0FE8                     	;# 
  2663  0FE9                     	;# 
  2664  0FEA                     	;# 
  2665  0FEB                     	;# 
  2666  0FED                     	;# 
  2667  0FEE                     	;# 
  2668  0FEF                     	;# 
  2669  0000                     	;# 
  2670  0001                     	;# 
  2671  0002                     	;# 
  2672  0003                     	;# 
  2673  0004                     	;# 
  2674  0005                     	;# 
  2675  0006                     	;# 
  2676  0007                     	;# 
  2677  0008                     	;# 
  2678  0009                     	;# 
  2679  000A                     	;# 
  2680  000B                     	;# 
  2681  000C                     	;# 
  2682  000D                     	;# 
  2683  000E                     	;# 
  2684  0010                     	;# 
  2685  0011                     	;# 
  2686  0012                     	;# 
  2687  0013                     	;# 
  2688  0016                     	;# 
  2689  0017                     	;# 
  2690  0018                     	;# 
  2691  001C                     	;# 
  2692  001C                     	;# 
  2693  001D                     	;# 
  2694  001D                     	;# 
  2695  001E                     	;# 
  2696  001F                     	;# 
  2697  008C                     	;# 
  2698  008C                     	;# 
  2699  008D                     	;# 
  2700  008E                     	;# 
  2701  008E                     	;# 
  2702  008F                     	;# 
  2703  0090                     	;# 
  2704  0090                     	;# 
  2705  0091                     	;# 
  2706  0093                     	;# 
  2707  0094                     	;# 
  2708  0095                     	;# 
  2709  0096                     	;# 
  2710  0097                     	;# 
  2711  0098                     	;# 
  2712  0099                     	;# 
  2713  009A                     	;# 
  2714  009B                     	;# 
  2715  009C                     	;# 
  2716  009D                     	;# 
  2717  009E                     	;# 
  2718  010C                     	;# 
  2719  010D                     	;# 
  2720  010E                     	;# 
  2721  010E                     	;# 
  2722  010F                     	;# 
  2723  0110                     	;# 
  2724  0110                     	;# 
  2725  0111                     	;# 
  2726  0112                     	;# 
  2727  0112                     	;# 
  2728  0113                     	;# 
  2729  0114                     	;# 
  2730  0114                     	;# 
  2731  0115                     	;# 
  2732  0116                     	;# 
  2733  0116                     	;# 
  2734  0117                     	;# 
  2735  0119                     	;# 
  2736  0119                     	;# 
  2737  0119                     	;# 
  2738  011A                     	;# 
  2739  011A                     	;# 
  2740  011A                     	;# 
  2741  011B                     	;# 
  2742  011B                     	;# 
  2743  011B                     	;# 
  2744  011B                     	;# 
  2745  011B                     	;# 
  2746  011C                     	;# 
  2747  011C                     	;# 
  2748  011C                     	;# 
  2749  011D                     	;# 
  2750  011D                     	;# 
  2751  011D                     	;# 
  2752  011E                     	;# 
  2753  011E                     	;# 
  2754  011E                     	;# 
  2755  011F                     	;# 
  2756  011F                     	;# 
  2757  011F                     	;# 
  2758  011F                     	;# 
  2759  011F                     	;# 
  2760  018C                     	;# 
  2761  018D                     	;# 
  2762  018E                     	;# 
  2763  018F                     	;# 
  2764  0190                     	;# 
  2765  0191                     	;# 
  2766  0192                     	;# 
  2767  0196                     	;# 
  2768  0197                     	;# 
  2769  0198                     	;# 
  2770  0199                     	;# 
  2771  019A                     	;# 
  2772  019B                     	;# 
  2773  019C                     	;# 
  2774  020C                     	;# 
  2775  020C                     	;# 
  2776  020D                     	;# 
  2777  020E                     	;# 
  2778  020F                     	;# 
  2779  020F                     	;# 
  2780  0210                     	;# 
  2781  0210                     	;# 
  2782  0211                     	;# 
  2783  0211                     	;# 
  2784  0212                     	;# 
  2785  0212                     	;# 
  2786  0213                     	;# 
  2787  0214                     	;# 
  2788  0215                     	;# 
  2789  0215                     	;# 
  2790  0216                     	;# 
  2791  0216                     	;# 
  2792  0217                     	;# 
  2793  0217                     	;# 
  2794  0218                     	;# 
  2795  0218                     	;# 
  2796  0219                     	;# 
  2797  021A                     	;# 
  2798  021B                     	;# 
  2799  021B                     	;# 
  2800  021C                     	;# 
  2801  021C                     	;# 
  2802  021D                     	;# 
  2803  021D                     	;# 
  2804  021E                     	;# 
  2805  021F                     	;# 
  2806  028C                     	;# 
  2807  028C                     	;# 
  2808  028D                     	;# 
  2809  028D                     	;# 
  2810  028E                     	;# 
  2811  028F                     	;# 
  2812  0290                     	;# 
  2813  0290                     	;# 
  2814  0291                     	;# 
  2815  0292                     	;# 
  2816  0292                     	;# 
  2817  0293                     	;# 
  2818  0293                     	;# 
  2819  0294                     	;# 
  2820  0295                     	;# 
  2821  0296                     	;# 
  2822  0296                     	;# 
  2823  0297                     	;# 
  2824  0298                     	;# 
  2825  0298                     	;# 
  2826  0299                     	;# 
  2827  0299                     	;# 
  2828  029A                     	;# 
  2829  029B                     	;# 
  2830  029C                     	;# 
  2831  029C                     	;# 
  2832  029D                     	;# 
  2833  030C                     	;# 
  2834  030C                     	;# 
  2835  030D                     	;# 
  2836  030E                     	;# 
  2837  030F                     	;# 
  2838  0310                     	;# 
  2839  0310                     	;# 
  2840  0311                     	;# 
  2841  0312                     	;# 
  2842  0313                     	;# 
  2843  0314                     	;# 
  2844  0314                     	;# 
  2845  0315                     	;# 
  2846  0316                     	;# 
  2847  0317                     	;# 
  2848  0318                     	;# 
  2849  0318                     	;# 
  2850  0319                     	;# 
  2851  031A                     	;# 
  2852  031B                     	;# 
  2853  031C                     	;# 
  2854  031C                     	;# 
  2855  031D                     	;# 
  2856  031E                     	;# 
  2857  031F                     	;# 
  2858  038C                     	;# 
  2859  038D                     	;# 
  2860  038E                     	;# 
  2861  0390                     	;# 
  2862  0391                     	;# 
  2863  0392                     	;# 
  2864  040C                     	;# 
  2865  040D                     	;# 
  2866  040E                     	;# 
  2867  040F                     	;# 
  2868  0410                     	;# 
  2869  0411                     	;# 
  2870  0416                     	;# 
  2871  0416                     	;# 
  2872  0417                     	;# 
  2873  0418                     	;# 
  2874  0418                     	;# 
  2875  0419                     	;# 
  2876  041A                     	;# 
  2877  041A                     	;# 
  2878  041B                     	;# 
  2879  041C                     	;# 
  2880  041C                     	;# 
  2881  041D                     	;# 
  2882  041E                     	;# 
  2883  041F                     	;# 
  2884  048C                     	;# 
  2885  048C                     	;# 
  2886  048D                     	;# 
  2887  048E                     	;# 
  2888  048F                     	;# 
  2889  048F                     	;# 
  2890  0490                     	;# 
  2891  0491                     	;# 
  2892  0492                     	;# 
  2893  0492                     	;# 
  2894  0493                     	;# 
  2895  0494                     	;# 
  2896  0495                     	;# 
  2897  0495                     	;# 
  2898  0496                     	;# 
  2899  0497                     	;# 
  2900  0498                     	;# 
  2901  0499                     	;# 
  2902  049A                     	;# 
  2903  049B                     	;# 
  2904  049C                     	;# 
  2905  049D                     	;# 
  2906  050C                     	;# 
  2907  050C                     	;# 
  2908  050D                     	;# 
  2909  050E                     	;# 
  2910  050F                     	;# 
  2911  050F                     	;# 
  2912  0510                     	;# 
  2913  0511                     	;# 
  2914  0512                     	;# 
  2915  0512                     	;# 
  2916  0513                     	;# 
  2917  0514                     	;# 
  2918  0515                     	;# 
  2919  0515                     	;# 
  2920  0516                     	;# 
  2921  0517                     	;# 
  2922  0518                     	;# 
  2923  0519                     	;# 
  2924  051A                     	;# 
  2925  051B                     	;# 
  2926  051C                     	;# 
  2927  051D                     	;# 
  2928  058C                     	;# 
  2929  058C                     	;# 
  2930  058D                     	;# 
  2931  058E                     	;# 
  2932  058F                     	;# 
  2933  058F                     	;# 
  2934  0590                     	;# 
  2935  0591                     	;# 
  2936  0592                     	;# 
  2937  0593                     	;# 
  2938  060C                     	;# 
  2939  060D                     	;# 
  2940  060E                     	;# 
  2941  060F                     	;# 
  2942  0610                     	;# 
  2943  0611                     	;# 
  2944  0612                     	;# 
  2945  0613                     	;# 
  2946  0614                     	;# 
  2947  0616                     	;# 
  2948  0617                     	;# 
  2949  0618                     	;# 
  2950  0619                     	;# 
  2951  061A                     	;# 
  2952  061B                     	;# 
  2953  061C                     	;# 
  2954  061D                     	;# 
  2955  061E                     	;# 
  2956  068C                     	;# 
  2957  068D                     	;# 
  2958  068E                     	;# 
  2959  068F                     	;# 
  2960  0690                     	;# 
  2961  0691                     	;# 
  2962  0692                     	;# 
  2963  0693                     	;# 
  2964  0694                     	;# 
  2965  070C                     	;# 
  2966  070D                     	;# 
  2967  070E                     	;# 
  2968  070F                     	;# 
  2969  0710                     	;# 
  2970  0711                     	;# 
  2971  0712                     	;# 
  2972  0713                     	;# 
  2973  0714                     	;# 
  2974  0716                     	;# 
  2975  0717                     	;# 
  2976  0718                     	;# 
  2977  0719                     	;# 
  2978  071A                     	;# 
  2979  071B                     	;# 
  2980  071C                     	;# 
  2981  071D                     	;# 
  2982  071E                     	;# 
  2983  0796                     	;# 
  2984  0797                     	;# 
  2985  0798                     	;# 
  2986  0799                     	;# 
  2987  079A                     	;# 
  2988  079B                     	;# 
  2989  080C                     	;# 
  2990  080D                     	;# 
  2991  080E                     	;# 
  2992  080F                     	;# 
  2993  0810                     	;# 
  2994  0811                     	;# 
  2995  0812                     	;# 
  2996  0813                     	;# 
  2997  0814                     	;# 
  2998  081A                     	;# 
  2999  081B                     	;# 
  3000  081C                     	;# 
  3001  081D                     	;# 
  3002  081E                     	;# 
  3003  081F                     	;# 
  3004  088C                     	;# 
  3005  088D                     	;# 
  3006  088E                     	;# 
  3007  088F                     	;# 
  3008  0890                     	;# 
  3009  0891                     	;# 
  3010  0892                     	;# 
  3011  0893                     	;# 
  3012  0895                     	;# 
  3013  0896                     	;# 
  3014  0897                     	;# 
  3015  0898                     	;# 
  3016  0899                     	;# 
  3017  089A                     	;# 
  3018  089B                     	;# 
  3019  090C                     	;# 
  3020  090E                     	;# 
  3021  090F                     	;# 
  3022  091F                     	;# 
  3023  091F                     	;# 
  3024  098F                     	;# 
  3025  098F                     	;# 
  3026  0990                     	;# 
  3027  0991                     	;# 
  3028  0992                     	;# 
  3029  0993                     	;# 
  3030  0994                     	;# 
  3031  0995                     	;# 
  3032  0996                     	;# 
  3033  0997                     	;# 
  3034  0E0F                     	;# 
  3035  0E10                     	;# 
  3036  0E11                     	;# 
  3037  0E12                     	;# 
  3038  0E13                     	;# 
  3039  0E14                     	;# 
  3040  0E15                     	;# 
  3041  0E16                     	;# 
  3042  0E17                     	;# 
  3043  0E18                     	;# 
  3044  0E19                     	;# 
  3045  0E1A                     	;# 
  3046  0E1B                     	;# 
  3047  0E1C                     	;# 
  3048  0E1D                     	;# 
  3049  0E1E                     	;# 
  3050  0E1F                     	;# 
  3051  0E20                     	;# 
  3052  0E21                     	;# 
  3053  0E22                     	;# 
  3054  0E23                     	;# 
  3055  0E24                     	;# 
  3056  0E25                     	;# 
  3057  0E26                     	;# 
  3058  0E27                     	;# 
  3059  0E28                     	;# 
  3060  0E29                     	;# 
  3061  0E2A                     	;# 
  3062  0E2B                     	;# 
  3063  0E2C                     	;# 
  3064  0E2D                     	;# 
  3065  0E2E                     	;# 
  3066  0E2F                     	;# 
  3067  0E30                     	;# 
  3068  0E31                     	;# 
  3069  0E32                     	;# 
  3070  0E33                     	;# 
  3071  0E34                     	;# 
  3072  0E35                     	;# 
  3073  0E36                     	;# 
  3074  0E37                     	;# 
  3075  0E8F                     	;# 
  3076  0E90                     	;# 
  3077  0E91                     	;# 
  3078  0E92                     	;# 
  3079  0E93                     	;# 
  3080  0E94                     	;# 
  3081  0E95                     	;# 
  3082  0E96                     	;# 
  3083  0E97                     	;# 
  3084  0E9C                     	;# 
  3085  0E9D                     	;# 
  3086  0E9E                     	;# 
  3087  0EA1                     	;# 
  3088  0EA2                     	;# 
  3089  0EA3                     	;# 
  3090  0EA4                     	;# 
  3091  0EA5                     	;# 
  3092  0EA9                     	;# 
  3093  0EAA                     	;# 
  3094  0EAB                     	;# 
  3095  0EAC                     	;# 
  3096  0EB1                     	;# 
  3097  0EB2                     	;# 
  3098  0EB3                     	;# 
  3099  0EB8                     	;# 
  3100  0EB9                     	;# 
  3101  0EBA                     	;# 
  3102  0EBB                     	;# 
  3103  0EBC                     	;# 
  3104  0EBD                     	;# 
  3105  0EBE                     	;# 
  3106  0EC3                     	;# 
  3107  0EC5                     	;# 
  3108  0EC6                     	;# 
  3109  0EC7                     	;# 
  3110  0EC8                     	;# 
  3111  0EC9                     	;# 
  3112  0ECA                     	;# 
  3113  0ECB                     	;# 
  3114  0ECC                     	;# 
  3115  0F10                     	;# 
  3116  0F11                     	;# 
  3117  0F12                     	;# 
  3118  0F13                     	;# 
  3119  0F14                     	;# 
  3120  0F15                     	;# 
  3121  0F16                     	;# 
  3122  0F17                     	;# 
  3123  0F18                     	;# 
  3124  0F19                     	;# 
  3125  0F1A                     	;# 
  3126  0F1B                     	;# 
  3127  0F1C                     	;# 
  3128  0F1D                     	;# 
  3129  0F1E                     	;# 
  3130  0F1F                     	;# 
  3131  0F20                     	;# 
  3132  0F21                     	;# 
  3133  0F22                     	;# 
  3134  0F23                     	;# 
  3135  0F24                     	;# 
  3136  0F25                     	;# 
  3137  0F26                     	;# 
  3138  0F27                     	;# 
  3139  0F38                     	;# 
  3140  0F39                     	;# 
  3141  0F3A                     	;# 
  3142  0F3B                     	;# 
  3143  0F3C                     	;# 
  3144  0F3D                     	;# 
  3145  0F3E                     	;# 
  3146  0F3F                     	;# 
  3147  0F40                     	;# 
  3148  0F41                     	;# 
  3149  0F43                     	;# 
  3150  0F44                     	;# 
  3151  0F45                     	;# 
  3152  0F46                     	;# 
  3153  0F47                     	;# 
  3154  0F48                     	;# 
  3155  0F49                     	;# 
  3156  0F4A                     	;# 
  3157  0F4B                     	;# 
  3158  0F4C                     	;# 
  3159  0F4E                     	;# 
  3160  0F4F                     	;# 
  3161  0F50                     	;# 
  3162  0F51                     	;# 
  3163  0F52                     	;# 
  3164  0F53                     	;# 
  3165  0F54                     	;# 
  3166  0F55                     	;# 
  3167  0F56                     	;# 
  3168  0F57                     	;# 
  3169  0F65                     	;# 
  3170  0F68                     	;# 
  3171  0F69                     	;# 
  3172  0F6A                     	;# 
  3173  0F6B                     	;# 
  3174  0FE4                     	;# 
  3175  0FE5                     	;# 
  3176  0FE6                     	;# 
  3177  0FE7                     	;# 
  3178  0FE8                     	;# 
  3179  0FE9                     	;# 
  3180  0FEA                     	;# 
  3181  0FEB                     	;# 
  3182  0FED                     	;# 
  3183  0FEE                     	;# 
  3184  0FEF                     	;# 
  3185  0000                     	;# 
  3186  0001                     	;# 
  3187  0002                     	;# 
  3188  0003                     	;# 
  3189  0004                     	;# 
  3190  0005                     	;# 
  3191  0006                     	;# 
  3192  0007                     	;# 
  3193  0008                     	;# 
  3194  0009                     	;# 
  3195  000A                     	;# 
  3196  000B                     	;# 
  3197  000C                     	;# 
  3198  000D                     	;# 
  3199  000E                     	;# 
  3200  0010                     	;# 
  3201  0011                     	;# 
  3202  0012                     	;# 
  3203  0013                     	;# 
  3204  0016                     	;# 
  3205  0017                     	;# 
  3206  0018                     	;# 
  3207  001C                     	;# 
  3208  001C                     	;# 
  3209  001D                     	;# 
  3210  001D                     	;# 
  3211  001E                     	;# 
  3212  001F                     	;# 
  3213  008C                     	;# 
  3214  008C                     	;# 
  3215  008D                     	;# 
  3216  008E                     	;# 
  3217  008E                     	;# 
  3218  008F                     	;# 
  3219  0090                     	;# 
  3220  0090                     	;# 
  3221  0091                     	;# 
  3222  0093                     	;# 
  3223  0094                     	;# 
  3224  0095                     	;# 
  3225  0096                     	;# 
  3226  0097                     	;# 
  3227  0098                     	;# 
  3228  0099                     	;# 
  3229  009A                     	;# 
  3230  009B                     	;# 
  3231  009C                     	;# 
  3232  009D                     	;# 
  3233  009E                     	;# 
  3234  010C                     	;# 
  3235  010D                     	;# 
  3236  010E                     	;# 
  3237  010E                     	;# 
  3238  010F                     	;# 
  3239  0110                     	;# 
  3240  0110                     	;# 
  3241  0111                     	;# 
  3242  0112                     	;# 
  3243  0112                     	;# 
  3244  0113                     	;# 
  3245  0114                     	;# 
  3246  0114                     	;# 
  3247  0115                     	;# 
  3248  0116                     	;# 
  3249  0116                     	;# 
  3250  0117                     	;# 
  3251  0119                     	;# 
  3252  0119                     	;# 
  3253  0119                     	;# 
  3254  011A                     	;# 
  3255  011A                     	;# 
  3256  011A                     	;# 
  3257  011B                     	;# 
  3258  011B                     	;# 
  3259  011B                     	;# 
  3260  011B                     	;# 
  3261  011B                     	;# 
  3262  011C                     	;# 
  3263  011C                     	;# 
  3264  011C                     	;# 
  3265  011D                     	;# 
  3266  011D                     	;# 
  3267  011D                     	;# 
  3268  011E                     	;# 
  3269  011E                     	;# 
  3270  011E                     	;# 
  3271  011F                     	;# 
  3272  011F                     	;# 
  3273  011F                     	;# 
  3274  011F                     	;# 
  3275  011F                     	;# 
  3276  018C                     	;# 
  3277  018D                     	;# 
  3278  018E                     	;# 
  3279  018F                     	;# 
  3280  0190                     	;# 
  3281  0191                     	;# 
  3282  0192                     	;# 
  3283  0196                     	;# 
  3284  0197                     	;# 
  3285  0198                     	;# 
  3286  0199                     	;# 
  3287  019A                     	;# 
  3288  019B                     	;# 
  3289  019C                     	;# 
  3290  020C                     	;# 
  3291  020C                     	;# 
  3292  020D                     	;# 
  3293  020E                     	;# 
  3294  020F                     	;# 
  3295  020F                     	;# 
  3296  0210                     	;# 
  3297  0210                     	;# 
  3298  0211                     	;# 
  3299  0211                     	;# 
  3300  0212                     	;# 
  3301  0212                     	;# 
  3302  0213                     	;# 
  3303  0214                     	;# 
  3304  0215                     	;# 
  3305  0215                     	;# 
  3306  0216                     	;# 
  3307  0216                     	;# 
  3308  0217                     	;# 
  3309  0217                     	;# 
  3310  0218                     	;# 
  3311  0218                     	;# 
  3312  0219                     	;# 
  3313  021A                     	;# 
  3314  021B                     	;# 
  3315  021B                     	;# 
  3316  021C                     	;# 
  3317  021C                     	;# 
  3318  021D                     	;# 
  3319  021D                     	;# 
  3320  021E                     	;# 
  3321  021F                     	;# 
  3322  028C                     	;# 
  3323  028C                     	;# 
  3324  028D                     	;# 
  3325  028D                     	;# 
  3326  028E                     	;# 
  3327  028F                     	;# 
  3328  0290                     	;# 
  3329  0290                     	;# 
  3330  0291                     	;# 
  3331  0292                     	;# 
  3332  0292                     	;# 
  3333  0293                     	;# 
  3334  0293                     	;# 
  3335  0294                     	;# 
  3336  0295                     	;# 
  3337  0296                     	;# 
  3338  0296                     	;# 
  3339  0297                     	;# 
  3340  0298                     	;# 
  3341  0298                     	;# 
  3342  0299                     	;# 
  3343  0299                     	;# 
  3344  029A                     	;# 
  3345  029B                     	;# 
  3346  029C                     	;# 
  3347  029C                     	;# 
  3348  029D                     	;# 
  3349  030C                     	;# 
  3350  030C                     	;# 
  3351  030D                     	;# 
  3352  030E                     	;# 
  3353  030F                     	;# 
  3354  0310                     	;# 
  3355  0310                     	;# 
  3356  0311                     	;# 
  3357  0312                     	;# 
  3358  0313                     	;# 
  3359  0314                     	;# 
  3360  0314                     	;# 
  3361  0315                     	;# 
  3362  0316                     	;# 
  3363  0317                     	;# 
  3364  0318                     	;# 
  3365  0318                     	;# 
  3366  0319                     	;# 
  3367  031A                     	;# 
  3368  031B                     	;# 
  3369  031C                     	;# 
  3370  031C                     	;# 
  3371  031D                     	;# 
  3372  031E                     	;# 
  3373  031F                     	;# 
  3374  038C                     	;# 
  3375  038D                     	;# 
  3376  038E                     	;# 
  3377  0390                     	;# 
  3378  0391                     	;# 
  3379  0392                     	;# 
  3380  040C                     	;# 
  3381  040D                     	;# 
  3382  040E                     	;# 
  3383  040F                     	;# 
  3384  0410                     	;# 
  3385  0411                     	;# 
  3386  0416                     	;# 
  3387  0416                     	;# 
  3388  0417                     	;# 
  3389  0418                     	;# 
  3390  0418                     	;# 
  3391  0419                     	;# 
  3392  041A                     	;# 
  3393  041A                     	;# 
  3394  041B                     	;# 
  3395  041C                     	;# 
  3396  041C                     	;# 
  3397  041D                     	;# 
  3398  041E                     	;# 
  3399  041F                     	;# 
  3400  048C                     	;# 
  3401  048C                     	;# 
  3402  048D                     	;# 
  3403  048E                     	;# 
  3404  048F                     	;# 
  3405  048F                     	;# 
  3406  0490                     	;# 
  3407  0491                     	;# 
  3408  0492                     	;# 
  3409  0492                     	;# 
  3410  0493                     	;# 
  3411  0494                     	;# 
  3412  0495                     	;# 
  3413  0495                     	;# 
  3414  0496                     	;# 
  3415  0497                     	;# 
  3416  0498                     	;# 
  3417  0499                     	;# 
  3418  049A                     	;# 
  3419  049B                     	;# 
  3420  049C                     	;# 
  3421  049D                     	;# 
  3422  050C                     	;# 
  3423  050C                     	;# 
  3424  050D                     	;# 
  3425  050E                     	;# 
  3426  050F                     	;# 
  3427  050F                     	;# 
  3428  0510                     	;# 
  3429  0511                     	;# 
  3430  0512                     	;# 
  3431  0512                     	;# 
  3432  0513                     	;# 
  3433  0514                     	;# 
  3434  0515                     	;# 
  3435  0515                     	;# 
  3436  0516                     	;# 
  3437  0517                     	;# 
  3438  0518                     	;# 
  3439  0519                     	;# 
  3440  051A                     	;# 
  3441  051B                     	;# 
  3442  051C                     	;# 
  3443  051D                     	;# 
  3444  058C                     	;# 
  3445  058C                     	;# 
  3446  058D                     	;# 
  3447  058E                     	;# 
  3448  058F                     	;# 
  3449  058F                     	;# 
  3450  0590                     	;# 
  3451  0591                     	;# 
  3452  0592                     	;# 
  3453  0593                     	;# 
  3454  060C                     	;# 
  3455  060D                     	;# 
  3456  060E                     	;# 
  3457  060F                     	;# 
  3458  0610                     	;# 
  3459  0611                     	;# 
  3460  0612                     	;# 
  3461  0613                     	;# 
  3462  0614                     	;# 
  3463  0616                     	;# 
  3464  0617                     	;# 
  3465  0618                     	;# 
  3466  0619                     	;# 
  3467  061A                     	;# 
  3468  061B                     	;# 
  3469  061C                     	;# 
  3470  061D                     	;# 
  3471  061E                     	;# 
  3472  068C                     	;# 
  3473  068D                     	;# 
  3474  068E                     	;# 
  3475  068F                     	;# 
  3476  0690                     	;# 
  3477  0691                     	;# 
  3478  0692                     	;# 
  3479  0693                     	;# 
  3480  0694                     	;# 
  3481  070C                     	;# 
  3482  070D                     	;# 
  3483  070E                     	;# 
  3484  070F                     	;# 
  3485  0710                     	;# 
  3486  0711                     	;# 
  3487  0712                     	;# 
  3488  0713                     	;# 
  3489  0714                     	;# 
  3490  0716                     	;# 
  3491  0717                     	;# 
  3492  0718                     	;# 
  3493  0719                     	;# 
  3494  071A                     	;# 
  3495  071B                     	;# 
  3496  071C                     	;# 
  3497  071D                     	;# 
  3498  071E                     	;# 
  3499  0796                     	;# 
  3500  0797                     	;# 
  3501  0798                     	;# 
  3502  0799                     	;# 
  3503  079A                     	;# 
  3504  079B                     	;# 
  3505  080C                     	;# 
  3506  080D                     	;# 
  3507  080E                     	;# 
  3508  080F                     	;# 
  3509  0810                     	;# 
  3510  0811                     	;# 
  3511  0812                     	;# 
  3512  0813                     	;# 
  3513  0814                     	;# 
  3514  081A                     	;# 
  3515  081B                     	;# 
  3516  081C                     	;# 
  3517  081D                     	;# 
  3518  081E                     	;# 
  3519  081F                     	;# 
  3520  088C                     	;# 
  3521  088D                     	;# 
  3522  088E                     	;# 
  3523  088F                     	;# 
  3524  0890                     	;# 
  3525  0891                     	;# 
  3526  0892                     	;# 
  3527  0893                     	;# 
  3528  0895                     	;# 
  3529  0896                     	;# 
  3530  0897                     	;# 
  3531  0898                     	;# 
  3532  0899                     	;# 
  3533  089A                     	;# 
  3534  089B                     	;# 
  3535  090C                     	;# 
  3536  090E                     	;# 
  3537  090F                     	;# 
  3538  091F                     	;# 
  3539  091F                     	;# 
  3540  098F                     	;# 
  3541  098F                     	;# 
  3542  0990                     	;# 
  3543  0991                     	;# 
  3544  0992                     	;# 
  3545  0993                     	;# 
  3546  0994                     	;# 
  3547  0995                     	;# 
  3548  0996                     	;# 
  3549  0997                     	;# 
  3550  0E0F                     	;# 
  3551  0E10                     	;# 
  3552  0E11                     	;# 
  3553  0E12                     	;# 
  3554  0E13                     	;# 
  3555  0E14                     	;# 
  3556  0E15                     	;# 
  3557  0E16                     	;# 
  3558  0E17                     	;# 
  3559  0E18                     	;# 
  3560  0E19                     	;# 
  3561  0E1A                     	;# 
  3562  0E1B                     	;# 
  3563  0E1C                     	;# 
  3564  0E1D                     	;# 
  3565  0E1E                     	;# 
  3566  0E1F                     	;# 
  3567  0E20                     	;# 
  3568  0E21                     	;# 
  3569  0E22                     	;# 
  3570  0E23                     	;# 
  3571  0E24                     	;# 
  3572  0E25                     	;# 
  3573  0E26                     	;# 
  3574  0E27                     	;# 
  3575  0E28                     	;# 
  3576  0E29                     	;# 
  3577  0E2A                     	;# 
  3578  0E2B                     	;# 
  3579  0E2C                     	;# 
  3580  0E2D                     	;# 
  3581  0E2E                     	;# 
  3582  0E2F                     	;# 
  3583  0E30                     	;# 
  3584  0E31                     	;# 
  3585  0E32                     	;# 
  3586  0E33                     	;# 
  3587  0E34                     	;# 
  3588  0E35                     	;# 
  3589  0E36                     	;# 
  3590  0E37                     	;# 
  3591  0E8F                     	;# 
  3592  0E90                     	;# 
  3593  0E91                     	;# 
  3594  0E92                     	;# 
  3595  0E93                     	;# 
  3596  0E94                     	;# 
  3597  0E95                     	;# 
  3598  0E96                     	;# 
  3599  0E97                     	;# 
  3600  0E9C                     	;# 
  3601  0E9D                     	;# 
  3602  0E9E                     	;# 
  3603  0EA1                     	;# 
  3604  0EA2                     	;# 
  3605  0EA3                     	;# 
  3606  0EA4                     	;# 
  3607  0EA5                     	;# 
  3608  0EA9                     	;# 
  3609  0EAA                     	;# 
  3610  0EAB                     	;# 
  3611  0EAC                     	;# 
  3612  0EB1                     	;# 
  3613  0EB2                     	;# 
  3614  0EB3                     	;# 
  3615  0EB8                     	;# 
  3616  0EB9                     	;# 
  3617  0EBA                     	;# 
  3618  0EBB                     	;# 
  3619  0EBC                     	;# 
  3620  0EBD                     	;# 
  3621  0EBE                     	;# 
  3622  0EC3                     	;# 
  3623  0EC5                     	;# 
  3624  0EC6                     	;# 
  3625  0EC7                     	;# 
  3626  0EC8                     	;# 
  3627  0EC9                     	;# 
  3628  0ECA                     	;# 
  3629  0ECB                     	;# 
  3630  0ECC                     	;# 
  3631  0F10                     	;# 
  3632  0F11                     	;# 
  3633  0F12                     	;# 
  3634  0F13                     	;# 
  3635  0F14                     	;# 
  3636  0F15                     	;# 
  3637  0F16                     	;# 
  3638  0F17                     	;# 
  3639  0F18                     	;# 
  3640  0F19                     	;# 
  3641  0F1A                     	;# 
  3642  0F1B                     	;# 
  3643  0F1C                     	;# 
  3644  0F1D                     	;# 
  3645  0F1E                     	;# 
  3646  0F1F                     	;# 
  3647  0F20                     	;# 
  3648  0F21                     	;# 
  3649  0F22                     	;# 
  3650  0F23                     	;# 
  3651  0F24                     	;# 
  3652  0F25                     	;# 
  3653  0F26                     	;# 
  3654  0F27                     	;# 
  3655  0F38                     	;# 
  3656  0F39                     	;# 
  3657  0F3A                     	;# 
  3658  0F3B                     	;# 
  3659  0F3C                     	;# 
  3660  0F3D                     	;# 
  3661  0F3E                     	;# 
  3662  0F3F                     	;# 
  3663  0F40                     	;# 
  3664  0F41                     	;# 
  3665  0F43                     	;# 
  3666  0F44                     	;# 
  3667  0F45                     	;# 
  3668  0F46                     	;# 
  3669  0F47                     	;# 
  3670  0F48                     	;# 
  3671  0F49                     	;# 
  3672  0F4A                     	;# 
  3673  0F4B                     	;# 
  3674  0F4C                     	;# 
  3675  0F4E                     	;# 
  3676  0F4F                     	;# 
  3677  0F50                     	;# 
  3678  0F51                     	;# 
  3679  0F52                     	;# 
  3680  0F53                     	;# 
  3681  0F54                     	;# 
  3682  0F55                     	;# 
  3683  0F56                     	;# 
  3684  0F57                     	;# 
  3685  0F65                     	;# 
  3686  0F68                     	;# 
  3687  0F69                     	;# 
  3688  0F6A                     	;# 
  3689  0F6B                     	;# 
  3690  0FE4                     	;# 
  3691  0FE5                     	;# 
  3692  0FE6                     	;# 
  3693  0FE7                     	;# 
  3694  0FE8                     	;# 
  3695  0FE9                     	;# 
  3696  0FEA                     	;# 
  3697  0FEB                     	;# 
  3698  0FED                     	;# 
  3699  0FEE                     	;# 
  3700  0FEF                     	;# 
  3701  0000                     	;# 
  3702  0001                     	;# 
  3703  0002                     	;# 
  3704  0003                     	;# 
  3705  0004                     	;# 
  3706  0005                     	;# 
  3707  0006                     	;# 
  3708  0007                     	;# 
  3709  0008                     	;# 
  3710  0009                     	;# 
  3711  000A                     	;# 
  3712  000B                     	;# 
  3713  000C                     	;# 
  3714  000D                     	;# 
  3715  000E                     	;# 
  3716  0010                     	;# 
  3717  0011                     	;# 
  3718  0012                     	;# 
  3719  0013                     	;# 
  3720  0016                     	;# 
  3721  0017                     	;# 
  3722  0018                     	;# 
  3723  001C                     	;# 
  3724  001C                     	;# 
  3725  001D                     	;# 
  3726  001D                     	;# 
  3727  001E                     	;# 
  3728  001F                     	;# 
  3729  008C                     	;# 
  3730  008C                     	;# 
  3731  008D                     	;# 
  3732  008E                     	;# 
  3733  008E                     	;# 
  3734  008F                     	;# 
  3735  0090                     	;# 
  3736  0090                     	;# 
  3737  0091                     	;# 
  3738  0093                     	;# 
  3739  0094                     	;# 
  3740  0095                     	;# 
  3741  0096                     	;# 
  3742  0097                     	;# 
  3743  0098                     	;# 
  3744  0099                     	;# 
  3745  009A                     	;# 
  3746  009B                     	;# 
  3747  009C                     	;# 
  3748  009D                     	;# 
  3749  009E                     	;# 
  3750  010C                     	;# 
  3751  010D                     	;# 
  3752  010E                     	;# 
  3753  010E                     	;# 
  3754  010F                     	;# 
  3755  0110                     	;# 
  3756  0110                     	;# 
  3757  0111                     	;# 
  3758  0112                     	;# 
  3759  0112                     	;# 
  3760  0113                     	;# 
  3761  0114                     	;# 
  3762  0114                     	;# 
  3763  0115                     	;# 
  3764  0116                     	;# 
  3765  0116                     	;# 
  3766  0117                     	;# 
  3767  0119                     	;# 
  3768  0119                     	;# 
  3769  0119                     	;# 
  3770  011A                     	;# 
  3771  011A                     	;# 
  3772  011A                     	;# 
  3773  011B                     	;# 
  3774  011B                     	;# 
  3775  011B                     	;# 
  3776  011B                     	;# 
  3777  011B                     	;# 
  3778  011C                     	;# 
  3779  011C                     	;# 
  3780  011C                     	;# 
  3781  011D                     	;# 
  3782  011D                     	;# 
  3783  011D                     	;# 
  3784  011E                     	;# 
  3785  011E                     	;# 
  3786  011E                     	;# 
  3787  011F                     	;# 
  3788  011F                     	;# 
  3789  011F                     	;# 
  3790  011F                     	;# 
  3791  011F                     	;# 
  3792  018C                     	;# 
  3793  018D                     	;# 
  3794  018E                     	;# 
  3795  018F                     	;# 
  3796  0190                     	;# 
  3797  0191                     	;# 
  3798  0192                     	;# 
  3799  0196                     	;# 
  3800  0197                     	;# 
  3801  0198                     	;# 
  3802  0199                     	;# 
  3803  019A                     	;# 
  3804  019B                     	;# 
  3805  019C                     	;# 
  3806  020C                     	;# 
  3807  020C                     	;# 
  3808  020D                     	;# 
  3809  020E                     	;# 
  3810  020F                     	;# 
  3811  020F                     	;# 
  3812  0210                     	;# 
  3813  0210                     	;# 
  3814  0211                     	;# 
  3815  0211                     	;# 
  3816  0212                     	;# 
  3817  0212                     	;# 
  3818  0213                     	;# 
  3819  0214                     	;# 
  3820  0215                     	;# 
  3821  0215                     	;# 
  3822  0216                     	;# 
  3823  0216                     	;# 
  3824  0217                     	;# 
  3825  0217                     	;# 
  3826  0218                     	;# 
  3827  0218                     	;# 
  3828  0219                     	;# 
  3829  021A                     	;# 
  3830  021B                     	;# 
  3831  021B                     	;# 
  3832  021C                     	;# 
  3833  021C                     	;# 
  3834  021D                     	;# 
  3835  021D                     	;# 
  3836  021E                     	;# 
  3837  021F                     	;# 
  3838  028C                     	;# 
  3839  028C                     	;# 
  3840  028D                     	;# 
  3841  028D                     	;# 
  3842  028E                     	;# 
  3843  028F                     	;# 
  3844  0290                     	;# 
  3845  0290                     	;# 
  3846  0291                     	;# 
  3847  0292                     	;# 
  3848  0292                     	;# 
  3849  0293                     	;# 
  3850  0293                     	;# 
  3851  0294                     	;# 
  3852  0295                     	;# 
  3853  0296                     	;# 
  3854  0296                     	;# 
  3855  0297                     	;# 
  3856  0298                     	;# 
  3857  0298                     	;# 
  3858  0299                     	;# 
  3859  0299                     	;# 
  3860  029A                     	;# 
  3861  029B                     	;# 
  3862  029C                     	;# 
  3863  029C                     	;# 
  3864  029D                     	;# 
  3865  030C                     	;# 
  3866  030C                     	;# 
  3867  030D                     	;# 
  3868  030E                     	;# 
  3869  030F                     	;# 
  3870  0310                     	;# 
  3871  0310                     	;# 
  3872  0311                     	;# 
  3873  0312                     	;# 
  3874  0313                     	;# 
  3875  0314                     	;# 
  3876  0314                     	;# 
  3877  0315                     	;# 
  3878  0316                     	;# 
  3879  0317                     	;# 
  3880  0318                     	;# 
  3881  0318                     	;# 
  3882  0319                     	;# 
  3883  031A                     	;# 
  3884  031B                     	;# 
  3885  031C                     	;# 
  3886  031C                     	;# 
  3887  031D                     	;# 
  3888  031E                     	;# 
  3889  031F                     	;# 
  3890  038C                     	;# 
  3891  038D                     	;# 
  3892  038E                     	;# 
  3893  0390                     	;# 
  3894  0391                     	;# 
  3895  0392                     	;# 
  3896  040C                     	;# 
  3897  040D                     	;# 
  3898  040E                     	;# 
  3899  040F                     	;# 
  3900  0410                     	;# 
  3901  0411                     	;# 
  3902  0416                     	;# 
  3903  0416                     	;# 
  3904  0417                     	;# 
  3905  0418                     	;# 
  3906  0418                     	;# 
  3907  0419                     	;# 
  3908  041A                     	;# 
  3909  041A                     	;# 
  3910  041B                     	;# 
  3911  041C                     	;# 
  3912  041C                     	;# 
  3913  041D                     	;# 
  3914  041E                     	;# 
  3915  041F                     	;# 
  3916  048C                     	;# 
  3917  048C                     	;# 
  3918  048D                     	;# 
  3919  048E                     	;# 
  3920  048F                     	;# 
  3921  048F                     	;# 
  3922  0490                     	;# 
  3923  0491                     	;# 
  3924  0492                     	;# 
  3925  0492                     	;# 
  3926  0493                     	;# 
  3927  0494                     	;# 
  3928  0495                     	;# 
  3929  0495                     	;# 
  3930  0496                     	;# 
  3931  0497                     	;# 
  3932  0498                     	;# 
  3933  0499                     	;# 
  3934  049A                     	;# 
  3935  049B                     	;# 
  3936  049C                     	;# 
  3937  049D                     	;# 
  3938  050C                     	;# 
  3939  050C                     	;# 
  3940  050D                     	;# 
  3941  050E                     	;# 
  3942  050F                     	;# 
  3943  050F                     	;# 
  3944  0510                     	;# 
  3945  0511                     	;# 
  3946  0512                     	;# 
  3947  0512                     	;# 
  3948  0513                     	;# 
  3949  0514                     	;# 
  3950  0515                     	;# 
  3951  0515                     	;# 
  3952  0516                     	;# 
  3953  0517                     	;# 
  3954  0518                     	;# 
  3955  0519                     	;# 
  3956  051A                     	;# 
  3957  051B                     	;# 
  3958  051C                     	;# 
  3959  051D                     	;# 
  3960  058C                     	;# 
  3961  058C                     	;# 
  3962  058D                     	;# 
  3963  058E                     	;# 
  3964  058F                     	;# 
  3965  058F                     	;# 
  3966  0590                     	;# 
  3967  0591                     	;# 
  3968  0592                     	;# 
  3969  0593                     	;# 
  3970  060C                     	;# 
  3971  060D                     	;# 
  3972  060E                     	;# 
  3973  060F                     	;# 
  3974  0610                     	;# 
  3975  0611                     	;# 
  3976  0612                     	;# 
  3977  0613                     	;# 
  3978  0614                     	;# 
  3979  0616                     	;# 
  3980  0617                     	;# 
  3981  0618                     	;# 
  3982  0619                     	;# 
  3983  061A                     	;# 
  3984  061B                     	;# 
  3985  061C                     	;# 
  3986  061D                     	;# 
  3987  061E                     	;# 
  3988  068C                     	;# 
  3989  068D                     	;# 
  3990  068E                     	;# 
  3991  068F                     	;# 
  3992  0690                     	;# 
  3993  0691                     	;# 
  3994  0692                     	;# 
  3995  0693                     	;# 
  3996  0694                     	;# 
  3997  070C                     	;# 
  3998  070D                     	;# 
  3999  070E                     	;# 
  4000  070F                     	;# 
  4001  0710                     	;# 
  4002  0711                     	;# 
  4003  0712                     	;# 
  4004  0713                     	;# 
  4005  0714                     	;# 
  4006  0716                     	;# 
  4007  0717                     	;# 
  4008  0718                     	;# 
  4009  0719                     	;# 
  4010  071A                     	;# 
  4011  071B                     	;# 
  4012  071C                     	;# 
  4013  071D                     	;# 
  4014  071E                     	;# 
  4015  0796                     	;# 
  4016  0797                     	;# 
  4017  0798                     	;# 
  4018  0799                     	;# 
  4019  079A                     	;# 
  4020  079B                     	;# 
  4021  080C                     	;# 
  4022  080D                     	;# 
  4023  080E                     	;# 
  4024  080F                     	;# 
  4025  0810                     	;# 
  4026  0811                     	;# 
  4027  0812                     	;# 
  4028  0813                     	;# 
  4029  0814                     	;# 
  4030  081A                     	;# 
  4031  081B                     	;# 
  4032  081C                     	;# 
  4033  081D                     	;# 
  4034  081E                     	;# 
  4035  081F                     	;# 
  4036  088C                     	;# 
  4037  088D                     	;# 
  4038  088E                     	;# 
  4039  088F                     	;# 
  4040  0890                     	;# 
  4041  0891                     	;# 
  4042  0892                     	;# 
  4043  0893                     	;# 
  4044  0895                     	;# 
  4045  0896                     	;# 
  4046  0897                     	;# 
  4047  0898                     	;# 
  4048  0899                     	;# 
  4049  089A                     	;# 
  4050  089B                     	;# 
  4051  090C                     	;# 
  4052  090E                     	;# 
  4053  090F                     	;# 
  4054  091F                     	;# 
  4055  091F                     	;# 
  4056  098F                     	;# 
  4057  098F                     	;# 
  4058  0990                     	;# 
  4059  0991                     	;# 
  4060  0992                     	;# 
  4061  0993                     	;# 
  4062  0994                     	;# 
  4063  0995                     	;# 
  4064  0996                     	;# 
  4065  0997                     	;# 
  4066  0E0F                     	;# 
  4067  0E10                     	;# 
  4068  0E11                     	;# 
  4069  0E12                     	;# 
  4070  0E13                     	;# 
  4071  0E14                     	;# 
  4072  0E15                     	;# 
  4073  0E16                     	;# 
  4074  0E17                     	;# 
  4075  0E18                     	;# 
  4076  0E19                     	;# 
  4077  0E1A                     	;# 
  4078  0E1B                     	;# 
  4079  0E1C                     	;# 
  4080  0E1D                     	;# 
  4081  0E1E                     	;# 
  4082  0E1F                     	;# 
  4083  0E20                     	;# 
  4084  0E21                     	;# 
  4085  0E22                     	;# 
  4086  0E23                     	;# 
  4087  0E24                     	;# 
  4088  0E25                     	;# 
  4089  0E26                     	;# 
  4090  0E27                     	;# 
  4091  0E28                     	;# 
  4092  0E29                     	;# 
  4093  0E2A                     	;# 
  4094  0E2B                     	;# 
  4095  0E2C                     	;# 
  4096  0E2D                     	;# 
  4097  0E2E                     	;# 
  4098  0E2F                     	;# 
  4099  0E30                     	;# 
  4100  0E31                     	;# 
  4101  0E32                     	;# 
  4102  0E33                     	;# 
  4103  0E34                     	;# 
  4104  0E35                     	;# 
  4105  0E36                     	;# 
  4106  0E37                     	;# 
  4107  0E8F                     	;# 
  4108  0E90                     	;# 
  4109  0E91                     	;# 
  4110  0E92                     	;# 
  4111  0E93                     	;# 
  4112  0E94                     	;# 
  4113  0E95                     	;# 
  4114  0E96                     	;# 
  4115  0E97                     	;# 
  4116  0E9C                     	;# 
  4117  0E9D                     	;# 
  4118  0E9E                     	;# 
  4119  0EA1                     	;# 
  4120  0EA2                     	;# 
  4121  0EA3                     	;# 
  4122  0EA4                     	;# 
  4123  0EA5                     	;# 
  4124  0EA9                     	;# 
  4125  0EAA                     	;# 
  4126  0EAB                     	;# 
  4127  0EAC                     	;# 
  4128  0EB1                     	;# 
  4129  0EB2                     	;# 
  4130  0EB3                     	;# 
  4131  0EB8                     	;# 
  4132  0EB9                     	;# 
  4133  0EBA                     	;# 
  4134  0EBB                     	;# 
  4135  0EBC                     	;# 
  4136  0EBD                     	;# 
  4137  0EBE                     	;# 
  4138  0EC3                     	;# 
  4139  0EC5                     	;# 
  4140  0EC6                     	;# 
  4141  0EC7                     	;# 
  4142  0EC8                     	;# 
  4143  0EC9                     	;# 
  4144  0ECA                     	;# 
  4145  0ECB                     	;# 
  4146  0ECC                     	;# 
  4147  0F10                     	;# 
  4148  0F11                     	;# 
  4149  0F12                     	;# 
  4150  0F13                     	;# 
  4151  0F14                     	;# 
  4152  0F15                     	;# 
  4153  0F16                     	;# 
  4154  0F17                     	;# 
  4155  0F18                     	;# 
  4156  0F19                     	;# 
  4157  0F1A                     	;# 
  4158  0F1B                     	;# 
  4159  0F1C                     	;# 
  4160  0F1D                     	;# 
  4161  0F1E                     	;# 
  4162  0F1F                     	;# 
  4163  0F20                     	;# 
  4164  0F21                     	;# 
  4165  0F22                     	;# 
  4166  0F23                     	;# 
  4167  0F24                     	;# 
  4168  0F25                     	;# 
  4169  0F26                     	;# 
  4170  0F27                     	;# 
  4171  0F38                     	;# 
  4172  0F39                     	;# 
  4173  0F3A                     	;# 
  4174  0F3B                     	;# 
  4175  0F3C                     	;# 
  4176  0F3D                     	;# 
  4177  0F3E                     	;# 
  4178  0F3F                     	;# 
  4179  0F40                     	;# 
  4180  0F41                     	;# 
  4181  0F43                     	;# 
  4182  0F44                     	;# 
  4183  0F45                     	;# 
  4184  0F46                     	;# 
  4185  0F47                     	;# 
  4186  0F48                     	;# 
  4187  0F49                     	;# 
  4188  0F4A                     	;# 
  4189  0F4B                     	;# 
  4190  0F4C                     	;# 
  4191  0F4E                     	;# 
  4192  0F4F                     	;# 
  4193  0F50                     	;# 
  4194  0F51                     	;# 
  4195  0F52                     	;# 
  4196  0F53                     	;# 
  4197  0F54                     	;# 
  4198  0F55                     	;# 
  4199  0F56                     	;# 
  4200  0F57                     	;# 
  4201  0F65                     	;# 
  4202  0F68                     	;# 
  4203  0F69                     	;# 
  4204  0F6A                     	;# 
  4205  0F6B                     	;# 
  4206  0FE4                     	;# 
  4207  0FE5                     	;# 
  4208  0FE6                     	;# 
  4209  0FE7                     	;# 
  4210  0FE8                     	;# 
  4211  0FE9                     	;# 
  4212  0FEA                     	;# 
  4213  0FEB                     	;# 
  4214  0FED                     	;# 
  4215  0FEE                     	;# 
  4216  0FEF                     	;# 
  4217                           
  4218                           	psect	idataBANK1
  4219  05C1                     __pidataBANK1:	
  4220                           
  4221                           ;initializer for _segdisp
  4222  05C1  3403               	retlw	3
  4223  05C2  3400               	retlw	0
  4224  05C3  349F               	retlw	159
  4225  05C4  3400               	retlw	0
  4226  05C5  3425               	retlw	37
  4227  05C6  3400               	retlw	0
  4228  05C7  340D               	retlw	13
  4229  05C8  3400               	retlw	0
  4230  05C9  3499               	retlw	153
  4231  05CA  3400               	retlw	0
  4232  05CB  3449               	retlw	73
  4233  05CC  3400               	retlw	0
  4234  05CD  3441               	retlw	65
  4235  05CE  3400               	retlw	0
  4236  05CF  341B               	retlw	27
  4237  05D0  3400               	retlw	0
  4238  05D1  3401               	retlw	1
  4239  05D2  3400               	retlw	0
  4240  05D3  3409               	retlw	9
  4241  05D4  3400               	retlw	0
  4242                           
  4243                           ;initializer for MYI2C_Write2LEDBytes@F14471
  4244  05D5  34A0               	retlw	160
  4245  05D6  34A1               	retlw	161
  4246  05D7  34A2               	retlw	162
  4247  05D8  34A3               	retlw	163
  4248  05D9  34A4               	retlw	164
  4249  05DA  34A5               	retlw	165
  4250  05DB  34A6               	retlw	166
  4251  05DC  34A7               	retlw	167
  4252  05DD  34A8               	retlw	168
  4253  05DE  34A9               	retlw	169
  4254  05DF  34AA               	retlw	170
  4255  05E0  34AB               	retlw	171
  4256  05E1  34AC               	retlw	172
  4257  05E2  34AD               	retlw	173
  4258  05E3  34AE               	retlw	174
  4259  05E4  34AF               	retlw	175
  4260                           
  4261                           	psect	stringtext1
  4262  06CA                     __pstringtext1:	
  4263  06CA                     _cPowerOfTwo:	
  4264  06CA  3401               	retlw	1
  4265  06CB  3400               	retlw	0
  4266  06CC  3402               	retlw	2
  4267  06CD  3400               	retlw	0
  4268  06CE  3404               	retlw	4
  4269  06CF  3400               	retlw	0
  4270  06D0  3408               	retlw	8
  4271  06D1  3400               	retlw	0
  4272  06D2  3410               	retlw	16
  4273  06D3  3400               	retlw	0
  4274  06D4  3420               	retlw	32
  4275  06D5  3400               	retlw	0
  4276  06D6  3440               	retlw	64
  4277  06D7  3400               	retlw	0
  4278  06D8  3480               	retlw	128
  4279  06D9  3400               	retlw	0
  4280  06DA                     __end_of_cPowerOfTwo:	
  4281                           
  4282                           	psect	stringtext2
  4283  072C                     __pstringtext2:	
  4284  072C                     _clockMicroTime:	
  4285  072C  34C8               	retlw	200
  4286  072D  3400               	retlw	0
  4287  072E                     __end_of_clockMicroTime:	
  4288                           
  4289                           	psect	stringtext3
  4290  072E                     __pstringtext3:	
  4291  072E                     _lineSettleMicroTime:	
  4292  072E  3490               	retlw	144
  4293  072F  3401               	retlw	1
  4294  0730                     __end_of_lineSettleMicroTime:	
  4295                           
  4296                           	psect	stringtext4
  4297  0730                     __pstringtext4:	
  4298  0730                     _toggleDly:	
  4299  0730  340A               	retlw	10
  4300  0731  3400               	retlw	0
  4301  0732                     __end_of_toggleDly:	
  4302                           
  4303                           	psect	stringtext5
  4304  0732                     __pstringtext5:	
  4305  0732                     _twoK:	
  4306  0732  3410               	retlw	16
  4307  0733  3427               	retlw	39
  4308  0734                     __end_of_twoK:	
  4309                           
  4310                           	psect	stringtext6
  4311  0734                     __pstringtext6:	
  4312  0734                     _speed:	
  4313  0734  3432               	retlw	50
  4314  0735  3400               	retlw	0
  4315  0736                     __end_of_speed:	
  4316                           
  4317                           	psect	stringtext7
  4318  0736                     __pstringtext7:	
  4319  0736                     _datapin:	
  4320  0736  3412               	retlw	18
  4321  0737  3400               	retlw	0
  4322  0738                     __end_of_datapin:	
  4323                           
  4324                           	psect	stringtext8
  4325  0738                     __pstringtext8:	
  4326  0738                     _clockpin:	
  4327  0738  3411               	retlw	17
  4328  0739  3400               	retlw	0
  4329  073A                     __end_of_clockpin:	
  4330                           
  4331                           	psect	stringtext9
  4332  073A                     __pstringtext9:	
  4333  073A                     _latchpin:	
  4334  073A  3410               	retlw	16
  4335  073B  3400               	retlw	0
  4336  073C                     __end_of_latchpin:	
  4337                           
  4338                           	psect	stringtext10
  4339  073C                     __pstringtext10:	
  4340  073C                     main@iResetValue:	
  4341  073C  3464               	retlw	100
  4342  073D  3400               	retlw	0
  4343  073E                     __end_ofmain@iResetValue:	
  4344                           
  4345                           	psect	stringtext11
  4346  073E                     __pstringtext11:	
  4347  073E                     _cMstrClkAdjust:	
  4348  073E  3420               	retlw	32
  4349  073F  3400               	retlw	0
  4350  0740                     __end_of_cMstrClkAdjust:	
  4351  000C                     _PORTA	set	12
  4352  0018                     _LATCbits	set	24
  4353  0013                     _TRISCbits	set	19
  4354  000E                     _PORTC	set	14
  4355  000D                     _PORTB	set	13
  4356  000B                     _INTCONbits	set	11
  4357  0013                     _TRISC	set	19
  4358  0012                     _TRISB	set	18
  4359  0011                     _TRISA	set	17
  4360  0018                     _LATC	set	24
  4361  0017                     _LATB	set	23
  4362  0016                     _LATA	set	22
  4363  005F                     _GIE	set	95
  4364  0094                     _ADCON1bits	set	148
  4365  008E                     _ADPREVL	set	142
  4366  008F                     _ADPREVH	set	143
  4367  0097                     _ADSTATbits	set	151
  4368  0090                     _ADACCL	set	144
  4369  0091                     _ADACCH	set	145
  4370  0095                     _ADCON2bits	set	149
  4371  0096                     _ADCON3bits	set	150
  4372  008C                     _ADRESL	set	140
  4373  008D                     _ADRESH	set	141
  4374  0093                     _ADCON0bits	set	147
  4375  0093                     _ADCON0	set	147
  4376  009E                     _ADPCH	set	158
  4377  009D                     _ADACQ	set	157
  4378  009C                     _ADPRE	set	156
  4379  009B                     _ADCAP	set	155
  4380  009A                     _ADREF	set	154
  4381  0098                     _ADCLK	set	152
  4382  0097                     _ADSTAT	set	151
  4383  0099                     _ADACT	set	153
  4384  0096                     _ADCON3	set	150
  4385  0095                     _ADCON2	set	149
  4386  0094                     _ADCON1	set	148
  4387  0116                     _ADERRL	set	278
  4388  0117                     _ADERRH	set	279
  4389  0114                     _ADFLTRL	set	276
  4390  0115                     _ADFLTRH	set	277
  4391  010C                     _ADCNT	set	268
  4392  0113                     _ADSTPTH	set	275
  4393  0112                     _ADSTPTL	set	274
  4394  0111                     _ADUTHH	set	273
  4395  0110                     _ADUTHL	set	272
  4396  010F                     _ADLTHH	set	271
  4397  010E                     _ADLTHL	set	270
  4398  010D                     _ADRPT	set	269
  4399  018C                     _SSP1BUF	set	396
  4400  0191                     _SSP1CON2bits	set	401
  4401  0190                     _SSP1CON1bits	set	400
  4402  018D                     _SSP1ADD	set	397
  4403  0192                     _SSP1CON3	set	402
  4404  0190                     _SSP1CON1	set	400
  4405  018F                     _SSP1STAT	set	399
  4406  0719                     _PIE3bits	set	1817
  4407  070F                     _PIR3bits	set	1807
  4408  0892                     _OSCTUNE	set	2194
  4409  0893                     _OSCFRQ	set	2195
  4410  0891                     _OSCEN	set	2193
  4411  088F                     _OSCCON3	set	2191
  4412  088D                     _OSCCON1	set	2189
  4413  0EC5                     _SSP1CLKPPSbits	set	3781
  4414  0EC6                     _SSP1DATPPSbits	set	3782
  4415  0E8F                     _PPSLOCKbits	set	3727
  4416  0E8F                     _PPSLOCK	set	3727
  4417  0F4E                     _ANSELCbits	set	3918
  4418  0F24                     _RC4PPS	set	3876
  4419  0F23                     _RC3PPS	set	3875
  4420  0F50                     _ODCONC	set	3920
  4421  0F45                     _ODCONB	set	3909
  4422  0F3A                     _ODCONA	set	3898
  4423  0F4F                     _WPUC	set	3919
  4424  0F39                     _WPUA	set	3897
  4425  0F44                     _WPUB	set	3908
  4426  0F65                     _WPUE	set	3941
  4427  0F38                     _ANSELA	set	3896
  4428  0F43                     _ANSELB	set	3907
  4429  0F4E                     _ANSELC	set	3918
  4430                           
  4431                           ; #config settings
  4432  0000                     
  4433                           	psect	cinit
  4434  0022                     start_initialization:	
  4435  0022                     __initialization:	
  4436                           
  4437                           ; Initialize objects allocated to BANK1
  4438  0022  30C1               	movlw	low __pidataBANK1
  4439  0023  0084               	movwf	4
  4440  0024  3085               	movlw	(high __pidataBANK1)| (0+128)
  4441  0025  0085               	movwf	5
  4442  0026  30A0               	movlw	low __pdataBANK1
  4443  0027  0086               	movwf	6
  4444  0028  3000               	movlw	high __pdataBANK1
  4445  0029  0087               	movwf	7
  4446  002A  3024               	movlw	36
  4447  002B  3187  2720  3180   	fcall	init_ram
  4448                           
  4449                           ; Clear objects allocated to COMMON
  4450  002E  01F0               	clrf	__pbssCOMMON& (0+127)
  4451  002F  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  4452  0030  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  4453  0031  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  4454  0032  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  4455  0033  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  4456  0034  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  4457                           
  4458                           ; Clear objects allocated to BANK0
  4459  0035  305E               	movlw	low __pbssBANK0
  4460  0036  0084               	movwf	4
  4461  0037  3000               	movlw	high __pbssBANK0
  4462  0038  0085               	movwf	5
  4463  0039  3012               	movlw	18
  4464  003A  3187  2726  3180   	fcall	clear_ram0
  4465                           
  4466                           ; Clear objects allocated to BANK1
  4467  003D  30C4               	movlw	low __pbssBANK1
  4468  003E  0084               	movwf	4
  4469  003F  3000               	movlw	high __pbssBANK1
  4470  0040  0085               	movwf	5
  4471  0041  3017               	movlw	23
  4472  0042  3187  2726         	fcall	clear_ram0
  4473  0044                     end_of_initialization:	
  4474                           ;End of C runtime variable initialization code
  4475                           
  4476  0044                     __end_of__initialization:	
  4477  0044  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4478  0045  0020               	movlb	0
  4479  0046  3180  2848         	ljmp	_main	;jump to C main() function
  4480                           
  4481                           	psect	bssCOMMON
  4482  0070                     __pbssCOMMON:	
  4483  0070                     I2C1_ISR@pi2c_buf_ptr:	
  4484  0070                     	ds	1
  4485  0071                     _p_i2c1_current:	
  4486  0071                     	ds	1
  4487  0072                     _p_i2c1_trb_current:	
  4488  0072                     	ds	1
  4489  0073                     _i2c1_trb_count:	
  4490  0073                     	ds	1
  4491  0074                     _i2c1_state:	
  4492  0074                     	ds	1
  4493  0075                     I2C1_ISR@i2c_address:	
  4494  0075                     	ds	2
  4495                           
  4496                           	psect	bssBANK0
  4497  005E                     __pbssBANK0:	
  4498  005E                     _i2c1_object:	
  4499  005E                     	ds	5
  4500  0063                     _b:	
  4501  0063                     	ds	3
  4502  0066                     _wkFaderValue:	
  4503  0066                     	ds	1
  4504  0067                     _iLEDs1_LSB:	
  4505  0067                     	ds	1
  4506  0068                     _iLEDs1_MSB:	
  4507  0068                     	ds	1
  4508  0069                     _iLEDs0_LSB:	
  4509  0069                     	ds	1
  4510  006A                     _iLEDs0_MSB:	
  4511  006A                     	ds	1
  4512  006B                     I2C1_ISR@i2c_10bit_address_restart:	
  4513  006B                     	ds	1
  4514  006C                     I2C1_ISR@i2c_bytes_left:	
  4515  006C                     	ds	1
  4516  006D                     _i2c1_tr_queue:	
  4517  006D                     	ds	3
  4518                           
  4519                           	psect	bssBANK1
  4520  00C4                     __pbssBANK1:	
  4521  00C4                     _d:	
  4522  00C4                     	ds	3
  4523  00C7                     _e:	
  4524  00C7                     	ds	2
  4525  00C9                     _c:	
  4526  00C9                     	ds	2
  4527  00CB                     _byteFaderValue:	
  4528  00CB                     	ds	8
  4529  00D3                     I2C1_MasterRead@trBlock:	
  4530  00D3                     	ds	4
  4531  00D7                     I2C1_MasterWrite@trBlock:	
  4532  00D7                     	ds	4
  4533                           
  4534                           	psect	dataBANK1
  4535  00A0                     __pdataBANK1:	
  4536  00A0                     _segdisp:	
  4537  00A0                     	ds	20
  4538  00B4                     MYI2C_Write2LEDBytes@F14471:	
  4539  00B4                     	ds	16
  4540                           
  4541                           	psect	inittext
  4542  0720                     init_ram:	
  4543  0720  00FE               	movwf	126
  4544  0721                     initloop:	
  4545  0721  0012               	moviw fsr0++
  4546  0722  001E               	movwi fsr1++
  4547  0723  0BFE               	decfsz	126,f
  4548  0724  2F21               	goto	initloop
  4549  0725  3400               	retlw	0
  4550                           
  4551                           	psect	clrtext
  4552  0726                     clear_ram0:	
  4553                           ;	Called with FSR0 containing the base address, and
  4554                           ;	WREG with the size to clear
  4555                           
  4556  0726  0064               	clrwdt	;clear the watchdog before getting into this loop
  4557  0727                     clrloop0:	
  4558  0727  0180               	clrf	0	;clear RAM location pointed to by FSR
  4559  0728  3101               	addfsr 0,1
  4560  0729  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4561  072A  2F27               	goto	clrloop0	;have we reached the end yet?
  4562  072B  3400               	retlw	0	;all done for this memory range, return
  4563                           
  4564                           	psect	cstackCOMMON
  4565  0077                     __pcstackCOMMON:	
  4566  0077                     ?_OSCILLATOR_Initialize:	
  4567  0077                     ?_I2C1_Initialize:	
  4568                           ; 1 bytes @ 0x0
  4569                           
  4570  0077                     ?_ADCC_Initialize:	
  4571                           ; 1 bytes @ 0x0
  4572                           
  4573  0077                     ?_I2C1_Stop:	
  4574                           ; 1 bytes @ 0x0
  4575                           
  4576  0077                     ??_I2C1_Stop:	
  4577                           ; 1 bytes @ 0x0
  4578                           
  4579  0077                     ?_I2C1_FunctionComplete:	
  4580                           ; 1 bytes @ 0x0
  4581                           
  4582  0077                     ??_I2C1_FunctionComplete:	
  4583                           ; 1 bytes @ 0x0
  4584                           
  4585  0077                     ?_initDAC528:	
  4586                           ; 1 bytes @ 0x0
  4587                           
  4588  0077                     ?_LED7SegSetup:	
  4589                           ; 1 bytes @ 0x0
  4590                           
  4591  0077                     ?_PIN_MANAGER_Initialize:	
  4592                           ; 1 bytes @ 0x0
  4593                           
  4594  0077                     ?_SYSTEM_Initialize:	
  4595                           ; 1 bytes @ 0x0
  4596                           
  4597  0077                     ?_I2C1_ISR:	
  4598                           ; 1 bytes @ 0x0
  4599                           
  4600  0077                     ?_I2C1_BusCollisionISR:	
  4601                           ; 1 bytes @ 0x0
  4602                           
  4603  0077                     ??_I2C1_BusCollisionISR:	
  4604                           ; 1 bytes @ 0x0
  4605                           
  4606  0077                     ?_INTERRUPT_InterruptManager:	
  4607                           ; 1 bytes @ 0x0
  4608                           
  4609  0077                     ?_main:	
  4610                           ; 1 bytes @ 0x0
  4611                           
  4612  0077                     ?_LED7SegPinWrite:	
  4613                           ; 1 bytes @ 0x0
  4614                           
  4615  0077                     ?_LED7SegPulseClock:	
  4616                           ; 1 bytes @ 0x0
  4617                           
  4618  0077                     ?_LED7SegShiftOutPulseClock:	
  4619                           ; 1 bytes @ 0x0
  4620                           
  4621                           
  4622                           ; 1 bytes @ 0x0
  4623  0077                     	ds	1
  4624  0078                     I2C1_Stop@completion_code:	
  4625                           
  4626                           ; 1 bytes @ 0x1
  4627  0078                     	ds	1
  4628  0079                     ??_I2C1_ISR:	
  4629                           
  4630                           ; 1 bytes @ 0x2
  4631  0079                     	ds	4
  4632  007D                     ??_INTERRUPT_InterruptManager:	
  4633                           
  4634                           ; 1 bytes @ 0x6
  4635  007D                     	ds	1
  4636                           
  4637                           	psect	cstackBANK0
  4638  0020                     __pcstackBANK0:	
  4639  0020                     ??_OSCILLATOR_Initialize:	
  4640  0020                     ??_I2C1_Initialize:	
  4641                           ; 1 bytes @ 0x0
  4642                           
  4643  0020                     ??_ADCC_Initialize:	
  4644                           ; 1 bytes @ 0x0
  4645                           
  4646  0020                     ??_LED7SegSetup:	
  4647                           ; 1 bytes @ 0x0
  4648                           
  4649  0020                     ??_PIN_MANAGER_Initialize:	
  4650                           ; 1 bytes @ 0x0
  4651                           
  4652  0020                     ??_LED7SegPinWrite:	
  4653                           ; 1 bytes @ 0x0
  4654                           
  4655  0020                     ?_putByte:	
  4656                           ; 1 bytes @ 0x0
  4657                           
  4658  0020                     ?_ADCC_GetSingleConversion:	
  4659                           ; 1 bytes @ 0x0
  4660                           
  4661  0020                     ?___wmul:	
  4662                           ; 2 bytes @ 0x0
  4663                           
  4664  0020                     ?___ftpack:	
  4665                           ; 2 bytes @ 0x0
  4666                           
  4667  0020                     PIN_MANAGER_Initialize@state:	
  4668                           ; 3 bytes @ 0x0
  4669                           
  4670  0020                     LED7SegPinWrite@val:	
  4671                           ; 1 bytes @ 0x0
  4672                           
  4673  0020                     putByte@clockPin:	
  4674                           ; 1 bytes @ 0x0
  4675                           
  4676  0020                     ___wmul@multiplier:	
  4677                           ; 2 bytes @ 0x0
  4678                           
  4679  0020                     ___ftpack@arg:	
  4680                           ; 2 bytes @ 0x0
  4681                           
  4682                           
  4683                           ; 3 bytes @ 0x0
  4684  0020                     	ds	1
  4685  0021                     ??_SYSTEM_Initialize:	
  4686                           
  4687                           ; 1 bytes @ 0x1
  4688  0021                     	ds	1
  4689  0022                     ??_putByte:	
  4690  0022                     ___wmul@multiplicand:	
  4691                           ; 1 bytes @ 0x2
  4692                           
  4693                           
  4694                           ; 2 bytes @ 0x2
  4695  0022                     	ds	1
  4696  0023                     ??_ADCC_GetSingleConversion:	
  4697  0023                     ADCC_GetSingleConversion@channel:	
  4698                           ; 1 bytes @ 0x3
  4699                           
  4700  0023                     ___ftpack@exp:	
  4701                           ; 1 bytes @ 0x3
  4702                           
  4703                           
  4704                           ; 1 bytes @ 0x3
  4705  0023                     	ds	1
  4706  0024                     ??___wmul:	
  4707  0024                     putByte@data:	
  4708                           ; 1 bytes @ 0x4
  4709                           
  4710  0024                     ___ftpack@sign:	
  4711                           ; 1 bytes @ 0x4
  4712                           
  4713  0024                     ___wmul@product:	
  4714                           ; 1 bytes @ 0x4
  4715                           
  4716                           
  4717                           ; 2 bytes @ 0x4
  4718  0024                     	ds	1
  4719  0025                     ??___ftpack:	
  4720  0025                     putByte@mask:	
  4721                           ; 1 bytes @ 0x5
  4722                           
  4723                           
  4724                           ; 1 bytes @ 0x5
  4725  0025                     	ds	1
  4726  0026                     ?_delay:	
  4727  0026                     putByte@i:	
  4728                           ; 1 bytes @ 0x6
  4729                           
  4730  0026                     delay@delaytime:	
  4731                           ; 1 bytes @ 0x6
  4732                           
  4733                           
  4734                           ; 2 bytes @ 0x6
  4735  0026                     	ds	1
  4736  0027                     ??_initDAC528:	
  4737  0027                     ?_writeDAC528:	
  4738                           ; 1 bytes @ 0x7
  4739                           
  4740  0027                     writeDAC528@dacNumber:	
  4741                           ; 1 bytes @ 0x7
  4742                           
  4743                           
  4744                           ; 2 bytes @ 0x7
  4745  0027                     	ds	1
  4746  0028                     ??_delay:	
  4747  0028                     ?___awtoft:	
  4748                           ; 1 bytes @ 0x8
  4749                           
  4750  0028                     ___awtoft@c:	
  4751                           ; 3 bytes @ 0x8
  4752                           
  4753                           
  4754                           ; 2 bytes @ 0x8
  4755  0028                     	ds	1
  4756  0029                     writeDAC528@dacData:	
  4757  0029                     delay@adjustedDelaytime:	
  4758                           ; 1 bytes @ 0x9
  4759                           
  4760                           
  4761                           ; 4 bytes @ 0x9
  4762  0029                     	ds	1
  4763  002A                     ??_writeDAC528:	
  4764                           
  4765                           ; 1 bytes @ 0xA
  4766  002A                     	ds	1
  4767  002B                     ??___awtoft:	
  4768  002B                     writeDAC528@wkDacNumber:	
  4769                           ; 1 bytes @ 0xB
  4770                           
  4771                           
  4772                           ; 1 bytes @ 0xB
  4773  002B                     	ds	2
  4774  002D                     ___awtoft@sign:	
  4775  002D                     delay@counter:	
  4776                           ; 1 bytes @ 0xD
  4777                           
  4778                           
  4779                           ; 4 bytes @ 0xD
  4780  002D                     	ds	1
  4781  002E                     ?___ftdiv:	
  4782  002E                     ___ftdiv@f2:	
  4783                           ; 3 bytes @ 0xE
  4784                           
  4785                           
  4786                           ; 3 bytes @ 0xE
  4787  002E                     	ds	3
  4788  0031                     ?_blinkyLoop:	
  4789  0031                     ??_LED7SegPulseClock:	
  4790                           ; 1 bytes @ 0x11
  4791                           
  4792  0031                     ??_LED7SegShiftOutPulseClock:	
  4793                           ; 1 bytes @ 0x11
  4794                           
  4795  0031                     blinkyLoop@maxLoops:	
  4796                           ; 1 bytes @ 0x11
  4797                           
  4798  0031                     ___ftdiv@f1:	
  4799                           ; 2 bytes @ 0x11
  4800                           
  4801                           
  4802                           ; 3 bytes @ 0x11
  4803  0031                     	ds	1
  4804  0032                     LED7SegShiftOutPulseClock@val:	
  4805                           
  4806                           ; 1 bytes @ 0x12
  4807  0032                     	ds	1
  4808  0033                     ??_blinkyLoop:	
  4809  0033                     LED7SegShiftOutPulseClock@i:	
  4810                           ; 1 bytes @ 0x13
  4811                           
  4812                           
  4813                           ; 1 bytes @ 0x13
  4814  0033                     	ds	1
  4815  0034                     ?_LED7SegDisplayValueByDigit:	
  4816  0034                     ??___ftdiv:	
  4817                           ; 1 bytes @ 0x14
  4818                           
  4819  0034                     blinkyLoop@delayTime:	
  4820                           ; 1 bytes @ 0x14
  4821                           
  4822  0034                     LED7SegDisplayValueByDigit@iTensDigit:	
  4823                           ; 2 bytes @ 0x14
  4824                           
  4825                           
  4826                           ; 2 bytes @ 0x14
  4827  0034                     	ds	2
  4828  0036                     blinkyLoop@loopCount:	
  4829  0036                     LED7SegDisplayValueByDigit@iUnitsDigit:	
  4830                           ; 2 bytes @ 0x16
  4831                           
  4832                           
  4833                           ; 2 bytes @ 0x16
  4834  0036                     	ds	2
  4835  0038                     ??_LED7SegDisplayValueByDigit:	
  4836  0038                     ___ftdiv@cntr:	
  4837                           ; 1 bytes @ 0x18
  4838                           
  4839  0038                     LED7SegDisplayValueByDigit@iTensCode:	
  4840                           ; 1 bytes @ 0x18
  4841                           
  4842                           
  4843                           ; 2 bytes @ 0x18
  4844  0038                     	ds	1
  4845  0039                     ___ftdiv@f3:	
  4846                           
  4847                           ; 3 bytes @ 0x19
  4848  0039                     	ds	3
  4849  003C                     ___ftdiv@exp:	
  4850                           
  4851                           ; 1 bytes @ 0x1C
  4852  003C                     	ds	1
  4853  003D                     ___ftdiv@sign:	
  4854                           
  4855                           ; 1 bytes @ 0x1D
  4856  003D                     	ds	1
  4857  003E                     ?___fttol:	
  4858  003E                     ___fttol@f1:	
  4859                           ; 4 bytes @ 0x1E
  4860                           
  4861                           
  4862                           ; 3 bytes @ 0x1E
  4863  003E                     	ds	4
  4864  0042                     ??___fttol:	
  4865                           
  4866                           ; 1 bytes @ 0x22
  4867  0042                     	ds	4
  4868  0046                     ___fttol@sign1:	
  4869                           
  4870                           ; 1 bytes @ 0x26
  4871  0046                     	ds	1
  4872  0047                     ___fttol@lval:	
  4873                           
  4874                           ; 4 bytes @ 0x27
  4875  0047                     	ds	4
  4876  004B                     ___fttol@exp1:	
  4877                           
  4878                           ; 1 bytes @ 0x2B
  4879  004B                     	ds	1
  4880  004C                     ??_main:	
  4881                           
  4882                           ; 1 bytes @ 0x2C
  4883  004C                     	ds	4
  4884  0050                     main@I2C_ADDRESS_FADELED0:	
  4885                           
  4886                           ; 1 bytes @ 0x30
  4887  0050                     	ds	1
  4888  0051                     main@readStatus:	
  4889                           
  4890                           ; 1 bytes @ 0x31
  4891  0051                     	ds	1
  4892  0052                     main@iChangeCount:	
  4893                           
  4894                           ; 1 bytes @ 0x32
  4895  0052                     	ds	1
  4896  0053                     main@POT0Value:	
  4897                           
  4898                           ; 1 bytes @ 0x33
  4899  0053                     	ds	1
  4900  0054                     main@POT1Value:	
  4901                           
  4902                           ; 1 bytes @ 0x34
  4903  0054                     	ds	1
  4904  0055                     main@DACDataValue:	
  4905                           
  4906                           ; 1 bytes @ 0x35
  4907  0055                     	ds	1
  4908  0056                     main@iCounter:	
  4909                           
  4910                           ; 2 bytes @ 0x36
  4911  0056                     	ds	2
  4912  0058                     main@prevFader8bitValue:	
  4913                           
  4914                           ; 1 bytes @ 0x38
  4915  0058                     	ds	1
  4916  0059                     main@iLoopCounter:	
  4917                           
  4918                           ; 2 bytes @ 0x39
  4919  0059                     	ds	2
  4920  005B                     main@fader8bitValue:	
  4921                           
  4922                           ; 1 bytes @ 0x3B
  4923  005B                     	ds	1
  4924  005C                     main@faderValue:	
  4925                           
  4926                           ; 2 bytes @ 0x3C
  4927  005C                     	ds	2
  4928                           
  4929                           	psect	maintext
  4930  0048                     __pmaintext:	
  4931 ;;
  4932 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4933 ;;
  4934 ;; *************** function _main *****************
  4935 ;; Defined at:
  4936 ;;		line 163 in file "main.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;  faderValue      2   60[BANK0 ] int 
  4941 ;;  iLoopCounter    2   57[BANK0 ] unsigned int 
  4942 ;;  iCounter        2   54[BANK0 ] unsigned int 
  4943 ;;  iLSByte         2    0        unsigned int 
  4944 ;;  iMSByte         2    0        unsigned int 
  4945 ;;  fader8bitVal    1   59[BANK0 ] unsigned char 
  4946 ;;  prevFader8bi    1   56[BANK0 ] unsigned char 
  4947 ;;  DACDataValue    1   53[BANK0 ] unsigned char 
  4948 ;;  POT1Value       1   52[BANK0 ] unsigned char 
  4949 ;;  POT0Value       1   51[BANK0 ] unsigned char 
  4950 ;;  iChangeCount    1   50[BANK0 ] unsigned char 
  4951 ;;  readStatus      1   49[BANK0 ] enum E14267
  4952 ;;  I2C_ADDRESS_    1   48[BANK0 ] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : B1F/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;Total ram usage:       18 bytes
  4967 ;; Hardware stack levels required when called:    8
  4968 ;; This function calls:
  4969 ;;		_ADCC_GetSingleConversion
  4970 ;;		_LED7SegDisplayValueByDigit
  4971 ;;		_LED7SegSetup
  4972 ;;		_SYSTEM_Initialize
  4973 ;;		___awtoft
  4974 ;;		___ftdiv
  4975 ;;		___fttol
  4976 ;;		_blinkyLoop
  4977 ;;		_delay
  4978 ;;		_initDAC528
  4979 ;;		_writeDAC528
  4980 ;; This function is called by:
  4981 ;;		Startup code after reset
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _main
  4987  0048                     _main:	
  4988                           
  4989                           ;main.c: 165: uint8_t I2C_ADDRESS_FADELED0 = 0x10;
  4990                           
  4991                           ;incstack = 0
  4992                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4993  0048  3010               	movlw	16
  4994  0049  0020               	movlb	0	; select bank0
  4995  004A  00CC               	movwf	??_main
  4996  004B  084C               	movf	??_main,w
  4997  004C  00D0               	movwf	main@I2C_ADDRESS_FADELED0
  4998                           
  4999                           ;main.c: 166: uint16_t iCounter=0;
  5000  004D  01D6               	clrf	main@iCounter
  5001  004E  01D7               	clrf	main@iCounter+1
  5002                           
  5003                           ;main.c: 167: uint16_t iMSByte;
  5004                           ;main.c: 168: uint16_t iLSByte;
  5005                           ;main.c: 169: const uint16_t iResetValue=100;
  5006                           ;main.c: 170: uint16_t iLoopCounter=0;
  5007  004F  01D9               	clrf	main@iLoopCounter
  5008  0050  01DA               	clrf	main@iLoopCounter+1
  5009                           
  5010                           ;main.c: 171: uint8_t iChangeCount=0;
  5011  0051  01D2               	clrf	main@iChangeCount
  5012                           
  5013                           ;main.c: 172: int faderValue;
  5014                           ;main.c: 173: uint8_t fader8bitValue;
  5015                           ;main.c: 174: uint8_t prevFader8bitValue;
  5016                           ;main.c: 175: uint8_t POT0Value;
  5017                           ;main.c: 176: uint8_t POT1Value;
  5018                           ;main.c: 177: uint8_t DACDataValue;
  5019                           ;main.c: 179: I2C1_MESSAGE_STATUS readStatus=0;
  5020  0052  01D1               	clrf	main@readStatus
  5021                           
  5022                           ;main.c: 182: SYSTEM_Initialize();
  5023  0053  3186  26F7  3180   	fcall	_SYSTEM_Initialize
  5024                           
  5025                           ;main.c: 183: initDAC528();
  5026  0056  3186  26A0  3180   	fcall	_initDAC528
  5027                           
  5028                           ;main.c: 184: LED7SegSetup();
  5029  0059  3186  26EA  3180   	fcall	_LED7SegSetup
  5030                           
  5031                           ;main.c: 189: (INTCONbits.GIE = 1);
  5032  005C  178B               	bsf	11,7	;volatile
  5033                           
  5034                           ;main.c: 192: (INTCONbits.PEIE = 1);
  5035  005D  170B               	bsf	11,6	;volatile
  5036                           
  5037                           ;main.c: 201: faderValue=ADCC_GetSingleConversion(FADER5);
  5038  005E  3005               	movlw	5
  5039  005F  3186  26B6  3180   	fcall	_ADCC_GetSingleConversion
  5040  0062  0020               	movlb	0	; select bank0
  5041  0063  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5042  0064  00DD               	movwf	main@faderValue+1
  5043  0065  0820               	movf	?_ADCC_GetSingleConversion,w
  5044  0066  00DC               	movwf	main@faderValue
  5045                           
  5046                           ;main.c: 202: prevFader8bitValue=faderValue>>2;
  5047  0067  085D               	movf	main@faderValue+1,w
  5048  0068  00CD               	movwf	??_main+1
  5049  0069  085C               	movf	main@faderValue,w
  5050  006A  00CC               	movwf	??_main
  5051  006B  0D4D               	rlf	??_main+1,w
  5052  006C  0CCD               	rrf	??_main+1,f
  5053  006D  0CCC               	rrf	??_main,f
  5054  006E  0D4D               	rlf	??_main+1,w
  5055  006F  0CCD               	rrf	??_main+1,f
  5056  0070  0CCC               	rrf	??_main,f
  5057  0071  084C               	movf	??_main,w
  5058  0072  00CE               	movwf	??_main+2
  5059  0073  084E               	movf	??_main+2,w
  5060  0074  00D8               	movwf	main@prevFader8bitValue
  5061                           
  5062                           ;main.c: 204: blinkyLoop(10);
  5063  0075  300A               	movlw	10
  5064  0076  00B1               	movwf	blinkyLoop@maxLoops
  5065  0077  3000               	movlw	0
  5066  0078  00B2               	movwf	blinkyLoop@maxLoops+1
  5067  0079  3184  244A  3180   	fcall	_blinkyLoop
  5068  007C                     l3323:	
  5069                           ;main.c: 209: while (1) {
  5070                           
  5071                           
  5072                           ;main.c: 210: iLoopCounter++;
  5073  007C  3001               	movlw	1
  5074  007D  0020               	movlb	0	; select bank0
  5075  007E  07D9               	addwf	main@iLoopCounter,f
  5076  007F  3000               	movlw	0
  5077  0080  3DDA               	addwfc	main@iLoopCounter+1,f
  5078                           
  5079                           ;main.c: 211: if (iResetValue<=iLoopCounter) iLoopCounter=0;
  5080  0081  303C               	movlw	low (main@iResetValue| (0+32768))
  5081  0082  0084               	movwf	4
  5082  0083  3087               	movlw	high (main@iResetValue| (0+32768))
  5083  0084  0085               	movwf	5
  5084  0085  3F00               	moviw [0]fsr0
  5085  0086  00CC               	movwf	??_main
  5086  0087  3F01               	moviw [1]fsr0
  5087  0088  00CD               	movwf	??_main+1
  5088  0089  084D               	movf	??_main+1,w
  5089  008A  025A               	subwf	main@iLoopCounter+1,w
  5090  008B  1D03               	skipz
  5091  008C  288F               	goto	u2785
  5092  008D  084C               	movf	??_main,w
  5093  008E  0259               	subwf	main@iLoopCounter,w
  5094  008F                     u2785:	
  5095  008F  1C03               	skipc
  5096  0090  2893               	goto	l3329
  5097  0091  01D9               	clrf	main@iLoopCounter
  5098  0092  01DA               	clrf	main@iLoopCounter+1
  5099  0093                     l3329:	
  5100                           
  5101                           ;main.c: 214: {
  5102                           ;main.c: 215: delay(100);
  5103  0093  3064               	movlw	100
  5104  0094  00A6               	movwf	delay@delaytime
  5105  0095  3000               	movlw	0
  5106  0096  00A7               	movwf	delay@delaytime+1
  5107  0097  3184  24AC  3180   	fcall	_delay
  5108                           
  5109                           ;main.c: 216: faderValue=ADCC_GetSingleConversion(FADER0);
  5110  009A  3000               	movlw	0
  5111  009B  3186  26B6  3180   	fcall	_ADCC_GetSingleConversion
  5112  009E  0020               	movlb	0	; select bank0
  5113  009F  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5114  00A0  00DD               	movwf	main@faderValue+1
  5115  00A1  0820               	movf	?_ADCC_GetSingleConversion,w
  5116  00A2  00DC               	movwf	main@faderValue
  5117                           
  5118                           ;main.c: 217: fader8bitValue=faderValue>>2;
  5119  00A3  085D               	movf	main@faderValue+1,w
  5120  00A4  00CD               	movwf	??_main+1
  5121  00A5  085C               	movf	main@faderValue,w
  5122  00A6  00CC               	movwf	??_main
  5123  00A7  0D4D               	rlf	??_main+1,w
  5124  00A8  0CCD               	rrf	??_main+1,f
  5125  00A9  0CCC               	rrf	??_main,f
  5126  00AA  0D4D               	rlf	??_main+1,w
  5127  00AB  0CCD               	rrf	??_main+1,f
  5128  00AC  0CCC               	rrf	??_main,f
  5129  00AD  084C               	movf	??_main,w
  5130  00AE  00CE               	movwf	??_main+2
  5131  00AF  084E               	movf	??_main+2,w
  5132  00B0  00DB               	movwf	main@fader8bitValue
  5133                           
  5134                           ;main.c: 218: delay(100);
  5135  00B1  3064               	movlw	100
  5136  00B2  00A6               	movwf	delay@delaytime
  5137  00B3  3000               	movlw	0
  5138  00B4  00A7               	movwf	delay@delaytime+1
  5139  00B5  3184  24AC  3180   	fcall	_delay
  5140                           
  5141                           ;main.c: 219: faderValue=ADCC_GetSingleConversion(POT0);
  5142  00B8  3004               	movlw	4
  5143  00B9  3186  26B6  3180   	fcall	_ADCC_GetSingleConversion
  5144  00BC  0020               	movlb	0	; select bank0
  5145  00BD  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5146  00BE  00DD               	movwf	main@faderValue+1
  5147  00BF  0820               	movf	?_ADCC_GetSingleConversion,w
  5148  00C0  00DC               	movwf	main@faderValue
  5149                           
  5150                           ;main.c: 220: faderValue=1023-faderValue;
  5151  00C1  095C               	comf	main@faderValue,w
  5152  00C2  00CC               	movwf	??_main
  5153  00C3  095D               	comf	main@faderValue+1,w
  5154  00C4  00CD               	movwf	??_main+1
  5155  00C5  0ACC               	incf	??_main,f
  5156  00C6  1903               	skipnz
  5157  00C7  0ACD               	incf	??_main+1,f
  5158  00C8  084C               	movf	??_main,w
  5159  00C9  3EFF               	addlw	255
  5160  00CA  00DC               	movwf	main@faderValue
  5161  00CB  3003               	movlw	3
  5162  00CC  3D4D               	addwfc	??_main+1,w
  5163  00CD  00DD               	movwf	main@faderValue+1
  5164                           
  5165                           ;main.c: 222: POT0Value=faderValue/102.3;
  5166  00CE  085D               	movf	main@faderValue+1,w
  5167  00CF  00A9               	movwf	___awtoft@c+1
  5168  00D0  085C               	movf	main@faderValue,w
  5169  00D1  00A8               	movwf	___awtoft@c
  5170  00D2  3185  25E5  3180   	fcall	___awtoft
  5171  00D5  0020               	movlb	0	; select bank0
  5172  00D6  0828               	movf	?___awtoft,w
  5173  00D7  00B1               	movwf	___ftdiv@f1
  5174  00D8  0829               	movf	?___awtoft+1,w
  5175  00D9  00B2               	movwf	___ftdiv@f1+1
  5176  00DA  082A               	movf	?___awtoft+2,w
  5177  00DB  00B3               	movwf	___ftdiv@f1+2
  5178  00DC  309A               	movlw	154
  5179  00DD  00AE               	movwf	___ftdiv@f2
  5180  00DE  30CC               	movlw	204
  5181  00DF  00AF               	movwf	___ftdiv@f2+1
  5182  00E0  3042               	movlw	66
  5183  00E1  00B0               	movwf	___ftdiv@f2+2
  5184  00E2  3182  22B5  3180   	fcall	___ftdiv
  5185  00E5  0020               	movlb	0	; select bank0
  5186  00E6  082E               	movf	?___ftdiv,w
  5187  00E7  00BE               	movwf	___fttol@f1
  5188  00E8  082F               	movf	?___ftdiv+1,w
  5189  00E9  00BF               	movwf	___fttol@f1+1
  5190  00EA  0830               	movf	?___ftdiv+2,w
  5191  00EB  00C0               	movwf	___fttol@f1+2
  5192  00EC  3183  235E  3180   	fcall	___fttol
  5193  00EF  0020               	movlb	0	; select bank0
  5194  00F0  083E               	movf	?___fttol,w
  5195  00F1  00CC               	movwf	??_main
  5196  00F2  084C               	movf	??_main,w
  5197  00F3  00D3               	movwf	main@POT0Value
  5198                           
  5199                           ;main.c: 223: delay(100);
  5200  00F4  3064               	movlw	100
  5201  00F5  00A6               	movwf	delay@delaytime
  5202  00F6  3000               	movlw	0
  5203  00F7  00A7               	movwf	delay@delaytime+1
  5204  00F8  3184  24AC  3180   	fcall	_delay
  5205                           
  5206                           ;main.c: 224: faderValue=ADCC_GetSingleConversion(POT1);
  5207  00FB  3005               	movlw	5
  5208  00FC  3186  26B6  3180   	fcall	_ADCC_GetSingleConversion
  5209  00FF  0020               	movlb	0	; select bank0
  5210  0100  0821               	movf	?_ADCC_GetSingleConversion+1,w
  5211  0101  00DD               	movwf	main@faderValue+1
  5212  0102  0820               	movf	?_ADCC_GetSingleConversion,w
  5213  0103  00DC               	movwf	main@faderValue
  5214                           
  5215                           ;main.c: 225: faderValue=1023-faderValue;
  5216  0104  095C               	comf	main@faderValue,w
  5217  0105  00CC               	movwf	??_main
  5218  0106  095D               	comf	main@faderValue+1,w
  5219  0107  00CD               	movwf	??_main+1
  5220  0108  0ACC               	incf	??_main,f
  5221  0109  1903               	skipnz
  5222  010A  0ACD               	incf	??_main+1,f
  5223  010B  084C               	movf	??_main,w
  5224  010C  3EFF               	addlw	255
  5225  010D  00DC               	movwf	main@faderValue
  5226  010E  3003               	movlw	3
  5227  010F  3D4D               	addwfc	??_main+1,w
  5228  0110  00DD               	movwf	main@faderValue+1
  5229                           
  5230                           ;main.c: 226: POT1Value=faderValue/102.3;
  5231  0111  085D               	movf	main@faderValue+1,w
  5232  0112  00A9               	movwf	___awtoft@c+1
  5233  0113  085C               	movf	main@faderValue,w
  5234  0114  00A8               	movwf	___awtoft@c
  5235  0115  3185  25E5  3180   	fcall	___awtoft
  5236  0118  0020               	movlb	0	; select bank0
  5237  0119  0828               	movf	?___awtoft,w
  5238  011A  00B1               	movwf	___ftdiv@f1
  5239  011B  0829               	movf	?___awtoft+1,w
  5240  011C  00B2               	movwf	___ftdiv@f1+1
  5241  011D  082A               	movf	?___awtoft+2,w
  5242  011E  00B3               	movwf	___ftdiv@f1+2
  5243  011F  309A               	movlw	154
  5244  0120  00AE               	movwf	___ftdiv@f2
  5245  0121  30CC               	movlw	204
  5246  0122  00AF               	movwf	___ftdiv@f2+1
  5247  0123  3042               	movlw	66
  5248  0124  00B0               	movwf	___ftdiv@f2+2
  5249  0125  3182  22B5  3180   	fcall	___ftdiv
  5250  0128  0020               	movlb	0	; select bank0
  5251  0129  082E               	movf	?___ftdiv,w
  5252  012A  00BE               	movwf	___fttol@f1
  5253  012B  082F               	movf	?___ftdiv+1,w
  5254  012C  00BF               	movwf	___fttol@f1+1
  5255  012D  0830               	movf	?___ftdiv+2,w
  5256  012E  00C0               	movwf	___fttol@f1+2
  5257  012F  3183  235E  3180   	fcall	___fttol
  5258  0132  0020               	movlb	0	; select bank0
  5259  0133  083E               	movf	?___fttol,w
  5260  0134  00CC               	movwf	??_main
  5261  0135  084C               	movf	??_main,w
  5262  0136  00D4               	movwf	main@POT1Value
  5263                           
  5264                           ;main.c: 227: }
  5265                           ;main.c: 231: DACDataValue=iCounter%256;
  5266  0137  0856               	movf	main@iCounter,w
  5267  0138  00CC               	movwf	??_main
  5268  0139  084C               	movf	??_main,w
  5269  013A  00D5               	movwf	main@DACDataValue
  5270                           
  5271                           ;main.c: 232: writeDAC528(4,DACDataValue);
  5272  013B  3004               	movlw	4
  5273  013C  00A7               	movwf	writeDAC528@dacNumber
  5274  013D  3000               	movlw	0
  5275  013E  00A8               	movwf	writeDAC528@dacNumber+1
  5276  013F  0855               	movf	main@DACDataValue,w
  5277  0140  00CC               	movwf	??_main
  5278  0141  084C               	movf	??_main,w
  5279  0142  00A9               	movwf	writeDAC528@dacData
  5280  0143  3185  259C  3180   	fcall	_writeDAC528
  5281                           
  5282                           ;main.c: 285: if (prevFader8bitValue!=fader8bitValue) {
  5283  0146  0020               	movlb	0	; select bank0
  5284  0147  0858               	movf	main@prevFader8bitValue,w
  5285  0148  065B               	xorwf	main@fader8bitValue,w
  5286  0149  1903               	skipnz
  5287  014A  294F               	goto	l3359
  5288                           
  5289                           ;main.c: 286: iChangeCount++;
  5290  014B  3001               	movlw	1
  5291  014C  00CC               	movwf	??_main
  5292  014D  084C               	movf	??_main,w
  5293  014E  07D2               	addwf	main@iChangeCount,f
  5294  014F                     l3359:	
  5295                           
  5296                           ;main.c: 288: }
  5297                           ;main.c: 289: prevFader8bitValue=fader8bitValue;
  5298  014F  085B               	movf	main@fader8bitValue,w
  5299  0150  00CC               	movwf	??_main
  5300  0151  084C               	movf	??_main,w
  5301  0152  00D8               	movwf	main@prevFader8bitValue
  5302                           
  5303                           ;main.c: 292: iCounter++;
  5304  0153  3001               	movlw	1
  5305  0154  07D6               	addwf	main@iCounter,f
  5306  0155  3000               	movlw	0
  5307  0156  3DD7               	addwfc	main@iCounter+1,f
  5308                           
  5309                           ;main.c: 293: if (fader8bitValue<252)
  5310  0157  30FC               	movlw	252
  5311  0158  025B               	subwf	main@fader8bitValue,w
  5312  0159  1803               	skipnc
  5313  015A  296C               	goto	l3367
  5314                           
  5315                           ;main.c: 294: delay(1*(255-fader8bitValue));
  5316  015B  085B               	movf	main@fader8bitValue,w
  5317  015C  00CC               	movwf	??_main
  5318  015D  01CD               	clrf	??_main+1
  5319  015E  09CC               	comf	??_main,f
  5320  015F  09CD               	comf	??_main+1,f
  5321  0160  0ACC               	incf	??_main,f
  5322  0161  1903               	skipnz
  5323  0162  0ACD               	incf	??_main+1,f
  5324  0163  084C               	movf	??_main,w
  5325  0164  3EFF               	addlw	255
  5326  0165  00A6               	movwf	delay@delaytime
  5327  0166  3000               	movlw	0
  5328  0167  3D4D               	addwfc	??_main+1,w
  5329  0168  00A7               	movwf	delay@delaytime+1
  5330  0169  3184  24AC  3180   	fcall	_delay
  5331  016C                     l3367:	
  5332                           
  5333                           ;main.c: 300: LED7SegDisplayValueByDigit(POT1Value,POT0Value);
  5334  016C  0020               	movlb	0	; select bank0
  5335  016D  0854               	movf	main@POT1Value,w
  5336  016E  00CC               	movwf	??_main
  5337  016F  01CD               	clrf	??_main+1
  5338  0170  084C               	movf	??_main,w
  5339  0171  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  5340  0172  084D               	movf	??_main+1,w
  5341  0173  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  5342  0174  0853               	movf	main@POT0Value,w
  5343  0175  00CE               	movwf	??_main+2
  5344  0176  01CF               	clrf	??_main+3
  5345  0177  084E               	movf	??_main+2,w
  5346  0178  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  5347  0179  084F               	movf	??_main+3,w
  5348  017A  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  5349  017B  3185  253D  3180   	fcall	_LED7SegDisplayValueByDigit
  5350  017E  287C               	goto	l3323
  5351  017F                     __end_of_main:	
  5352                           
  5353                           	psect	text1
  5354  059C                     __ptext1:	
  5355 ;; *************** function _writeDAC528 *****************
  5356 ;; Defined at:
  5357 ;;		line 59 in file "VCAMIX_SPI_Master.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  dacNumber       2    7[BANK0 ] int 
  5360 ;;  dacData         1    9[BANK0 ] unsigned char 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  wkDacNumber     1   11[BANK0 ] unsigned char 
  5363 ;; Return value:  Size  Location     Type
  5364 ;;                  1    wreg      void 
  5365 ;; Registers used:
  5366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5372 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5375 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5376 ;;Total ram usage:        5 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    4
  5379 ;; This function calls:
  5380 ;;		_putByte
  5381 ;; This function is called by:
  5382 ;;		_main
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function _writeDAC528
  5388  059C                     _writeDAC528:	
  5389                           
  5390                           ;VCAMIX_SPI_Master.c: 60: uint8_t wkDacNumber=0;
  5391                           
  5392                           ;incstack = 0
  5393                           ; Regs used in _writeDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5394  059C  0020               	movlb	0	; select bank0
  5395  059D  01AB               	clrf	writeDAC528@wkDacNumber
  5396                           
  5397                           ;VCAMIX_SPI_Master.c: 61: wkDacNumber=cPowerOfTwo[dacNumber];
  5398  059E  0828               	movf	writeDAC528@dacNumber+1,w
  5399  059F  0085               	movwf	5
  5400  05A0  0827               	movf	writeDAC528@dacNumber,w
  5401  05A1  0084               	movwf	4
  5402  05A2  3584               	lslf	4,f
  5403  05A3  0D85               	rlf	5,f
  5404  05A4  30CA               	movlw	low (_cPowerOfTwo| (0+32768))
  5405  05A5  0784               	addwf	4,f
  5406  05A6  3086               	movlw	high (_cPowerOfTwo| (0+32768))
  5407  05A7  3D85               	addwfc	5,f
  5408  05A8  0800               	movf	0,w	;code access
  5409  05A9  00AA               	movwf	??_writeDAC528
  5410  05AA  082A               	movf	??_writeDAC528,w
  5411  05AB  00AB               	movwf	writeDAC528@wkDacNumber
  5412                           
  5413                           ;VCAMIX_SPI_Master.c: 72: PORTA &= 0x7F;
  5414  05AC  307F               	movlw	127
  5415  05AD  00AA               	movwf	??_writeDAC528
  5416  05AE  082A               	movf	??_writeDAC528,w
  5417  05AF  058C               	andwf	12,f	;volatile
  5418                           
  5419                           ;VCAMIX_SPI_Master.c: 74: putByte(wkDacNumber,0);
  5420  05B0  3000               	movlw	0
  5421  05B1  00A0               	movwf	putByte@clockPin
  5422  05B2  00A1               	movwf	putByte@clockPin+1
  5423  05B3  082B               	movf	writeDAC528@wkDacNumber,w
  5424  05B4  3185  2574  3185   	fcall	_putByte
  5425                           
  5426                           ;VCAMIX_SPI_Master.c: 76: putByte(dacData,0);
  5427  05B7  3000               	movlw	0
  5428  05B8  0020               	movlb	0	; select bank0
  5429  05B9  00A0               	movwf	putByte@clockPin
  5430  05BA  00A1               	movwf	putByte@clockPin+1
  5431  05BB  0829               	movf	writeDAC528@dacData,w
  5432  05BC  3185  2574         	fcall	_putByte
  5433                           
  5434                           ;VCAMIX_SPI_Master.c: 79: PORTA |= 0x80;
  5435  05BE  0020               	movlb	0	; select bank0
  5436  05BF  178C               	bsf	12,7	;volatile
  5437  05C0  0008               	return
  5438  05C1                     __end_of_writeDAC528:	
  5439                           
  5440                           	psect	text2
  5441  06A0                     __ptext2:	
  5442 ;; *************** function _initDAC528 *****************
  5443 ;; Defined at:
  5444 ;;		line 44 in file "VCAMIX_SPI_Master.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;Total ram usage:        1 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    4
  5465 ;; This function calls:
  5466 ;;		_putByte
  5467 ;; This function is called by:
  5468 ;;		_main
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           
  5473                           ;psect for function _initDAC528
  5474  06A0                     _initDAC528:	
  5475                           
  5476                           ;VCAMIX_SPI_Master.c: 49: PORTA &= 0x7F ;
  5477                           
  5478                           ;incstack = 0
  5479                           ; Regs used in _initDAC528: [wreg+status,2+status,0+pclath+cstack]
  5480  06A0  307F               	movlw	127
  5481  06A1  0020               	movlb	0	; select bank0
  5482  06A2  00A7               	movwf	??_initDAC528
  5483  06A3  0827               	movf	??_initDAC528,w
  5484  06A4  058C               	andwf	12,f	;volatile
  5485                           
  5486                           ;VCAMIX_SPI_Master.c: 51: putByte(0x00,0);
  5487  06A5  3000               	movlw	0
  5488  06A6  00A0               	movwf	putByte@clockPin
  5489  06A7  00A1               	movwf	putByte@clockPin+1
  5490  06A8  3000               	movlw	0
  5491  06A9  3185  2574  3186   	fcall	_putByte
  5492                           
  5493                           ;VCAMIX_SPI_Master.c: 53: putByte(0xFF,0);
  5494  06AC  3000               	movlw	0
  5495  06AD  0020               	movlb	0	; select bank0
  5496  06AE  00A0               	movwf	putByte@clockPin
  5497  06AF  00A1               	movwf	putByte@clockPin+1
  5498  06B0  30FF               	movlw	255
  5499  06B1  3185  2574         	fcall	_putByte
  5500                           
  5501                           ;VCAMIX_SPI_Master.c: 56: PORTA |= 0x80 ;
  5502  06B3  0020               	movlb	0	; select bank0
  5503  06B4  178C               	bsf	12,7	;volatile
  5504  06B5  0008               	return
  5505  06B6                     __end_of_initDAC528:	
  5506                           
  5507                           	psect	text3
  5508  0574                     __ptext3:	
  5509 ;; *************** function _putByte *****************
  5510 ;; Defined at:
  5511 ;;		line 14 in file "VCAMIX_SPI_Master.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  data            1    wreg     unsigned char 
  5514 ;;  clockPin        2    0[BANK0 ] int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  data            1    4[BANK0 ] unsigned char 
  5517 ;;  i               1    6[BANK0 ] unsigned char 
  5518 ;;  mask            1    5[BANK0 ] unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5528 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;Total ram usage:        7 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    3
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_initDAC528
  5539 ;;		_writeDAC528
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           
  5544                           ;psect for function _putByte
  5545  0574                     _putByte:	
  5546                           
  5547                           ;incstack = 0
  5548                           ; Regs used in _putByte: [wreg+status,2+status,0]
  5549                           ;putByte@data stored from wreg
  5550  0574  0020               	movlb	0	; select bank0
  5551  0575  00A4               	movwf	putByte@data
  5552                           
  5553                           ;VCAMIX_SPI_Master.c: 15: uint8_t i = 8;
  5554  0576  3008               	movlw	8
  5555  0577  00A2               	movwf	??_putByte
  5556  0578  0822               	movf	??_putByte,w
  5557  0579  00A6               	movwf	putByte@i
  5558  057A                     l664:	
  5559                           ;VCAMIX_SPI_Master.c: 16: uint8_t mask;
  5560                           ;VCAMIX_SPI_Master.c: 17: while(i > 0) {
  5561                           
  5562  057A  0826               	movf	putByte@i,w
  5563  057B  1903               	btfsc	3,2
  5564  057C  0008               	return
  5565                           
  5566                           ;VCAMIX_SPI_Master.c: 18: mask = 0x01 << (i - 1);
  5567  057D  3001               	movlw	1
  5568  057E  00A2               	movwf	??_putByte
  5569  057F  0826               	movf	putByte@i,w
  5570  0580  3EFF               	addlw	-1
  5571  0581  0A89               	incf	9,f
  5572  0582  2D84               	goto	u1434
  5573  0583                     u1435:	
  5574  0583  35A2               	lslf	??_putByte,f
  5575  0584                     u1434:	
  5576  0584  0B89               	decfsz	9,f
  5577  0585  2D83               	goto	u1435
  5578  0586  0822               	movf	??_putByte,w
  5579  0587  00A3               	movwf	??_putByte+1
  5580  0588  0823               	movf	??_putByte+1,w
  5581  0589  00A5               	movwf	putByte@mask
  5582                           
  5583                           ;VCAMIX_SPI_Master.c: 20: PORTB &= 0xBF ;
  5584  058A  30BF               	movlw	191
  5585  058B  00A2               	movwf	??_putByte
  5586  058C  0822               	movf	??_putByte,w
  5587  058D  058D               	andwf	13,f	;volatile
  5588                           
  5589                           ;VCAMIX_SPI_Master.c: 23: if (data & mask){
  5590  058E  0824               	movf	putByte@data,w
  5591  058F  0525               	andwf	putByte@mask,w
  5592  0590  1903               	btfsc	3,2
  5593  0591  2D94               	goto	l2299
  5594                           
  5595                           ;VCAMIX_SPI_Master.c: 25: PORTB |= 0x80 ;
  5596  0592  178D               	bsf	13,7	;volatile
  5597                           
  5598                           ;VCAMIX_SPI_Master.c: 26: }else{
  5599  0593  2D98               	goto	l2301
  5600  0594                     l2299:	
  5601                           
  5602                           ;VCAMIX_SPI_Master.c: 28: PORTB &= 0x7F ;
  5603  0594  307F               	movlw	127
  5604  0595  00A2               	movwf	??_putByte
  5605  0596  0822               	movf	??_putByte,w
  5606  0597  058D               	andwf	13,f	;volatile
  5607  0598                     l2301:	
  5608                           
  5609                           ;VCAMIX_SPI_Master.c: 29: }
  5610                           ;VCAMIX_SPI_Master.c: 33: PORTB |= 0x40 ;
  5611  0598  170D               	bsf	13,6	;volatile
  5612                           
  5613                           ;VCAMIX_SPI_Master.c: 36: --i;
  5614  0599  3001               	movlw	1
  5615  059A  02A6               	subwf	putByte@i,f
  5616  059B  2D7A               	goto	l664
  5617  059C                     __end_of_putByte:	
  5618                           
  5619                           	psect	text4
  5620  044A                     __ptext4:	
  5621 ;; *************** function _blinkyLoop *****************
  5622 ;; Defined at:
  5623 ;;		line 125 in file "main.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  maxLoops        2   17[BANK0 ] int 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  loopCount       2   22[BANK0 ] int 
  5628 ;;  delayTime       2   20[BANK0 ] int 
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5638 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;Total ram usage:        7 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    5
  5645 ;; This function calls:
  5646 ;;		___wmul
  5647 ;;		_delay
  5648 ;; This function is called by:
  5649 ;;		_main
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652                           
  5653                           
  5654                           ;psect for function _blinkyLoop
  5655  044A                     _blinkyLoop:	
  5656                           
  5657                           ;main.c: 126: int loopCount=maxLoops;
  5658                           
  5659                           ;incstack = 0
  5660                           ; Regs used in _blinkyLoop: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5661  044A  0020               	movlb	0	; select bank0
  5662  044B  0832               	movf	blinkyLoop@maxLoops+1,w
  5663  044C  00B7               	movwf	blinkyLoop@loopCount+1
  5664  044D  0831               	movf	blinkyLoop@maxLoops,w
  5665  044E  00B6               	movwf	blinkyLoop@loopCount
  5666                           
  5667                           ;main.c: 127: int delayTime;
  5668                           ;main.c: 129: ODCONB &= 0xE0;
  5669  044F  30E0               	movlw	224
  5670  0450  00B3               	movwf	??_blinkyLoop
  5671  0451  0833               	movf	??_blinkyLoop,w
  5672  0452  003E               	movlb	30	; select bank30
  5673  0453  05C5               	andwf	69,f	;volatile
  5674                           
  5675                           ;main.c: 130: ODCONC &= 0x1F;
  5676  0454  301F               	movlw	31
  5677  0455  0020               	movlb	0	; select bank0
  5678  0456  00B3               	movwf	??_blinkyLoop
  5679  0457  0833               	movf	??_blinkyLoop,w
  5680  0458  003E               	movlb	30	; select bank30
  5681  0459  05D0               	andwf	80,f	;volatile
  5682  045A                     l3237:	
  5683                           ;main.c: 131: while(loopCount>0){
  5684                           
  5685  045A  0020               	movlb	0	; select bank0
  5686  045B  0837               	movf	blinkyLoop@loopCount+1,w
  5687  045C  3A80               	xorlw	128
  5688  045D  00B3               	movwf	??_blinkyLoop
  5689  045E  3080               	movlw	128
  5690  045F  0233               	subwf	??_blinkyLoop,w
  5691  0460  1D03               	skipz
  5692  0461  2C64               	goto	u2735
  5693  0462  3001               	movlw	1
  5694  0463  0236               	subwf	blinkyLoop@loopCount,w
  5695  0464                     u2735:	
  5696  0464  1C03               	btfss	3,0
  5697  0465  2C9C               	goto	l3239
  5698                           
  5699                           ;main.c: 132: delayTime=loopCount*400;
  5700  0466  0020               	movlb	0	; select bank0
  5701  0467  0837               	movf	blinkyLoop@loopCount+1,w
  5702  0468  00A1               	movwf	___wmul@multiplier+1
  5703  0469  0836               	movf	blinkyLoop@loopCount,w
  5704  046A  00A0               	movwf	___wmul@multiplier
  5705  046B  3090               	movlw	144
  5706  046C  00A2               	movwf	___wmul@multiplicand
  5707  046D  3001               	movlw	1
  5708  046E  00A3               	movwf	___wmul@multiplicand+1
  5709  046F  3186  2623  3184   	fcall	___wmul
  5710  0472  0020               	movlb	0	; select bank0
  5711  0473  0821               	movf	?___wmul+1,w
  5712  0474  00B5               	movwf	blinkyLoop@delayTime+1
  5713  0475  0820               	movf	?___wmul,w
  5714  0476  00B4               	movwf	blinkyLoop@delayTime
  5715                           
  5716                           ;main.c: 135: PORTB |= 0x1F;
  5717  0477  301F               	movlw	31
  5718  0478  00B3               	movwf	??_blinkyLoop
  5719  0479  0833               	movf	??_blinkyLoop,w
  5720  047A  048D               	iorwf	13,f	;volatile
  5721                           
  5722                           ;main.c: 136: PORTC |= 0xE0;
  5723  047B  30E0               	movlw	224
  5724  047C  00B3               	movwf	??_blinkyLoop
  5725  047D  0833               	movf	??_blinkyLoop,w
  5726  047E  048E               	iorwf	14,f	;volatile
  5727                           
  5728                           ;main.c: 138: delay(delayTime);
  5729  047F  0835               	movf	blinkyLoop@delayTime+1,w
  5730  0480  00A7               	movwf	delay@delaytime+1
  5731  0481  0834               	movf	blinkyLoop@delayTime,w
  5732  0482  00A6               	movwf	delay@delaytime
  5733  0483  3184  24AC  3184   	fcall	_delay
  5734                           
  5735                           ;main.c: 140: PORTB &= 0xE0;
  5736  0486  30E0               	movlw	224
  5737  0487  0020               	movlb	0	; select bank0
  5738  0488  00B3               	movwf	??_blinkyLoop
  5739  0489  0833               	movf	??_blinkyLoop,w
  5740  048A  058D               	andwf	13,f	;volatile
  5741                           
  5742                           ;main.c: 141: PORTC &= 0x1F;
  5743  048B  301F               	movlw	31
  5744  048C  00B3               	movwf	??_blinkyLoop
  5745  048D  0833               	movf	??_blinkyLoop,w
  5746  048E  058E               	andwf	14,f	;volatile
  5747                           
  5748                           ;main.c: 143: delay(delayTime);
  5749  048F  0835               	movf	blinkyLoop@delayTime+1,w
  5750  0490  00A7               	movwf	delay@delaytime+1
  5751  0491  0834               	movf	blinkyLoop@delayTime,w
  5752  0492  00A6               	movwf	delay@delaytime
  5753  0493  3184  24AC  3184   	fcall	_delay
  5754                           
  5755                           ;main.c: 145: loopCount--;
  5756  0496  30FF               	movlw	255
  5757  0497  0020               	movlb	0	; select bank0
  5758  0498  07B6               	addwf	blinkyLoop@loopCount,f
  5759  0499  30FF               	movlw	255
  5760  049A  3DB7               	addwfc	blinkyLoop@loopCount+1,f
  5761  049B  2C5A               	goto	l3237
  5762  049C                     l3239:	
  5763                           
  5764                           ;main.c: 146: }
  5765                           ;main.c: 147: PORTB |= 0x1F;
  5766  049C  301F               	movlw	31
  5767  049D  0020               	movlb	0	; select bank0
  5768  049E  00B3               	movwf	??_blinkyLoop
  5769  049F  0833               	movf	??_blinkyLoop,w
  5770  04A0  048D               	iorwf	13,f	;volatile
  5771                           
  5772                           ;main.c: 148: PORTC |= 0xE0;
  5773  04A1  30E0               	movlw	224
  5774  04A2  00B3               	movwf	??_blinkyLoop
  5775  04A3  0833               	movf	??_blinkyLoop,w
  5776  04A4  048E               	iorwf	14,f	;volatile
  5777                           
  5778                           ;main.c: 149: delay(5000);
  5779  04A5  3088               	movlw	136
  5780  04A6  00A6               	movwf	delay@delaytime
  5781  04A7  3013               	movlw	19
  5782  04A8  00A7               	movwf	delay@delaytime+1
  5783  04A9  3184  24AC         	fcall	_delay
  5784  04AB  0008               	return
  5785  04AC                     __end_of_blinkyLoop:	
  5786                           ;main.c: 150: return;
  5787                           
  5788                           
  5789                           	psect	text5
  5790  035E                     __ptext5:	
  5791 ;; *************** function ___fttol *****************
  5792 ;; Defined at:
  5793 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  5794 ;; Parameters:    Size  Location     Type
  5795 ;;  f1              3   30[BANK0 ] float 
  5796 ;; Auto vars:     Size  Location     Type
  5797 ;;  lval            4   39[BANK0 ] unsigned long 
  5798 ;;  exp1            1   43[BANK0 ] unsigned char 
  5799 ;;  sign1           1   38[BANK0 ] unsigned char 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  4   30[BANK0 ] long 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5810 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5811 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5812 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5813 ;;Total ram usage:       14 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    3
  5816 ;; This function calls:
  5817 ;;		Nothing
  5818 ;; This function is called by:
  5819 ;;		_main
  5820 ;;		_LED7SegDisplayValue
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           
  5825                           ;psect for function ___fttol
  5826  035E                     ___fttol:	
  5827                           
  5828                           ;incstack = 0
  5829                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5830  035E  0020               	movlb	0	; select bank0
  5831  035F  083E               	movf	___fttol@f1,w
  5832  0360  00C2               	movwf	??___fttol
  5833  0361  083F               	movf	___fttol@f1+1,w
  5834  0362  00C3               	movwf	??___fttol+1
  5835  0363  0840               	movf	___fttol@f1+2,w
  5836  0364  00C4               	movwf	??___fttol+2
  5837  0365  1003               	clrc
  5838  0366  0D43               	rlf	??___fttol+1,w
  5839  0367  0D44               	rlf	??___fttol+2,w
  5840  0368  00C5               	movwf	??___fttol+3
  5841  0369  0845               	movf	??___fttol+3,w
  5842  036A  00CB               	movwf	___fttol@exp1
  5843  036B  084B               	movf	___fttol@exp1,w
  5844  036C  1D03               	btfss	3,2
  5845  036D  2B77               	goto	l2663
  5846  036E  3000               	movlw	0
  5847  036F  00C1               	movwf	?___fttol+3
  5848  0370  3000               	movlw	0
  5849  0371  00C0               	movwf	?___fttol+2
  5850  0372  3000               	movlw	0
  5851  0373  00BF               	movwf	?___fttol+1
  5852  0374  3000               	movlw	0
  5853  0375  00BE               	movwf	?___fttol
  5854  0376  0008               	return
  5855  0377                     l2663:	
  5856  0377  083E               	movf	___fttol@f1,w
  5857  0378  00C2               	movwf	??___fttol
  5858  0379  083F               	movf	___fttol@f1+1,w
  5859  037A  00C3               	movwf	??___fttol+1
  5860  037B  0840               	movf	___fttol@f1+2,w
  5861  037C  00C4               	movwf	??___fttol+2
  5862  037D  3017               	movlw	23
  5863  037E                     u1915:	
  5864  037E  36C4               	lsrf	??___fttol+2,f
  5865  037F  0CC3               	rrf	??___fttol+1,f
  5866  0380  0CC2               	rrf	??___fttol,f
  5867  0381  0B89               	decfsz	9,f
  5868  0382  2B7E               	goto	u1915
  5869  0383  0842               	movf	??___fttol,w
  5870  0384  00C5               	movwf	??___fttol+3
  5871  0385  0845               	movf	??___fttol+3,w
  5872  0386  00C6               	movwf	___fttol@sign1
  5873  0387  17BF               	bsf	___fttol@f1+1,7
  5874  0388  30FF               	movlw	255
  5875  0389  05BE               	andwf	___fttol@f1,f
  5876  038A  30FF               	movlw	255
  5877  038B  05BF               	andwf	___fttol@f1+1,f
  5878  038C  3000               	movlw	0
  5879  038D  05C0               	andwf	___fttol@f1+2,f
  5880  038E  083E               	movf	___fttol@f1,w
  5881  038F  00C7               	movwf	___fttol@lval
  5882  0390  083F               	movf	___fttol@f1+1,w
  5883  0391  00C8               	movwf	___fttol@lval+1
  5884  0392  0840               	movf	___fttol@f1+2,w
  5885  0393  00C9               	movwf	___fttol@lval+2
  5886  0394  01CA               	clrf	___fttol@lval+3
  5887  0395  308E               	movlw	142
  5888  0396  02CB               	subwf	___fttol@exp1,f
  5889  0397  1FCB               	btfss	___fttol@exp1,7
  5890  0398  2BB5               	goto	l2683
  5891  0399  084B               	movf	___fttol@exp1,w
  5892  039A  3A80               	xorlw	128
  5893  039B  3E8F               	addlw	143
  5894  039C  1803               	skipnc
  5895  039D  2BA7               	goto	l2681
  5896  039E  3000               	movlw	0
  5897  039F  00C1               	movwf	?___fttol+3
  5898  03A0  3000               	movlw	0
  5899  03A1  00C0               	movwf	?___fttol+2
  5900  03A2  3000               	movlw	0
  5901  03A3  00BF               	movwf	?___fttol+1
  5902  03A4  3000               	movlw	0
  5903  03A5  00BE               	movwf	?___fttol
  5904  03A6  0008               	return
  5905  03A7                     l2681:	
  5906  03A7  3001               	movlw	1
  5907  03A8                     u1945:	
  5908  03A8  36CA               	lsrf	___fttol@lval+3,f
  5909  03A9  0CC9               	rrf	___fttol@lval+2,f
  5910  03AA  0CC8               	rrf	___fttol@lval+1,f
  5911  03AB  0CC7               	rrf	___fttol@lval,f
  5912  03AC  0B89               	decfsz	9,f
  5913  03AD  2BA8               	goto	u1945
  5914  03AE  3001               	movlw	1
  5915  03AF  00C2               	movwf	??___fttol
  5916  03B0  0842               	movf	??___fttol,w
  5917  03B1  07CB               	addwf	___fttol@exp1,f
  5918  03B2  1903               	btfsc	3,2
  5919  03B3  2BCE               	goto	l2691
  5920  03B4  2BA7               	goto	l2681
  5921  03B5                     l2683:	
  5922  03B5  3018               	movlw	24
  5923  03B6  024B               	subwf	___fttol@exp1,w
  5924  03B7  1C03               	skipc
  5925  03B8  2BCB               	goto	l1009
  5926  03B9  3000               	movlw	0
  5927  03BA  00C1               	movwf	?___fttol+3
  5928  03BB  3000               	movlw	0
  5929  03BC  00C0               	movwf	?___fttol+2
  5930  03BD  3000               	movlw	0
  5931  03BE  00BF               	movwf	?___fttol+1
  5932  03BF  3000               	movlw	0
  5933  03C0  00BE               	movwf	?___fttol
  5934  03C1  0008               	return
  5935  03C2                     l2689:	
  5936  03C2  3001               	movlw	1
  5937  03C3                     u1975:	
  5938  03C3  35C7               	lslf	___fttol@lval,f
  5939  03C4  0DC8               	rlf	___fttol@lval+1,f
  5940  03C5  0DC9               	rlf	___fttol@lval+2,f
  5941  03C6  0DCA               	rlf	___fttol@lval+3,f
  5942  03C7  0B89               	decfsz	9,f
  5943  03C8  2BC3               	goto	u1975
  5944  03C9  3001               	movlw	1
  5945  03CA  02CB               	subwf	___fttol@exp1,f
  5946  03CB                     l1009:	
  5947  03CB  084B               	movf	___fttol@exp1,w
  5948  03CC  1D03               	btfss	3,2
  5949  03CD  2BC2               	goto	l2689
  5950  03CE                     l2691:	
  5951  03CE  0846               	movf	___fttol@sign1,w
  5952  03CF  1903               	btfsc	3,2
  5953  03D0  2BDC               	goto	l2695
  5954  03D1  09C7               	comf	___fttol@lval,f
  5955  03D2  09C8               	comf	___fttol@lval+1,f
  5956  03D3  09C9               	comf	___fttol@lval+2,f
  5957  03D4  09CA               	comf	___fttol@lval+3,f
  5958  03D5  0AC7               	incf	___fttol@lval,f
  5959  03D6  1903               	skipnz
  5960  03D7  0AC8               	incf	___fttol@lval+1,f
  5961  03D8  1903               	skipnz
  5962  03D9  0AC9               	incf	___fttol@lval+2,f
  5963  03DA  1903               	skipnz
  5964  03DB  0ACA               	incf	___fttol@lval+3,f
  5965  03DC                     l2695:	
  5966  03DC  084A               	movf	___fttol@lval+3,w
  5967  03DD  00C1               	movwf	?___fttol+3
  5968  03DE  0849               	movf	___fttol@lval+2,w
  5969  03DF  00C0               	movwf	?___fttol+2
  5970  03E0  0848               	movf	___fttol@lval+1,w
  5971  03E1  00BF               	movwf	?___fttol+1
  5972  03E2  0847               	movf	___fttol@lval,w
  5973  03E3  00BE               	movwf	?___fttol
  5974  03E4  0008               	return
  5975  03E5                     __end_of___fttol:	
  5976                           
  5977                           	psect	text6
  5978  02B5                     __ptext6:	
  5979 ;; *************** function ___ftdiv *****************
  5980 ;; Defined at:
  5981 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  f2              3   14[BANK0 ] float 
  5984 ;;  f1              3   17[BANK0 ] float 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  f3              3   25[BANK0 ] float 
  5987 ;;  sign            1   29[BANK0 ] unsigned char 
  5988 ;;  exp             1   28[BANK0 ] unsigned char 
  5989 ;;  cntr            1   24[BANK0 ] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  3   14[BANK0 ] float 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, status,0, pclath, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/0
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5999 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6000 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;Total ram usage:       16 bytes
  6004 ;; Hardware stack levels used:    1
  6005 ;; Hardware stack levels required when called:    4
  6006 ;; This function calls:
  6007 ;;		___ftpack
  6008 ;; This function is called by:
  6009 ;;		_main
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           
  6014                           ;psect for function ___ftdiv
  6015  02B5                     ___ftdiv:	
  6016                           
  6017                           ;incstack = 0
  6018                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6019  02B5  0020               	movlb	0	; select bank0
  6020  02B6  0831               	movf	___ftdiv@f1,w
  6021  02B7  00B4               	movwf	??___ftdiv
  6022  02B8  0832               	movf	___ftdiv@f1+1,w
  6023  02B9  00B5               	movwf	??___ftdiv+1
  6024  02BA  0833               	movf	___ftdiv@f1+2,w
  6025  02BB  00B6               	movwf	??___ftdiv+2
  6026  02BC  1003               	clrc
  6027  02BD  0D35               	rlf	??___ftdiv+1,w
  6028  02BE  0D36               	rlf	??___ftdiv+2,w
  6029  02BF  00B7               	movwf	??___ftdiv+3
  6030  02C0  0837               	movf	??___ftdiv+3,w
  6031  02C1  00BC               	movwf	___ftdiv@exp
  6032  02C2  083C               	movf	___ftdiv@exp,w
  6033  02C3  1D03               	btfss	3,2
  6034  02C4  2ACC               	goto	l2621
  6035  02C5  3000               	movlw	0
  6036  02C6  00AE               	movwf	?___ftdiv
  6037  02C7  3000               	movlw	0
  6038  02C8  00AF               	movwf	?___ftdiv+1
  6039  02C9  3000               	movlw	0
  6040  02CA  00B0               	movwf	?___ftdiv+2
  6041  02CB  0008               	return
  6042  02CC                     l2621:	
  6043  02CC  082E               	movf	___ftdiv@f2,w
  6044  02CD  00B4               	movwf	??___ftdiv
  6045  02CE  082F               	movf	___ftdiv@f2+1,w
  6046  02CF  00B5               	movwf	??___ftdiv+1
  6047  02D0  0830               	movf	___ftdiv@f2+2,w
  6048  02D1  00B6               	movwf	??___ftdiv+2
  6049  02D2  1003               	clrc
  6050  02D3  0D35               	rlf	??___ftdiv+1,w
  6051  02D4  0D36               	rlf	??___ftdiv+2,w
  6052  02D5  00B7               	movwf	??___ftdiv+3
  6053  02D6  0837               	movf	??___ftdiv+3,w
  6054  02D7  00BD               	movwf	___ftdiv@sign
  6055  02D8  083D               	movf	___ftdiv@sign,w
  6056  02D9  1D03               	btfss	3,2
  6057  02DA  2AE2               	goto	l2627
  6058  02DB  3000               	movlw	0
  6059  02DC  00AE               	movwf	?___ftdiv
  6060  02DD  3000               	movlw	0
  6061  02DE  00AF               	movwf	?___ftdiv+1
  6062  02DF  3000               	movlw	0
  6063  02E0  00B0               	movwf	?___ftdiv+2
  6064  02E1  0008               	return
  6065  02E2                     l2627:	
  6066  02E2  3000               	movlw	0
  6067  02E3  00B9               	movwf	___ftdiv@f3
  6068  02E4  3000               	movlw	0
  6069  02E5  00BA               	movwf	___ftdiv@f3+1
  6070  02E6  3000               	movlw	0
  6071  02E7  00BB               	movwf	___ftdiv@f3+2
  6072  02E8  3089               	movlw	137
  6073  02E9  073D               	addwf	___ftdiv@sign,w
  6074  02EA  00B4               	movwf	??___ftdiv
  6075  02EB  0834               	movf	??___ftdiv,w
  6076  02EC  02BC               	subwf	___ftdiv@exp,f
  6077  02ED  0831               	movf	___ftdiv@f1,w
  6078  02EE  00B4               	movwf	??___ftdiv
  6079  02EF  0832               	movf	___ftdiv@f1+1,w
  6080  02F0  00B5               	movwf	??___ftdiv+1
  6081  02F1  0833               	movf	___ftdiv@f1+2,w
  6082  02F2  00B6               	movwf	??___ftdiv+2
  6083  02F3  3010               	movlw	16
  6084  02F4                     u1845:	
  6085  02F4  36B6               	lsrf	??___ftdiv+2,f
  6086  02F5  0CB5               	rrf	??___ftdiv+1,f
  6087  02F6  0CB4               	rrf	??___ftdiv,f
  6088  02F7  0B89               	decfsz	9,f
  6089  02F8  2AF4               	goto	u1845
  6090  02F9  0834               	movf	??___ftdiv,w
  6091  02FA  00B7               	movwf	??___ftdiv+3
  6092  02FB  0837               	movf	??___ftdiv+3,w
  6093  02FC  00BD               	movwf	___ftdiv@sign
  6094  02FD  082E               	movf	___ftdiv@f2,w
  6095  02FE  00B4               	movwf	??___ftdiv
  6096  02FF  082F               	movf	___ftdiv@f2+1,w
  6097  0300  00B5               	movwf	??___ftdiv+1
  6098  0301  0830               	movf	___ftdiv@f2+2,w
  6099  0302  00B6               	movwf	??___ftdiv+2
  6100  0303  3010               	movlw	16
  6101  0304                     u1855:	
  6102  0304  36B6               	lsrf	??___ftdiv+2,f
  6103  0305  0CB5               	rrf	??___ftdiv+1,f
  6104  0306  0CB4               	rrf	??___ftdiv,f
  6105  0307  0B89               	decfsz	9,f
  6106  0308  2B04               	goto	u1855
  6107  0309  0834               	movf	??___ftdiv,w
  6108  030A  00B7               	movwf	??___ftdiv+3
  6109  030B  0837               	movf	??___ftdiv+3,w
  6110  030C  06BD               	xorwf	___ftdiv@sign,f
  6111  030D  3080               	movlw	128
  6112  030E  00B4               	movwf	??___ftdiv
  6113  030F  0834               	movf	??___ftdiv,w
  6114  0310  05BD               	andwf	___ftdiv@sign,f
  6115  0311  17B2               	bsf	___ftdiv@f1+1,7
  6116  0312  30FF               	movlw	255
  6117  0313  05B1               	andwf	___ftdiv@f1,f
  6118  0314  30FF               	movlw	255
  6119  0315  05B2               	andwf	___ftdiv@f1+1,f
  6120  0316  3000               	movlw	0
  6121  0317  05B3               	andwf	___ftdiv@f1+2,f
  6122  0318  17AF               	bsf	___ftdiv@f2+1,7
  6123  0319  30FF               	movlw	255
  6124  031A  05AE               	andwf	___ftdiv@f2,f
  6125  031B  30FF               	movlw	255
  6126  031C  05AF               	andwf	___ftdiv@f2+1,f
  6127  031D  3000               	movlw	0
  6128  031E  05B0               	andwf	___ftdiv@f2+2,f
  6129  031F  3018               	movlw	24
  6130  0320  00B4               	movwf	??___ftdiv
  6131  0321  0834               	movf	??___ftdiv,w
  6132  0322  00B8               	movwf	___ftdiv@cntr
  6133  0323                     l2641:	
  6134  0323  3001               	movlw	1
  6135  0324                     u1865:	
  6136  0324  35B9               	lslf	___ftdiv@f3,f
  6137  0325  0DBA               	rlf	___ftdiv@f3+1,f
  6138  0326  0DBB               	rlf	___ftdiv@f3+2,f
  6139  0327  0B89               	decfsz	9,f
  6140  0328  2B24               	goto	u1865
  6141  0329  0830               	movf	___ftdiv@f2+2,w
  6142  032A  0233               	subwf	___ftdiv@f1+2,w
  6143  032B  1D03               	skipz
  6144  032C  2B33               	goto	u1875
  6145  032D  082F               	movf	___ftdiv@f2+1,w
  6146  032E  0232               	subwf	___ftdiv@f1+1,w
  6147  032F  1D03               	skipz
  6148  0330  2B33               	goto	u1875
  6149  0331  082E               	movf	___ftdiv@f2,w
  6150  0332  0231               	subwf	___ftdiv@f1,w
  6151  0333                     u1875:	
  6152  0333  1C03               	skipc
  6153  0334  2B3C               	goto	l2649
  6154  0335  082E               	movf	___ftdiv@f2,w
  6155  0336  02B1               	subwf	___ftdiv@f1,f
  6156  0337  082F               	movf	___ftdiv@f2+1,w
  6157  0338  3BB2               	subwfb	___ftdiv@f1+1,f
  6158  0339  0830               	movf	___ftdiv@f2+2,w
  6159  033A  3BB3               	subwfb	___ftdiv@f1+2,f
  6160  033B  1439               	bsf	___ftdiv@f3,0
  6161  033C                     l2649:	
  6162  033C  3001               	movlw	1
  6163  033D                     u1885:	
  6164  033D  35B1               	lslf	___ftdiv@f1,f
  6165  033E  0DB2               	rlf	___ftdiv@f1+1,f
  6166  033F  0DB3               	rlf	___ftdiv@f1+2,f
  6167  0340  0B89               	decfsz	9,f
  6168  0341  2B3D               	goto	u1885
  6169  0342  3001               	movlw	1
  6170  0343  02B8               	subwf	___ftdiv@cntr,f
  6171  0344  1D03               	btfss	3,2
  6172  0345  2B23               	goto	l2641
  6173  0346  0839               	movf	___ftdiv@f3,w
  6174  0347  00A0               	movwf	___ftpack@arg
  6175  0348  083A               	movf	___ftdiv@f3+1,w
  6176  0349  00A1               	movwf	___ftpack@arg+1
  6177  034A  083B               	movf	___ftdiv@f3+2,w
  6178  034B  00A2               	movwf	___ftpack@arg+2
  6179  034C  083C               	movf	___ftdiv@exp,w
  6180  034D  00B4               	movwf	??___ftdiv
  6181  034E  0834               	movf	??___ftdiv,w
  6182  034F  00A3               	movwf	___ftpack@exp
  6183  0350  083D               	movf	___ftdiv@sign,w
  6184  0351  00B5               	movwf	??___ftdiv+1
  6185  0352  0835               	movf	??___ftdiv+1,w
  6186  0353  00A4               	movwf	___ftpack@sign
  6187  0354  3183  23E5         	fcall	___ftpack
  6188  0356  0020               	movlb	0	; select bank0
  6189  0357  0820               	movf	?___ftpack,w
  6190  0358  00AE               	movwf	?___ftdiv
  6191  0359  0821               	movf	?___ftpack+1,w
  6192  035A  00AF               	movwf	?___ftdiv+1
  6193  035B  0822               	movf	?___ftpack+2,w
  6194  035C  00B0               	movwf	?___ftdiv+2
  6195  035D  0008               	return
  6196  035E                     __end_of___ftdiv:	
  6197                           
  6198                           	psect	text7
  6199  05E5                     __ptext7:	
  6200 ;; *************** function ___awtoft *****************
  6201 ;; Defined at:
  6202 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;  c               2    8[BANK0 ] int 
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;  sign            1   13[BANK0 ] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  3    8[BANK0 ] float 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0, pclath, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6216 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;Total ram usage:        6 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    4
  6223 ;; This function calls:
  6224 ;;		___ftpack
  6225 ;; This function is called by:
  6226 ;;		_main
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function ___awtoft
  6232  05E5                     ___awtoft:	
  6233                           
  6234                           ;incstack = 0
  6235                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6236  05E5  0020               	movlb	0	; select bank0
  6237  05E6  01AD               	clrf	___awtoft@sign
  6238  05E7  1FA9               	btfss	___awtoft@c+1,7
  6239  05E8  2DF0               	goto	l2611
  6240  05E9  09A8               	comf	___awtoft@c,f
  6241  05EA  09A9               	comf	___awtoft@c+1,f
  6242  05EB  0AA8               	incf	___awtoft@c,f
  6243  05EC  1903               	skipnz
  6244  05ED  0AA9               	incf	___awtoft@c+1,f
  6245  05EE  01AD               	clrf	___awtoft@sign
  6246  05EF  0AAD               	incf	___awtoft@sign,f
  6247  05F0                     l2611:	
  6248  05F0  0828               	movf	___awtoft@c,w
  6249  05F1  00A0               	movwf	___ftpack@arg
  6250  05F2  0829               	movf	___awtoft@c+1,w
  6251  05F3  00A1               	movwf	___ftpack@arg+1
  6252  05F4  01A2               	clrf	___ftpack@arg+2
  6253  05F5  308E               	movlw	142
  6254  05F6  00AB               	movwf	??___awtoft
  6255  05F7  082B               	movf	??___awtoft,w
  6256  05F8  00A3               	movwf	___ftpack@exp
  6257  05F9  082D               	movf	___awtoft@sign,w
  6258  05FA  00AC               	movwf	??___awtoft+1
  6259  05FB  082C               	movf	??___awtoft+1,w
  6260  05FC  00A4               	movwf	___ftpack@sign
  6261  05FD  3183  23E5         	fcall	___ftpack
  6262  05FF  0020               	movlb	0	; select bank0
  6263  0600  0820               	movf	?___ftpack,w
  6264  0601  00A8               	movwf	?___awtoft
  6265  0602  0821               	movf	?___ftpack+1,w
  6266  0603  00A9               	movwf	?___awtoft+1
  6267  0604  0822               	movf	?___ftpack+2,w
  6268  0605  00AA               	movwf	?___awtoft+2
  6269  0606  0008               	return
  6270  0607                     __end_of___awtoft:	
  6271                           
  6272                           	psect	text8
  6273  03E5                     __ptext8:	
  6274 ;; *************** function ___ftpack *****************
  6275 ;; Defined at:
  6276 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;  arg             3    0[BANK0 ] unsigned um
  6279 ;;  exp             1    3[BANK0 ] unsigned char 
  6280 ;;  sign            1    4[BANK0 ] unsigned char 
  6281 ;; Auto vars:     Size  Location     Type
  6282 ;;		None
  6283 ;; Return value:  Size  Location     Type
  6284 ;;                  3    0[BANK0 ] float 
  6285 ;; Registers used:
  6286 ;;		wreg, status,2, status,0
  6287 ;; Tracked objects:
  6288 ;;		On entry : 0/0
  6289 ;;		On exit  : 0/0
  6290 ;;		Unchanged: 0/0
  6291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6292 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6295 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;Total ram usage:        8 bytes
  6297 ;; Hardware stack levels used:    1
  6298 ;; Hardware stack levels required when called:    3
  6299 ;; This function calls:
  6300 ;;		Nothing
  6301 ;; This function is called by:
  6302 ;;		___awtoft
  6303 ;;		___ftdiv
  6304 ;;		___lwtoft
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function ___ftpack
  6310  03E5                     ___ftpack:	
  6311                           
  6312                           ;incstack = 0
  6313                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6314  03E5  0020               	movlb	0	; select bank0
  6315  03E6  0823               	movf	___ftpack@exp,w
  6316  03E7  1903               	btfsc	3,2
  6317  03E8  2BEE               	goto	l2307
  6318  03E9  0822               	movf	___ftpack@arg+2,w
  6319  03EA  0421               	iorwf	___ftpack@arg+1,w
  6320  03EB  0420               	iorwf	___ftpack@arg,w
  6321  03EC  1D03               	skipz
  6322  03ED  2BFF               	goto	l2313
  6323  03EE                     l2307:	
  6324  03EE  3000               	movlw	0
  6325  03EF  00A0               	movwf	?___ftpack
  6326  03F0  3000               	movlw	0
  6327  03F1  00A1               	movwf	?___ftpack+1
  6328  03F2  3000               	movlw	0
  6329  03F3  00A2               	movwf	?___ftpack+2
  6330  03F4  0008               	return
  6331  03F5                     l2311:	
  6332  03F5  3001               	movlw	1
  6333  03F6  00A5               	movwf	??___ftpack
  6334  03F7  0825               	movf	??___ftpack,w
  6335  03F8  07A3               	addwf	___ftpack@exp,f
  6336  03F9  3001               	movlw	1
  6337  03FA                     u1485:	
  6338  03FA  36A2               	lsrf	___ftpack@arg+2,f
  6339  03FB  0CA1               	rrf	___ftpack@arg+1,f
  6340  03FC  0CA0               	rrf	___ftpack@arg,f
  6341  03FD  0B89               	decfsz	9,f
  6342  03FE  2BFA               	goto	u1485
  6343  03FF                     l2313:	
  6344  03FF  30FE               	movlw	254
  6345  0400  0522               	andwf	___ftpack@arg+2,w
  6346  0401  1903               	btfsc	3,2
  6347  0402  2C18               	goto	l918
  6348  0403  2BF5               	goto	l2311
  6349  0404                     l2315:	
  6350  0404  3001               	movlw	1
  6351  0405  00A5               	movwf	??___ftpack
  6352  0406  0825               	movf	??___ftpack,w
  6353  0407  07A3               	addwf	___ftpack@exp,f
  6354  0408  3001               	movlw	1
  6355  0409  07A0               	addwf	___ftpack@arg,f
  6356  040A  3000               	movlw	0
  6357  040B  1803               	skipnc
  6358  040C  3001               	movlw	1
  6359  040D  07A1               	addwf	___ftpack@arg+1,f
  6360  040E  3000               	movlw	0
  6361  040F  1803               	skipnc
  6362  0410  3001               	movlw	1
  6363  0411  07A2               	addwf	___ftpack@arg+2,f
  6364  0412  3001               	movlw	1
  6365  0413                     u1505:	
  6366  0413  36A2               	lsrf	___ftpack@arg+2,f
  6367  0414  0CA1               	rrf	___ftpack@arg+1,f
  6368  0415  0CA0               	rrf	___ftpack@arg,f
  6369  0416  0B89               	decfsz	9,f
  6370  0417  2C13               	goto	u1505
  6371  0418                     l918:	
  6372  0418  30FF               	movlw	255
  6373  0419  0522               	andwf	___ftpack@arg+2,w
  6374  041A  1903               	btfsc	3,2
  6375  041B  2C25               	goto	l2323
  6376  041C  2C04               	goto	l2315
  6377  041D                     l2321:	
  6378  041D  3001               	movlw	1
  6379  041E  02A3               	subwf	___ftpack@exp,f
  6380  041F  3001               	movlw	1
  6381  0420                     u1525:	
  6382  0420  35A0               	lslf	___ftpack@arg,f
  6383  0421  0DA1               	rlf	___ftpack@arg+1,f
  6384  0422  0DA2               	rlf	___ftpack@arg+2,f
  6385  0423  0B89               	decfsz	9,f
  6386  0424  2C20               	goto	u1525
  6387  0425                     l2323:	
  6388  0425  1BA1               	btfsc	___ftpack@arg+1,7
  6389  0426  2C2B               	goto	l925
  6390  0427  3002               	movlw	2
  6391  0428  0223               	subwf	___ftpack@exp,w
  6392  0429  1803               	skipnc
  6393  042A  2C1D               	goto	l2321
  6394  042B                     l925:	
  6395  042B  1823               	btfsc	___ftpack@exp,0
  6396  042C  2C33               	goto	l926
  6397  042D  30FF               	movlw	255
  6398  042E  05A0               	andwf	___ftpack@arg,f
  6399  042F  307F               	movlw	127
  6400  0430  05A1               	andwf	___ftpack@arg+1,f
  6401  0431  30FF               	movlw	255
  6402  0432  05A2               	andwf	___ftpack@arg+2,f
  6403  0433                     l926:	
  6404  0433  1003               	clrc
  6405  0434  0CA3               	rrf	___ftpack@exp,f
  6406  0435  0823               	movf	___ftpack@exp,w
  6407  0436  00A5               	movwf	??___ftpack
  6408  0437  01A6               	clrf	??___ftpack+1
  6409  0438  01A7               	clrf	??___ftpack+2
  6410  0439  3010               	movlw	16
  6411  043A                     u1565:	
  6412  043A  35A5               	lslf	??___ftpack,f
  6413  043B  0DA6               	rlf	??___ftpack+1,f
  6414  043C  0DA7               	rlf	??___ftpack+2,f
  6415  043D  0B89               	decfsz	9,f
  6416  043E  2C3A               	goto	u1565
  6417  043F  0825               	movf	??___ftpack,w
  6418  0440  04A0               	iorwf	___ftpack@arg,f
  6419  0441  0826               	movf	??___ftpack+1,w
  6420  0442  04A1               	iorwf	___ftpack@arg+1,f
  6421  0443  0827               	movf	??___ftpack+2,w
  6422  0444  04A2               	iorwf	___ftpack@arg+2,f
  6423  0445  0824               	movf	___ftpack@sign,w
  6424  0446  1903               	btfsc	3,2
  6425  0447  0008               	return
  6426  0448  17A2               	bsf	___ftpack@arg+2,7
  6427  0449  0008               	return
  6428  044A                     __end_of___ftpack:	
  6429                           
  6430                           	psect	text9
  6431  06F7                     __ptext9:	
  6432 ;; *************** function _SYSTEM_Initialize *****************
  6433 ;; Defined at:
  6434 ;;		line 83 in file "mcc_generated_files/mcc.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  1    wreg      void 
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0, pclath, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;Total ram usage:        0 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    4
  6455 ;; This function calls:
  6456 ;;		_ADCC_Initialize
  6457 ;;		_I2C1_Initialize
  6458 ;;		_OSCILLATOR_Initialize
  6459 ;;		_PIN_MANAGER_Initialize
  6460 ;; This function is called by:
  6461 ;;		_main
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function _SYSTEM_Initialize
  6467  06F7                     _SYSTEM_Initialize:	
  6468                           
  6469                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  6470                           
  6471                           ;incstack = 0
  6472                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6473  06F7  3184  24FF  3186   	fcall	_PIN_MANAGER_Initialize
  6474                           
  6475                           ;mcc.c: 87: OSCILLATOR_Initialize();
  6476  06FA  3187  270E  3186   	fcall	_OSCILLATOR_Initialize
  6477                           
  6478                           ;mcc.c: 88: I2C1_Initialize();
  6479  06FD  3186  2672  3186   	fcall	_I2C1_Initialize
  6480                           
  6481                           ;mcc.c: 89: ADCC_Initialize();
  6482  0700  3186  263F         	fcall	_ADCC_Initialize
  6483  0702  0008               	return
  6484  0703                     __end_of_SYSTEM_Initialize:	
  6485                           
  6486                           	psect	text10
  6487  04FF                     __ptext10:	
  6488 ;; *************** function _PIN_MANAGER_Initialize *****************
  6489 ;; Defined at:
  6490 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;  state           1    0[BANK0 ] unsigned char 
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      void 
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6505 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;Total ram usage:        1 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    3
  6511 ;; This function calls:
  6512 ;;		Nothing
  6513 ;; This function is called by:
  6514 ;;		_SYSTEM_Initialize
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           
  6519                           ;psect for function _PIN_MANAGER_Initialize
  6520  04FF                     _PIN_MANAGER_Initialize:	
  6521                           
  6522                           ;pin_manager.c: 57: LATA = 0x00;
  6523                           
  6524                           ;incstack = 0
  6525                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  6526  04FF  0020               	movlb	0	; select bank0
  6527  0500  0196               	clrf	22	;volatile
  6528                           
  6529                           ;pin_manager.c: 58: LATB = 0x00;
  6530  0501  0197               	clrf	23	;volatile
  6531                           
  6532                           ;pin_manager.c: 59: LATC = 0x00;
  6533  0502  0198               	clrf	24	;volatile
  6534                           
  6535                           ;pin_manager.c: 64: TRISA = 0x7F;
  6536  0503  307F               	movlw	127
  6537  0504  0091               	movwf	17	;volatile
  6538                           
  6539                           ;pin_manager.c: 65: TRISB = 0xE0;
  6540  0505  30E0               	movlw	224
  6541  0506  0092               	movwf	18	;volatile
  6542                           
  6543                           ;pin_manager.c: 66: TRISC = 0x1D;
  6544  0507  301D               	movlw	29
  6545  0508  0093               	movwf	19	;volatile
  6546                           
  6547                           ;pin_manager.c: 71: ANSELC = 0xE7;
  6548  0509  30E7               	movlw	231
  6549  050A  003E               	movlb	30	; select bank30
  6550  050B  00CE               	movwf	78	;volatile
  6551                           
  6552                           ;pin_manager.c: 72: ANSELB = 0x1F;
  6553  050C  301F               	movlw	31
  6554  050D  00C3               	movwf	67	;volatile
  6555                           
  6556                           ;pin_manager.c: 73: ANSELA = 0xFF;
  6557  050E  30FF               	movlw	255
  6558  050F  00B8               	movwf	56	;volatile
  6559                           
  6560                           ;pin_manager.c: 78: WPUE = 0x00;
  6561  0510  01E5               	clrf	101	;volatile
  6562                           
  6563                           ;pin_manager.c: 79: WPUB = 0x00;
  6564  0511  01C4               	clrf	68	;volatile
  6565                           
  6566                           ;pin_manager.c: 80: WPUA = 0x00;
  6567  0512  01B9               	clrf	57	;volatile
  6568                           
  6569                           ;pin_manager.c: 81: WPUC = 0x00;
  6570  0513  01CF               	clrf	79	;volatile
  6571                           
  6572                           ;pin_manager.c: 86: ODCONA = 0x00;
  6573  0514  01BA               	clrf	58	;volatile
  6574                           
  6575                           ;pin_manager.c: 87: ODCONB = 0x00;
  6576  0515  01C5               	clrf	69	;volatile
  6577                           
  6578                           ;pin_manager.c: 88: ODCONC = 0x00;
  6579  0516  01D0               	clrf	80	;volatile
  6580                           
  6581                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  6582  0517  3000               	movlw	0
  6583  0518  1B8B               	btfsc	11,7	;volatile
  6584  0519  3001               	movlw	1
  6585  051A  0020               	movlb	0	; select bank0
  6586  051B  00A0               	movwf	PIN_MANAGER_Initialize@state
  6587                           
  6588                           ;pin_manager.c: 96: GIE = 0;
  6589  051C  138B               	bcf	11,7	;volatile
  6590                           
  6591                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  6592  051D  3055               	movlw	85
  6593  051E  003D               	movlb	29	; select bank29
  6594  051F  008F               	movwf	15	;volsfr
  6595                           
  6596                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  6597  0520  30AA               	movlw	170
  6598  0521  008F               	movwf	15	;volsfr
  6599                           
  6600                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  6601  0522  100F               	bcf	15,0	;volsfr
  6602                           
  6603                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  6604  0523  0846               	movf	70,w	;volatile
  6605  0524  39E0               	andlw	-32
  6606  0525  3813               	iorlw	19
  6607  0526  00C6               	movwf	70	;volatile
  6608                           
  6609                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  6610  0527  0845               	movf	69,w	;volatile
  6611  0528  39E0               	andlw	-32
  6612  0529  3814               	iorlw	20
  6613  052A  00C5               	movwf	69	;volatile
  6614                           
  6615                           ;pin_manager.c: 103: RC3PPS = 0x15;
  6616  052B  3015               	movlw	21
  6617  052C  003E               	movlb	30	; select bank30
  6618  052D  00A3               	movwf	35	;volatile
  6619                           
  6620                           ;pin_manager.c: 104: RC4PPS = 0x14;
  6621  052E  3014               	movlw	20
  6622  052F  00A4               	movwf	36	;volatile
  6623                           
  6624                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  6625  0530  3055               	movlw	85
  6626  0531  003D               	movlb	29	; select bank29
  6627  0532  008F               	movwf	15	;volsfr
  6628                           
  6629                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  6630  0533  30AA               	movlw	170
  6631  0534  008F               	movwf	15	;volsfr
  6632                           
  6633                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  6634  0535  140F               	bsf	15,0	;volsfr
  6635                           
  6636                           ;pin_manager.c: 110: GIE = state;
  6637  0536  0020               	movlb	0	; select bank0
  6638  0537  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  6639  0538  2D3B               	goto	u2670
  6640  0539  178B               	bsf	11,7	;volatile
  6641  053A  0008               	return
  6642  053B                     u2670:	
  6643  053B  138B               	bcf	11,7	;volatile
  6644  053C  0008               	return
  6645  053D                     __end_of_PIN_MANAGER_Initialize:	
  6646                           
  6647                           	psect	text11
  6648  070E                     __ptext11:	
  6649 ;; *************** function _OSCILLATOR_Initialize *****************
  6650 ;; Defined at:
  6651 ;;		line 92 in file "mcc_generated_files/mcc.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;                  1    wreg      void 
  6658 ;; Registers used:
  6659 ;;		wreg, status,2
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;Total ram usage:        0 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; Hardware stack levels required when called:    3
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_SYSTEM_Initialize
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           
  6680                           ;psect for function _OSCILLATOR_Initialize
  6681  070E                     _OSCILLATOR_Initialize:	
  6682                           
  6683                           ;mcc.c: 95: OSCCON1 = 0x60;
  6684                           
  6685                           ;incstack = 0
  6686                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6687  070E  3060               	movlw	96
  6688  070F  0031               	movlb	17	; select bank17
  6689  0710  008D               	movwf	13	;volatile
  6690                           
  6691                           ;mcc.c: 97: OSCCON3 = 0x00;
  6692  0711  018F               	clrf	15	;volatile
  6693                           
  6694                           ;mcc.c: 99: OSCEN = 0x00;
  6695  0712  0191               	clrf	17	;volatile
  6696                           
  6697                           ;mcc.c: 101: OSCFRQ = 0x06;
  6698  0713  3006               	movlw	6
  6699  0714  0093               	movwf	19	;volatile
  6700                           
  6701                           ;mcc.c: 103: OSCTUNE = 0x00;
  6702  0715  0192               	clrf	18	;volatile
  6703  0716  0008               	return
  6704  0717                     __end_of_OSCILLATOR_Initialize:	
  6705                           
  6706                           	psect	text12
  6707  0672                     __ptext12:	
  6708 ;; *************** function _I2C1_Initialize *****************
  6709 ;; Defined at:
  6710 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  6711 ;; Parameters:    Size  Location     Type
  6712 ;;		None
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;                  1    wreg      void 
  6717 ;; Registers used:
  6718 ;;		wreg, status,2
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;Total ram usage:        1 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    3
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_SYSTEM_Initialize
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           
  6739                           ;psect for function _I2C1_Initialize
  6740  0672                     _I2C1_Initialize:	
  6741                           
  6742                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  6743                           
  6744                           ;incstack = 0
  6745                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  6746  0672  306D               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  6747  0673  0020               	movlb	0	; select bank0
  6748  0674  00A0               	movwf	??_I2C1_Initialize
  6749  0675  0820               	movf	??_I2C1_Initialize,w
  6750  0676  00DF               	movwf	low ((_i2c1_object| 0+1))
  6751                           
  6752                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  6753  0677  306D               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  6754  0678  00A0               	movwf	??_I2C1_Initialize
  6755  0679  0820               	movf	??_I2C1_Initialize,w
  6756  067A  00DE               	movwf	_i2c1_object
  6757                           
  6758                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  6759  067B  14E0               	bsf	_i2c1_object+2,1
  6760                           
  6761                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  6762  067C  1060               	bcf	_i2c1_object+2,0
  6763                           
  6764                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  6765  067D  01E2               	clrf	_i2c1_object+4
  6766                           
  6767                           ;i2c1.c: 208: SSP1STAT = 0x00;
  6768  067E  0023               	movlb	3	; select bank3
  6769  067F  018F               	clrf	15	;volatile
  6770                           
  6771                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  6772  0680  3028               	movlw	40
  6773  0681  0090               	movwf	16	;volatile
  6774                           
  6775                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  6776  0682  0192               	clrf	18	;volatile
  6777                           
  6778                           ;i2c1.c: 214: SSP1ADD = 0x13;
  6779  0683  3013               	movlw	19
  6780  0684  008D               	movwf	13	;volatile
  6781                           
  6782                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  6783  0685  002E               	movlb	14	; select bank14
  6784  0686  100F               	bcf	15,0	;volatile
  6785                           
  6786                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  6787  0687  1419               	bsf	25,0	;volatile
  6788  0688  0008               	return
  6789  0689                     __end_of_I2C1_Initialize:	
  6790                           
  6791                           	psect	text13
  6792  063F                     __ptext13:	
  6793 ;; *************** function _ADCC_Initialize *****************
  6794 ;; Defined at:
  6795 ;;		line 62 in file "mcc_generated_files/adcc.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;                  1    wreg      void 
  6802 ;; Registers used:
  6803 ;;		wreg, status,2
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    3
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_SYSTEM_Initialize
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           
  6824                           ;psect for function _ADCC_Initialize
  6825  063F                     _ADCC_Initialize:	
  6826                           
  6827                           ;adcc.c: 66: ADCON1 = 0x00;
  6828                           
  6829                           ;incstack = 0
  6830                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  6831  063F  0021               	movlb	1	; select bank1
  6832  0640  0194               	clrf	20	;volatile
  6833                           
  6834                           ;adcc.c: 68: ADCON2 = 0x03;
  6835  0641  3003               	movlw	3
  6836  0642  0095               	movwf	21	;volatile
  6837                           
  6838                           ;adcc.c: 70: ADCON3 = 0x00;
  6839  0643  0196               	clrf	22	;volatile
  6840                           
  6841                           ;adcc.c: 72: ADACT = 0x00;
  6842  0644  0199               	clrf	25	;volatile
  6843                           
  6844                           ;adcc.c: 74: ADSTAT = 0x00;
  6845  0645  0197               	clrf	23	;volatile
  6846                           
  6847                           ;adcc.c: 76: ADCLK = 0x13;
  6848  0646  3013               	movlw	19
  6849  0647  0098               	movwf	24	;volatile
  6850                           
  6851                           ;adcc.c: 78: ADREF = 0x00;
  6852  0648  019A               	clrf	26	;volatile
  6853                           
  6854                           ;adcc.c: 80: ADCAP = 0x00;
  6855  0649  019B               	clrf	27	;volatile
  6856                           
  6857                           ;adcc.c: 82: ADPRE = 0x00;
  6858  064A  019C               	clrf	28	;volatile
  6859                           
  6860                           ;adcc.c: 84: ADACQ = 0x04;
  6861  064B  3004               	movlw	4
  6862  064C  009D               	movwf	29	;volatile
  6863                           
  6864                           ;adcc.c: 86: ADPCH = 0x00;
  6865  064D  019E               	clrf	30	;volatile
  6866                           
  6867                           ;adcc.c: 88: ADRPT = 0x00;
  6868  064E  0022               	movlb	2	; select bank2
  6869  064F  018D               	clrf	13	;volatile
  6870                           
  6871                           ;adcc.c: 90: ADLTHL = 0x00;
  6872  0650  018E               	clrf	14	;volatile
  6873                           
  6874                           ;adcc.c: 92: ADLTHH = 0x00;
  6875  0651  018F               	clrf	15	;volatile
  6876                           
  6877                           ;adcc.c: 94: ADUTHL = 0x00;
  6878  0652  0190               	clrf	16	;volatile
  6879                           
  6880                           ;adcc.c: 96: ADUTHH = 0x00;
  6881  0653  0191               	clrf	17	;volatile
  6882                           
  6883                           ;adcc.c: 98: ADSTPTL = 0x00;
  6884  0654  0192               	clrf	18	;volatile
  6885                           
  6886                           ;adcc.c: 100: ADSTPTH = 0x00;
  6887  0655  0193               	clrf	19	;volatile
  6888                           
  6889                           ;adcc.c: 103: ADCON0 = 0x84;
  6890  0656  3084               	movlw	132
  6891  0657  0021               	movlb	1	; select bank1
  6892  0658  0093               	movwf	19	;volatile
  6893  0659  0008               	return
  6894  065A                     __end_of_ADCC_Initialize:	
  6895                           
  6896                           	psect	text14
  6897  06EA                     __ptext14:	
  6898 ;; *************** function _LED7SegSetup *****************
  6899 ;; Defined at:
  6900 ;;		line 31 in file "LED7Seg.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;		None
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      void 
  6907 ;; Registers used:
  6908 ;;		None
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6918 ;;Total ram usage:        0 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    3
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_main
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           
  6929                           ;psect for function _LED7SegSetup
  6930  06EA                     _LED7SegSetup:	
  6931                           
  6932                           ;incstack = 0
  6933                           ; Regs used in _LED7SegSetup: []
  6934                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
  6935  06EA  003E               	movlb	30	; select bank30
  6936  06EB  12CE               	bcf	78,5	;volatile
  6937                           
  6938                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
  6939  06EC  0020               	movlb	0	; select bank0
  6940  06ED  1293               	bcf	19,5	;volatile
  6941                           
  6942                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
  6943  06EE  003E               	movlb	30	; select bank30
  6944  06EF  134E               	bcf	78,6	;volatile
  6945                           
  6946                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
  6947  06F0  0020               	movlb	0	; select bank0
  6948  06F1  1313               	bcf	19,6	;volatile
  6949                           
  6950                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
  6951  06F2  003E               	movlb	30	; select bank30
  6952  06F3  13CE               	bcf	78,7	;volatile
  6953                           
  6954                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
  6955  06F4  0020               	movlb	0	; select bank0
  6956  06F5  1393               	bcf	19,7	;volatile
  6957  06F6  0008               	return
  6958  06F7                     __end_of_LED7SegSetup:	
  6959                           
  6960                           	psect	text15
  6961  053D                     __ptext15:	
  6962 ;; *************** function _LED7SegDisplayValueByDigit *****************
  6963 ;; Defined at:
  6964 ;;		line 95 in file "LED7Seg.c"
  6965 ;; Parameters:    Size  Location     Type
  6966 ;;  iTensDigit      2   20[BANK0 ] unsigned int 
  6967 ;;  iUnitsDigit     2   22[BANK0 ] unsigned int 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  iTensCode       2   24[BANK0 ] unsigned int 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1    wreg      void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6979 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;Total ram usage:        6 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:    7
  6986 ;; This function calls:
  6987 ;;		_LED7SegShiftOutPulseClock
  6988 ;; This function is called by:
  6989 ;;		_main
  6990 ;;		_LED7SegDisplayValue
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function _LED7SegDisplayValueByDigit
  6996  053D                     _LED7SegDisplayValueByDigit:	
  6997                           
  6998                           ;LED7Seg.c: 99: if(iUnitsDigit>9) iUnitsDigit=9;
  6999                           
  7000                           ;LED7Seg.c: 96: unsigned int iTensCode;
  7001                           ;LED7Seg.c: 98: if(0>iUnitsDigit) iUnitsDigit=0;
  7002                           
  7003                           ;incstack = 0
  7004                           ; Regs used in _LED7SegDisplayValueByDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7005  053D  3000               	movlw	0
  7006  053E  0020               	movlb	0	; select bank0
  7007  053F  0237               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit+1,w
  7008  0540  300A               	movlw	10
  7009  0541  1903               	skipnz
  7010  0542  0236               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit,w
  7011  0543  1C03               	skipc
  7012  0544  2D49               	goto	l3255
  7013  0545  3009               	movlw	9
  7014  0546  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  7015  0547  3000               	movlw	0
  7016  0548  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  7017  0549                     l3255:	
  7018                           ;LED7Seg.c: 101: if(0>iTensDigit) iTensDigit=0;
  7019                           
  7020                           
  7021                           ;LED7Seg.c: 102: if(iTensDigit>9) iTensDigit=9;
  7022  0549  3000               	movlw	0
  7023  054A  0235               	subwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
  7024  054B  300A               	movlw	10
  7025  054C  1903               	skipnz
  7026  054D  0234               	subwf	LED7SegDisplayValueByDigit@iTensDigit,w
  7027  054E  1C03               	skipc
  7028  054F  2D54               	goto	l3259
  7029  0550  3009               	movlw	9
  7030  0551  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  7031  0552  3000               	movlw	0
  7032  0553  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  7033  0554                     l3259:	
  7034                           
  7035                           ;LED7Seg.c: 104: iTensCode=segdisp[iTensDigit];
  7036  0554  3534               	lslf	LED7SegDisplayValueByDigit@iTensDigit,w
  7037  0555  3EA0               	addlw	(low (_segdisp| 0))& (0+255)
  7038  0556  0086               	movwf	6
  7039  0557  0187               	clrf	7
  7040  0558  3F40               	moviw [0]fsr1
  7041  0559  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
  7042  055A  3F41               	moviw [1]fsr1
  7043  055B  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
  7044                           
  7045                           ;LED7Seg.c: 105: if(0==iTensDigit) iTensCode=255;
  7046  055C  0834               	movf	LED7SegDisplayValueByDigit@iTensDigit,w
  7047  055D  0435               	iorwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
  7048  055E  1D03               	btfss	3,2
  7049  055F  2D64               	goto	l3265
  7050  0560  30FF               	movlw	255
  7051  0561  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
  7052  0562  3000               	movlw	0
  7053  0563  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
  7054  0564                     l3265:	
  7055                           
  7056                           ;LED7Seg.c: 107: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
  7057  0564  3536               	lslf	LED7SegDisplayValueByDigit@iUnitsDigit,w
  7058  0565  3EA0               	addlw	(low (_segdisp| 0))& (0+255)
  7059  0566  0086               	movwf	6
  7060  0567  0187               	clrf	7
  7061  0568  0801               	movf	1,w
  7062  0569  3186  2607  3185   	fcall	_LED7SegShiftOutPulseClock
  7063                           
  7064                           ;LED7Seg.c: 108: LED7SegShiftOutPulseClock( iTensCode );
  7065  056C  0020               	movlb	0	; select bank0
  7066  056D  0838               	movf	LED7SegDisplayValueByDigit@iTensCode,w
  7067  056E  3186  2607         	fcall	_LED7SegShiftOutPulseClock
  7068                           
  7069                           ;LED7Seg.c: 110: do { LATCbits.LATC5 = 1; } while(0);
  7070  0570  0020               	movlb	0	; select bank0
  7071  0571  1698               	bsf	24,5	;volatile
  7072                           
  7073                           ;LED7Seg.c: 111: do { LATCbits.LATC5 = 0; } while(0);
  7074  0572  1298               	bcf	24,5	;volatile
  7075  0573  0008               	return
  7076  0574                     __end_of_LED7SegDisplayValueByDigit:	
  7077                           
  7078                           	psect	text16
  7079  0607                     __ptext16:	
  7080 ;; *************** function _LED7SegShiftOutPulseClock *****************
  7081 ;; Defined at:
  7082 ;;		line 69 in file "LED7Seg.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  val             1    wreg     unsigned char 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  val             1   18[BANK0 ] unsigned char 
  7087 ;;  i               1   19[BANK0 ] unsigned char 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  1    wreg      void 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7099 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7100 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7101 ;;Total ram usage:        3 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    6
  7104 ;; This function calls:
  7105 ;;		_LED7SegPinWrite
  7106 ;;		_LED7SegPulseClock
  7107 ;; This function is called by:
  7108 ;;		_LED7SegDisplayValueByDigit
  7109 ;;		_LED7SegBlankDisplay
  7110 ;; This function uses a non-reentrant model
  7111 ;;
  7112                           
  7113                           
  7114                           ;psect for function _LED7SegShiftOutPulseClock
  7115  0607                     _LED7SegShiftOutPulseClock:	
  7116                           
  7117                           ;incstack = 0
  7118                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7119                           ;LED7SegShiftOutPulseClock@val stored from wreg
  7120  0607  0020               	movlb	0	; select bank0
  7121  0608  00B2               	movwf	LED7SegShiftOutPulseClock@val
  7122                           
  7123                           ;LED7Seg.c: 71: char i;
  7124                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
  7125  0609  01B3               	clrf	LED7SegShiftOutPulseClock@i
  7126  060A                     L1:	
  7127  060A  3008               	movlw	8
  7128  060B  0233               	subwf	LED7SegShiftOutPulseClock@i,w
  7129  060C  1803               	btfsc	3,0
  7130  060D  0008               	return
  7131                           
  7132                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
  7133  060E  3001               	movlw	1
  7134  060F  00B1               	movwf	??_LED7SegShiftOutPulseClock
  7135  0610  0A33               	incf	LED7SegShiftOutPulseClock@i,w
  7136  0611  2E13               	goto	u2704
  7137  0612                     u2705:	
  7138  0612  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
  7139  0613                     u2704:	
  7140  0613  0B89               	decfsz	9,f
  7141  0614  2E12               	goto	u2705
  7142  0615  0831               	movf	??_LED7SegShiftOutPulseClock,w
  7143  0616  0532               	andwf	LED7SegShiftOutPulseClock@val,w
  7144  0617  3187  2717  3186   	fcall	_LED7SegPinWrite
  7145                           
  7146                           ;LED7Seg.c: 77: LED7SegPulseClock();
  7147  061A  3187  2703  3186   	fcall	_LED7SegPulseClock
  7148  061D  3001               	movlw	1
  7149  061E  0020               	movlb	0	; select bank0
  7150  061F  00B1               	movwf	??_LED7SegShiftOutPulseClock
  7151  0620  0831               	movf	??_LED7SegShiftOutPulseClock,w
  7152  0621  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
  7153  0622  2E0A               	goto	L1
  7154  0623                     __end_of_LED7SegShiftOutPulseClock:	
  7155                           
  7156                           	psect	text17
  7157  0703                     __ptext17:	
  7158 ;; *************** function _LED7SegPulseClock *****************
  7159 ;; Defined at:
  7160 ;;		line 60 in file "LED7Seg.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  1    wreg      void 
  7167 ;; Registers used:
  7168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;Total ram usage:        0 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    5
  7181 ;; This function calls:
  7182 ;;		_delay
  7183 ;; This function is called by:
  7184 ;;		_LED7SegShiftOutPulseClock
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           
  7189                           ;psect for function _LED7SegPulseClock
  7190  0703                     _LED7SegPulseClock:	
  7191                           
  7192                           ;incstack = 0
  7193                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7194                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
  7195  0703  0020               	movlb	0	; select bank0
  7196  0704  1718               	bsf	24,6	;volatile
  7197                           
  7198                           ;LED7Seg.c: 64: delay(1);
  7199  0705  3001               	movlw	1
  7200  0706  00A6               	movwf	delay@delaytime
  7201  0707  3000               	movlw	0
  7202  0708  00A7               	movwf	delay@delaytime+1
  7203  0709  3184  24AC         	fcall	_delay
  7204                           
  7205                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
  7206  070B  0020               	movlb	0	; select bank0
  7207  070C  1318               	bcf	24,6	;volatile
  7208  070D  0008               	return
  7209  070E                     __end_of_LED7SegPulseClock:	
  7210                           
  7211                           	psect	text18
  7212  04AC                     __ptext18:	
  7213 ;; *************** function _delay *****************
  7214 ;; Defined at:
  7215 ;;		line 117 in file "main.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  delaytime       2    6[BANK0 ] int 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  counter         4   13[BANK0 ] long 
  7220 ;;  adjustedDela    4    9[BANK0 ] long 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      void 
  7223 ;; Registers used:
  7224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7230 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7231 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7232 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7233 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7234 ;;Total ram usage:       11 bytes
  7235 ;; Hardware stack levels used:    1
  7236 ;; Hardware stack levels required when called:    4
  7237 ;; This function calls:
  7238 ;;		___wmul
  7239 ;; This function is called by:
  7240 ;;		_blinkyLoop
  7241 ;;		_main
  7242 ;;		_LED7SegPulseClock
  7243 ;;		_LED7SegLoop
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function _delay
  7249  04AC                     _delay:	
  7250                           
  7251                           ;main.c: 118: long counter = 0;
  7252                           
  7253                           ;incstack = 0
  7254                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7255  04AC  3000               	movlw	0
  7256  04AD  0020               	movlb	0	; select bank0
  7257  04AE  00B0               	movwf	delay@counter+3
  7258  04AF  3000               	movlw	0
  7259  04B0  00AF               	movwf	delay@counter+2
  7260  04B1  3000               	movlw	0
  7261  04B2  00AE               	movwf	delay@counter+1
  7262  04B3  3000               	movlw	0
  7263  04B4  00AD               	movwf	delay@counter
  7264                           
  7265                           ;main.c: 119: long adjustedDelaytime=delaytime*cMstrClkAdjust;
  7266  04B5  0827               	movf	delay@delaytime+1,w
  7267  04B6  00A1               	movwf	___wmul@multiplier+1
  7268  04B7  0826               	movf	delay@delaytime,w
  7269  04B8  00A0               	movwf	___wmul@multiplier
  7270  04B9  303E               	movlw	low (_cMstrClkAdjust| (0+32768))
  7271  04BA  0084               	movwf	4
  7272  04BB  3087               	movlw	high (_cMstrClkAdjust| (0+32768))
  7273  04BC  0085               	movwf	5
  7274  04BD  3F00               	moviw [0]fsr0
  7275  04BE  00A2               	movwf	___wmul@multiplicand
  7276  04BF  3F01               	moviw [1]fsr0
  7277  04C0  00A3               	movwf	___wmul@multiplicand+1
  7278  04C1  3186  2623  3184   	fcall	___wmul
  7279  04C4  0020               	movlb	0	; select bank0
  7280  04C5  0820               	movf	?___wmul,w
  7281  04C6  00A9               	movwf	delay@adjustedDelaytime
  7282  04C7  0821               	movf	?___wmul+1,w
  7283  04C8  00AA               	movwf	delay@adjustedDelaytime+1
  7284  04C9  0D89               	rlf	9,f
  7285  04CA  3B89               	subwfb	9,f
  7286  04CB  0989               	comf	9,f
  7287  04CC  00AB               	movwf	delay@adjustedDelaytime+2
  7288  04CD  00AC               	movwf	delay@adjustedDelaytime+3
  7289                           
  7290                           ;main.c: 120: if (0<delaytime)
  7291  04CE  0827               	movf	delay@delaytime+1,w
  7292  04CF  3A80               	xorlw	128
  7293  04D0  00A8               	movwf	??_delay
  7294  04D1  3080               	movlw	128
  7295  04D2  0228               	subwf	??_delay,w
  7296  04D3  1D03               	skipz
  7297  04D4  2CD7               	goto	u2645
  7298  04D5  3001               	movlw	1
  7299  04D6  0226               	subwf	delay@delaytime,w
  7300  04D7                     u2645:	
  7301  04D7  1C03               	skipc
  7302  04D8  0008               	return
  7303                           
  7304                           ;main.c: 121: for (counter = 0; counter<adjustedDelaytime; counter++);
  7305  04D9  3000               	movlw	0
  7306  04DA  0020               	movlb	0	; select bank0
  7307  04DB  00B0               	movwf	delay@counter+3
  7308  04DC  3000               	movlw	0
  7309  04DD  00AF               	movwf	delay@counter+2
  7310  04DE  3000               	movlw	0
  7311  04DF  00AE               	movwf	delay@counter+1
  7312  04E0  3000               	movlw	0
  7313  04E1  00AD               	movwf	delay@counter
  7314  04E2                     l448:	
  7315  04E2  0830               	movf	delay@counter+3,w
  7316  04E3  3A80               	xorlw	128
  7317  04E4  00A8               	movwf	??_delay
  7318  04E5  082C               	movf	delay@adjustedDelaytime+3,w
  7319  04E6  3A80               	xorlw	128
  7320  04E7  0228               	subwf	??_delay,w
  7321  04E8  1D03               	skipz
  7322  04E9  2CF4               	goto	u2653
  7323  04EA  082B               	movf	delay@adjustedDelaytime+2,w
  7324  04EB  022F               	subwf	delay@counter+2,w
  7325  04EC  1D03               	skipz
  7326  04ED  2CF4               	goto	u2653
  7327  04EE  082A               	movf	delay@adjustedDelaytime+1,w
  7328  04EF  022E               	subwf	delay@counter+1,w
  7329  04F0  1D03               	skipz
  7330  04F1  2CF4               	goto	u2653
  7331  04F2  0829               	movf	delay@adjustedDelaytime,w
  7332  04F3  022D               	subwf	delay@counter,w
  7333  04F4                     u2653:	
  7334  04F4  1803               	btfsc	3,0
  7335  04F5  0008               	return
  7336  04F6  3001               	movlw	1
  7337  04F7  07AD               	addwf	delay@counter,f
  7338  04F8  3000               	movlw	0
  7339  04F9  3DAE               	addwfc	delay@counter+1,f
  7340  04FA  3000               	movlw	0
  7341  04FB  3DAF               	addwfc	delay@counter+2,f
  7342  04FC  3000               	movlw	0
  7343  04FD  3DB0               	addwfc	delay@counter+3,f
  7344  04FE  2CE2               	goto	l448
  7345  04FF                     __end_of_delay:	
  7346                           
  7347                           	psect	text19
  7348  0623                     __ptext19:	
  7349 ;; *************** function ___wmul *****************
  7350 ;; Defined at:
  7351 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7354 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  product         2    4[BANK0 ] unsigned int 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  2    0[BANK0 ] unsigned int 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7370 ;;Total ram usage:        6 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    3
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_delay
  7377 ;;		_blinkyLoop
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function ___wmul
  7383  0623                     ___wmul:	
  7384                           
  7385                           ;incstack = 0
  7386                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7387  0623  0020               	movlb	0	; select bank0
  7388  0624  01A4               	clrf	___wmul@product
  7389  0625  01A5               	clrf	___wmul@product+1
  7390  0626                     l3101:	
  7391  0626  1C20               	btfss	___wmul@multiplier,0
  7392  0627  2E2C               	goto	l757
  7393  0628  0822               	movf	___wmul@multiplicand,w
  7394  0629  07A4               	addwf	___wmul@product,f
  7395  062A  0823               	movf	___wmul@multiplicand+1,w
  7396  062B  3DA5               	addwfc	___wmul@product+1,f
  7397  062C                     l757:	
  7398  062C  3001               	movlw	1
  7399  062D                     u2615:	
  7400  062D  35A2               	lslf	___wmul@multiplicand,f
  7401  062E  0DA3               	rlf	___wmul@multiplicand+1,f
  7402  062F  0B89               	decfsz	9,f
  7403  0630  2E2D               	goto	u2615
  7404  0631  3001               	movlw	1
  7405  0632                     u2625:	
  7406  0632  36A1               	lsrf	___wmul@multiplier+1,f
  7407  0633  0CA0               	rrf	___wmul@multiplier,f
  7408  0634  0B89               	decfsz	9,f
  7409  0635  2E32               	goto	u2625
  7410  0636  0820               	movf	___wmul@multiplier,w
  7411  0637  0421               	iorwf	___wmul@multiplier+1,w
  7412  0638  1D03               	btfss	3,2
  7413  0639  2E26               	goto	l3101
  7414  063A  0825               	movf	___wmul@product+1,w
  7415  063B  00A1               	movwf	?___wmul+1
  7416  063C  0824               	movf	___wmul@product,w
  7417  063D  00A0               	movwf	?___wmul
  7418  063E  0008               	return
  7419  063F                     __end_of___wmul:	
  7420                           
  7421                           	psect	text20
  7422  0717                     __ptext20:	
  7423 ;; *************** function _LED7SegPinWrite *****************
  7424 ;; Defined at:
  7425 ;;		line 48 in file "LED7Seg.c"
  7426 ;; Parameters:    Size  Location     Type
  7427 ;;  val             1    wreg     unsigned char 
  7428 ;; Auto vars:     Size  Location     Type
  7429 ;;  val             1    0[BANK0 ] unsigned char 
  7430 ;; Return value:  Size  Location     Type
  7431 ;;                  1    wreg      void 
  7432 ;; Registers used:
  7433 ;;		wreg, status,2, status,0
  7434 ;; Tracked objects:
  7435 ;;		On entry : 0/0
  7436 ;;		On exit  : 0/0
  7437 ;;		Unchanged: 0/0
  7438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7442 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7443 ;;Total ram usage:        1 bytes
  7444 ;; Hardware stack levels used:    1
  7445 ;; Hardware stack levels required when called:    3
  7446 ;; This function calls:
  7447 ;;		Nothing
  7448 ;; This function is called by:
  7449 ;;		_LED7SegShiftOutPulseClock
  7450 ;; This function uses a non-reentrant model
  7451 ;;
  7452                           
  7453                           
  7454                           ;psect for function _LED7SegPinWrite
  7455  0717                     _LED7SegPinWrite:	
  7456                           
  7457                           ;incstack = 0
  7458                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
  7459                           ;LED7SegPinWrite@val stored from wreg
  7460  0717  0020               	movlb	0	; select bank0
  7461  0718  00A0               	movwf	LED7SegPinWrite@val
  7462                           
  7463                           ;LED7Seg.c: 50: if (val){
  7464  0719  0820               	movf	LED7SegPinWrite@val,w
  7465  071A  1903               	btfsc	3,2
  7466  071B  2F1E               	goto	l602
  7467                           
  7468                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
  7469  071C  1798               	bsf	24,7	;volatile
  7470                           
  7471                           ;LED7Seg.c: 53: } else {
  7472  071D  0008               	return
  7473  071E                     l602:	
  7474                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
  7475                           
  7476  071E  1398               	bcf	24,7	;volatile
  7477  071F  0008               	return
  7478  0720                     __end_of_LED7SegPinWrite:	
  7479                           
  7480                           	psect	text21
  7481  06B6                     __ptext21:	
  7482 ;; *************** function _ADCC_GetSingleConversion *****************
  7483 ;; Defined at:
  7484 ;;		line 132 in file "mcc_generated_files/adcc.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  channel         1    wreg     enum E14259
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  channel         1    3[BANK0 ] enum E14259
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  2    0[BANK0 ] unsigned int 
  7491 ;; Registers used:
  7492 ;;		wreg
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7498 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7499 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7501 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;Total ram usage:        4 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:    3
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_main
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           
  7513                           ;psect for function _ADCC_GetSingleConversion
  7514  06B6                     _ADCC_GetSingleConversion:	
  7515                           
  7516                           ;incstack = 0
  7517                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  7518                           ;ADCC_GetSingleConversion@channel stored from wreg
  7519  06B6  0020               	movlb	0	; select bank0
  7520  06B7  00A3               	movwf	ADCC_GetSingleConversion@channel
  7521                           
  7522                           ;adcc.c: 135: ADPCH = channel;
  7523  06B8  0823               	movf	ADCC_GetSingleConversion@channel,w
  7524  06B9  0021               	movlb	1	; select bank1
  7525  06BA  009E               	movwf	30	;volatile
  7526                           
  7527                           ;adcc.c: 138: ADCON0bits.ADON = 1;
  7528  06BB  1793               	bsf	19,7	;volatile
  7529                           
  7530                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
  7531  06BC  1313               	bcf	19,6	;volatile
  7532                           
  7533                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
  7534  06BD  1413               	bsf	19,0	;volatile
  7535                           
  7536                           ;adcc.c: 147: __nop();
  7537  06BE  0000               	nop
  7538  06BF                     l163:	
  7539                           ;adcc.c: 151: {
  7540                           
  7541                           ;adcc.c: 150: while (ADCON0bits.ADGO)
  7542                           
  7543  06BF  0021               	movlb	1	; select bank1
  7544  06C0  1813               	btfsc	19,0	;volatile
  7545  06C1  2EBF               	goto	l163
  7546                           
  7547                           ;adcc.c: 152: }
  7548                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7549  06C2  080D               	movf	13,w	;volatile
  7550  06C3  0020               	movlb	0	; select bank0
  7551  06C4  00A1               	movwf	?_ADCC_GetSingleConversion+1
  7552  06C5  0021               	movlb	1	; select bank1
  7553  06C6  080C               	movf	12,w	;volatile
  7554  06C7  0020               	movlb	0	; select bank0
  7555  06C8  00A0               	movwf	?_ADCC_GetSingleConversion
  7556  06C9  0008               	return
  7557  06CA                     __end_of_ADCC_GetSingleConversion:	
  7558                           
  7559                           	psect	intentry
  7560  0004                     __pintentry:	
  7561 ;; *************** function _INTERRUPT_InterruptManager *****************
  7562 ;; Defined at:
  7563 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  7564 ;; Parameters:    Size  Location     Type
  7565 ;;		None
  7566 ;; Auto vars:     Size  Location     Type
  7567 ;;		None
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  1    wreg      void 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 0/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7581 ;;Total ram usage:        1 bytes
  7582 ;; Hardware stack levels used:    1
  7583 ;; Hardware stack levels required when called:    2
  7584 ;; This function calls:
  7585 ;;		_I2C1_BusCollisionISR
  7586 ;;		_I2C1_ISR
  7587 ;; This function is called by:
  7588 ;;		Interrupt level 1
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592  0004                     _INTERRUPT_InterruptManager:	
  7593                           
  7594                           ;incstack = 0
  7595  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7596                           
  7597                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7598  0005  3180               	pagesel	$
  7599  0006  0020               	movlb	0	; select bank0
  7600  0007  087F               	movf	127,w
  7601  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
  7602                           
  7603                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
  7604  0009  1F0B               	btfss	11,6	;volatile
  7605  000A  2813               	goto	i1l394
  7606  000B  002E               	movlb	14	; select bank14
  7607  000C  1899               	btfsc	25,1	;volatile
  7608  000D  1C8F               	btfss	15,1	;volatile
  7609  000E  2813               	goto	i1l394
  7610                           
  7611                           ;interrupt_manager.c: 55: {
  7612                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
  7613  000F  3187  2740  3180   	fcall	_I2C1_BusCollisionISR
  7614                           
  7615                           ;interrupt_manager.c: 57: }
  7616  0012  281B               	goto	i1l398
  7617  0013                     i1l394:	
  7618                           
  7619                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
  7620  0013  1F0B               	btfss	11,6	;volatile
  7621  0014  281B               	goto	i1l398
  7622  0015  002E               	movlb	14	; select bank14
  7623  0016  1819               	btfsc	25,0	;volatile
  7624  0017  1C0F               	btfss	15,0	;volatile
  7625  0018  281B               	goto	i1l398
  7626                           
  7627                           ;interrupt_manager.c: 59: {
  7628                           ;interrupt_manager.c: 60: I2C1_ISR();
  7629  0019  3181  217F         	fcall	_I2C1_ISR
  7630  001B                     i1l398:	
  7631                           ;interrupt_manager.c: 62: else
  7632                           ;interrupt_manager.c: 63: {
  7633                           
  7634                           ;interrupt_manager.c: 61: }
  7635                           
  7636  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
  7637  001C  0020               	movlb	0	; select bank0
  7638  001D  00FF               	movwf	127
  7639  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7640  001F  0009               	retfie
  7641  0020                     __end_of_INTERRUPT_InterruptManager:	
  7642                           
  7643                           	psect	text23
  7644  017F                     __ptext23:	
  7645 ;; *************** function _I2C1_ISR *****************
  7646 ;; Defined at:
  7647 ;;		line 233 in file "mcc_generated_files/i2c1.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;		None
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;		None
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  1    wreg      void 
  7654 ;; Registers used:
  7655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;Total ram usage:        4 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; Hardware stack levels required when called:    1
  7668 ;; This function calls:
  7669 ;;		_I2C1_FunctionComplete
  7670 ;;		_I2C1_Stop
  7671 ;; This function is called by:
  7672 ;;		_INTERRUPT_InterruptManager
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           
  7677                           ;psect for function _I2C1_ISR
  7678  017F                     _I2C1_ISR:	
  7679                           
  7680                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
  7681                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
  7682                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
  7683                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
  7684                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
  7685                           
  7686                           ;incstack = 0
  7687                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7688  017F  002E               	movlb	14	; select bank14
  7689  0180  100F               	bcf	15,0	;volatile
  7690                           
  7691                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
  7692  0181  0023               	movlb	3	; select bank3
  7693  0182  1F90               	btfss	16,7	;volatile
  7694  0183  2AAA               	goto	i1l2487
  7695                           
  7696                           ;i2c1.c: 246: {
  7697                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
  7698  0184  1390               	bcf	16,7	;volatile
  7699                           
  7700                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
  7701  0185  01F4               	clrf	_i2c1_state
  7702                           
  7703                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
  7704  0186  0871               	movf	_p_i2c1_current,w
  7705  0187  3E02               	addlw	2
  7706  0188  0086               	movwf	6
  7707  0189  0187               	clrf	7
  7708  018A  0801               	movf	1,w
  7709  018B  0086               	movwf	6
  7710  018C  0187               	clrf	7
  7711  018D  0181               	clrf	1
  7712  018E  0A81               	incf	1,f
  7713                           
  7714                           ;i2c1.c: 253: p_i2c1_current = (0);
  7715  018F  01F1               	clrf	_p_i2c1_current
  7716                           
  7717                           ;i2c1.c: 255: return;
  7718  0190  0008               	return
  7719  0191                     i1l292:	
  7720                           ;i2c1.c: 260: {
  7721                           ;i2c1.c: 261: case S_MASTER_IDLE:
  7722                           
  7723                           ;i2c1.c: 256: }
  7724                           ;i2c1.c: 259: switch(i2c1_state)
  7725                           
  7726                           
  7727                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
  7728  0191  0020               	movlb	0	; select bank0
  7729  0192  18E0               	btfsc	_i2c1_object+2,1
  7730  0193  0008               	return
  7731                           
  7732                           ;i2c1.c: 264: {
  7733                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
  7734  0194  085F               	movf	low ((_i2c1_object| 0+1)),w
  7735  0195  00F9               	movwf	??_I2C1_ISR
  7736  0196  0879               	movf	??_I2C1_ISR,w
  7737  0197  00F1               	movwf	_p_i2c1_current
  7738                           
  7739                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
  7740  0198  085F               	movf	low ((_i2c1_object| 0+1)),w
  7741  0199  0086               	movwf	6
  7742  019A  0187               	clrf	7
  7743  019B  0801               	movf	1,w
  7744  019C  00F9               	movwf	??_I2C1_ISR
  7745  019D  0879               	movf	??_I2C1_ISR,w
  7746  019E  00F3               	movwf	_i2c1_trb_count
  7747                           
  7748                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
  7749  019F  085F               	movf	low ((_i2c1_object| 0+1)),w
  7750  01A0  0086               	movwf	6
  7751  01A1  0187               	clrf	7
  7752  01A2  3F41               	moviw [1]fsr1
  7753  01A3  00F2               	movwf	_p_i2c1_trb_current
  7754                           
  7755                           ;i2c1.c: 270: i2c1_object.pTrHead++;
  7756  01A4  3003               	movlw	3
  7757  01A5  00F9               	movwf	??_I2C1_ISR
  7758  01A6  0879               	movf	??_I2C1_ISR,w
  7759  01A7  07DF               	addwf	low ((_i2c1_object| 0+1)),f
  7760                           
  7761                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
  7762  01A8  085F               	movf	low ((_i2c1_object| 0+1)),w
  7763  01A9  3A70               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  7764  01AA  1D03               	skipz
  7765  01AB  29B0               	goto	i1l2375
  7766                           
  7767                           ;i2c1.c: 274: {
  7768                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
  7769  01AC  306D               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7770  01AD  00F9               	movwf	??_I2C1_ISR
  7771  01AE  0879               	movf	??_I2C1_ISR,w
  7772  01AF  00DF               	movwf	low ((_i2c1_object| 0+1))
  7773  01B0                     i1l2375:	
  7774                           
  7775                           ;i2c1.c: 277: }
  7776                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
  7777  01B0  1060               	bcf	_i2c1_object+2,0
  7778                           
  7779                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
  7780  01B1  085F               	movf	low ((_i2c1_object| 0+1)),w
  7781  01B2  065E               	xorwf	_i2c1_object,w
  7782  01B3  1903               	btfsc	3,2
  7783                           
  7784                           ;i2c1.c: 285: {
  7785                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
  7786  01B4  14E0               	bsf	_i2c1_object+2,1
  7787                           
  7788                           ;i2c1.c: 288: }
  7789                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
  7790  01B5  0023               	movlb	3	; select bank3
  7791  01B6  1411               	bsf	17,0	;volatile
  7792                           
  7793                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
  7794  01B7  3002               	movlw	2
  7795  01B8  00F9               	movwf	??_I2C1_ISR
  7796  01B9  0879               	movf	??_I2C1_ISR,w
  7797  01BA  00F4               	movwf	_i2c1_state
  7798                           
  7799                           ;i2c1.c: 295: }
  7800                           ;i2c1.c: 297: break;
  7801  01BB  0008               	return
  7802  01BC                     i1l297:	
  7803                           ;i2c1.c: 299: case S_MASTER_RESTART:
  7804                           
  7805                           
  7806                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
  7807  01BC  0023               	movlb	3	; select bank3
  7808  01BD  1491               	bsf	17,1	;volatile
  7809                           
  7810                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
  7811  01BE  3002               	movlw	2
  7812  01BF  00F9               	movwf	??_I2C1_ISR
  7813  01C0  0879               	movf	??_I2C1_ISR,w
  7814  01C1  00F4               	movwf	_i2c1_state
  7815                           
  7816                           ;i2c1.c: 309: break;
  7817  01C2  0008               	return
  7818  01C3                     i1l298:	
  7819                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
  7820                           
  7821                           
  7822                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
  7823  01C3  0023               	movlb	3	; select bank3
  7824  01C4  1F11               	btfss	17,6	;volatile
  7825  01C5  29CF               	goto	i1l2387
  7826                           
  7827                           ;i2c1.c: 314: {
  7828                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
  7829  01C6  3001               	movlw	1
  7830  01C7  00F9               	movwf	??_I2C1_ISR
  7831  01C8  0879               	movf	??_I2C1_ISR,w
  7832  01C9  0020               	movlb	0	; select bank0
  7833  01CA  07E2               	addwf	_i2c1_object+4,f
  7834                           
  7835                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  7836  01CB  3004               	movlw	4
  7837  01CC  3186  2689         	fcall	_I2C1_Stop
  7838                           
  7839                           ;i2c1.c: 317: }
  7840  01CE  0008               	return
  7841  01CF                     i1l2387:	
  7842                           
  7843                           ;i2c1.c: 318: else
  7844                           ;i2c1.c: 319: {
  7845                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
  7846  01CF  0876               	movf	I2C1_ISR@i2c_address+1,w
  7847  01D0  00FA               	movwf	??_I2C1_ISR+1
  7848  01D1  0875               	movf	I2C1_ISR@i2c_address,w
  7849  01D2  00F9               	movwf	??_I2C1_ISR
  7850  01D3  36FA               	lsrf	??_I2C1_ISR+1,f
  7851  01D4  0CF9               	rrf	??_I2C1_ISR,f
  7852  01D5  0879               	movf	??_I2C1_ISR,w
  7853  01D6  0023               	movlb	3	; select bank3
  7854  01D7  008C               	movwf	12	;volatile
  7855                           
  7856                           ;i2c1.c: 324: if(i2c_address & 0x01)
  7857  01D8  1C75               	btfss	I2C1_ISR@i2c_address,0
  7858  01D9  29DF               	goto	i1l2393
  7859                           
  7860                           ;i2c1.c: 325: {
  7861                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
  7862  01DA  300B               	movlw	11
  7863  01DB  00F9               	movwf	??_I2C1_ISR
  7864  01DC  0879               	movf	??_I2C1_ISR,w
  7865  01DD  00F4               	movwf	_i2c1_state
  7866                           
  7867                           ;i2c1.c: 329: }
  7868  01DE  0008               	return
  7869  01DF                     i1l2393:	
  7870                           
  7871                           ;i2c1.c: 330: else
  7872                           ;i2c1.c: 331: {
  7873                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
  7874  01DF  3003               	movlw	3
  7875  01E0  00F9               	movwf	??_I2C1_ISR
  7876  01E1  0879               	movf	??_I2C1_ISR,w
  7877  01E2  00F4               	movwf	_i2c1_state
  7878                           
  7879                           ;i2c1.c: 334: }
  7880                           ;i2c1.c: 335: }
  7881                           ;i2c1.c: 337: break;
  7882  01E3  0008               	return
  7883  01E4                     i1l303:	
  7884                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
  7885                           
  7886                           
  7887                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
  7888  01E4  0023               	movlb	3	; select bank3
  7889  01E5  1F11               	btfss	17,6	;volatile
  7890  01E6  29F0               	goto	i1l304
  7891                           
  7892                           ;i2c1.c: 342: {
  7893                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
  7894  01E7  3001               	movlw	1
  7895  01E8  00F9               	movwf	??_I2C1_ISR
  7896  01E9  0879               	movf	??_I2C1_ISR,w
  7897  01EA  0020               	movlb	0	; select bank0
  7898  01EB  07E2               	addwf	_i2c1_object+4,f
  7899                           
  7900                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  7901  01EC  3004               	movlw	4
  7902  01ED  3186  2689         	fcall	_I2C1_Stop
  7903                           
  7904                           ;i2c1.c: 345: }
  7905  01EF  0008               	return
  7906  01F0                     i1l304:	
  7907                           
  7908                           ;i2c1.c: 346: else
  7909                           ;i2c1.c: 347: {
  7910                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
  7911  01F0  1491               	bsf	17,1	;volatile
  7912                           
  7913                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
  7914  01F1  0876               	movf	I2C1_ISR@i2c_address+1,w
  7915  01F2  00FA               	movwf	??_I2C1_ISR+1
  7916  01F3  0875               	movf	I2C1_ISR@i2c_address,w
  7917  01F4  00F9               	movwf	??_I2C1_ISR
  7918  01F5  087A               	movf	??_I2C1_ISR+1,w
  7919  01F6  00F9               	movwf	??_I2C1_ISR
  7920  01F7  01FA               	clrf	??_I2C1_ISR+1
  7921  01F8  3006               	movlw	6
  7922  01F9  0579               	andwf	??_I2C1_ISR,w
  7923  01FA  00FB               	movwf	??_I2C1_ISR+2
  7924  01FB  3000               	movlw	0
  7925  01FC  057A               	andwf	??_I2C1_ISR+1,w
  7926  01FD  00FC               	movwf	??_I2C1_ISR+3
  7927  01FE  30F0               	movlw	240
  7928  01FF  047B               	iorwf	??_I2C1_ISR+2,w
  7929  0200  00F5               	movwf	I2C1_ISR@i2c_address
  7930  0201  3000               	movlw	0
  7931  0202  047C               	iorwf	??_I2C1_ISR+3,w
  7932  0203  00F6               	movwf	I2C1_ISR@i2c_address+1
  7933                           
  7934                           ;i2c1.c: 357: i2c_address |= 0x0001;
  7935  0204  1475               	bsf	I2C1_ISR@i2c_address,0
  7936                           
  7937                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
  7938  0205  0020               	movlb	0	; select bank0
  7939  0206  01EB               	clrf	I2C1_ISR@i2c_10bit_address_restart
  7940  0207  0AEB               	incf	I2C1_ISR@i2c_10bit_address_restart,f
  7941                           
  7942                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
  7943  0208  3002               	movlw	2
  7944  0209  00F9               	movwf	??_I2C1_ISR
  7945  020A  0879               	movf	??_I2C1_ISR,w
  7946  020B  00F4               	movwf	_i2c1_state
  7947                           
  7948                           ;i2c1.c: 364: }
  7949                           ;i2c1.c: 366: break;
  7950  020C  0008               	return
  7951  020D                     i1l2407:	
  7952                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
  7953                           
  7954                           
  7955                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
  7956  020D  0020               	movlb	0	; select bank0
  7957  020E  036B               	decf	I2C1_ISR@i2c_10bit_address_restart,w
  7958  020F  1903               	btfsc	3,2
  7959  0210  2A22               	goto	i1l2427
  7960                           
  7961                           ;i2c1.c: 382: {
  7962                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
  7963  0211  0872               	movf	_p_i2c1_trb_current,w
  7964  0212  0086               	movwf	6
  7965  0213  0187               	clrf	7
  7966  0214  3F40               	moviw [0]fsr1
  7967  0215  00F5               	movwf	I2C1_ISR@i2c_address
  7968  0216  3F41               	moviw [1]fsr1
  7969  0217  00F6               	movwf	I2C1_ISR@i2c_address+1
  7970                           
  7971                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
  7972  0218  0872               	movf	_p_i2c1_trb_current,w
  7973  0219  0086               	movwf	6
  7974  021A  0187               	clrf	7
  7975  021B  3F43               	moviw [3]fsr1
  7976  021C  00F0               	movwf	I2C1_ISR@pi2c_buf_ptr
  7977                           
  7978                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
  7979  021D  0872               	movf	_p_i2c1_trb_current,w
  7980  021E  0086               	movwf	6
  7981  021F  0187               	clrf	7
  7982  0220  3F42               	moviw [2]fsr1
  7983  0221  00EC               	movwf	I2C1_ISR@i2c_bytes_left
  7984  0222                     i1l2427:	
  7985                           ;i2c1.c: 407: }
  7986                           ;i2c1.c: 408: }
  7987                           
  7988                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
  7989                           
  7990                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
  7991                           
  7992                           ;i2c1.c: 400: else
  7993                           ;i2c1.c: 401: {
  7994                           ;i2c1.c: 403: SSP1BUF = i2c_address;
  7995                           
  7996                           ;i2c1.c: 399: }
  7997                           
  7998                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
  7999                           
  8000                           ;i2c1.c: 393: {
  8001                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
  8002                           
  8003                           ;i2c1.c: 391: {
  8004                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
  8005                           
  8006                           ;i2c1.c: 387: }
  8007                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
  8008                           
  8009                           
  8010                           ;i2c1.c: 409: else
  8011                           ;i2c1.c: 410: {
  8012                           ;i2c1.c: 412: SSP1BUF = i2c_address;
  8013  0222  0875               	movf	I2C1_ISR@i2c_address,w
  8014  0223  0023               	movlb	3	; select bank3
  8015  0224  008C               	movwf	12	;volatile
  8016                           
  8017                           ;i2c1.c: 413: if(i2c_address & 0x01)
  8018  0225  1C75               	btfss	I2C1_ISR@i2c_address,0
  8019  0226  2A2C               	goto	i1l2433
  8020                           
  8021                           ;i2c1.c: 414: {
  8022                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
  8023  0227  3005               	movlw	5
  8024  0228  00F9               	movwf	??_I2C1_ISR
  8025  0229  0879               	movf	??_I2C1_ISR,w
  8026  022A  00F4               	movwf	_i2c1_state
  8027                           
  8028                           ;i2c1.c: 417: }
  8029  022B  0008               	return
  8030  022C                     i1l2433:	
  8031                           
  8032                           ;i2c1.c: 418: else
  8033                           ;i2c1.c: 419: {
  8034                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
  8035  022C  3003               	movlw	3
  8036  022D  00F9               	movwf	??_I2C1_ISR
  8037  022E  0879               	movf	??_I2C1_ISR,w
  8038  022F  00F4               	movwf	_i2c1_state
  8039                           
  8040                           ;i2c1.c: 422: }
  8041                           ;i2c1.c: 423: }
  8042                           ;i2c1.c: 424: break;
  8043  0230  0008               	return
  8044  0231                     i1l314:	
  8045                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
  8046                           
  8047                           
  8048                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
  8049  0231  0023               	movlb	3	; select bank3
  8050  0232  1F11               	btfss	17,6	;volatile
  8051  0233  2A3F               	goto	i1l2441
  8052                           
  8053                           ;i2c1.c: 430: {
  8054                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
  8055  0234  3001               	movlw	1
  8056  0235  00F9               	movwf	??_I2C1_ISR
  8057  0236  0879               	movf	??_I2C1_ISR,w
  8058  0237  0020               	movlb	0	; select bank0
  8059  0238  07E2               	addwf	_i2c1_object+4,f
  8060                           
  8061                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
  8062  0239  0023               	movlb	3	; select bank3
  8063  023A  1311               	bcf	17,6	;volatile
  8064                           
  8065                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
  8066  023B  3005               	movlw	5
  8067  023C  3186  2689         	fcall	_I2C1_Stop
  8068                           
  8069                           ;i2c1.c: 440: }
  8070  023E  0008               	return
  8071  023F                     i1l2441:	
  8072                           
  8073                           ;i2c1.c: 441: else
  8074                           ;i2c1.c: 442: {
  8075                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
  8076  023F  3001               	movlw	1
  8077  0240  0020               	movlb	0	; select bank0
  8078  0241  02EC               	subwf	I2C1_ISR@i2c_bytes_left,f
  8079  0242  0A6C               	incf	I2C1_ISR@i2c_bytes_left,w
  8080  0243  1D03               	btfss	3,2
  8081  0244  2A58               	goto	i1l2449
  8082                           
  8083                           ;i2c1.c: 445: {
  8084                           ;i2c1.c: 449: p_i2c1_trb_current++;
  8085  0245  3004               	movlw	4
  8086  0246  00F9               	movwf	??_I2C1_ISR
  8087  0247  0879               	movf	??_I2C1_ISR,w
  8088  0248  07F2               	addwf	_p_i2c1_trb_current,f
  8089                           
  8090                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
  8091  0249  3001               	movlw	1
  8092  024A  02F3               	subwf	_i2c1_trb_count,f
  8093  024B  1D03               	btfss	3,2
  8094  024C  2A51               	goto	i1l318
  8095                           
  8096                           ;i2c1.c: 453: {
  8097                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  8098  024D  3000               	movlw	0
  8099  024E  3186  2689         	fcall	_I2C1_Stop
  8100                           
  8101                           ;i2c1.c: 455: }
  8102  0250  0008               	return
  8103  0251                     i1l318:	
  8104                           
  8105                           ;i2c1.c: 456: else
  8106                           ;i2c1.c: 457: {
  8107                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
  8108  0251  0023               	movlb	3	; select bank3
  8109  0252  1491               	bsf	17,1	;volatile
  8110                           
  8111                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
  8112  0253  3002               	movlw	2
  8113  0254  00F9               	movwf	??_I2C1_ISR
  8114  0255  0879               	movf	??_I2C1_ISR,w
  8115  0256  00F4               	movwf	_i2c1_state
  8116                           
  8117                           ;i2c1.c: 469: }
  8118                           ;i2c1.c: 470: }
  8119  0257  0008               	return
  8120  0258                     i1l2449:	
  8121                           
  8122                           ;i2c1.c: 471: else
  8123                           ;i2c1.c: 472: {
  8124                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
  8125  0258  0870               	movf	I2C1_ISR@pi2c_buf_ptr,w
  8126  0259  0086               	movwf	6
  8127  025A  0187               	clrf	7
  8128  025B  0801               	movf	1,w
  8129  025C  0023               	movlb	3	; select bank3
  8130  025D  008C               	movwf	12	;volatile
  8131  025E  3001               	movlw	1
  8132  025F  00F9               	movwf	??_I2C1_ISR
  8133  0260  0879               	movf	??_I2C1_ISR,w
  8134  0261  07F0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  8135                           
  8136                           ;i2c1.c: 475: }
  8137                           ;i2c1.c: 476: }
  8138                           ;i2c1.c: 477: break;
  8139  0262  0008               	return
  8140  0263                     i1l321:	
  8141                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
  8142                           
  8143                           
  8144                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
  8145  0263  0023               	movlb	3	; select bank3
  8146  0264  1F11               	btfss	17,6	;volatile
  8147  0265  2A71               	goto	i1l322
  8148                           
  8149                           ;i2c1.c: 483: {
  8150                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
  8151  0266  3001               	movlw	1
  8152  0267  00F9               	movwf	??_I2C1_ISR
  8153  0268  0879               	movf	??_I2C1_ISR,w
  8154  0269  0020               	movlb	0	; select bank0
  8155  026A  07E2               	addwf	_i2c1_object+4,f
  8156                           
  8157                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
  8158  026B  3004               	movlw	4
  8159  026C  3186  2689         	fcall	_I2C1_Stop
  8160                           
  8161                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
  8162  026E  0023               	movlb	3	; select bank3
  8163  026F  1311               	bcf	17,6	;volatile
  8164                           
  8165                           ;i2c1.c: 493: }
  8166  0270  0008               	return
  8167  0271                     i1l322:	
  8168                           
  8169                           ;i2c1.c: 494: else
  8170                           ;i2c1.c: 495: {
  8171                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
  8172  0271  1591               	bsf	17,3	;volatile
  8173                           
  8174                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
  8175  0272  3008               	movlw	8
  8176  0273  00F9               	movwf	??_I2C1_ISR
  8177  0274  0879               	movf	??_I2C1_ISR,w
  8178  0275  00F4               	movwf	_i2c1_state
  8179                           
  8180                           ;i2c1.c: 498: }
  8181                           ;i2c1.c: 499: break;
  8182  0276  0008               	return
  8183  0277                     i1l2461:	
  8184                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
  8185                           
  8186                           
  8187                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
  8188  0277  3008               	movlw	8
  8189  0278  00F9               	movwf	??_I2C1_ISR
  8190  0279  0879               	movf	??_I2C1_ISR,w
  8191  027A  00F4               	movwf	_i2c1_state
  8192                           
  8193                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
  8194  027B  0023               	movlb	3	; select bank3
  8195  027C  1591               	bsf	17,3	;volatile
  8196                           
  8197                           ;i2c1.c: 511: break;
  8198  027D  0008               	return
  8199  027E                     i1l2465:	
  8200                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
  8201                           
  8202                           
  8203                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
  8204  027E  0023               	movlb	3	; select bank3
  8205  027F  080C               	movf	12,w	;volatile
  8206  0280  00F9               	movwf	??_I2C1_ISR
  8207  0281  0870               	movf	I2C1_ISR@pi2c_buf_ptr,w
  8208  0282  0086               	movwf	6
  8209  0283  0187               	clrf	7
  8210  0284  0879               	movf	??_I2C1_ISR,w
  8211  0285  0081               	movwf	1
  8212  0286  3001               	movlw	1
  8213  0287  00F9               	movwf	??_I2C1_ISR
  8214  0288  0879               	movf	??_I2C1_ISR,w
  8215  0289  07F0               	addwf	I2C1_ISR@pi2c_buf_ptr,f
  8216                           
  8217                           ;i2c1.c: 519: if(--i2c_bytes_left)
  8218  028A  3001               	movlw	1
  8219  028B  0020               	movlb	0	; select bank0
  8220  028C  02EC               	subwf	I2C1_ISR@i2c_bytes_left,f
  8221  028D  1903               	btfsc	3,2
  8222  028E  2A96               	goto	i1l326
  8223                           
  8224                           ;i2c1.c: 520: {
  8225                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
  8226  028F  0023               	movlb	3	; select bank3
  8227  0290  1291               	bcf	17,5	;volatile
  8228                           
  8229                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
  8230  0291  3006               	movlw	6
  8231  0292  00F9               	movwf	??_I2C1_ISR
  8232  0293  0879               	movf	??_I2C1_ISR,w
  8233  0294  00F4               	movwf	_i2c1_state
  8234                           
  8235                           ;i2c1.c: 530: }
  8236  0295  2A9A               	goto	i1l2477
  8237  0296                     i1l326:	
  8238                           
  8239                           ;i2c1.c: 531: else
  8240                           ;i2c1.c: 532: {
  8241                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
  8242  0296  0023               	movlb	3	; select bank3
  8243  0297  1691               	bsf	17,5	;volatile
  8244                           
  8245                           ;i2c1.c: 538: I2C1_FunctionComplete();
  8246  0298  3186  26DA         	fcall	_I2C1_FunctionComplete
  8247  029A                     i1l2477:	
  8248                           
  8249                           ;i2c1.c: 539: }
  8250                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
  8251  029A  0023               	movlb	3	; select bank3
  8252  029B  1611               	bsf	17,4	;volatile
  8253                           
  8254                           ;i2c1.c: 543: break;
  8255  029C  0008               	return
  8256  029D                     i1l2479:	
  8257                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
  8258                           
  8259                           
  8260                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
  8261                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
  8262  029D  3000               	movlw	0
  8263  029E  3186  2689         	fcall	_I2C1_Stop
  8264                           
  8265                           ;i2c1.c: 550: break;
  8266  02A0  0008               	return
  8267  02A1                     i1l2481:	
  8268                           ;i2c1.c: 552: default:
  8269                           
  8270                           
  8271                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
  8272  02A1  3001               	movlw	1
  8273  02A2  00F9               	movwf	??_I2C1_ISR
  8274  02A3  0879               	movf	??_I2C1_ISR,w
  8275  02A4  0020               	movlb	0	; select bank0
  8276  02A5  07E2               	addwf	_i2c1_object+4,f
  8277                           
  8278                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
  8279  02A6  3006               	movlw	6
  8280  02A7  3186  2689         	fcall	_I2C1_Stop
  8281                           
  8282                           ;i2c1.c: 560: }
  8283                           
  8284                           ;i2c1.c: 558: break;
  8285  02A9  0008               	return
  8286  02AA                     i1l2487:	
  8287  02AA  0874               	movf	_i2c1_state,w
  8288                           
  8289                           ; Switch size 1, requested type "space"
  8290                           ; Number of cases is 11, Range of values is 0 to 11
  8291                           ; switch strategies available:
  8292                           ; Name         Instructions Cycles
  8293                           ; direct_byte           30     6 (fixed)
  8294                           ; simple_byte           34    18 (average)
  8295                           ; jumptable            260     6 (fixed)
  8296                           ;	Chosen strategy is direct_byte
  8297  02AB  0084               	movwf	4
  8298  02AC  300C               	movlw	12
  8299  02AD  0204               	subwf	4,w
  8300  02AE  1803               	skipnc
  8301  02AF  2AA1               	goto	i1l2481
  8302  02B0  3186               	movlp	high i1S3439
  8303  02B1  3504               	lslf	4,w
  8304  02B2  3E5A               	addlw	low i1S3439
  8305  02B3  0082               	movwf	2
  8306  02B4  0008               	return
  8307  02B5                     __end_of_I2C1_ISR:	
  8308                           
  8309                           	psect	swtext1
  8310  065A                     __pswtext1:	
  8311  065A                     i1S3439:	
  8312  065A  3181  2991         	ljmp	i1l292
  8313  065C  3181  29BC         	ljmp	i1l297
  8314  065E  3182  2A0D         	ljmp	i1l2407
  8315  0660  3182  2A31         	ljmp	i1l314
  8316  0662  3182  2A9D         	ljmp	i1l2479
  8317  0664  3182  2A63         	ljmp	i1l321
  8318  0666  3182  2A77         	ljmp	i1l2461
  8319  0668  3182  2A9D         	ljmp	i1l2479
  8320  066A  3182  2A7E         	ljmp	i1l2465
  8321  066C  3182  2AA1         	ljmp	i1l2481
  8322  066E  3181  29C3         	ljmp	i1l298
  8323  0670  3181  29E4         	ljmp	i1l303
  8324                           
  8325                           	psect	text24
  8326  0689                     __ptext24:	
  8327 ;; *************** function _I2C1_Stop *****************
  8328 ;; Defined at:
  8329 ;;		line 581 in file "mcc_generated_files/i2c1.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  completion_c    1    wreg     enum E14260
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;  completion_c    1    1[COMMON] enum E14260
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  1    wreg      void 
  8336 ;; Registers used:
  8337 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8345 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8347 ;;Total ram usage:        2 bytes
  8348 ;; Hardware stack levels used:    1
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_I2C1_ISR
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           
  8357                           ;psect for function _I2C1_Stop
  8358  0689                     _I2C1_Stop:	
  8359                           
  8360                           ;incstack = 0
  8361                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
  8362                           ;I2C1_Stop@completion_code stored from wreg
  8363  0689  00F8               	movwf	I2C1_Stop@completion_code
  8364                           
  8365                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
  8366  068A  0023               	movlb	3	; select bank3
  8367  068B  1511               	bsf	17,2	;volatile
  8368                           
  8369                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
  8370  068C  0871               	movf	_p_i2c1_current,w
  8371  068D  3E02               	addlw	2
  8372  068E  0086               	movwf	6
  8373  068F  0187               	clrf	7
  8374  0690  0801               	movf	1,w
  8375  0691  1903               	btfsc	3,2
  8376  0692  2E9E               	goto	i1l2249
  8377                           
  8378                           ;i2c1.c: 588: {
  8379                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
  8380  0693  0878               	movf	I2C1_Stop@completion_code,w
  8381  0694  00F7               	movwf	??_I2C1_Stop
  8382  0695  0871               	movf	_p_i2c1_current,w
  8383  0696  3E02               	addlw	2
  8384  0697  0086               	movwf	6
  8385  0698  0187               	clrf	7
  8386  0699  0801               	movf	1,w
  8387  069A  0086               	movwf	6
  8388  069B  0187               	clrf	7
  8389  069C  0877               	movf	??_I2C1_Stop,w
  8390  069D  0081               	movwf	1
  8391  069E                     i1l2249:	
  8392                           
  8393                           ;i2c1.c: 591: }
  8394                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
  8395  069E  01F4               	clrf	_i2c1_state
  8396  069F  0008               	return
  8397  06A0                     __end_of_I2C1_Stop:	
  8398                           
  8399                           	psect	text25
  8400  06DA                     __ptext25:	
  8401 ;; *************** function _I2C1_FunctionComplete *****************
  8402 ;; Defined at:
  8403 ;;		line 563 in file "mcc_generated_files/i2c1.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;		None
  8406 ;; Auto vars:     Size  Location     Type
  8407 ;;		None
  8408 ;; Return value:  Size  Location     Type
  8409 ;;                  1    wreg      void 
  8410 ;; Registers used:
  8411 ;;		wreg, status,2, status,0
  8412 ;; Tracked objects:
  8413 ;;		On entry : 0/0
  8414 ;;		On exit  : 0/0
  8415 ;;		Unchanged: 0/0
  8416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;Total ram usage:        1 bytes
  8422 ;; Hardware stack levels used:    1
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_I2C1_ISR
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _I2C1_FunctionComplete
  8432  06DA                     _I2C1_FunctionComplete:	
  8433                           
  8434                           ;i2c1.c: 567: p_i2c1_trb_current++;
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
  8438  06DA  3004               	movlw	4
  8439  06DB  00F7               	movwf	??_I2C1_FunctionComplete
  8440  06DC  0877               	movf	??_I2C1_FunctionComplete,w
  8441  06DD  07F2               	addwf	_p_i2c1_trb_current,f
  8442                           
  8443                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
  8444  06DE  3001               	movlw	1
  8445  06DF  02F3               	subwf	_i2c1_trb_count,f
  8446  06E0  1D03               	btfss	3,2
  8447  06E1  2EE7               	goto	i1l333
  8448                           
  8449                           ;i2c1.c: 571: {
  8450                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
  8451  06E2  3004               	movlw	4
  8452  06E3  00F7               	movwf	??_I2C1_FunctionComplete
  8453  06E4  0877               	movf	??_I2C1_FunctionComplete,w
  8454  06E5  00F4               	movwf	_i2c1_state
  8455                           
  8456                           ;i2c1.c: 573: }
  8457  06E6  0008               	return
  8458  06E7                     i1l333:	
  8459                           
  8460                           ;i2c1.c: 574: else
  8461                           ;i2c1.c: 575: {
  8462                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
  8463  06E7  01F4               	clrf	_i2c1_state
  8464  06E8  0AF4               	incf	_i2c1_state,f
  8465  06E9  0008               	return
  8466  06EA                     __end_of_I2C1_FunctionComplete:	
  8467                           
  8468                           	psect	text26
  8469  0740                     __ptext26:	
  8470 ;; *************** function _I2C1_BusCollisionISR *****************
  8471 ;; Defined at:
  8472 ;;		line 728 in file "mcc_generated_files/i2c1.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		None
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8490 ;;Total ram usage:        0 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		_INTERRUPT_InterruptManager
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _I2C1_BusCollisionISR
  8501  0740                     _I2C1_BusCollisionISR:	
  8502                           
  8503                           ;incstack = 0
  8504                           ; Regs used in _I2C1_BusCollisionISR: []
  8505  0740  0008               	return
  8506  0741                     __end_of_I2C1_BusCollisionISR:	
  8507  007E                     btemp	set	126	;btemp
  8508  007E                     int$flags	set	126
  8509  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    36
    Data        36
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     62      80
    BANK1            80      0      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S374$pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 8
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), byteFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), NULL(NULL[0]), 

    S397$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    S397$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK0[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->___fttol
    _writeDAC528->_putByte
    _initDAC528->_putByte
    _blinkyLoop->_delay
    ___fttol->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED7SegDisplayValueByDigit->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0   10812
                                             44 BANK0     18    18      0
           _ADCC_GetSingleConversion
         _LED7SegDisplayValueByDigit
                       _LED7SegSetup
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                         _blinkyLoop
                              _delay
                         _initDAC528
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _writeDAC528                                          5     2      3     477
                                              7 BANK0      5     2      3
                            _putByte
 ---------------------------------------------------------------------------------
 (1) _initDAC528                                           1     1      0     303
                                              7 BANK0      1     1      0
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _putByte                                              7     5      2     303
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _blinkyLoop                                           7     5      2    1872
                                             17 BANK0      7     5      2
                             ___wmul
                              _delay
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     464
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2124
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             6     3      3    1829
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1632
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegDisplayValueByDigit                           6     2      4    1872
                                             20 BANK0      6     2      4
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (2) _LED7SegShiftOutPulseClock                            3     3      0    1408
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegPulseClock                                    0     0      0    1247
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1247
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _LED7SegDisplayValueByDigit
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
   _LED7SegSetup
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _blinkyLoop
     ___wmul
     _delay
       ___wmul
   _delay
     ___wmul
   _initDAC528
     _putByte
   _writeDAC528
     _putByte

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      99      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      99      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 19 16:26:31 2018

                                    _b 0063                                      _c 00C9  
                                    _d 00C4                                      _e 00C7  
                                    pc 0002                            __CFG_CP$OFF 0000  
           __size_of_LED7SegPulseClock 000B             MYI2C_Write2LEDBytes@F14471 00B4  
                  ___wmul@multiplicand 0022                                    l163 06BF  
                                  l602 071E                                    l448 04E2  
                                  l664 057A                                    l757 062C  
                                  l925 042B                                    l926 0433  
                                  l918 0418                                    _GIE 005F  
                         __CFG_CPD$OFF 0000                           __CFG_BORV$LO 0000  
                                  wreg 0009                           __CFG_LVP$OFF 0000  
                         __CFG_ZCD$OFF 0000                           ___ftdiv@cntr 0038  
                     __end_of_I2C1_ISR 02B5                           ___ftdiv@sign 003D  
                                 l1009 03CB                                   l3101 0626  
                                 l2301 0598                                   l2311 03F5  
                                 l2321 041D                                   l2313 03FF  
                                 l2323 0425                                   l2315 0404  
                                 l2307 03EE                                   l2611 05F0  
                                 l3323 007C                                   l2621 02CC  
                                 l3237 045A                                   l3255 0549  
                                 l3239 049C                                   l3265 0564  
                                 l2641 0323                                   l3329 0093  
                                 l3259 0554                                   l2627 02E2  
                                 l2299 0594                                   l2663 0377  
                                 l3367 016C                                   l3359 014F  
                                 l2649 033C                                   l2681 03A7  
                                 l2691 03CE                                   l2683 03B5  
                                 l2695 03DC                                   l2689 03C2  
                                 _LATA 0016                                   _LATB 0017  
                                 _LATC 0018                                   u1505 0413  
                                 u1434 0584                                   u1435 0583  
                                 u1525 0420                                   u1565 043A  
                                 u1485 03FA                                   u2615 062D  
                                 u2704 0613                                   u2625 0632  
                                 u2705 0612                                   u1915 037E  
                                 u2653 04F4                                   u2645 04D7  
                                 u1845 02F4                                   u2670 053B  
                                 u1855 0304                                   u2735 0464  
                                 u1865 0324                                   u1945 03A8  
                                 u1875 0333                                   u1885 033D  
                                 u1975 03C3                                   u2785 008F  
                                 _WPUA 0F39                                   _WPUB 0F44  
                                 _WPUC 0F4F                                   _WPUE 0F65  
                         __CFG_WRT$OFF 0000                          __CFG_FCMEN$ON 0000  
                                 _main 0048                           ___ftpack@arg 0020  
                         ___ftpack@exp 0023                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   _twoK 0732  
                                 btemp 007E                           main@iCounter 0056  
 LED7SegDisplayValueByDigit@iTensDigit 0034                          __CFG_BOREN$ON 0000  
              __end_of_LED7SegPinWrite 0720                                   start 0020  
                          _writeDAC528 059C                          __CFG_CSWEN$ON 0000  
                        __CFG_MCLRE$ON 0000                           ___fttol@exp1 004B  
                         ___fttol@lval 0047                             _i2c1_state 0074  
       __size_of_OSCILLATOR_Initialize 0009          __end_of_OSCILLATOR_Initialize 0717  
                                _ADACQ 009D                                  _ADACT 0099  
                                _ADCAP 009B                                  ?_main 0077  
                                _ADCLK 0098                                  _ADCNT 010C  
                                _ADPCH 009E                                  _ADREF 009A  
                    __end_of_I2C1_Stop 06A0                                  _ADPRE 009C  
                        __CFG_WDTE$OFF 0000                                  _ADRPT 010D  
                      __end_of___ftdiv 035E                        __end_of___fttol 03E5  
                       __CFG_DEBUG$OFF 0000                                  i1l303 01E4  
                                i1l304 01F0                                  i1l321 0263  
                                i1l322 0271                                  i1l314 0231  
                                i1l333 06E7                                  i1l326 0296  
                                i1l318 0251                                  i1l292 0191  
                                i1l297 01BC                                  i1l298 01C3  
                                i1l394 0013                                  i1l398 001B  
                                _OSCEN 0891                                  _PORTA 000C  
                                _PORTB 000D                                  _PORTC 000E  
                                _TRISA 0011                                  _TRISB 0012  
                                _TRISC 0013                        __end_of_datapin 0738  
         __end_of_I2C1_BusCollisionISR 0741                      ??_I2C1_Initialize 0020  
                        ___awtoft@sign 002D                                  _delay 04AC  
                        ___ftpack@sign 0024                                  _speed 0734  
                      __end_of_putByte 059C                                  status 0003  
                                wtemp0 007E                             _iLEDs0_LSB 0069  
                           _iLEDs0_MSB 006A                             _iLEDs1_LSB 0067  
                           _iLEDs1_MSB 0068                   __end_of_LED7SegSetup 06F7  
                      __initialization 0022                           __end_of_main 017F  
                         __end_of_twoK 0734            ?_INTERRUPT_InterruptManager 0077  
                  _lineSettleMicroTime 072E                            _i2c1_object 005E  
                               ??_main 004C                          ___fttol@sign1 0046  
          ??_LED7SegShiftOutPulseClock 0031                        putByte@clockPin 0020  
LED7SegDisplayValueByDigit@iUnitsDigit 0036                                 ?_delay 0026  
                               _ADACCH 0091                                 _ADACCL 0090  
                               _ADCON0 0093                                 _ADCON1 0094  
                               _ADCON2 0095                                 _ADCON3 0096  
                               _ADERRH 0117                                 _ADERRL 0116  
                               i1S3439 065A                                 _ADLTHH 010F  
                               _ADLTHL 010E                                 _ADRESH 008D  
                               _ADRESL 008C                                 _ADSTAT 0097  
                               _ADUTHH 0111                                 _ADUTHL 0110  
                     __end_of___awtoft 0607                                 _ANSELA 0F38  
                               _ANSELB 0F43                                 _ANSELC 0F4E  
                     __end_of___ftpack 044A                     __CFG_RSTOSC$HFINT1 0000  
                               _RC3PPS 0F23                                 _RC4PPS 0F24  
                               _ODCONA 0F3A                                 _ODCONB 0F45  
                               _ODCONC 0F50                                 i1l2407 020D  
                               i1l2249 069E                                 i1l2441 023F  
                               i1l2433 022C                                 i1l2427 0222  
                               i1l2461 0277                                 i1l2375 01B0  
                               i1l2481 02A1                                 i1l2465 027E  
                               i1l2449 0258                                 i1l2393 01DF  
                               i1l2387 01CF                                 i1l2477 029A  
                               i1l2479 029D                                 i1l2487 02AA  
                       __CFG_WDTCCS$SC 0000                                 _OSCFRQ 0893  
                     ?_LED7SegPinWrite 0077                         __CFG_PWRTE$OFF 0000  
                     __end_of_clockpin 073A                         _p_i2c1_current 0071  
                               ___wmul 0623                         __CFG_STVREN$ON 0000  
                            ??___ftdiv 0034                              ??___fttol 0042  
                     __end_of_latchpin 073C                              ?_I2C1_ISR 0077  
                      _ADCC_Initialize 063F                              ??_putByte 0022  
    __size_of_ADCC_GetSingleConversion 0014              ?_ADCC_GetSingleConversion 0020  
                    _SYSTEM_Initialize 06F7              _LED7SegShiftOutPulseClock 0607  
              __end_of__initialization 0044                     ?_SYSTEM_Initialize 0077  
                           ___ftdiv@f1 0031                             ___ftdiv@f2 002E  
                           ___ftdiv@f3 0039                         _i2c1_trb_count 0073  
                       _byteFaderValue 00CB                             ___awtoft@c 0028  
                _I2C1_FunctionComplete 06DA                   _I2C1_BusCollisionISR 0740  
                           ___fttol@f1 003E                         __pcstackCOMMON 0077  
                         __pidataBANK1 05C1                    ??_SYSTEM_Initialize 0021  
             main@I2C_ADDRESS_FADELED0 0050                          __end_of_delay 04FF  
                       main@faderValue 005C                          __end_of_speed 0736  
                           ??_I2C1_ISR 0079                     main@fader8bitValue 005B  
                              ??_delay 0028              __end_of_SYSTEM_Initialize 0703  
                           __pbssBANK0 005E                             __pbssBANK1 00C4  
                __size_of_LED7SegSetup 000D             LED7SegShiftOutPulseClock@i 0033  
                         ?_writeDAC528 0027                  ?_I2C1_BusCollisionISR 0077  
                       _SSP1DATPPSbits 0EC6                             __pmaintext 0048  
                              ?___wmul 0020                        __CFG_PPS1WAY$ON 0000  
              __end_of_ADCC_Initialize 065A                             __pintentry 0004  
                      _I2C1_Initialize 0672                                _ADFLTRH 0115  
                              _ADFLTRL 0114                             _blinkyLoop 044A  
                              _ADPREVH 008F                                _ADPREVL 008E  
                            ?___awtoft 0028                              ?___ftpack 0020  
                              _ADSTPTH 0113                                _ADSTPTL 0112  
                       _SSP1CLKPPSbits 0EC5                                _OSCCON1 088D  
                              _OSCCON3 088F                              _I2C1_Stop 0689  
                              _OSCTUNE 0892                           _LED7SegSetup 06EA  
                              _SSP1ADD 018D                                _PPSLOCK 0E8F  
                              _SSP1BUF 018C                             _initDAC528 06A0  
                       main@readStatus 0051                    __end_of_cPowerOfTwo 06DA  
               ?_I2C1_FunctionComplete 0077                     _p_i2c1_trb_current 0072  
                 __CFG_SCANE$available 0000                                ___ftdiv 02B5  
                      __size_of___wmul 001C                                ___fttol 035E  
                   writeDAC528@dacData 0029                             ??___awtoft 002B  
                           ??___ftpack 0025                                _datapin 0736  
                              __ptext1 059C                                __ptext2 06A0  
                              __ptext3 0574                                __ptext4 044A  
                              __ptext5 035E                                __ptext6 02B5  
                              __ptext7 05E5                                __ptext8 03E5  
                              __ptext9 06F7                  _OSCILLATOR_Initialize 070E  
                              _segdisp 00A0               ??_PIN_MANAGER_Initialize 0020  
                           ?_I2C1_Stop 0077                                _putByte 0574  
           __size_of_SYSTEM_Initialize 000C                   I2C1_ISR@pi2c_buf_ptr 0070  
                              clrloop0 0727                   end_of_initialization 0044  
         ??_LED7SegDisplayValueByDigit 0038                                init_ram 0720  
                              initloop 0721                 ??_I2C1_BusCollisionISR 0077  
              __end_of_I2C1_Initialize 0689                      __end_of_toggleDly 0732  
                     ?_ADCC_Initialize 0077       __end_of_ADCC_GetSingleConversion 06CA  
                          ?_blinkyLoop 0031                  __CFG_WDTCPS$WDTCPS_31 0000  
                    __size_of_I2C1_ISR 0136    __size_of_LED7SegDisplayValueByDigit 0037  
                            _TRISCbits 0013                            _cPowerOfTwo 06CA  
                     __CFG_FEXTOSC$OFF 0000                            putByte@data 0024  
                      main@iResetValue 073C                            ?_initDAC528 0077  
                          putByte@mask 0025      I2C1_ISR@i2c_10bit_address_restart 006B  
                          ___ftdiv@exp 003C                   __size_of_writeDAC528 0025  
               delay@adjustedDelaytime 0029               __size_of_LED7SegPinWrite 0009  
                       __end_of___wmul 063F                I2C1_MasterWrite@trBlock 00D7  
             I2C1_Stop@completion_code 0078                 ?_OSCILLATOR_Initialize 0077  
                       _clockMicroTime 072C            __end_of_lineSettleMicroTime 0730  
                  start_initialization 0022                            ??_I2C1_Stop 0077  
      __size_of_PIN_MANAGER_Initialize 003E                    __size_of_blinkyLoop 0062  
                     ?_I2C1_Initialize 0077                       __CFG_LPBOREN$OFF 0000  
                             ??___wmul 0024                            __pdataBANK1 00A0  
               __end_of_clockMicroTime 072E                    __size_of_initDAC528 0016  
                    __size_of___awtoft 0022               _ADCC_GetSingleConversion 06B6  
                    __size_of___ftpack 0065                __end_ofmain@iResetValue 073E  
                          __pbssCOMMON 0070                              ___latbits 0002  
                        __pcstackBANK0 0020                          _i2c1_tr_queue 006D  
                  blinkyLoop@delayTime 0034     __end_of_LED7SegDisplayValueByDigit 0574  
           _LED7SegDisplayValueByDigit 053D                   writeDAC528@dacNumber 0027  
              ??_I2C1_FunctionComplete 0077                 _PIN_MANAGER_Initialize 04FF  
      ADCC_GetSingleConversion@channel 0023                               ?___ftdiv 002E  
                             ?___fttol 003E                               _I2C1_ISR 017F  
         ??_INTERRUPT_InterruptManager 007D                              __pswtext1 065A  
                   LED7SegPinWrite@val 0020                 main@prevFader8bitValue 0058  
                    ??_LED7SegPinWrite 0020                    blinkyLoop@loopCount 0036  
                             ?_putByte 0020                           _wkFaderValue 0066  
                       __size_of_delay 0053                           delay@counter 002D  
               I2C1_MasterRead@trBlock 00D3                         ___wmul@product 0024  
                     main@iChangeCount 0052                               _LATCbits 0018  
                            clear_ram0 0726                               _PIE3bits 0719  
  __size_of_INTERRUPT_InterruptManager 001C                               _PIR3bits 070F  
  LED7SegDisplayValueByDigit@iTensCode 0038                               _SSP1CON1 0190  
                             _SSP1CON3 0192                               _SSP1STAT 018F  
                         ??_blinkyLoop 0033                              _toggleDly 0730  
                           _ADCON0bits 0093                             _ADCON1bits 0094  
                           _ADCON2bits 0095                             _ADCON3bits 0096  
                    ___wmul@multiplier 0020                           ??_initDAC528 0027  
                   __end_of_blinkyLoop 04AC                             _ADSTATbits 0097  
        __size_of_I2C1_BusCollisionISR 0001                 I2C1_ISR@i2c_bytes_left 006C  
              ??_OSCILLATOR_Initialize 0020                         delay@delaytime 0026  
                     __size_of___ftdiv 00A9                       __size_of___fttol 0087  
                             ___awtoft 05E5                               ___ftpack 03E5  
                   __end_of_initDAC528 06B6                      _LED7SegPulseClock 0703  
                           _ANSELCbits 0F4E                     ?_LED7SegPulseClock 0077  
             __size_of_ADCC_Initialize 001B                    I2C1_ISR@i2c_address 0075  
                             __ptext10 04FF                               __ptext11 070E  
                             __ptext20 0717                               __ptext12 0672  
                             __ptext21 06B6                               __ptext13 063F  
                             __ptext14 06EA                               __ptext23 017F  
                             __ptext15 053D                               __ptext24 0689  
                             __ptext16 0607                               __ptext25 06DA  
                             __ptext17 0703                               __ptext26 0740  
                             __ptext18 04AC                               __ptext19 0623  
                   blinkyLoop@maxLoops 0031                           _SSP1CON1bits 0190  
                         _SSP1CON2bits 0191                               _clockpin 0738  
                     __size_of_putByte 0028                    ??_LED7SegPulseClock 0031  
                             _latchpin 073A                          __size_of_main 0137  
                        ??_writeDAC528 002A                   __CFG_WDTCWS$WDTCWS_7 0000  
               writeDAC528@wkDacNumber 002B             ??_ADCC_GetSingleConversion 0023  
                             int$flags 007E     __end_of_INTERRUPT_InterruptManager 0020  
           _INTERRUPT_InterruptManager 0004              __end_of_LED7SegPulseClock 070E  
   __size_of_LED7SegShiftOutPulseClock 001C             ?_LED7SegShiftOutPulseClock 0077  
          PIN_MANAGER_Initialize@state 0020           LED7SegShiftOutPulseClock@val 0032  
                       _cMstrClkAdjust 073E                             _INTCONbits 000B  
                        ?_LED7SegSetup 0077                         __pstringtext10 073C  
                       __pstringtext11 073E                               intlevel1 0000  
          ?_LED7SegDisplayValueByDigit 0034                ?_PIN_MANAGER_Initialize 0077  
                    __CFG_CLKOUTEN$OFF 0000         __size_of_I2C1_FunctionComplete 0010  
        __end_of_I2C1_FunctionComplete 06EA                            _PPSLOCKbits 0E8F  
                             putByte@i 0026                        _LED7SegPinWrite 0717  
                  __end_of_writeDAC528 05C1                 __end_of_cMstrClkAdjust 0740  
             __size_of_I2C1_Initialize 0017                          __pstringtext1 06CA  
                        __pstringtext2 072C                          __pstringtext3 072E  
                        __pstringtext4 0730                          __pstringtext5 0732  
                        __pstringtext6 0734                          __pstringtext7 0736  
                        __pstringtext8 0738                          __pstringtext9 073A  
    __end_of_LED7SegShiftOutPulseClock 0623                          main@POT0Value 0053  
                        main@POT1Value 0054                         ??_LED7SegSetup 0020  
                     main@iLoopCounter 0059         __end_of_PIN_MANAGER_Initialize 053D  
                    ??_ADCC_Initialize 0020                       main@DACDataValue 0055  
                   __size_of_I2C1_Stop 0017  
