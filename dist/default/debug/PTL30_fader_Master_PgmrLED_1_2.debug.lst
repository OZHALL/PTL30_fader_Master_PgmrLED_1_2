

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Aug 26 11:20:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	cinit,global,class=CODE,merge=1,delta=2
    26                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    28                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    31                           	psect	inittext,global,class=CODE,delta=2
    32                           	psect	clrtext,global,class=CODE,delta=2
    33                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    34                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    35                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    36                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    37                           	psect	text1,local,class=CODE,merge=1,delta=2
    38                           	psect	text2,local,class=CODE,merge=1,delta=2
    39                           	psect	text3,local,class=CODE,merge=1,delta=2
    40                           	psect	text4,local,class=CODE,merge=1,delta=2
    41                           	psect	text5,local,class=CODE,merge=1,delta=2
    42                           	psect	text6,local,class=CODE,merge=1,delta=2
    43                           	psect	text7,local,class=CODE,merge=1,delta=2
    44                           	psect	text8,local,class=CODE,merge=1,delta=2
    45                           	psect	text9,local,class=CODE,merge=1,delta=2
    46                           	psect	text10,local,class=CODE,merge=1,delta=2
    47                           	psect	text11,local,class=CODE,merge=1,delta=2
    48                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text17,local,class=CODE,merge=1,delta=2
    54                           	psect	text18,local,class=CODE,merge=1,delta=2
    55                           	psect	text19,local,class=CODE,merge=1,delta=2
    56                           	psect	text20,local,class=CODE,merge=1,delta=2
    57                           	psect	text21,local,class=CODE,merge=1,delta=2
    58                           	psect	text22,local,class=CODE,merge=1,delta=2
    59                           	psect	text23,local,class=CODE,merge=1,delta=2
    60                           	psect	text24,local,class=CODE,merge=1,delta=2
    61                           	psect	text25,local,class=CODE,merge=1,delta=2
    62                           	psect	text26,local,class=CODE,merge=1,delta=2
    63                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text28,local,class=CODE,merge=1,delta=2
    65                           	psect	text29,local,class=CODE,merge=1,delta=2
    66                           	psect	text30,local,class=CODE,merge=1,delta=2
    67                           	psect	text31,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text33,local,class=CODE,merge=1,delta=2
    70                           	psect	swtext1,local,class=CONST,delta=2
    71                           	psect	text34,local,class=CODE,merge=1,delta=2
    72                           	psect	text35,local,class=CODE,merge=1,delta=2
    73                           	psect	text36,local,class=CODE,merge=1,delta=2
    74                           	dabs	1,0x620,48
    75                           	dabs	1,0x5A0,80
    76                           	dabs	1,0x2370,0,_aPatchMemory
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 1.45
    80                           ; Generated 16/11/2017 GMT
    81                           ; 
    82                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F18855 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  001C                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008C                     	;# 
   143  008D                     	;# 
   144  008E                     	;# 
   145  008E                     	;# 
   146  008F                     	;# 
   147  0090                     	;# 
   148  0090                     	;# 
   149  0091                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0097                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009A                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  0110                     	;# 
   168  0110                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0112                     	;# 
   172  0113                     	;# 
   173  0114                     	;# 
   174  0114                     	;# 
   175  0115                     	;# 
   176  0116                     	;# 
   177  0116                     	;# 
   178  0117                     	;# 
   179  0119                     	;# 
   180  0119                     	;# 
   181  0119                     	;# 
   182  011A                     	;# 
   183  011A                     	;# 
   184  011A                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011C                     	;# 
   191  011C                     	;# 
   192  011C                     	;# 
   193  011D                     	;# 
   194  011D                     	;# 
   195  011D                     	;# 
   196  011E                     	;# 
   197  011E                     	;# 
   198  011E                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  018F                     	;# 
   208  0190                     	;# 
   209  0191                     	;# 
   210  0192                     	;# 
   211  0196                     	;# 
   212  0197                     	;# 
   213  0198                     	;# 
   214  0199                     	;# 
   215  019A                     	;# 
   216  019B                     	;# 
   217  019C                     	;# 
   218  020C                     	;# 
   219  020C                     	;# 
   220  020D                     	;# 
   221  020E                     	;# 
   222  020F                     	;# 
   223  020F                     	;# 
   224  0210                     	;# 
   225  0210                     	;# 
   226  0211                     	;# 
   227  0211                     	;# 
   228  0212                     	;# 
   229  0212                     	;# 
   230  0213                     	;# 
   231  0214                     	;# 
   232  0215                     	;# 
   233  0215                     	;# 
   234  0216                     	;# 
   235  0216                     	;# 
   236  0217                     	;# 
   237  0217                     	;# 
   238  0218                     	;# 
   239  0218                     	;# 
   240  0219                     	;# 
   241  021A                     	;# 
   242  021B                     	;# 
   243  021B                     	;# 
   244  021C                     	;# 
   245  021C                     	;# 
   246  021D                     	;# 
   247  021D                     	;# 
   248  021E                     	;# 
   249  021F                     	;# 
   250  028C                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  028D                     	;# 
   254  028E                     	;# 
   255  028F                     	;# 
   256  0290                     	;# 
   257  0290                     	;# 
   258  0291                     	;# 
   259  0292                     	;# 
   260  0292                     	;# 
   261  0293                     	;# 
   262  0293                     	;# 
   263  0294                     	;# 
   264  0295                     	;# 
   265  0296                     	;# 
   266  0296                     	;# 
   267  0297                     	;# 
   268  0298                     	;# 
   269  0298                     	;# 
   270  0299                     	;# 
   271  0299                     	;# 
   272  029A                     	;# 
   273  029B                     	;# 
   274  029C                     	;# 
   275  029C                     	;# 
   276  029D                     	;# 
   277  030C                     	;# 
   278  030C                     	;# 
   279  030D                     	;# 
   280  030E                     	;# 
   281  030F                     	;# 
   282  0310                     	;# 
   283  0310                     	;# 
   284  0311                     	;# 
   285  0312                     	;# 
   286  0313                     	;# 
   287  0314                     	;# 
   288  0314                     	;# 
   289  0315                     	;# 
   290  0316                     	;# 
   291  0317                     	;# 
   292  0318                     	;# 
   293  0318                     	;# 
   294  0319                     	;# 
   295  031A                     	;# 
   296  031B                     	;# 
   297  031C                     	;# 
   298  031C                     	;# 
   299  031D                     	;# 
   300  031E                     	;# 
   301  031F                     	;# 
   302  038C                     	;# 
   303  038D                     	;# 
   304  038E                     	;# 
   305  0390                     	;# 
   306  0391                     	;# 
   307  0392                     	;# 
   308  040C                     	;# 
   309  040D                     	;# 
   310  040E                     	;# 
   311  040F                     	;# 
   312  0410                     	;# 
   313  0411                     	;# 
   314  0416                     	;# 
   315  0416                     	;# 
   316  0417                     	;# 
   317  0418                     	;# 
   318  0418                     	;# 
   319  0419                     	;# 
   320  041A                     	;# 
   321  041A                     	;# 
   322  041B                     	;# 
   323  041C                     	;# 
   324  041C                     	;# 
   325  041D                     	;# 
   326  041E                     	;# 
   327  041F                     	;# 
   328  048C                     	;# 
   329  048C                     	;# 
   330  048D                     	;# 
   331  048E                     	;# 
   332  048F                     	;# 
   333  048F                     	;# 
   334  0490                     	;# 
   335  0491                     	;# 
   336  0492                     	;# 
   337  0492                     	;# 
   338  0493                     	;# 
   339  0494                     	;# 
   340  0495                     	;# 
   341  0495                     	;# 
   342  0496                     	;# 
   343  0497                     	;# 
   344  0498                     	;# 
   345  0499                     	;# 
   346  049A                     	;# 
   347  049B                     	;# 
   348  049C                     	;# 
   349  049D                     	;# 
   350  050C                     	;# 
   351  050C                     	;# 
   352  050D                     	;# 
   353  050E                     	;# 
   354  050F                     	;# 
   355  050F                     	;# 
   356  0510                     	;# 
   357  0511                     	;# 
   358  0512                     	;# 
   359  0512                     	;# 
   360  0513                     	;# 
   361  0514                     	;# 
   362  0515                     	;# 
   363  0515                     	;# 
   364  0516                     	;# 
   365  0517                     	;# 
   366  0518                     	;# 
   367  0519                     	;# 
   368  051A                     	;# 
   369  051B                     	;# 
   370  051C                     	;# 
   371  051D                     	;# 
   372  058C                     	;# 
   373  058C                     	;# 
   374  058D                     	;# 
   375  058E                     	;# 
   376  058F                     	;# 
   377  058F                     	;# 
   378  0590                     	;# 
   379  0591                     	;# 
   380  0592                     	;# 
   381  0593                     	;# 
   382  060C                     	;# 
   383  060D                     	;# 
   384  060E                     	;# 
   385  060F                     	;# 
   386  0610                     	;# 
   387  0611                     	;# 
   388  0612                     	;# 
   389  0613                     	;# 
   390  0614                     	;# 
   391  0616                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  061A                     	;# 
   396  061B                     	;# 
   397  061C                     	;# 
   398  061D                     	;# 
   399  061E                     	;# 
   400  068C                     	;# 
   401  068D                     	;# 
   402  068E                     	;# 
   403  068F                     	;# 
   404  0690                     	;# 
   405  0691                     	;# 
   406  0692                     	;# 
   407  0693                     	;# 
   408  0694                     	;# 
   409  070C                     	;# 
   410  070D                     	;# 
   411  070E                     	;# 
   412  070F                     	;# 
   413  0710                     	;# 
   414  0711                     	;# 
   415  0712                     	;# 
   416  0713                     	;# 
   417  0714                     	;# 
   418  0716                     	;# 
   419  0717                     	;# 
   420  0718                     	;# 
   421  0719                     	;# 
   422  071A                     	;# 
   423  071B                     	;# 
   424  071C                     	;# 
   425  071D                     	;# 
   426  071E                     	;# 
   427  0796                     	;# 
   428  0797                     	;# 
   429  0798                     	;# 
   430  0799                     	;# 
   431  079A                     	;# 
   432  079B                     	;# 
   433  080C                     	;# 
   434  080D                     	;# 
   435  080E                     	;# 
   436  080F                     	;# 
   437  0810                     	;# 
   438  0811                     	;# 
   439  0812                     	;# 
   440  0813                     	;# 
   441  0814                     	;# 
   442  081A                     	;# 
   443  081B                     	;# 
   444  081C                     	;# 
   445  081D                     	;# 
   446  081E                     	;# 
   447  081F                     	;# 
   448  088C                     	;# 
   449  088D                     	;# 
   450  088E                     	;# 
   451  088F                     	;# 
   452  0890                     	;# 
   453  0891                     	;# 
   454  0892                     	;# 
   455  0893                     	;# 
   456  0895                     	;# 
   457  0896                     	;# 
   458  0897                     	;# 
   459  0898                     	;# 
   460  0899                     	;# 
   461  089A                     	;# 
   462  089B                     	;# 
   463  090C                     	;# 
   464  090E                     	;# 
   465  090F                     	;# 
   466  091F                     	;# 
   467  091F                     	;# 
   468  098F                     	;# 
   469  098F                     	;# 
   470  0990                     	;# 
   471  0991                     	;# 
   472  0992                     	;# 
   473  0993                     	;# 
   474  0994                     	;# 
   475  0995                     	;# 
   476  0996                     	;# 
   477  0997                     	;# 
   478  0E0F                     	;# 
   479  0E10                     	;# 
   480  0E11                     	;# 
   481  0E12                     	;# 
   482  0E13                     	;# 
   483  0E14                     	;# 
   484  0E15                     	;# 
   485  0E16                     	;# 
   486  0E17                     	;# 
   487  0E18                     	;# 
   488  0E19                     	;# 
   489  0E1A                     	;# 
   490  0E1B                     	;# 
   491  0E1C                     	;# 
   492  0E1D                     	;# 
   493  0E1E                     	;# 
   494  0E1F                     	;# 
   495  0E20                     	;# 
   496  0E21                     	;# 
   497  0E22                     	;# 
   498  0E23                     	;# 
   499  0E24                     	;# 
   500  0E25                     	;# 
   501  0E26                     	;# 
   502  0E27                     	;# 
   503  0E28                     	;# 
   504  0E29                     	;# 
   505  0E2A                     	;# 
   506  0E2B                     	;# 
   507  0E2C                     	;# 
   508  0E2D                     	;# 
   509  0E2E                     	;# 
   510  0E2F                     	;# 
   511  0E30                     	;# 
   512  0E31                     	;# 
   513  0E32                     	;# 
   514  0E33                     	;# 
   515  0E34                     	;# 
   516  0E35                     	;# 
   517  0E36                     	;# 
   518  0E37                     	;# 
   519  0E8F                     	;# 
   520  0E90                     	;# 
   521  0E91                     	;# 
   522  0E92                     	;# 
   523  0E93                     	;# 
   524  0E94                     	;# 
   525  0E95                     	;# 
   526  0E96                     	;# 
   527  0E97                     	;# 
   528  0E9C                     	;# 
   529  0E9D                     	;# 
   530  0E9E                     	;# 
   531  0EA1                     	;# 
   532  0EA2                     	;# 
   533  0EA3                     	;# 
   534  0EA4                     	;# 
   535  0EA5                     	;# 
   536  0EA9                     	;# 
   537  0EAA                     	;# 
   538  0EAB                     	;# 
   539  0EAC                     	;# 
   540  0EB1                     	;# 
   541  0EB2                     	;# 
   542  0EB3                     	;# 
   543  0EB8                     	;# 
   544  0EB9                     	;# 
   545  0EBA                     	;# 
   546  0EBB                     	;# 
   547  0EBC                     	;# 
   548  0EBD                     	;# 
   549  0EBE                     	;# 
   550  0EC3                     	;# 
   551  0EC5                     	;# 
   552  0EC6                     	;# 
   553  0EC7                     	;# 
   554  0EC8                     	;# 
   555  0EC9                     	;# 
   556  0ECA                     	;# 
   557  0ECB                     	;# 
   558  0ECC                     	;# 
   559  0F10                     	;# 
   560  0F11                     	;# 
   561  0F12                     	;# 
   562  0F13                     	;# 
   563  0F14                     	;# 
   564  0F15                     	;# 
   565  0F16                     	;# 
   566  0F17                     	;# 
   567  0F18                     	;# 
   568  0F19                     	;# 
   569  0F1A                     	;# 
   570  0F1B                     	;# 
   571  0F1C                     	;# 
   572  0F1D                     	;# 
   573  0F1E                     	;# 
   574  0F1F                     	;# 
   575  0F20                     	;# 
   576  0F21                     	;# 
   577  0F22                     	;# 
   578  0F23                     	;# 
   579  0F24                     	;# 
   580  0F25                     	;# 
   581  0F26                     	;# 
   582  0F27                     	;# 
   583  0F38                     	;# 
   584  0F39                     	;# 
   585  0F3A                     	;# 
   586  0F3B                     	;# 
   587  0F3C                     	;# 
   588  0F3D                     	;# 
   589  0F3E                     	;# 
   590  0F3F                     	;# 
   591  0F40                     	;# 
   592  0F41                     	;# 
   593  0F43                     	;# 
   594  0F44                     	;# 
   595  0F45                     	;# 
   596  0F46                     	;# 
   597  0F47                     	;# 
   598  0F48                     	;# 
   599  0F49                     	;# 
   600  0F4A                     	;# 
   601  0F4B                     	;# 
   602  0F4C                     	;# 
   603  0F4E                     	;# 
   604  0F4F                     	;# 
   605  0F50                     	;# 
   606  0F51                     	;# 
   607  0F52                     	;# 
   608  0F53                     	;# 
   609  0F54                     	;# 
   610  0F55                     	;# 
   611  0F56                     	;# 
   612  0F57                     	;# 
   613  0F65                     	;# 
   614  0F68                     	;# 
   615  0F69                     	;# 
   616  0F6A                     	;# 
   617  0F6B                     	;# 
   618  0FE4                     	;# 
   619  0FE5                     	;# 
   620  0FE6                     	;# 
   621  0FE7                     	;# 
   622  0FE8                     	;# 
   623  0FE9                     	;# 
   624  0FEA                     	;# 
   625  0FEB                     	;# 
   626  0FED                     	;# 
   627  0FEE                     	;# 
   628  0FEF                     	;# 
   629  0000                     	;# 
   630  0001                     	;# 
   631  0002                     	;# 
   632  0003                     	;# 
   633  0004                     	;# 
   634  0005                     	;# 
   635  0006                     	;# 
   636  0007                     	;# 
   637  0008                     	;# 
   638  0009                     	;# 
   639  000A                     	;# 
   640  000B                     	;# 
   641  000C                     	;# 
   642  000D                     	;# 
   643  000E                     	;# 
   644  0010                     	;# 
   645  0011                     	;# 
   646  0012                     	;# 
   647  0013                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  001C                     	;# 
   652  001C                     	;# 
   653  001D                     	;# 
   654  001D                     	;# 
   655  001E                     	;# 
   656  001F                     	;# 
   657  008C                     	;# 
   658  008C                     	;# 
   659  008D                     	;# 
   660  008E                     	;# 
   661  008E                     	;# 
   662  008F                     	;# 
   663  0090                     	;# 
   664  0090                     	;# 
   665  0091                     	;# 
   666  0093                     	;# 
   667  0094                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0097                     	;# 
   671  0098                     	;# 
   672  0099                     	;# 
   673  009A                     	;# 
   674  009B                     	;# 
   675  009C                     	;# 
   676  009D                     	;# 
   677  009E                     	;# 
   678  010C                     	;# 
   679  010D                     	;# 
   680  010E                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0110                     	;# 
   684  0110                     	;# 
   685  0111                     	;# 
   686  0112                     	;# 
   687  0112                     	;# 
   688  0113                     	;# 
   689  0114                     	;# 
   690  0114                     	;# 
   691  0115                     	;# 
   692  0116                     	;# 
   693  0116                     	;# 
   694  0117                     	;# 
   695  0119                     	;# 
   696  0119                     	;# 
   697  0119                     	;# 
   698  011A                     	;# 
   699  011A                     	;# 
   700  011A                     	;# 
   701  011B                     	;# 
   702  011B                     	;# 
   703  011B                     	;# 
   704  011B                     	;# 
   705  011B                     	;# 
   706  011C                     	;# 
   707  011C                     	;# 
   708  011C                     	;# 
   709  011D                     	;# 
   710  011D                     	;# 
   711  011D                     	;# 
   712  011E                     	;# 
   713  011E                     	;# 
   714  011E                     	;# 
   715  011F                     	;# 
   716  011F                     	;# 
   717  011F                     	;# 
   718  011F                     	;# 
   719  011F                     	;# 
   720  018C                     	;# 
   721  018D                     	;# 
   722  018E                     	;# 
   723  018F                     	;# 
   724  0190                     	;# 
   725  0191                     	;# 
   726  0192                     	;# 
   727  0196                     	;# 
   728  0197                     	;# 
   729  0198                     	;# 
   730  0199                     	;# 
   731  019A                     	;# 
   732  019B                     	;# 
   733  019C                     	;# 
   734  020C                     	;# 
   735  020C                     	;# 
   736  020D                     	;# 
   737  020E                     	;# 
   738  020F                     	;# 
   739  020F                     	;# 
   740  0210                     	;# 
   741  0210                     	;# 
   742  0211                     	;# 
   743  0211                     	;# 
   744  0212                     	;# 
   745  0212                     	;# 
   746  0213                     	;# 
   747  0214                     	;# 
   748  0215                     	;# 
   749  0215                     	;# 
   750  0216                     	;# 
   751  0216                     	;# 
   752  0217                     	;# 
   753  0217                     	;# 
   754  0218                     	;# 
   755  0218                     	;# 
   756  0219                     	;# 
   757  021A                     	;# 
   758  021B                     	;# 
   759  021B                     	;# 
   760  021C                     	;# 
   761  021C                     	;# 
   762  021D                     	;# 
   763  021D                     	;# 
   764  021E                     	;# 
   765  021F                     	;# 
   766  028C                     	;# 
   767  028C                     	;# 
   768  028D                     	;# 
   769  028D                     	;# 
   770  028E                     	;# 
   771  028F                     	;# 
   772  0290                     	;# 
   773  0290                     	;# 
   774  0291                     	;# 
   775  0292                     	;# 
   776  0292                     	;# 
   777  0293                     	;# 
   778  0293                     	;# 
   779  0294                     	;# 
   780  0295                     	;# 
   781  0296                     	;# 
   782  0296                     	;# 
   783  0297                     	;# 
   784  0298                     	;# 
   785  0298                     	;# 
   786  0299                     	;# 
   787  0299                     	;# 
   788  029A                     	;# 
   789  029B                     	;# 
   790  029C                     	;# 
   791  029C                     	;# 
   792  029D                     	;# 
   793  030C                     	;# 
   794  030C                     	;# 
   795  030D                     	;# 
   796  030E                     	;# 
   797  030F                     	;# 
   798  0310                     	;# 
   799  0310                     	;# 
   800  0311                     	;# 
   801  0312                     	;# 
   802  0313                     	;# 
   803  0314                     	;# 
   804  0314                     	;# 
   805  0315                     	;# 
   806  0316                     	;# 
   807  0317                     	;# 
   808  0318                     	;# 
   809  0318                     	;# 
   810  0319                     	;# 
   811  031A                     	;# 
   812  031B                     	;# 
   813  031C                     	;# 
   814  031C                     	;# 
   815  031D                     	;# 
   816  031E                     	;# 
   817  031F                     	;# 
   818  038C                     	;# 
   819  038D                     	;# 
   820  038E                     	;# 
   821  0390                     	;# 
   822  0391                     	;# 
   823  0392                     	;# 
   824  040C                     	;# 
   825  040D                     	;# 
   826  040E                     	;# 
   827  040F                     	;# 
   828  0410                     	;# 
   829  0411                     	;# 
   830  0416                     	;# 
   831  0416                     	;# 
   832  0417                     	;# 
   833  0418                     	;# 
   834  0418                     	;# 
   835  0419                     	;# 
   836  041A                     	;# 
   837  041A                     	;# 
   838  041B                     	;# 
   839  041C                     	;# 
   840  041C                     	;# 
   841  041D                     	;# 
   842  041E                     	;# 
   843  041F                     	;# 
   844  048C                     	;# 
   845  048C                     	;# 
   846  048D                     	;# 
   847  048E                     	;# 
   848  048F                     	;# 
   849  048F                     	;# 
   850  0490                     	;# 
   851  0491                     	;# 
   852  0492                     	;# 
   853  0492                     	;# 
   854  0493                     	;# 
   855  0494                     	;# 
   856  0495                     	;# 
   857  0495                     	;# 
   858  0496                     	;# 
   859  0497                     	;# 
   860  0498                     	;# 
   861  0499                     	;# 
   862  049A                     	;# 
   863  049B                     	;# 
   864  049C                     	;# 
   865  049D                     	;# 
   866  050C                     	;# 
   867  050C                     	;# 
   868  050D                     	;# 
   869  050E                     	;# 
   870  050F                     	;# 
   871  050F                     	;# 
   872  0510                     	;# 
   873  0511                     	;# 
   874  0512                     	;# 
   875  0512                     	;# 
   876  0513                     	;# 
   877  0514                     	;# 
   878  0515                     	;# 
   879  0515                     	;# 
   880  0516                     	;# 
   881  0517                     	;# 
   882  0518                     	;# 
   883  0519                     	;# 
   884  051A                     	;# 
   885  051B                     	;# 
   886  051C                     	;# 
   887  051D                     	;# 
   888  058C                     	;# 
   889  058C                     	;# 
   890  058D                     	;# 
   891  058E                     	;# 
   892  058F                     	;# 
   893  058F                     	;# 
   894  0590                     	;# 
   895  0591                     	;# 
   896  0592                     	;# 
   897  0593                     	;# 
   898  060C                     	;# 
   899  060D                     	;# 
   900  060E                     	;# 
   901  060F                     	;# 
   902  0610                     	;# 
   903  0611                     	;# 
   904  0612                     	;# 
   905  0613                     	;# 
   906  0614                     	;# 
   907  0616                     	;# 
   908  0617                     	;# 
   909  0618                     	;# 
   910  0619                     	;# 
   911  061A                     	;# 
   912  061B                     	;# 
   913  061C                     	;# 
   914  061D                     	;# 
   915  061E                     	;# 
   916  068C                     	;# 
   917  068D                     	;# 
   918  068E                     	;# 
   919  068F                     	;# 
   920  0690                     	;# 
   921  0691                     	;# 
   922  0692                     	;# 
   923  0693                     	;# 
   924  0694                     	;# 
   925  070C                     	;# 
   926  070D                     	;# 
   927  070E                     	;# 
   928  070F                     	;# 
   929  0710                     	;# 
   930  0711                     	;# 
   931  0712                     	;# 
   932  0713                     	;# 
   933  0714                     	;# 
   934  0716                     	;# 
   935  0717                     	;# 
   936  0718                     	;# 
   937  0719                     	;# 
   938  071A                     	;# 
   939  071B                     	;# 
   940  071C                     	;# 
   941  071D                     	;# 
   942  071E                     	;# 
   943  0796                     	;# 
   944  0797                     	;# 
   945  0798                     	;# 
   946  0799                     	;# 
   947  079A                     	;# 
   948  079B                     	;# 
   949  080C                     	;# 
   950  080D                     	;# 
   951  080E                     	;# 
   952  080F                     	;# 
   953  0810                     	;# 
   954  0811                     	;# 
   955  0812                     	;# 
   956  0813                     	;# 
   957  0814                     	;# 
   958  081A                     	;# 
   959  081B                     	;# 
   960  081C                     	;# 
   961  081D                     	;# 
   962  081E                     	;# 
   963  081F                     	;# 
   964  088C                     	;# 
   965  088D                     	;# 
   966  088E                     	;# 
   967  088F                     	;# 
   968  0890                     	;# 
   969  0891                     	;# 
   970  0892                     	;# 
   971  0893                     	;# 
   972  0895                     	;# 
   973  0896                     	;# 
   974  0897                     	;# 
   975  0898                     	;# 
   976  0899                     	;# 
   977  089A                     	;# 
   978  089B                     	;# 
   979  090C                     	;# 
   980  090E                     	;# 
   981  090F                     	;# 
   982  091F                     	;# 
   983  091F                     	;# 
   984  098F                     	;# 
   985  098F                     	;# 
   986  0990                     	;# 
   987  0991                     	;# 
   988  0992                     	;# 
   989  0993                     	;# 
   990  0994                     	;# 
   991  0995                     	;# 
   992  0996                     	;# 
   993  0997                     	;# 
   994  0E0F                     	;# 
   995  0E10                     	;# 
   996  0E11                     	;# 
   997  0E12                     	;# 
   998  0E13                     	;# 
   999  0E14                     	;# 
  1000  0E15                     	;# 
  1001  0E16                     	;# 
  1002  0E17                     	;# 
  1003  0E18                     	;# 
  1004  0E19                     	;# 
  1005  0E1A                     	;# 
  1006  0E1B                     	;# 
  1007  0E1C                     	;# 
  1008  0E1D                     	;# 
  1009  0E1E                     	;# 
  1010  0E1F                     	;# 
  1011  0E20                     	;# 
  1012  0E21                     	;# 
  1013  0E22                     	;# 
  1014  0E23                     	;# 
  1015  0E24                     	;# 
  1016  0E25                     	;# 
  1017  0E26                     	;# 
  1018  0E27                     	;# 
  1019  0E28                     	;# 
  1020  0E29                     	;# 
  1021  0E2A                     	;# 
  1022  0E2B                     	;# 
  1023  0E2C                     	;# 
  1024  0E2D                     	;# 
  1025  0E2E                     	;# 
  1026  0E2F                     	;# 
  1027  0E30                     	;# 
  1028  0E31                     	;# 
  1029  0E32                     	;# 
  1030  0E33                     	;# 
  1031  0E34                     	;# 
  1032  0E35                     	;# 
  1033  0E36                     	;# 
  1034  0E37                     	;# 
  1035  0E8F                     	;# 
  1036  0E90                     	;# 
  1037  0E91                     	;# 
  1038  0E92                     	;# 
  1039  0E93                     	;# 
  1040  0E94                     	;# 
  1041  0E95                     	;# 
  1042  0E96                     	;# 
  1043  0E97                     	;# 
  1044  0E9C                     	;# 
  1045  0E9D                     	;# 
  1046  0E9E                     	;# 
  1047  0EA1                     	;# 
  1048  0EA2                     	;# 
  1049  0EA3                     	;# 
  1050  0EA4                     	;# 
  1051  0EA5                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EB1                     	;# 
  1057  0EB2                     	;# 
  1058  0EB3                     	;# 
  1059  0EB8                     	;# 
  1060  0EB9                     	;# 
  1061  0EBA                     	;# 
  1062  0EBB                     	;# 
  1063  0EBC                     	;# 
  1064  0EBD                     	;# 
  1065  0EBE                     	;# 
  1066  0EC3                     	;# 
  1067  0EC5                     	;# 
  1068  0EC6                     	;# 
  1069  0EC7                     	;# 
  1070  0EC8                     	;# 
  1071  0EC9                     	;# 
  1072  0ECA                     	;# 
  1073  0ECB                     	;# 
  1074  0ECC                     	;# 
  1075  0F10                     	;# 
  1076  0F11                     	;# 
  1077  0F12                     	;# 
  1078  0F13                     	;# 
  1079  0F14                     	;# 
  1080  0F15                     	;# 
  1081  0F16                     	;# 
  1082  0F17                     	;# 
  1083  0F18                     	;# 
  1084  0F19                     	;# 
  1085  0F1A                     	;# 
  1086  0F1B                     	;# 
  1087  0F1C                     	;# 
  1088  0F1D                     	;# 
  1089  0F1E                     	;# 
  1090  0F1F                     	;# 
  1091  0F20                     	;# 
  1092  0F21                     	;# 
  1093  0F22                     	;# 
  1094  0F23                     	;# 
  1095  0F24                     	;# 
  1096  0F25                     	;# 
  1097  0F26                     	;# 
  1098  0F27                     	;# 
  1099  0F38                     	;# 
  1100  0F39                     	;# 
  1101  0F3A                     	;# 
  1102  0F3B                     	;# 
  1103  0F3C                     	;# 
  1104  0F3D                     	;# 
  1105  0F3E                     	;# 
  1106  0F3F                     	;# 
  1107  0F40                     	;# 
  1108  0F41                     	;# 
  1109  0F43                     	;# 
  1110  0F44                     	;# 
  1111  0F45                     	;# 
  1112  0F46                     	;# 
  1113  0F47                     	;# 
  1114  0F48                     	;# 
  1115  0F49                     	;# 
  1116  0F4A                     	;# 
  1117  0F4B                     	;# 
  1118  0F4C                     	;# 
  1119  0F4E                     	;# 
  1120  0F4F                     	;# 
  1121  0F50                     	;# 
  1122  0F51                     	;# 
  1123  0F52                     	;# 
  1124  0F53                     	;# 
  1125  0F54                     	;# 
  1126  0F55                     	;# 
  1127  0F56                     	;# 
  1128  0F57                     	;# 
  1129  0F65                     	;# 
  1130  0F68                     	;# 
  1131  0F69                     	;# 
  1132  0F6A                     	;# 
  1133  0F6B                     	;# 
  1134  0FE4                     	;# 
  1135  0FE5                     	;# 
  1136  0FE6                     	;# 
  1137  0FE7                     	;# 
  1138  0FE8                     	;# 
  1139  0FE9                     	;# 
  1140  0FEA                     	;# 
  1141  0FEB                     	;# 
  1142  0FED                     	;# 
  1143  0FEE                     	;# 
  1144  0FEF                     	;# 
  1145  0000                     	;# 
  1146  0001                     	;# 
  1147  0002                     	;# 
  1148  0003                     	;# 
  1149  0004                     	;# 
  1150  0005                     	;# 
  1151  0006                     	;# 
  1152  0007                     	;# 
  1153  0008                     	;# 
  1154  0009                     	;# 
  1155  000A                     	;# 
  1156  000B                     	;# 
  1157  000C                     	;# 
  1158  000D                     	;# 
  1159  000E                     	;# 
  1160  0010                     	;# 
  1161  0011                     	;# 
  1162  0012                     	;# 
  1163  0013                     	;# 
  1164  0016                     	;# 
  1165  0017                     	;# 
  1166  0018                     	;# 
  1167  001C                     	;# 
  1168  001C                     	;# 
  1169  001D                     	;# 
  1170  001D                     	;# 
  1171  001E                     	;# 
  1172  001F                     	;# 
  1173  008C                     	;# 
  1174  008C                     	;# 
  1175  008D                     	;# 
  1176  008E                     	;# 
  1177  008E                     	;# 
  1178  008F                     	;# 
  1179  0090                     	;# 
  1180  0090                     	;# 
  1181  0091                     	;# 
  1182  0093                     	;# 
  1183  0094                     	;# 
  1184  0095                     	;# 
  1185  0096                     	;# 
  1186  0097                     	;# 
  1187  0098                     	;# 
  1188  0099                     	;# 
  1189  009A                     	;# 
  1190  009B                     	;# 
  1191  009C                     	;# 
  1192  009D                     	;# 
  1193  009E                     	;# 
  1194  010C                     	;# 
  1195  010D                     	;# 
  1196  010E                     	;# 
  1197  010E                     	;# 
  1198  010F                     	;# 
  1199  0110                     	;# 
  1200  0110                     	;# 
  1201  0111                     	;# 
  1202  0112                     	;# 
  1203  0112                     	;# 
  1204  0113                     	;# 
  1205  0114                     	;# 
  1206  0114                     	;# 
  1207  0115                     	;# 
  1208  0116                     	;# 
  1209  0116                     	;# 
  1210  0117                     	;# 
  1211  0119                     	;# 
  1212  0119                     	;# 
  1213  0119                     	;# 
  1214  011A                     	;# 
  1215  011A                     	;# 
  1216  011A                     	;# 
  1217  011B                     	;# 
  1218  011B                     	;# 
  1219  011B                     	;# 
  1220  011B                     	;# 
  1221  011B                     	;# 
  1222  011C                     	;# 
  1223  011C                     	;# 
  1224  011C                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011D                     	;# 
  1228  011E                     	;# 
  1229  011E                     	;# 
  1230  011E                     	;# 
  1231  011F                     	;# 
  1232  011F                     	;# 
  1233  011F                     	;# 
  1234  011F                     	;# 
  1235  011F                     	;# 
  1236  018C                     	;# 
  1237  018D                     	;# 
  1238  018E                     	;# 
  1239  018F                     	;# 
  1240  0190                     	;# 
  1241  0191                     	;# 
  1242  0192                     	;# 
  1243  0196                     	;# 
  1244  0197                     	;# 
  1245  0198                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019B                     	;# 
  1249  019C                     	;# 
  1250  020C                     	;# 
  1251  020C                     	;# 
  1252  020D                     	;# 
  1253  020E                     	;# 
  1254  020F                     	;# 
  1255  020F                     	;# 
  1256  0210                     	;# 
  1257  0210                     	;# 
  1258  0211                     	;# 
  1259  0211                     	;# 
  1260  0212                     	;# 
  1261  0212                     	;# 
  1262  0213                     	;# 
  1263  0214                     	;# 
  1264  0215                     	;# 
  1265  0215                     	;# 
  1266  0216                     	;# 
  1267  0216                     	;# 
  1268  0217                     	;# 
  1269  0217                     	;# 
  1270  0218                     	;# 
  1271  0218                     	;# 
  1272  0219                     	;# 
  1273  021A                     	;# 
  1274  021B                     	;# 
  1275  021B                     	;# 
  1276  021C                     	;# 
  1277  021C                     	;# 
  1278  021D                     	;# 
  1279  021D                     	;# 
  1280  021E                     	;# 
  1281  021F                     	;# 
  1282  028C                     	;# 
  1283  028C                     	;# 
  1284  028D                     	;# 
  1285  028D                     	;# 
  1286  028E                     	;# 
  1287  028F                     	;# 
  1288  0290                     	;# 
  1289  0290                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0292                     	;# 
  1293  0293                     	;# 
  1294  0293                     	;# 
  1295  0294                     	;# 
  1296  0295                     	;# 
  1297  0296                     	;# 
  1298  0296                     	;# 
  1299  0297                     	;# 
  1300  0298                     	;# 
  1301  0298                     	;# 
  1302  0299                     	;# 
  1303  0299                     	;# 
  1304  029A                     	;# 
  1305  029B                     	;# 
  1306  029C                     	;# 
  1307  029C                     	;# 
  1308  029D                     	;# 
  1309  030C                     	;# 
  1310  030C                     	;# 
  1311  030D                     	;# 
  1312  030E                     	;# 
  1313  030F                     	;# 
  1314  0310                     	;# 
  1315  0310                     	;# 
  1316  0311                     	;# 
  1317  0312                     	;# 
  1318  0313                     	;# 
  1319  0314                     	;# 
  1320  0314                     	;# 
  1321  0315                     	;# 
  1322  0316                     	;# 
  1323  0317                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  031B                     	;# 
  1329  031C                     	;# 
  1330  031C                     	;# 
  1331  031D                     	;# 
  1332  031E                     	;# 
  1333  031F                     	;# 
  1334  038C                     	;# 
  1335  038D                     	;# 
  1336  038E                     	;# 
  1337  0390                     	;# 
  1338  0391                     	;# 
  1339  0392                     	;# 
  1340  040C                     	;# 
  1341  040D                     	;# 
  1342  040E                     	;# 
  1343  040F                     	;# 
  1344  0410                     	;# 
  1345  0411                     	;# 
  1346  0416                     	;# 
  1347  0416                     	;# 
  1348  0417                     	;# 
  1349  0418                     	;# 
  1350  0418                     	;# 
  1351  0419                     	;# 
  1352  041A                     	;# 
  1353  041A                     	;# 
  1354  041B                     	;# 
  1355  041C                     	;# 
  1356  041C                     	;# 
  1357  041D                     	;# 
  1358  041E                     	;# 
  1359  041F                     	;# 
  1360  048C                     	;# 
  1361  048C                     	;# 
  1362  048D                     	;# 
  1363  048E                     	;# 
  1364  048F                     	;# 
  1365  048F                     	;# 
  1366  0490                     	;# 
  1367  0491                     	;# 
  1368  0492                     	;# 
  1369  0492                     	;# 
  1370  0493                     	;# 
  1371  0494                     	;# 
  1372  0495                     	;# 
  1373  0495                     	;# 
  1374  0496                     	;# 
  1375  0497                     	;# 
  1376  0498                     	;# 
  1377  0499                     	;# 
  1378  049A                     	;# 
  1379  049B                     	;# 
  1380  049C                     	;# 
  1381  049D                     	;# 
  1382  050C                     	;# 
  1383  050C                     	;# 
  1384  050D                     	;# 
  1385  050E                     	;# 
  1386  050F                     	;# 
  1387  050F                     	;# 
  1388  0510                     	;# 
  1389  0511                     	;# 
  1390  0512                     	;# 
  1391  0512                     	;# 
  1392  0513                     	;# 
  1393  0514                     	;# 
  1394  0515                     	;# 
  1395  0515                     	;# 
  1396  0516                     	;# 
  1397  0517                     	;# 
  1398  0518                     	;# 
  1399  0519                     	;# 
  1400  051A                     	;# 
  1401  051B                     	;# 
  1402  051C                     	;# 
  1403  051D                     	;# 
  1404  058C                     	;# 
  1405  058C                     	;# 
  1406  058D                     	;# 
  1407  058E                     	;# 
  1408  058F                     	;# 
  1409  058F                     	;# 
  1410  0590                     	;# 
  1411  0591                     	;# 
  1412  0592                     	;# 
  1413  0593                     	;# 
  1414  060C                     	;# 
  1415  060D                     	;# 
  1416  060E                     	;# 
  1417  060F                     	;# 
  1418  0610                     	;# 
  1419  0611                     	;# 
  1420  0612                     	;# 
  1421  0613                     	;# 
  1422  0614                     	;# 
  1423  0616                     	;# 
  1424  0617                     	;# 
  1425  0618                     	;# 
  1426  0619                     	;# 
  1427  061A                     	;# 
  1428  061B                     	;# 
  1429  061C                     	;# 
  1430  061D                     	;# 
  1431  061E                     	;# 
  1432  068C                     	;# 
  1433  068D                     	;# 
  1434  068E                     	;# 
  1435  068F                     	;# 
  1436  0690                     	;# 
  1437  0691                     	;# 
  1438  0692                     	;# 
  1439  0693                     	;# 
  1440  0694                     	;# 
  1441  070C                     	;# 
  1442  070D                     	;# 
  1443  070E                     	;# 
  1444  070F                     	;# 
  1445  0710                     	;# 
  1446  0711                     	;# 
  1447  0712                     	;# 
  1448  0713                     	;# 
  1449  0714                     	;# 
  1450  0716                     	;# 
  1451  0717                     	;# 
  1452  0718                     	;# 
  1453  0719                     	;# 
  1454  071A                     	;# 
  1455  071B                     	;# 
  1456  071C                     	;# 
  1457  071D                     	;# 
  1458  071E                     	;# 
  1459  0796                     	;# 
  1460  0797                     	;# 
  1461  0798                     	;# 
  1462  0799                     	;# 
  1463  079A                     	;# 
  1464  079B                     	;# 
  1465  080C                     	;# 
  1466  080D                     	;# 
  1467  080E                     	;# 
  1468  080F                     	;# 
  1469  0810                     	;# 
  1470  0811                     	;# 
  1471  0812                     	;# 
  1472  0813                     	;# 
  1473  0814                     	;# 
  1474  081A                     	;# 
  1475  081B                     	;# 
  1476  081C                     	;# 
  1477  081D                     	;# 
  1478  081E                     	;# 
  1479  081F                     	;# 
  1480  088C                     	;# 
  1481  088D                     	;# 
  1482  088E                     	;# 
  1483  088F                     	;# 
  1484  0890                     	;# 
  1485  0891                     	;# 
  1486  0892                     	;# 
  1487  0893                     	;# 
  1488  0895                     	;# 
  1489  0896                     	;# 
  1490  0897                     	;# 
  1491  0898                     	;# 
  1492  0899                     	;# 
  1493  089A                     	;# 
  1494  089B                     	;# 
  1495  090C                     	;# 
  1496  090E                     	;# 
  1497  090F                     	;# 
  1498  091F                     	;# 
  1499  091F                     	;# 
  1500  098F                     	;# 
  1501  098F                     	;# 
  1502  0990                     	;# 
  1503  0991                     	;# 
  1504  0992                     	;# 
  1505  0993                     	;# 
  1506  0994                     	;# 
  1507  0995                     	;# 
  1508  0996                     	;# 
  1509  0997                     	;# 
  1510  0E0F                     	;# 
  1511  0E10                     	;# 
  1512  0E11                     	;# 
  1513  0E12                     	;# 
  1514  0E13                     	;# 
  1515  0E14                     	;# 
  1516  0E15                     	;# 
  1517  0E16                     	;# 
  1518  0E17                     	;# 
  1519  0E18                     	;# 
  1520  0E19                     	;# 
  1521  0E1A                     	;# 
  1522  0E1B                     	;# 
  1523  0E1C                     	;# 
  1524  0E1D                     	;# 
  1525  0E1E                     	;# 
  1526  0E1F                     	;# 
  1527  0E20                     	;# 
  1528  0E21                     	;# 
  1529  0E22                     	;# 
  1530  0E23                     	;# 
  1531  0E24                     	;# 
  1532  0E25                     	;# 
  1533  0E26                     	;# 
  1534  0E27                     	;# 
  1535  0E28                     	;# 
  1536  0E29                     	;# 
  1537  0E2A                     	;# 
  1538  0E2B                     	;# 
  1539  0E2C                     	;# 
  1540  0E2D                     	;# 
  1541  0E2E                     	;# 
  1542  0E2F                     	;# 
  1543  0E30                     	;# 
  1544  0E31                     	;# 
  1545  0E32                     	;# 
  1546  0E33                     	;# 
  1547  0E34                     	;# 
  1548  0E35                     	;# 
  1549  0E36                     	;# 
  1550  0E37                     	;# 
  1551  0E8F                     	;# 
  1552  0E90                     	;# 
  1553  0E91                     	;# 
  1554  0E92                     	;# 
  1555  0E93                     	;# 
  1556  0E94                     	;# 
  1557  0E95                     	;# 
  1558  0E96                     	;# 
  1559  0E97                     	;# 
  1560  0E9C                     	;# 
  1561  0E9D                     	;# 
  1562  0E9E                     	;# 
  1563  0EA1                     	;# 
  1564  0EA2                     	;# 
  1565  0EA3                     	;# 
  1566  0EA4                     	;# 
  1567  0EA5                     	;# 
  1568  0EA9                     	;# 
  1569  0EAA                     	;# 
  1570  0EAB                     	;# 
  1571  0EAC                     	;# 
  1572  0EB1                     	;# 
  1573  0EB2                     	;# 
  1574  0EB3                     	;# 
  1575  0EB8                     	;# 
  1576  0EB9                     	;# 
  1577  0EBA                     	;# 
  1578  0EBB                     	;# 
  1579  0EBC                     	;# 
  1580  0EBD                     	;# 
  1581  0EBE                     	;# 
  1582  0EC3                     	;# 
  1583  0EC5                     	;# 
  1584  0EC6                     	;# 
  1585  0EC7                     	;# 
  1586  0EC8                     	;# 
  1587  0EC9                     	;# 
  1588  0ECA                     	;# 
  1589  0ECB                     	;# 
  1590  0ECC                     	;# 
  1591  0F10                     	;# 
  1592  0F11                     	;# 
  1593  0F12                     	;# 
  1594  0F13                     	;# 
  1595  0F14                     	;# 
  1596  0F15                     	;# 
  1597  0F16                     	;# 
  1598  0F17                     	;# 
  1599  0F18                     	;# 
  1600  0F19                     	;# 
  1601  0F1A                     	;# 
  1602  0F1B                     	;# 
  1603  0F1C                     	;# 
  1604  0F1D                     	;# 
  1605  0F1E                     	;# 
  1606  0F1F                     	;# 
  1607  0F20                     	;# 
  1608  0F21                     	;# 
  1609  0F22                     	;# 
  1610  0F23                     	;# 
  1611  0F24                     	;# 
  1612  0F25                     	;# 
  1613  0F26                     	;# 
  1614  0F27                     	;# 
  1615  0F38                     	;# 
  1616  0F39                     	;# 
  1617  0F3A                     	;# 
  1618  0F3B                     	;# 
  1619  0F3C                     	;# 
  1620  0F3D                     	;# 
  1621  0F3E                     	;# 
  1622  0F3F                     	;# 
  1623  0F40                     	;# 
  1624  0F41                     	;# 
  1625  0F43                     	;# 
  1626  0F44                     	;# 
  1627  0F45                     	;# 
  1628  0F46                     	;# 
  1629  0F47                     	;# 
  1630  0F48                     	;# 
  1631  0F49                     	;# 
  1632  0F4A                     	;# 
  1633  0F4B                     	;# 
  1634  0F4C                     	;# 
  1635  0F4E                     	;# 
  1636  0F4F                     	;# 
  1637  0F50                     	;# 
  1638  0F51                     	;# 
  1639  0F52                     	;# 
  1640  0F53                     	;# 
  1641  0F54                     	;# 
  1642  0F55                     	;# 
  1643  0F56                     	;# 
  1644  0F57                     	;# 
  1645  0F65                     	;# 
  1646  0F68                     	;# 
  1647  0F69                     	;# 
  1648  0F6A                     	;# 
  1649  0F6B                     	;# 
  1650  0FE4                     	;# 
  1651  0FE5                     	;# 
  1652  0FE6                     	;# 
  1653  0FE7                     	;# 
  1654  0FE8                     	;# 
  1655  0FE9                     	;# 
  1656  0FEA                     	;# 
  1657  0FEB                     	;# 
  1658  0FED                     	;# 
  1659  0FEE                     	;# 
  1660  0FEF                     	;# 
  1661  0000                     	;# 
  1662  0001                     	;# 
  1663  0002                     	;# 
  1664  0003                     	;# 
  1665  0004                     	;# 
  1666  0005                     	;# 
  1667  0006                     	;# 
  1668  0007                     	;# 
  1669  0008                     	;# 
  1670  0009                     	;# 
  1671  000A                     	;# 
  1672  000B                     	;# 
  1673  000C                     	;# 
  1674  000D                     	;# 
  1675  000E                     	;# 
  1676  0010                     	;# 
  1677  0011                     	;# 
  1678  0012                     	;# 
  1679  0013                     	;# 
  1680  0016                     	;# 
  1681  0017                     	;# 
  1682  0018                     	;# 
  1683  001C                     	;# 
  1684  001C                     	;# 
  1685  001D                     	;# 
  1686  001D                     	;# 
  1687  001E                     	;# 
  1688  001F                     	;# 
  1689  008C                     	;# 
  1690  008C                     	;# 
  1691  008D                     	;# 
  1692  008E                     	;# 
  1693  008E                     	;# 
  1694  008F                     	;# 
  1695  0090                     	;# 
  1696  0090                     	;# 
  1697  0091                     	;# 
  1698  0093                     	;# 
  1699  0094                     	;# 
  1700  0095                     	;# 
  1701  0096                     	;# 
  1702  0097                     	;# 
  1703  0098                     	;# 
  1704  0099                     	;# 
  1705  009A                     	;# 
  1706  009B                     	;# 
  1707  009C                     	;# 
  1708  009D                     	;# 
  1709  009E                     	;# 
  1710  010C                     	;# 
  1711  010D                     	;# 
  1712  010E                     	;# 
  1713  010E                     	;# 
  1714  010F                     	;# 
  1715  0110                     	;# 
  1716  0110                     	;# 
  1717  0111                     	;# 
  1718  0112                     	;# 
  1719  0112                     	;# 
  1720  0113                     	;# 
  1721  0114                     	;# 
  1722  0114                     	;# 
  1723  0115                     	;# 
  1724  0116                     	;# 
  1725  0116                     	;# 
  1726  0117                     	;# 
  1727  0119                     	;# 
  1728  0119                     	;# 
  1729  0119                     	;# 
  1730  011A                     	;# 
  1731  011A                     	;# 
  1732  011A                     	;# 
  1733  011B                     	;# 
  1734  011B                     	;# 
  1735  011B                     	;# 
  1736  011B                     	;# 
  1737  011B                     	;# 
  1738  011C                     	;# 
  1739  011C                     	;# 
  1740  011C                     	;# 
  1741  011D                     	;# 
  1742  011D                     	;# 
  1743  011D                     	;# 
  1744  011E                     	;# 
  1745  011E                     	;# 
  1746  011E                     	;# 
  1747  011F                     	;# 
  1748  011F                     	;# 
  1749  011F                     	;# 
  1750  011F                     	;# 
  1751  011F                     	;# 
  1752  018C                     	;# 
  1753  018D                     	;# 
  1754  018E                     	;# 
  1755  018F                     	;# 
  1756  0190                     	;# 
  1757  0191                     	;# 
  1758  0192                     	;# 
  1759  0196                     	;# 
  1760  0197                     	;# 
  1761  0198                     	;# 
  1762  0199                     	;# 
  1763  019A                     	;# 
  1764  019B                     	;# 
  1765  019C                     	;# 
  1766  020C                     	;# 
  1767  020C                     	;# 
  1768  020D                     	;# 
  1769  020E                     	;# 
  1770  020F                     	;# 
  1771  020F                     	;# 
  1772  0210                     	;# 
  1773  0210                     	;# 
  1774  0211                     	;# 
  1775  0211                     	;# 
  1776  0212                     	;# 
  1777  0212                     	;# 
  1778  0213                     	;# 
  1779  0214                     	;# 
  1780  0215                     	;# 
  1781  0215                     	;# 
  1782  0216                     	;# 
  1783  0216                     	;# 
  1784  0217                     	;# 
  1785  0217                     	;# 
  1786  0218                     	;# 
  1787  0218                     	;# 
  1788  0219                     	;# 
  1789  021A                     	;# 
  1790  021B                     	;# 
  1791  021B                     	;# 
  1792  021C                     	;# 
  1793  021C                     	;# 
  1794  021D                     	;# 
  1795  021D                     	;# 
  1796  021E                     	;# 
  1797  021F                     	;# 
  1798  028C                     	;# 
  1799  028C                     	;# 
  1800  028D                     	;# 
  1801  028D                     	;# 
  1802  028E                     	;# 
  1803  028F                     	;# 
  1804  0290                     	;# 
  1805  0290                     	;# 
  1806  0291                     	;# 
  1807  0292                     	;# 
  1808  0292                     	;# 
  1809  0293                     	;# 
  1810  0293                     	;# 
  1811  0294                     	;# 
  1812  0295                     	;# 
  1813  0296                     	;# 
  1814  0296                     	;# 
  1815  0297                     	;# 
  1816  0298                     	;# 
  1817  0298                     	;# 
  1818  0299                     	;# 
  1819  0299                     	;# 
  1820  029A                     	;# 
  1821  029B                     	;# 
  1822  029C                     	;# 
  1823  029C                     	;# 
  1824  029D                     	;# 
  1825  030C                     	;# 
  1826  030C                     	;# 
  1827  030D                     	;# 
  1828  030E                     	;# 
  1829  030F                     	;# 
  1830  0310                     	;# 
  1831  0310                     	;# 
  1832  0311                     	;# 
  1833  0312                     	;# 
  1834  0313                     	;# 
  1835  0314                     	;# 
  1836  0314                     	;# 
  1837  0315                     	;# 
  1838  0316                     	;# 
  1839  0317                     	;# 
  1840  0318                     	;# 
  1841  0318                     	;# 
  1842  0319                     	;# 
  1843  031A                     	;# 
  1844  031B                     	;# 
  1845  031C                     	;# 
  1846  031C                     	;# 
  1847  031D                     	;# 
  1848  031E                     	;# 
  1849  031F                     	;# 
  1850  038C                     	;# 
  1851  038D                     	;# 
  1852  038E                     	;# 
  1853  0390                     	;# 
  1854  0391                     	;# 
  1855  0392                     	;# 
  1856  040C                     	;# 
  1857  040D                     	;# 
  1858  040E                     	;# 
  1859  040F                     	;# 
  1860  0410                     	;# 
  1861  0411                     	;# 
  1862  0416                     	;# 
  1863  0416                     	;# 
  1864  0417                     	;# 
  1865  0418                     	;# 
  1866  0418                     	;# 
  1867  0419                     	;# 
  1868  041A                     	;# 
  1869  041A                     	;# 
  1870  041B                     	;# 
  1871  041C                     	;# 
  1872  041C                     	;# 
  1873  041D                     	;# 
  1874  041E                     	;# 
  1875  041F                     	;# 
  1876  048C                     	;# 
  1877  048C                     	;# 
  1878  048D                     	;# 
  1879  048E                     	;# 
  1880  048F                     	;# 
  1881  048F                     	;# 
  1882  0490                     	;# 
  1883  0491                     	;# 
  1884  0492                     	;# 
  1885  0492                     	;# 
  1886  0493                     	;# 
  1887  0494                     	;# 
  1888  0495                     	;# 
  1889  0495                     	;# 
  1890  0496                     	;# 
  1891  0497                     	;# 
  1892  0498                     	;# 
  1893  0499                     	;# 
  1894  049A                     	;# 
  1895  049B                     	;# 
  1896  049C                     	;# 
  1897  049D                     	;# 
  1898  050C                     	;# 
  1899  050C                     	;# 
  1900  050D                     	;# 
  1901  050E                     	;# 
  1902  050F                     	;# 
  1903  050F                     	;# 
  1904  0510                     	;# 
  1905  0511                     	;# 
  1906  0512                     	;# 
  1907  0512                     	;# 
  1908  0513                     	;# 
  1909  0514                     	;# 
  1910  0515                     	;# 
  1911  0515                     	;# 
  1912  0516                     	;# 
  1913  0517                     	;# 
  1914  0518                     	;# 
  1915  0519                     	;# 
  1916  051A                     	;# 
  1917  051B                     	;# 
  1918  051C                     	;# 
  1919  051D                     	;# 
  1920  058C                     	;# 
  1921  058C                     	;# 
  1922  058D                     	;# 
  1923  058E                     	;# 
  1924  058F                     	;# 
  1925  058F                     	;# 
  1926  0590                     	;# 
  1927  0591                     	;# 
  1928  0592                     	;# 
  1929  0593                     	;# 
  1930  060C                     	;# 
  1931  060D                     	;# 
  1932  060E                     	;# 
  1933  060F                     	;# 
  1934  0610                     	;# 
  1935  0611                     	;# 
  1936  0612                     	;# 
  1937  0613                     	;# 
  1938  0614                     	;# 
  1939  0616                     	;# 
  1940  0617                     	;# 
  1941  0618                     	;# 
  1942  0619                     	;# 
  1943  061A                     	;# 
  1944  061B                     	;# 
  1945  061C                     	;# 
  1946  061D                     	;# 
  1947  061E                     	;# 
  1948  068C                     	;# 
  1949  068D                     	;# 
  1950  068E                     	;# 
  1951  068F                     	;# 
  1952  0690                     	;# 
  1953  0691                     	;# 
  1954  0692                     	;# 
  1955  0693                     	;# 
  1956  0694                     	;# 
  1957  070C                     	;# 
  1958  070D                     	;# 
  1959  070E                     	;# 
  1960  070F                     	;# 
  1961  0710                     	;# 
  1962  0711                     	;# 
  1963  0712                     	;# 
  1964  0713                     	;# 
  1965  0714                     	;# 
  1966  0716                     	;# 
  1967  0717                     	;# 
  1968  0718                     	;# 
  1969  0719                     	;# 
  1970  071A                     	;# 
  1971  071B                     	;# 
  1972  071C                     	;# 
  1973  071D                     	;# 
  1974  071E                     	;# 
  1975  0796                     	;# 
  1976  0797                     	;# 
  1977  0798                     	;# 
  1978  0799                     	;# 
  1979  079A                     	;# 
  1980  079B                     	;# 
  1981  080C                     	;# 
  1982  080D                     	;# 
  1983  080E                     	;# 
  1984  080F                     	;# 
  1985  0810                     	;# 
  1986  0811                     	;# 
  1987  0812                     	;# 
  1988  0813                     	;# 
  1989  0814                     	;# 
  1990  081A                     	;# 
  1991  081B                     	;# 
  1992  081C                     	;# 
  1993  081D                     	;# 
  1994  081E                     	;# 
  1995  081F                     	;# 
  1996  088C                     	;# 
  1997  088D                     	;# 
  1998  088E                     	;# 
  1999  088F                     	;# 
  2000  0890                     	;# 
  2001  0891                     	;# 
  2002  0892                     	;# 
  2003  0893                     	;# 
  2004  0895                     	;# 
  2005  0896                     	;# 
  2006  0897                     	;# 
  2007  0898                     	;# 
  2008  0899                     	;# 
  2009  089A                     	;# 
  2010  089B                     	;# 
  2011  090C                     	;# 
  2012  090E                     	;# 
  2013  090F                     	;# 
  2014  091F                     	;# 
  2015  091F                     	;# 
  2016  098F                     	;# 
  2017  098F                     	;# 
  2018  0990                     	;# 
  2019  0991                     	;# 
  2020  0992                     	;# 
  2021  0993                     	;# 
  2022  0994                     	;# 
  2023  0995                     	;# 
  2024  0996                     	;# 
  2025  0997                     	;# 
  2026  0E0F                     	;# 
  2027  0E10                     	;# 
  2028  0E11                     	;# 
  2029  0E12                     	;# 
  2030  0E13                     	;# 
  2031  0E14                     	;# 
  2032  0E15                     	;# 
  2033  0E16                     	;# 
  2034  0E17                     	;# 
  2035  0E18                     	;# 
  2036  0E19                     	;# 
  2037  0E1A                     	;# 
  2038  0E1B                     	;# 
  2039  0E1C                     	;# 
  2040  0E1D                     	;# 
  2041  0E1E                     	;# 
  2042  0E1F                     	;# 
  2043  0E20                     	;# 
  2044  0E21                     	;# 
  2045  0E22                     	;# 
  2046  0E23                     	;# 
  2047  0E24                     	;# 
  2048  0E25                     	;# 
  2049  0E26                     	;# 
  2050  0E27                     	;# 
  2051  0E28                     	;# 
  2052  0E29                     	;# 
  2053  0E2A                     	;# 
  2054  0E2B                     	;# 
  2055  0E2C                     	;# 
  2056  0E2D                     	;# 
  2057  0E2E                     	;# 
  2058  0E2F                     	;# 
  2059  0E30                     	;# 
  2060  0E31                     	;# 
  2061  0E32                     	;# 
  2062  0E33                     	;# 
  2063  0E34                     	;# 
  2064  0E35                     	;# 
  2065  0E36                     	;# 
  2066  0E37                     	;# 
  2067  0E8F                     	;# 
  2068  0E90                     	;# 
  2069  0E91                     	;# 
  2070  0E92                     	;# 
  2071  0E93                     	;# 
  2072  0E94                     	;# 
  2073  0E95                     	;# 
  2074  0E96                     	;# 
  2075  0E97                     	;# 
  2076  0E9C                     	;# 
  2077  0E9D                     	;# 
  2078  0E9E                     	;# 
  2079  0EA1                     	;# 
  2080  0EA2                     	;# 
  2081  0EA3                     	;# 
  2082  0EA4                     	;# 
  2083  0EA5                     	;# 
  2084  0EA9                     	;# 
  2085  0EAA                     	;# 
  2086  0EAB                     	;# 
  2087  0EAC                     	;# 
  2088  0EB1                     	;# 
  2089  0EB2                     	;# 
  2090  0EB3                     	;# 
  2091  0EB8                     	;# 
  2092  0EB9                     	;# 
  2093  0EBA                     	;# 
  2094  0EBB                     	;# 
  2095  0EBC                     	;# 
  2096  0EBD                     	;# 
  2097  0EBE                     	;# 
  2098  0EC3                     	;# 
  2099  0EC5                     	;# 
  2100  0EC6                     	;# 
  2101  0EC7                     	;# 
  2102  0EC8                     	;# 
  2103  0EC9                     	;# 
  2104  0ECA                     	;# 
  2105  0ECB                     	;# 
  2106  0ECC                     	;# 
  2107  0F10                     	;# 
  2108  0F11                     	;# 
  2109  0F12                     	;# 
  2110  0F13                     	;# 
  2111  0F14                     	;# 
  2112  0F15                     	;# 
  2113  0F16                     	;# 
  2114  0F17                     	;# 
  2115  0F18                     	;# 
  2116  0F19                     	;# 
  2117  0F1A                     	;# 
  2118  0F1B                     	;# 
  2119  0F1C                     	;# 
  2120  0F1D                     	;# 
  2121  0F1E                     	;# 
  2122  0F1F                     	;# 
  2123  0F20                     	;# 
  2124  0F21                     	;# 
  2125  0F22                     	;# 
  2126  0F23                     	;# 
  2127  0F24                     	;# 
  2128  0F25                     	;# 
  2129  0F26                     	;# 
  2130  0F27                     	;# 
  2131  0F38                     	;# 
  2132  0F39                     	;# 
  2133  0F3A                     	;# 
  2134  0F3B                     	;# 
  2135  0F3C                     	;# 
  2136  0F3D                     	;# 
  2137  0F3E                     	;# 
  2138  0F3F                     	;# 
  2139  0F40                     	;# 
  2140  0F41                     	;# 
  2141  0F43                     	;# 
  2142  0F44                     	;# 
  2143  0F45                     	;# 
  2144  0F46                     	;# 
  2145  0F47                     	;# 
  2146  0F48                     	;# 
  2147  0F49                     	;# 
  2148  0F4A                     	;# 
  2149  0F4B                     	;# 
  2150  0F4C                     	;# 
  2151  0F4E                     	;# 
  2152  0F4F                     	;# 
  2153  0F50                     	;# 
  2154  0F51                     	;# 
  2155  0F52                     	;# 
  2156  0F53                     	;# 
  2157  0F54                     	;# 
  2158  0F55                     	;# 
  2159  0F56                     	;# 
  2160  0F57                     	;# 
  2161  0F65                     	;# 
  2162  0F68                     	;# 
  2163  0F69                     	;# 
  2164  0F6A                     	;# 
  2165  0F6B                     	;# 
  2166  0FE4                     	;# 
  2167  0FE5                     	;# 
  2168  0FE6                     	;# 
  2169  0FE7                     	;# 
  2170  0FE8                     	;# 
  2171  0FE9                     	;# 
  2172  0FEA                     	;# 
  2173  0FEB                     	;# 
  2174  0FED                     	;# 
  2175  0FEE                     	;# 
  2176  0FEF                     	;# 
  2177  0000                     	;# 
  2178  0001                     	;# 
  2179  0002                     	;# 
  2180  0003                     	;# 
  2181  0004                     	;# 
  2182  0005                     	;# 
  2183  0006                     	;# 
  2184  0007                     	;# 
  2185  0008                     	;# 
  2186  0009                     	;# 
  2187  000A                     	;# 
  2188  000B                     	;# 
  2189  000C                     	;# 
  2190  000D                     	;# 
  2191  000E                     	;# 
  2192  0010                     	;# 
  2193  0011                     	;# 
  2194  0012                     	;# 
  2195  0013                     	;# 
  2196  0016                     	;# 
  2197  0017                     	;# 
  2198  0018                     	;# 
  2199  001C                     	;# 
  2200  001C                     	;# 
  2201  001D                     	;# 
  2202  001D                     	;# 
  2203  001E                     	;# 
  2204  001F                     	;# 
  2205  008C                     	;# 
  2206  008C                     	;# 
  2207  008D                     	;# 
  2208  008E                     	;# 
  2209  008E                     	;# 
  2210  008F                     	;# 
  2211  0090                     	;# 
  2212  0090                     	;# 
  2213  0091                     	;# 
  2214  0093                     	;# 
  2215  0094                     	;# 
  2216  0095                     	;# 
  2217  0096                     	;# 
  2218  0097                     	;# 
  2219  0098                     	;# 
  2220  0099                     	;# 
  2221  009A                     	;# 
  2222  009B                     	;# 
  2223  009C                     	;# 
  2224  009D                     	;# 
  2225  009E                     	;# 
  2226  010C                     	;# 
  2227  010D                     	;# 
  2228  010E                     	;# 
  2229  010E                     	;# 
  2230  010F                     	;# 
  2231  0110                     	;# 
  2232  0110                     	;# 
  2233  0111                     	;# 
  2234  0112                     	;# 
  2235  0112                     	;# 
  2236  0113                     	;# 
  2237  0114                     	;# 
  2238  0114                     	;# 
  2239  0115                     	;# 
  2240  0116                     	;# 
  2241  0116                     	;# 
  2242  0117                     	;# 
  2243  0119                     	;# 
  2244  0119                     	;# 
  2245  0119                     	;# 
  2246  011A                     	;# 
  2247  011A                     	;# 
  2248  011A                     	;# 
  2249  011B                     	;# 
  2250  011B                     	;# 
  2251  011B                     	;# 
  2252  011B                     	;# 
  2253  011B                     	;# 
  2254  011C                     	;# 
  2255  011C                     	;# 
  2256  011C                     	;# 
  2257  011D                     	;# 
  2258  011D                     	;# 
  2259  011D                     	;# 
  2260  011E                     	;# 
  2261  011E                     	;# 
  2262  011E                     	;# 
  2263  011F                     	;# 
  2264  011F                     	;# 
  2265  011F                     	;# 
  2266  011F                     	;# 
  2267  011F                     	;# 
  2268  018C                     	;# 
  2269  018D                     	;# 
  2270  018E                     	;# 
  2271  018F                     	;# 
  2272  0190                     	;# 
  2273  0191                     	;# 
  2274  0192                     	;# 
  2275  0196                     	;# 
  2276  0197                     	;# 
  2277  0198                     	;# 
  2278  0199                     	;# 
  2279  019A                     	;# 
  2280  019B                     	;# 
  2281  019C                     	;# 
  2282  020C                     	;# 
  2283  020C                     	;# 
  2284  020D                     	;# 
  2285  020E                     	;# 
  2286  020F                     	;# 
  2287  020F                     	;# 
  2288  0210                     	;# 
  2289  0210                     	;# 
  2290  0211                     	;# 
  2291  0211                     	;# 
  2292  0212                     	;# 
  2293  0212                     	;# 
  2294  0213                     	;# 
  2295  0214                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0216                     	;# 
  2299  0216                     	;# 
  2300  0217                     	;# 
  2301  0217                     	;# 
  2302  0218                     	;# 
  2303  0218                     	;# 
  2304  0219                     	;# 
  2305  021A                     	;# 
  2306  021B                     	;# 
  2307  021B                     	;# 
  2308  021C                     	;# 
  2309  021C                     	;# 
  2310  021D                     	;# 
  2311  021D                     	;# 
  2312  021E                     	;# 
  2313  021F                     	;# 
  2314  028C                     	;# 
  2315  028C                     	;# 
  2316  028D                     	;# 
  2317  028D                     	;# 
  2318  028E                     	;# 
  2319  028F                     	;# 
  2320  0290                     	;# 
  2321  0290                     	;# 
  2322  0291                     	;# 
  2323  0292                     	;# 
  2324  0292                     	;# 
  2325  0293                     	;# 
  2326  0293                     	;# 
  2327  0294                     	;# 
  2328  0295                     	;# 
  2329  0296                     	;# 
  2330  0296                     	;# 
  2331  0297                     	;# 
  2332  0298                     	;# 
  2333  0298                     	;# 
  2334  0299                     	;# 
  2335  0299                     	;# 
  2336  029A                     	;# 
  2337  029B                     	;# 
  2338  029C                     	;# 
  2339  029C                     	;# 
  2340  029D                     	;# 
  2341  030C                     	;# 
  2342  030C                     	;# 
  2343  030D                     	;# 
  2344  030E                     	;# 
  2345  030F                     	;# 
  2346  0310                     	;# 
  2347  0310                     	;# 
  2348  0311                     	;# 
  2349  0312                     	;# 
  2350  0313                     	;# 
  2351  0314                     	;# 
  2352  0314                     	;# 
  2353  0315                     	;# 
  2354  0316                     	;# 
  2355  0317                     	;# 
  2356  0318                     	;# 
  2357  0318                     	;# 
  2358  0319                     	;# 
  2359  031A                     	;# 
  2360  031B                     	;# 
  2361  031C                     	;# 
  2362  031C                     	;# 
  2363  031D                     	;# 
  2364  031E                     	;# 
  2365  031F                     	;# 
  2366  038C                     	;# 
  2367  038D                     	;# 
  2368  038E                     	;# 
  2369  0390                     	;# 
  2370  0391                     	;# 
  2371  0392                     	;# 
  2372  040C                     	;# 
  2373  040D                     	;# 
  2374  040E                     	;# 
  2375  040F                     	;# 
  2376  0410                     	;# 
  2377  0411                     	;# 
  2378  0416                     	;# 
  2379  0416                     	;# 
  2380  0417                     	;# 
  2381  0418                     	;# 
  2382  0418                     	;# 
  2383  0419                     	;# 
  2384  041A                     	;# 
  2385  041A                     	;# 
  2386  041B                     	;# 
  2387  041C                     	;# 
  2388  041C                     	;# 
  2389  041D                     	;# 
  2390  041E                     	;# 
  2391  041F                     	;# 
  2392  048C                     	;# 
  2393  048C                     	;# 
  2394  048D                     	;# 
  2395  048E                     	;# 
  2396  048F                     	;# 
  2397  048F                     	;# 
  2398  0490                     	;# 
  2399  0491                     	;# 
  2400  0492                     	;# 
  2401  0492                     	;# 
  2402  0493                     	;# 
  2403  0494                     	;# 
  2404  0495                     	;# 
  2405  0495                     	;# 
  2406  0496                     	;# 
  2407  0497                     	;# 
  2408  0498                     	;# 
  2409  0499                     	;# 
  2410  049A                     	;# 
  2411  049B                     	;# 
  2412  049C                     	;# 
  2413  049D                     	;# 
  2414  050C                     	;# 
  2415  050C                     	;# 
  2416  050D                     	;# 
  2417  050E                     	;# 
  2418  050F                     	;# 
  2419  050F                     	;# 
  2420  0510                     	;# 
  2421  0511                     	;# 
  2422  0512                     	;# 
  2423  0512                     	;# 
  2424  0513                     	;# 
  2425  0514                     	;# 
  2426  0515                     	;# 
  2427  0515                     	;# 
  2428  0516                     	;# 
  2429  0517                     	;# 
  2430  0518                     	;# 
  2431  0519                     	;# 
  2432  051A                     	;# 
  2433  051B                     	;# 
  2434  051C                     	;# 
  2435  051D                     	;# 
  2436  058C                     	;# 
  2437  058C                     	;# 
  2438  058D                     	;# 
  2439  058E                     	;# 
  2440  058F                     	;# 
  2441  058F                     	;# 
  2442  0590                     	;# 
  2443  0591                     	;# 
  2444  0592                     	;# 
  2445  0593                     	;# 
  2446  060C                     	;# 
  2447  060D                     	;# 
  2448  060E                     	;# 
  2449  060F                     	;# 
  2450  0610                     	;# 
  2451  0611                     	;# 
  2452  0612                     	;# 
  2453  0613                     	;# 
  2454  0614                     	;# 
  2455  0616                     	;# 
  2456  0617                     	;# 
  2457  0618                     	;# 
  2458  0619                     	;# 
  2459  061A                     	;# 
  2460  061B                     	;# 
  2461  061C                     	;# 
  2462  061D                     	;# 
  2463  061E                     	;# 
  2464  068C                     	;# 
  2465  068D                     	;# 
  2466  068E                     	;# 
  2467  068F                     	;# 
  2468  0690                     	;# 
  2469  0691                     	;# 
  2470  0692                     	;# 
  2471  0693                     	;# 
  2472  0694                     	;# 
  2473  070C                     	;# 
  2474  070D                     	;# 
  2475  070E                     	;# 
  2476  070F                     	;# 
  2477  0710                     	;# 
  2478  0711                     	;# 
  2479  0712                     	;# 
  2480  0713                     	;# 
  2481  0714                     	;# 
  2482  0716                     	;# 
  2483  0717                     	;# 
  2484  0718                     	;# 
  2485  0719                     	;# 
  2486  071A                     	;# 
  2487  071B                     	;# 
  2488  071C                     	;# 
  2489  071D                     	;# 
  2490  071E                     	;# 
  2491  0796                     	;# 
  2492  0797                     	;# 
  2493  0798                     	;# 
  2494  0799                     	;# 
  2495  079A                     	;# 
  2496  079B                     	;# 
  2497  080C                     	;# 
  2498  080D                     	;# 
  2499  080E                     	;# 
  2500  080F                     	;# 
  2501  0810                     	;# 
  2502  0811                     	;# 
  2503  0812                     	;# 
  2504  0813                     	;# 
  2505  0814                     	;# 
  2506  081A                     	;# 
  2507  081B                     	;# 
  2508  081C                     	;# 
  2509  081D                     	;# 
  2510  081E                     	;# 
  2511  081F                     	;# 
  2512  088C                     	;# 
  2513  088D                     	;# 
  2514  088E                     	;# 
  2515  088F                     	;# 
  2516  0890                     	;# 
  2517  0891                     	;# 
  2518  0892                     	;# 
  2519  0893                     	;# 
  2520  0895                     	;# 
  2521  0896                     	;# 
  2522  0897                     	;# 
  2523  0898                     	;# 
  2524  0899                     	;# 
  2525  089A                     	;# 
  2526  089B                     	;# 
  2527  090C                     	;# 
  2528  090E                     	;# 
  2529  090F                     	;# 
  2530  091F                     	;# 
  2531  091F                     	;# 
  2532  098F                     	;# 
  2533  098F                     	;# 
  2534  0990                     	;# 
  2535  0991                     	;# 
  2536  0992                     	;# 
  2537  0993                     	;# 
  2538  0994                     	;# 
  2539  0995                     	;# 
  2540  0996                     	;# 
  2541  0997                     	;# 
  2542  0E0F                     	;# 
  2543  0E10                     	;# 
  2544  0E11                     	;# 
  2545  0E12                     	;# 
  2546  0E13                     	;# 
  2547  0E14                     	;# 
  2548  0E15                     	;# 
  2549  0E16                     	;# 
  2550  0E17                     	;# 
  2551  0E18                     	;# 
  2552  0E19                     	;# 
  2553  0E1A                     	;# 
  2554  0E1B                     	;# 
  2555  0E1C                     	;# 
  2556  0E1D                     	;# 
  2557  0E1E                     	;# 
  2558  0E1F                     	;# 
  2559  0E20                     	;# 
  2560  0E21                     	;# 
  2561  0E22                     	;# 
  2562  0E23                     	;# 
  2563  0E24                     	;# 
  2564  0E25                     	;# 
  2565  0E26                     	;# 
  2566  0E27                     	;# 
  2567  0E28                     	;# 
  2568  0E29                     	;# 
  2569  0E2A                     	;# 
  2570  0E2B                     	;# 
  2571  0E2C                     	;# 
  2572  0E2D                     	;# 
  2573  0E2E                     	;# 
  2574  0E2F                     	;# 
  2575  0E30                     	;# 
  2576  0E31                     	;# 
  2577  0E32                     	;# 
  2578  0E33                     	;# 
  2579  0E34                     	;# 
  2580  0E35                     	;# 
  2581  0E36                     	;# 
  2582  0E37                     	;# 
  2583  0E8F                     	;# 
  2584  0E90                     	;# 
  2585  0E91                     	;# 
  2586  0E92                     	;# 
  2587  0E93                     	;# 
  2588  0E94                     	;# 
  2589  0E95                     	;# 
  2590  0E96                     	;# 
  2591  0E97                     	;# 
  2592  0E9C                     	;# 
  2593  0E9D                     	;# 
  2594  0E9E                     	;# 
  2595  0EA1                     	;# 
  2596  0EA2                     	;# 
  2597  0EA3                     	;# 
  2598  0EA4                     	;# 
  2599  0EA5                     	;# 
  2600  0EA9                     	;# 
  2601  0EAA                     	;# 
  2602  0EAB                     	;# 
  2603  0EAC                     	;# 
  2604  0EB1                     	;# 
  2605  0EB2                     	;# 
  2606  0EB3                     	;# 
  2607  0EB8                     	;# 
  2608  0EB9                     	;# 
  2609  0EBA                     	;# 
  2610  0EBB                     	;# 
  2611  0EBC                     	;# 
  2612  0EBD                     	;# 
  2613  0EBE                     	;# 
  2614  0EC3                     	;# 
  2615  0EC5                     	;# 
  2616  0EC6                     	;# 
  2617  0EC7                     	;# 
  2618  0EC8                     	;# 
  2619  0EC9                     	;# 
  2620  0ECA                     	;# 
  2621  0ECB                     	;# 
  2622  0ECC                     	;# 
  2623  0F10                     	;# 
  2624  0F11                     	;# 
  2625  0F12                     	;# 
  2626  0F13                     	;# 
  2627  0F14                     	;# 
  2628  0F15                     	;# 
  2629  0F16                     	;# 
  2630  0F17                     	;# 
  2631  0F18                     	;# 
  2632  0F19                     	;# 
  2633  0F1A                     	;# 
  2634  0F1B                     	;# 
  2635  0F1C                     	;# 
  2636  0F1D                     	;# 
  2637  0F1E                     	;# 
  2638  0F1F                     	;# 
  2639  0F20                     	;# 
  2640  0F21                     	;# 
  2641  0F22                     	;# 
  2642  0F23                     	;# 
  2643  0F24                     	;# 
  2644  0F25                     	;# 
  2645  0F26                     	;# 
  2646  0F27                     	;# 
  2647  0F38                     	;# 
  2648  0F39                     	;# 
  2649  0F3A                     	;# 
  2650  0F3B                     	;# 
  2651  0F3C                     	;# 
  2652  0F3D                     	;# 
  2653  0F3E                     	;# 
  2654  0F3F                     	;# 
  2655  0F40                     	;# 
  2656  0F41                     	;# 
  2657  0F43                     	;# 
  2658  0F44                     	;# 
  2659  0F45                     	;# 
  2660  0F46                     	;# 
  2661  0F47                     	;# 
  2662  0F48                     	;# 
  2663  0F49                     	;# 
  2664  0F4A                     	;# 
  2665  0F4B                     	;# 
  2666  0F4C                     	;# 
  2667  0F4E                     	;# 
  2668  0F4F                     	;# 
  2669  0F50                     	;# 
  2670  0F51                     	;# 
  2671  0F52                     	;# 
  2672  0F53                     	;# 
  2673  0F54                     	;# 
  2674  0F55                     	;# 
  2675  0F56                     	;# 
  2676  0F57                     	;# 
  2677  0F65                     	;# 
  2678  0F68                     	;# 
  2679  0F69                     	;# 
  2680  0F6A                     	;# 
  2681  0F6B                     	;# 
  2682  0FE4                     	;# 
  2683  0FE5                     	;# 
  2684  0FE6                     	;# 
  2685  0FE7                     	;# 
  2686  0FE8                     	;# 
  2687  0FE9                     	;# 
  2688  0FEA                     	;# 
  2689  0FEB                     	;# 
  2690  0FED                     	;# 
  2691  0FEE                     	;# 
  2692  0FEF                     	;# 
  2693  0000                     	;# 
  2694  0001                     	;# 
  2695  0002                     	;# 
  2696  0003                     	;# 
  2697  0004                     	;# 
  2698  0005                     	;# 
  2699  0006                     	;# 
  2700  0007                     	;# 
  2701  0008                     	;# 
  2702  0009                     	;# 
  2703  000A                     	;# 
  2704  000B                     	;# 
  2705  000C                     	;# 
  2706  000D                     	;# 
  2707  000E                     	;# 
  2708  0010                     	;# 
  2709  0011                     	;# 
  2710  0012                     	;# 
  2711  0013                     	;# 
  2712  0016                     	;# 
  2713  0017                     	;# 
  2714  0018                     	;# 
  2715  001C                     	;# 
  2716  001C                     	;# 
  2717  001D                     	;# 
  2718  001D                     	;# 
  2719  001E                     	;# 
  2720  001F                     	;# 
  2721  008C                     	;# 
  2722  008C                     	;# 
  2723  008D                     	;# 
  2724  008E                     	;# 
  2725  008E                     	;# 
  2726  008F                     	;# 
  2727  0090                     	;# 
  2728  0090                     	;# 
  2729  0091                     	;# 
  2730  0093                     	;# 
  2731  0094                     	;# 
  2732  0095                     	;# 
  2733  0096                     	;# 
  2734  0097                     	;# 
  2735  0098                     	;# 
  2736  0099                     	;# 
  2737  009A                     	;# 
  2738  009B                     	;# 
  2739  009C                     	;# 
  2740  009D                     	;# 
  2741  009E                     	;# 
  2742  010C                     	;# 
  2743  010D                     	;# 
  2744  010E                     	;# 
  2745  010E                     	;# 
  2746  010F                     	;# 
  2747  0110                     	;# 
  2748  0110                     	;# 
  2749  0111                     	;# 
  2750  0112                     	;# 
  2751  0112                     	;# 
  2752  0113                     	;# 
  2753  0114                     	;# 
  2754  0114                     	;# 
  2755  0115                     	;# 
  2756  0116                     	;# 
  2757  0116                     	;# 
  2758  0117                     	;# 
  2759  0119                     	;# 
  2760  0119                     	;# 
  2761  0119                     	;# 
  2762  011A                     	;# 
  2763  011A                     	;# 
  2764  011A                     	;# 
  2765  011B                     	;# 
  2766  011B                     	;# 
  2767  011B                     	;# 
  2768  011B                     	;# 
  2769  011B                     	;# 
  2770  011C                     	;# 
  2771  011C                     	;# 
  2772  011C                     	;# 
  2773  011D                     	;# 
  2774  011D                     	;# 
  2775  011D                     	;# 
  2776  011E                     	;# 
  2777  011E                     	;# 
  2778  011E                     	;# 
  2779  011F                     	;# 
  2780  011F                     	;# 
  2781  011F                     	;# 
  2782  011F                     	;# 
  2783  011F                     	;# 
  2784  018C                     	;# 
  2785  018D                     	;# 
  2786  018E                     	;# 
  2787  018F                     	;# 
  2788  0190                     	;# 
  2789  0191                     	;# 
  2790  0192                     	;# 
  2791  0196                     	;# 
  2792  0197                     	;# 
  2793  0198                     	;# 
  2794  0199                     	;# 
  2795  019A                     	;# 
  2796  019B                     	;# 
  2797  019C                     	;# 
  2798  020C                     	;# 
  2799  020C                     	;# 
  2800  020D                     	;# 
  2801  020E                     	;# 
  2802  020F                     	;# 
  2803  020F                     	;# 
  2804  0210                     	;# 
  2805  0210                     	;# 
  2806  0211                     	;# 
  2807  0211                     	;# 
  2808  0212                     	;# 
  2809  0212                     	;# 
  2810  0213                     	;# 
  2811  0214                     	;# 
  2812  0215                     	;# 
  2813  0215                     	;# 
  2814  0216                     	;# 
  2815  0216                     	;# 
  2816  0217                     	;# 
  2817  0217                     	;# 
  2818  0218                     	;# 
  2819  0218                     	;# 
  2820  0219                     	;# 
  2821  021A                     	;# 
  2822  021B                     	;# 
  2823  021B                     	;# 
  2824  021C                     	;# 
  2825  021C                     	;# 
  2826  021D                     	;# 
  2827  021D                     	;# 
  2828  021E                     	;# 
  2829  021F                     	;# 
  2830  028C                     	;# 
  2831  028C                     	;# 
  2832  028D                     	;# 
  2833  028D                     	;# 
  2834  028E                     	;# 
  2835  028F                     	;# 
  2836  0290                     	;# 
  2837  0290                     	;# 
  2838  0291                     	;# 
  2839  0292                     	;# 
  2840  0292                     	;# 
  2841  0293                     	;# 
  2842  0293                     	;# 
  2843  0294                     	;# 
  2844  0295                     	;# 
  2845  0296                     	;# 
  2846  0296                     	;# 
  2847  0297                     	;# 
  2848  0298                     	;# 
  2849  0298                     	;# 
  2850  0299                     	;# 
  2851  0299                     	;# 
  2852  029A                     	;# 
  2853  029B                     	;# 
  2854  029C                     	;# 
  2855  029C                     	;# 
  2856  029D                     	;# 
  2857  030C                     	;# 
  2858  030C                     	;# 
  2859  030D                     	;# 
  2860  030E                     	;# 
  2861  030F                     	;# 
  2862  0310                     	;# 
  2863  0310                     	;# 
  2864  0311                     	;# 
  2865  0312                     	;# 
  2866  0313                     	;# 
  2867  0314                     	;# 
  2868  0314                     	;# 
  2869  0315                     	;# 
  2870  0316                     	;# 
  2871  0317                     	;# 
  2872  0318                     	;# 
  2873  0318                     	;# 
  2874  0319                     	;# 
  2875  031A                     	;# 
  2876  031B                     	;# 
  2877  031C                     	;# 
  2878  031C                     	;# 
  2879  031D                     	;# 
  2880  031E                     	;# 
  2881  031F                     	;# 
  2882  038C                     	;# 
  2883  038D                     	;# 
  2884  038E                     	;# 
  2885  0390                     	;# 
  2886  0391                     	;# 
  2887  0392                     	;# 
  2888  040C                     	;# 
  2889  040D                     	;# 
  2890  040E                     	;# 
  2891  040F                     	;# 
  2892  0410                     	;# 
  2893  0411                     	;# 
  2894  0416                     	;# 
  2895  0416                     	;# 
  2896  0417                     	;# 
  2897  0418                     	;# 
  2898  0418                     	;# 
  2899  0419                     	;# 
  2900  041A                     	;# 
  2901  041A                     	;# 
  2902  041B                     	;# 
  2903  041C                     	;# 
  2904  041C                     	;# 
  2905  041D                     	;# 
  2906  041E                     	;# 
  2907  041F                     	;# 
  2908  048C                     	;# 
  2909  048C                     	;# 
  2910  048D                     	;# 
  2911  048E                     	;# 
  2912  048F                     	;# 
  2913  048F                     	;# 
  2914  0490                     	;# 
  2915  0491                     	;# 
  2916  0492                     	;# 
  2917  0492                     	;# 
  2918  0493                     	;# 
  2919  0494                     	;# 
  2920  0495                     	;# 
  2921  0495                     	;# 
  2922  0496                     	;# 
  2923  0497                     	;# 
  2924  0498                     	;# 
  2925  0499                     	;# 
  2926  049A                     	;# 
  2927  049B                     	;# 
  2928  049C                     	;# 
  2929  049D                     	;# 
  2930  050C                     	;# 
  2931  050C                     	;# 
  2932  050D                     	;# 
  2933  050E                     	;# 
  2934  050F                     	;# 
  2935  050F                     	;# 
  2936  0510                     	;# 
  2937  0511                     	;# 
  2938  0512                     	;# 
  2939  0512                     	;# 
  2940  0513                     	;# 
  2941  0514                     	;# 
  2942  0515                     	;# 
  2943  0515                     	;# 
  2944  0516                     	;# 
  2945  0517                     	;# 
  2946  0518                     	;# 
  2947  0519                     	;# 
  2948  051A                     	;# 
  2949  051B                     	;# 
  2950  051C                     	;# 
  2951  051D                     	;# 
  2952  058C                     	;# 
  2953  058C                     	;# 
  2954  058D                     	;# 
  2955  058E                     	;# 
  2956  058F                     	;# 
  2957  058F                     	;# 
  2958  0590                     	;# 
  2959  0591                     	;# 
  2960  0592                     	;# 
  2961  0593                     	;# 
  2962  060C                     	;# 
  2963  060D                     	;# 
  2964  060E                     	;# 
  2965  060F                     	;# 
  2966  0610                     	;# 
  2967  0611                     	;# 
  2968  0612                     	;# 
  2969  0613                     	;# 
  2970  0614                     	;# 
  2971  0616                     	;# 
  2972  0617                     	;# 
  2973  0618                     	;# 
  2974  0619                     	;# 
  2975  061A                     	;# 
  2976  061B                     	;# 
  2977  061C                     	;# 
  2978  061D                     	;# 
  2979  061E                     	;# 
  2980  068C                     	;# 
  2981  068D                     	;# 
  2982  068E                     	;# 
  2983  068F                     	;# 
  2984  0690                     	;# 
  2985  0691                     	;# 
  2986  0692                     	;# 
  2987  0693                     	;# 
  2988  0694                     	;# 
  2989  070C                     	;# 
  2990  070D                     	;# 
  2991  070E                     	;# 
  2992  070F                     	;# 
  2993  0710                     	;# 
  2994  0711                     	;# 
  2995  0712                     	;# 
  2996  0713                     	;# 
  2997  0714                     	;# 
  2998  0716                     	;# 
  2999  0717                     	;# 
  3000  0718                     	;# 
  3001  0719                     	;# 
  3002  071A                     	;# 
  3003  071B                     	;# 
  3004  071C                     	;# 
  3005  071D                     	;# 
  3006  071E                     	;# 
  3007  0796                     	;# 
  3008  0797                     	;# 
  3009  0798                     	;# 
  3010  0799                     	;# 
  3011  079A                     	;# 
  3012  079B                     	;# 
  3013  080C                     	;# 
  3014  080D                     	;# 
  3015  080E                     	;# 
  3016  080F                     	;# 
  3017  0810                     	;# 
  3018  0811                     	;# 
  3019  0812                     	;# 
  3020  0813                     	;# 
  3021  0814                     	;# 
  3022  081A                     	;# 
  3023  081B                     	;# 
  3024  081C                     	;# 
  3025  081D                     	;# 
  3026  081E                     	;# 
  3027  081F                     	;# 
  3028  088C                     	;# 
  3029  088D                     	;# 
  3030  088E                     	;# 
  3031  088F                     	;# 
  3032  0890                     	;# 
  3033  0891                     	;# 
  3034  0892                     	;# 
  3035  0893                     	;# 
  3036  0895                     	;# 
  3037  0896                     	;# 
  3038  0897                     	;# 
  3039  0898                     	;# 
  3040  0899                     	;# 
  3041  089A                     	;# 
  3042  089B                     	;# 
  3043  090C                     	;# 
  3044  090E                     	;# 
  3045  090F                     	;# 
  3046  091F                     	;# 
  3047  091F                     	;# 
  3048  098F                     	;# 
  3049  098F                     	;# 
  3050  0990                     	;# 
  3051  0991                     	;# 
  3052  0992                     	;# 
  3053  0993                     	;# 
  3054  0994                     	;# 
  3055  0995                     	;# 
  3056  0996                     	;# 
  3057  0997                     	;# 
  3058  0E0F                     	;# 
  3059  0E10                     	;# 
  3060  0E11                     	;# 
  3061  0E12                     	;# 
  3062  0E13                     	;# 
  3063  0E14                     	;# 
  3064  0E15                     	;# 
  3065  0E16                     	;# 
  3066  0E17                     	;# 
  3067  0E18                     	;# 
  3068  0E19                     	;# 
  3069  0E1A                     	;# 
  3070  0E1B                     	;# 
  3071  0E1C                     	;# 
  3072  0E1D                     	;# 
  3073  0E1E                     	;# 
  3074  0E1F                     	;# 
  3075  0E20                     	;# 
  3076  0E21                     	;# 
  3077  0E22                     	;# 
  3078  0E23                     	;# 
  3079  0E24                     	;# 
  3080  0E25                     	;# 
  3081  0E26                     	;# 
  3082  0E27                     	;# 
  3083  0E28                     	;# 
  3084  0E29                     	;# 
  3085  0E2A                     	;# 
  3086  0E2B                     	;# 
  3087  0E2C                     	;# 
  3088  0E2D                     	;# 
  3089  0E2E                     	;# 
  3090  0E2F                     	;# 
  3091  0E30                     	;# 
  3092  0E31                     	;# 
  3093  0E32                     	;# 
  3094  0E33                     	;# 
  3095  0E34                     	;# 
  3096  0E35                     	;# 
  3097  0E36                     	;# 
  3098  0E37                     	;# 
  3099  0E8F                     	;# 
  3100  0E90                     	;# 
  3101  0E91                     	;# 
  3102  0E92                     	;# 
  3103  0E93                     	;# 
  3104  0E94                     	;# 
  3105  0E95                     	;# 
  3106  0E96                     	;# 
  3107  0E97                     	;# 
  3108  0E9C                     	;# 
  3109  0E9D                     	;# 
  3110  0E9E                     	;# 
  3111  0EA1                     	;# 
  3112  0EA2                     	;# 
  3113  0EA3                     	;# 
  3114  0EA4                     	;# 
  3115  0EA5                     	;# 
  3116  0EA9                     	;# 
  3117  0EAA                     	;# 
  3118  0EAB                     	;# 
  3119  0EAC                     	;# 
  3120  0EB1                     	;# 
  3121  0EB2                     	;# 
  3122  0EB3                     	;# 
  3123  0EB8                     	;# 
  3124  0EB9                     	;# 
  3125  0EBA                     	;# 
  3126  0EBB                     	;# 
  3127  0EBC                     	;# 
  3128  0EBD                     	;# 
  3129  0EBE                     	;# 
  3130  0EC3                     	;# 
  3131  0EC5                     	;# 
  3132  0EC6                     	;# 
  3133  0EC7                     	;# 
  3134  0EC8                     	;# 
  3135  0EC9                     	;# 
  3136  0ECA                     	;# 
  3137  0ECB                     	;# 
  3138  0ECC                     	;# 
  3139  0F10                     	;# 
  3140  0F11                     	;# 
  3141  0F12                     	;# 
  3142  0F13                     	;# 
  3143  0F14                     	;# 
  3144  0F15                     	;# 
  3145  0F16                     	;# 
  3146  0F17                     	;# 
  3147  0F18                     	;# 
  3148  0F19                     	;# 
  3149  0F1A                     	;# 
  3150  0F1B                     	;# 
  3151  0F1C                     	;# 
  3152  0F1D                     	;# 
  3153  0F1E                     	;# 
  3154  0F1F                     	;# 
  3155  0F20                     	;# 
  3156  0F21                     	;# 
  3157  0F22                     	;# 
  3158  0F23                     	;# 
  3159  0F24                     	;# 
  3160  0F25                     	;# 
  3161  0F26                     	;# 
  3162  0F27                     	;# 
  3163  0F38                     	;# 
  3164  0F39                     	;# 
  3165  0F3A                     	;# 
  3166  0F3B                     	;# 
  3167  0F3C                     	;# 
  3168  0F3D                     	;# 
  3169  0F3E                     	;# 
  3170  0F3F                     	;# 
  3171  0F40                     	;# 
  3172  0F41                     	;# 
  3173  0F43                     	;# 
  3174  0F44                     	;# 
  3175  0F45                     	;# 
  3176  0F46                     	;# 
  3177  0F47                     	;# 
  3178  0F48                     	;# 
  3179  0F49                     	;# 
  3180  0F4A                     	;# 
  3181  0F4B                     	;# 
  3182  0F4C                     	;# 
  3183  0F4E                     	;# 
  3184  0F4F                     	;# 
  3185  0F50                     	;# 
  3186  0F51                     	;# 
  3187  0F52                     	;# 
  3188  0F53                     	;# 
  3189  0F54                     	;# 
  3190  0F55                     	;# 
  3191  0F56                     	;# 
  3192  0F57                     	;# 
  3193  0F65                     	;# 
  3194  0F68                     	;# 
  3195  0F69                     	;# 
  3196  0F6A                     	;# 
  3197  0F6B                     	;# 
  3198  0FE4                     	;# 
  3199  0FE5                     	;# 
  3200  0FE6                     	;# 
  3201  0FE7                     	;# 
  3202  0FE8                     	;# 
  3203  0FE9                     	;# 
  3204  0FEA                     	;# 
  3205  0FEB                     	;# 
  3206  0FED                     	;# 
  3207  0FEE                     	;# 
  3208  0FEF                     	;# 
  3209  0000                     	;# 
  3210  0001                     	;# 
  3211  0002                     	;# 
  3212  0003                     	;# 
  3213  0004                     	;# 
  3214  0005                     	;# 
  3215  0006                     	;# 
  3216  0007                     	;# 
  3217  0008                     	;# 
  3218  0009                     	;# 
  3219  000A                     	;# 
  3220  000B                     	;# 
  3221  000C                     	;# 
  3222  000D                     	;# 
  3223  000E                     	;# 
  3224  0010                     	;# 
  3225  0011                     	;# 
  3226  0012                     	;# 
  3227  0013                     	;# 
  3228  0016                     	;# 
  3229  0017                     	;# 
  3230  0018                     	;# 
  3231  001C                     	;# 
  3232  001C                     	;# 
  3233  001D                     	;# 
  3234  001D                     	;# 
  3235  001E                     	;# 
  3236  001F                     	;# 
  3237  008C                     	;# 
  3238  008C                     	;# 
  3239  008D                     	;# 
  3240  008E                     	;# 
  3241  008E                     	;# 
  3242  008F                     	;# 
  3243  0090                     	;# 
  3244  0090                     	;# 
  3245  0091                     	;# 
  3246  0093                     	;# 
  3247  0094                     	;# 
  3248  0095                     	;# 
  3249  0096                     	;# 
  3250  0097                     	;# 
  3251  0098                     	;# 
  3252  0099                     	;# 
  3253  009A                     	;# 
  3254  009B                     	;# 
  3255  009C                     	;# 
  3256  009D                     	;# 
  3257  009E                     	;# 
  3258  010C                     	;# 
  3259  010D                     	;# 
  3260  010E                     	;# 
  3261  010E                     	;# 
  3262  010F                     	;# 
  3263  0110                     	;# 
  3264  0110                     	;# 
  3265  0111                     	;# 
  3266  0112                     	;# 
  3267  0112                     	;# 
  3268  0113                     	;# 
  3269  0114                     	;# 
  3270  0114                     	;# 
  3271  0115                     	;# 
  3272  0116                     	;# 
  3273  0116                     	;# 
  3274  0117                     	;# 
  3275  0119                     	;# 
  3276  0119                     	;# 
  3277  0119                     	;# 
  3278  011A                     	;# 
  3279  011A                     	;# 
  3280  011A                     	;# 
  3281  011B                     	;# 
  3282  011B                     	;# 
  3283  011B                     	;# 
  3284  011B                     	;# 
  3285  011B                     	;# 
  3286  011C                     	;# 
  3287  011C                     	;# 
  3288  011C                     	;# 
  3289  011D                     	;# 
  3290  011D                     	;# 
  3291  011D                     	;# 
  3292  011E                     	;# 
  3293  011E                     	;# 
  3294  011E                     	;# 
  3295  011F                     	;# 
  3296  011F                     	;# 
  3297  011F                     	;# 
  3298  011F                     	;# 
  3299  011F                     	;# 
  3300  018C                     	;# 
  3301  018D                     	;# 
  3302  018E                     	;# 
  3303  018F                     	;# 
  3304  0190                     	;# 
  3305  0191                     	;# 
  3306  0192                     	;# 
  3307  0196                     	;# 
  3308  0197                     	;# 
  3309  0198                     	;# 
  3310  0199                     	;# 
  3311  019A                     	;# 
  3312  019B                     	;# 
  3313  019C                     	;# 
  3314  020C                     	;# 
  3315  020C                     	;# 
  3316  020D                     	;# 
  3317  020E                     	;# 
  3318  020F                     	;# 
  3319  020F                     	;# 
  3320  0210                     	;# 
  3321  0210                     	;# 
  3322  0211                     	;# 
  3323  0211                     	;# 
  3324  0212                     	;# 
  3325  0212                     	;# 
  3326  0213                     	;# 
  3327  0214                     	;# 
  3328  0215                     	;# 
  3329  0215                     	;# 
  3330  0216                     	;# 
  3331  0216                     	;# 
  3332  0217                     	;# 
  3333  0217                     	;# 
  3334  0218                     	;# 
  3335  0218                     	;# 
  3336  0219                     	;# 
  3337  021A                     	;# 
  3338  021B                     	;# 
  3339  021B                     	;# 
  3340  021C                     	;# 
  3341  021C                     	;# 
  3342  021D                     	;# 
  3343  021D                     	;# 
  3344  021E                     	;# 
  3345  021F                     	;# 
  3346  028C                     	;# 
  3347  028C                     	;# 
  3348  028D                     	;# 
  3349  028D                     	;# 
  3350  028E                     	;# 
  3351  028F                     	;# 
  3352  0290                     	;# 
  3353  0290                     	;# 
  3354  0291                     	;# 
  3355  0292                     	;# 
  3356  0292                     	;# 
  3357  0293                     	;# 
  3358  0293                     	;# 
  3359  0294                     	;# 
  3360  0295                     	;# 
  3361  0296                     	;# 
  3362  0296                     	;# 
  3363  0297                     	;# 
  3364  0298                     	;# 
  3365  0298                     	;# 
  3366  0299                     	;# 
  3367  0299                     	;# 
  3368  029A                     	;# 
  3369  029B                     	;# 
  3370  029C                     	;# 
  3371  029C                     	;# 
  3372  029D                     	;# 
  3373  030C                     	;# 
  3374  030C                     	;# 
  3375  030D                     	;# 
  3376  030E                     	;# 
  3377  030F                     	;# 
  3378  0310                     	;# 
  3379  0310                     	;# 
  3380  0311                     	;# 
  3381  0312                     	;# 
  3382  0313                     	;# 
  3383  0314                     	;# 
  3384  0314                     	;# 
  3385  0315                     	;# 
  3386  0316                     	;# 
  3387  0317                     	;# 
  3388  0318                     	;# 
  3389  0318                     	;# 
  3390  0319                     	;# 
  3391  031A                     	;# 
  3392  031B                     	;# 
  3393  031C                     	;# 
  3394  031C                     	;# 
  3395  031D                     	;# 
  3396  031E                     	;# 
  3397  031F                     	;# 
  3398  038C                     	;# 
  3399  038D                     	;# 
  3400  038E                     	;# 
  3401  0390                     	;# 
  3402  0391                     	;# 
  3403  0392                     	;# 
  3404  040C                     	;# 
  3405  040D                     	;# 
  3406  040E                     	;# 
  3407  040F                     	;# 
  3408  0410                     	;# 
  3409  0411                     	;# 
  3410  0416                     	;# 
  3411  0416                     	;# 
  3412  0417                     	;# 
  3413  0418                     	;# 
  3414  0418                     	;# 
  3415  0419                     	;# 
  3416  041A                     	;# 
  3417  041A                     	;# 
  3418  041B                     	;# 
  3419  041C                     	;# 
  3420  041C                     	;# 
  3421  041D                     	;# 
  3422  041E                     	;# 
  3423  041F                     	;# 
  3424  048C                     	;# 
  3425  048C                     	;# 
  3426  048D                     	;# 
  3427  048E                     	;# 
  3428  048F                     	;# 
  3429  048F                     	;# 
  3430  0490                     	;# 
  3431  0491                     	;# 
  3432  0492                     	;# 
  3433  0492                     	;# 
  3434  0493                     	;# 
  3435  0494                     	;# 
  3436  0495                     	;# 
  3437  0495                     	;# 
  3438  0496                     	;# 
  3439  0497                     	;# 
  3440  0498                     	;# 
  3441  0499                     	;# 
  3442  049A                     	;# 
  3443  049B                     	;# 
  3444  049C                     	;# 
  3445  049D                     	;# 
  3446  050C                     	;# 
  3447  050C                     	;# 
  3448  050D                     	;# 
  3449  050E                     	;# 
  3450  050F                     	;# 
  3451  050F                     	;# 
  3452  0510                     	;# 
  3453  0511                     	;# 
  3454  0512                     	;# 
  3455  0512                     	;# 
  3456  0513                     	;# 
  3457  0514                     	;# 
  3458  0515                     	;# 
  3459  0515                     	;# 
  3460  0516                     	;# 
  3461  0517                     	;# 
  3462  0518                     	;# 
  3463  0519                     	;# 
  3464  051A                     	;# 
  3465  051B                     	;# 
  3466  051C                     	;# 
  3467  051D                     	;# 
  3468  058C                     	;# 
  3469  058C                     	;# 
  3470  058D                     	;# 
  3471  058E                     	;# 
  3472  058F                     	;# 
  3473  058F                     	;# 
  3474  0590                     	;# 
  3475  0591                     	;# 
  3476  0592                     	;# 
  3477  0593                     	;# 
  3478  060C                     	;# 
  3479  060D                     	;# 
  3480  060E                     	;# 
  3481  060F                     	;# 
  3482  0610                     	;# 
  3483  0611                     	;# 
  3484  0612                     	;# 
  3485  0613                     	;# 
  3486  0614                     	;# 
  3487  0616                     	;# 
  3488  0617                     	;# 
  3489  0618                     	;# 
  3490  0619                     	;# 
  3491  061A                     	;# 
  3492  061B                     	;# 
  3493  061C                     	;# 
  3494  061D                     	;# 
  3495  061E                     	;# 
  3496  068C                     	;# 
  3497  068D                     	;# 
  3498  068E                     	;# 
  3499  068F                     	;# 
  3500  0690                     	;# 
  3501  0691                     	;# 
  3502  0692                     	;# 
  3503  0693                     	;# 
  3504  0694                     	;# 
  3505  070C                     	;# 
  3506  070D                     	;# 
  3507  070E                     	;# 
  3508  070F                     	;# 
  3509  0710                     	;# 
  3510  0711                     	;# 
  3511  0712                     	;# 
  3512  0713                     	;# 
  3513  0714                     	;# 
  3514  0716                     	;# 
  3515  0717                     	;# 
  3516  0718                     	;# 
  3517  0719                     	;# 
  3518  071A                     	;# 
  3519  071B                     	;# 
  3520  071C                     	;# 
  3521  071D                     	;# 
  3522  071E                     	;# 
  3523  0796                     	;# 
  3524  0797                     	;# 
  3525  0798                     	;# 
  3526  0799                     	;# 
  3527  079A                     	;# 
  3528  079B                     	;# 
  3529  080C                     	;# 
  3530  080D                     	;# 
  3531  080E                     	;# 
  3532  080F                     	;# 
  3533  0810                     	;# 
  3534  0811                     	;# 
  3535  0812                     	;# 
  3536  0813                     	;# 
  3537  0814                     	;# 
  3538  081A                     	;# 
  3539  081B                     	;# 
  3540  081C                     	;# 
  3541  081D                     	;# 
  3542  081E                     	;# 
  3543  081F                     	;# 
  3544  088C                     	;# 
  3545  088D                     	;# 
  3546  088E                     	;# 
  3547  088F                     	;# 
  3548  0890                     	;# 
  3549  0891                     	;# 
  3550  0892                     	;# 
  3551  0893                     	;# 
  3552  0895                     	;# 
  3553  0896                     	;# 
  3554  0897                     	;# 
  3555  0898                     	;# 
  3556  0899                     	;# 
  3557  089A                     	;# 
  3558  089B                     	;# 
  3559  090C                     	;# 
  3560  090E                     	;# 
  3561  090F                     	;# 
  3562  091F                     	;# 
  3563  091F                     	;# 
  3564  098F                     	;# 
  3565  098F                     	;# 
  3566  0990                     	;# 
  3567  0991                     	;# 
  3568  0992                     	;# 
  3569  0993                     	;# 
  3570  0994                     	;# 
  3571  0995                     	;# 
  3572  0996                     	;# 
  3573  0997                     	;# 
  3574  0E0F                     	;# 
  3575  0E10                     	;# 
  3576  0E11                     	;# 
  3577  0E12                     	;# 
  3578  0E13                     	;# 
  3579  0E14                     	;# 
  3580  0E15                     	;# 
  3581  0E16                     	;# 
  3582  0E17                     	;# 
  3583  0E18                     	;# 
  3584  0E19                     	;# 
  3585  0E1A                     	;# 
  3586  0E1B                     	;# 
  3587  0E1C                     	;# 
  3588  0E1D                     	;# 
  3589  0E1E                     	;# 
  3590  0E1F                     	;# 
  3591  0E20                     	;# 
  3592  0E21                     	;# 
  3593  0E22                     	;# 
  3594  0E23                     	;# 
  3595  0E24                     	;# 
  3596  0E25                     	;# 
  3597  0E26                     	;# 
  3598  0E27                     	;# 
  3599  0E28                     	;# 
  3600  0E29                     	;# 
  3601  0E2A                     	;# 
  3602  0E2B                     	;# 
  3603  0E2C                     	;# 
  3604  0E2D                     	;# 
  3605  0E2E                     	;# 
  3606  0E2F                     	;# 
  3607  0E30                     	;# 
  3608  0E31                     	;# 
  3609  0E32                     	;# 
  3610  0E33                     	;# 
  3611  0E34                     	;# 
  3612  0E35                     	;# 
  3613  0E36                     	;# 
  3614  0E37                     	;# 
  3615  0E8F                     	;# 
  3616  0E90                     	;# 
  3617  0E91                     	;# 
  3618  0E92                     	;# 
  3619  0E93                     	;# 
  3620  0E94                     	;# 
  3621  0E95                     	;# 
  3622  0E96                     	;# 
  3623  0E97                     	;# 
  3624  0E9C                     	;# 
  3625  0E9D                     	;# 
  3626  0E9E                     	;# 
  3627  0EA1                     	;# 
  3628  0EA2                     	;# 
  3629  0EA3                     	;# 
  3630  0EA4                     	;# 
  3631  0EA5                     	;# 
  3632  0EA9                     	;# 
  3633  0EAA                     	;# 
  3634  0EAB                     	;# 
  3635  0EAC                     	;# 
  3636  0EB1                     	;# 
  3637  0EB2                     	;# 
  3638  0EB3                     	;# 
  3639  0EB8                     	;# 
  3640  0EB9                     	;# 
  3641  0EBA                     	;# 
  3642  0EBB                     	;# 
  3643  0EBC                     	;# 
  3644  0EBD                     	;# 
  3645  0EBE                     	;# 
  3646  0EC3                     	;# 
  3647  0EC5                     	;# 
  3648  0EC6                     	;# 
  3649  0EC7                     	;# 
  3650  0EC8                     	;# 
  3651  0EC9                     	;# 
  3652  0ECA                     	;# 
  3653  0ECB                     	;# 
  3654  0ECC                     	;# 
  3655  0F10                     	;# 
  3656  0F11                     	;# 
  3657  0F12                     	;# 
  3658  0F13                     	;# 
  3659  0F14                     	;# 
  3660  0F15                     	;# 
  3661  0F16                     	;# 
  3662  0F17                     	;# 
  3663  0F18                     	;# 
  3664  0F19                     	;# 
  3665  0F1A                     	;# 
  3666  0F1B                     	;# 
  3667  0F1C                     	;# 
  3668  0F1D                     	;# 
  3669  0F1E                     	;# 
  3670  0F1F                     	;# 
  3671  0F20                     	;# 
  3672  0F21                     	;# 
  3673  0F22                     	;# 
  3674  0F23                     	;# 
  3675  0F24                     	;# 
  3676  0F25                     	;# 
  3677  0F26                     	;# 
  3678  0F27                     	;# 
  3679  0F38                     	;# 
  3680  0F39                     	;# 
  3681  0F3A                     	;# 
  3682  0F3B                     	;# 
  3683  0F3C                     	;# 
  3684  0F3D                     	;# 
  3685  0F3E                     	;# 
  3686  0F3F                     	;# 
  3687  0F40                     	;# 
  3688  0F41                     	;# 
  3689  0F43                     	;# 
  3690  0F44                     	;# 
  3691  0F45                     	;# 
  3692  0F46                     	;# 
  3693  0F47                     	;# 
  3694  0F48                     	;# 
  3695  0F49                     	;# 
  3696  0F4A                     	;# 
  3697  0F4B                     	;# 
  3698  0F4C                     	;# 
  3699  0F4E                     	;# 
  3700  0F4F                     	;# 
  3701  0F50                     	;# 
  3702  0F51                     	;# 
  3703  0F52                     	;# 
  3704  0F53                     	;# 
  3705  0F54                     	;# 
  3706  0F55                     	;# 
  3707  0F56                     	;# 
  3708  0F57                     	;# 
  3709  0F65                     	;# 
  3710  0F68                     	;# 
  3711  0F69                     	;# 
  3712  0F6A                     	;# 
  3713  0F6B                     	;# 
  3714  0FE4                     	;# 
  3715  0FE5                     	;# 
  3716  0FE6                     	;# 
  3717  0FE7                     	;# 
  3718  0FE8                     	;# 
  3719  0FE9                     	;# 
  3720  0FEA                     	;# 
  3721  0FEB                     	;# 
  3722  0FED                     	;# 
  3723  0FEE                     	;# 
  3724  0FEF                     	;# 
  3725  0000                     	;# 
  3726  0001                     	;# 
  3727  0002                     	;# 
  3728  0003                     	;# 
  3729  0004                     	;# 
  3730  0005                     	;# 
  3731  0006                     	;# 
  3732  0007                     	;# 
  3733  0008                     	;# 
  3734  0009                     	;# 
  3735  000A                     	;# 
  3736  000B                     	;# 
  3737  000C                     	;# 
  3738  000D                     	;# 
  3739  000E                     	;# 
  3740  0010                     	;# 
  3741  0011                     	;# 
  3742  0012                     	;# 
  3743  0013                     	;# 
  3744  0016                     	;# 
  3745  0017                     	;# 
  3746  0018                     	;# 
  3747  001C                     	;# 
  3748  001C                     	;# 
  3749  001D                     	;# 
  3750  001D                     	;# 
  3751  001E                     	;# 
  3752  001F                     	;# 
  3753  008C                     	;# 
  3754  008C                     	;# 
  3755  008D                     	;# 
  3756  008E                     	;# 
  3757  008E                     	;# 
  3758  008F                     	;# 
  3759  0090                     	;# 
  3760  0090                     	;# 
  3761  0091                     	;# 
  3762  0093                     	;# 
  3763  0094                     	;# 
  3764  0095                     	;# 
  3765  0096                     	;# 
  3766  0097                     	;# 
  3767  0098                     	;# 
  3768  0099                     	;# 
  3769  009A                     	;# 
  3770  009B                     	;# 
  3771  009C                     	;# 
  3772  009D                     	;# 
  3773  009E                     	;# 
  3774  010C                     	;# 
  3775  010D                     	;# 
  3776  010E                     	;# 
  3777  010E                     	;# 
  3778  010F                     	;# 
  3779  0110                     	;# 
  3780  0110                     	;# 
  3781  0111                     	;# 
  3782  0112                     	;# 
  3783  0112                     	;# 
  3784  0113                     	;# 
  3785  0114                     	;# 
  3786  0114                     	;# 
  3787  0115                     	;# 
  3788  0116                     	;# 
  3789  0116                     	;# 
  3790  0117                     	;# 
  3791  0119                     	;# 
  3792  0119                     	;# 
  3793  0119                     	;# 
  3794  011A                     	;# 
  3795  011A                     	;# 
  3796  011A                     	;# 
  3797  011B                     	;# 
  3798  011B                     	;# 
  3799  011B                     	;# 
  3800  011B                     	;# 
  3801  011B                     	;# 
  3802  011C                     	;# 
  3803  011C                     	;# 
  3804  011C                     	;# 
  3805  011D                     	;# 
  3806  011D                     	;# 
  3807  011D                     	;# 
  3808  011E                     	;# 
  3809  011E                     	;# 
  3810  011E                     	;# 
  3811  011F                     	;# 
  3812  011F                     	;# 
  3813  011F                     	;# 
  3814  011F                     	;# 
  3815  011F                     	;# 
  3816  018C                     	;# 
  3817  018D                     	;# 
  3818  018E                     	;# 
  3819  018F                     	;# 
  3820  0190                     	;# 
  3821  0191                     	;# 
  3822  0192                     	;# 
  3823  0196                     	;# 
  3824  0197                     	;# 
  3825  0198                     	;# 
  3826  0199                     	;# 
  3827  019A                     	;# 
  3828  019B                     	;# 
  3829  019C                     	;# 
  3830  020C                     	;# 
  3831  020C                     	;# 
  3832  020D                     	;# 
  3833  020E                     	;# 
  3834  020F                     	;# 
  3835  020F                     	;# 
  3836  0210                     	;# 
  3837  0210                     	;# 
  3838  0211                     	;# 
  3839  0211                     	;# 
  3840  0212                     	;# 
  3841  0212                     	;# 
  3842  0213                     	;# 
  3843  0214                     	;# 
  3844  0215                     	;# 
  3845  0215                     	;# 
  3846  0216                     	;# 
  3847  0216                     	;# 
  3848  0217                     	;# 
  3849  0217                     	;# 
  3850  0218                     	;# 
  3851  0218                     	;# 
  3852  0219                     	;# 
  3853  021A                     	;# 
  3854  021B                     	;# 
  3855  021B                     	;# 
  3856  021C                     	;# 
  3857  021C                     	;# 
  3858  021D                     	;# 
  3859  021D                     	;# 
  3860  021E                     	;# 
  3861  021F                     	;# 
  3862  028C                     	;# 
  3863  028C                     	;# 
  3864  028D                     	;# 
  3865  028D                     	;# 
  3866  028E                     	;# 
  3867  028F                     	;# 
  3868  0290                     	;# 
  3869  0290                     	;# 
  3870  0291                     	;# 
  3871  0292                     	;# 
  3872  0292                     	;# 
  3873  0293                     	;# 
  3874  0293                     	;# 
  3875  0294                     	;# 
  3876  0295                     	;# 
  3877  0296                     	;# 
  3878  0296                     	;# 
  3879  0297                     	;# 
  3880  0298                     	;# 
  3881  0298                     	;# 
  3882  0299                     	;# 
  3883  0299                     	;# 
  3884  029A                     	;# 
  3885  029B                     	;# 
  3886  029C                     	;# 
  3887  029C                     	;# 
  3888  029D                     	;# 
  3889  030C                     	;# 
  3890  030C                     	;# 
  3891  030D                     	;# 
  3892  030E                     	;# 
  3893  030F                     	;# 
  3894  0310                     	;# 
  3895  0310                     	;# 
  3896  0311                     	;# 
  3897  0312                     	;# 
  3898  0313                     	;# 
  3899  0314                     	;# 
  3900  0314                     	;# 
  3901  0315                     	;# 
  3902  0316                     	;# 
  3903  0317                     	;# 
  3904  0318                     	;# 
  3905  0318                     	;# 
  3906  0319                     	;# 
  3907  031A                     	;# 
  3908  031B                     	;# 
  3909  031C                     	;# 
  3910  031C                     	;# 
  3911  031D                     	;# 
  3912  031E                     	;# 
  3913  031F                     	;# 
  3914  038C                     	;# 
  3915  038D                     	;# 
  3916  038E                     	;# 
  3917  0390                     	;# 
  3918  0391                     	;# 
  3919  0392                     	;# 
  3920  040C                     	;# 
  3921  040D                     	;# 
  3922  040E                     	;# 
  3923  040F                     	;# 
  3924  0410                     	;# 
  3925  0411                     	;# 
  3926  0416                     	;# 
  3927  0416                     	;# 
  3928  0417                     	;# 
  3929  0418                     	;# 
  3930  0418                     	;# 
  3931  0419                     	;# 
  3932  041A                     	;# 
  3933  041A                     	;# 
  3934  041B                     	;# 
  3935  041C                     	;# 
  3936  041C                     	;# 
  3937  041D                     	;# 
  3938  041E                     	;# 
  3939  041F                     	;# 
  3940  048C                     	;# 
  3941  048C                     	;# 
  3942  048D                     	;# 
  3943  048E                     	;# 
  3944  048F                     	;# 
  3945  048F                     	;# 
  3946  0490                     	;# 
  3947  0491                     	;# 
  3948  0492                     	;# 
  3949  0492                     	;# 
  3950  0493                     	;# 
  3951  0494                     	;# 
  3952  0495                     	;# 
  3953  0495                     	;# 
  3954  0496                     	;# 
  3955  0497                     	;# 
  3956  0498                     	;# 
  3957  0499                     	;# 
  3958  049A                     	;# 
  3959  049B                     	;# 
  3960  049C                     	;# 
  3961  049D                     	;# 
  3962  050C                     	;# 
  3963  050C                     	;# 
  3964  050D                     	;# 
  3965  050E                     	;# 
  3966  050F                     	;# 
  3967  050F                     	;# 
  3968  0510                     	;# 
  3969  0511                     	;# 
  3970  0512                     	;# 
  3971  0512                     	;# 
  3972  0513                     	;# 
  3973  0514                     	;# 
  3974  0515                     	;# 
  3975  0515                     	;# 
  3976  0516                     	;# 
  3977  0517                     	;# 
  3978  0518                     	;# 
  3979  0519                     	;# 
  3980  051A                     	;# 
  3981  051B                     	;# 
  3982  051C                     	;# 
  3983  051D                     	;# 
  3984  058C                     	;# 
  3985  058C                     	;# 
  3986  058D                     	;# 
  3987  058E                     	;# 
  3988  058F                     	;# 
  3989  058F                     	;# 
  3990  0590                     	;# 
  3991  0591                     	;# 
  3992  0592                     	;# 
  3993  0593                     	;# 
  3994  060C                     	;# 
  3995  060D                     	;# 
  3996  060E                     	;# 
  3997  060F                     	;# 
  3998  0610                     	;# 
  3999  0611                     	;# 
  4000  0612                     	;# 
  4001  0613                     	;# 
  4002  0614                     	;# 
  4003  0616                     	;# 
  4004  0617                     	;# 
  4005  0618                     	;# 
  4006  0619                     	;# 
  4007  061A                     	;# 
  4008  061B                     	;# 
  4009  061C                     	;# 
  4010  061D                     	;# 
  4011  061E                     	;# 
  4012  068C                     	;# 
  4013  068D                     	;# 
  4014  068E                     	;# 
  4015  068F                     	;# 
  4016  0690                     	;# 
  4017  0691                     	;# 
  4018  0692                     	;# 
  4019  0693                     	;# 
  4020  0694                     	;# 
  4021  070C                     	;# 
  4022  070D                     	;# 
  4023  070E                     	;# 
  4024  070F                     	;# 
  4025  0710                     	;# 
  4026  0711                     	;# 
  4027  0712                     	;# 
  4028  0713                     	;# 
  4029  0714                     	;# 
  4030  0716                     	;# 
  4031  0717                     	;# 
  4032  0718                     	;# 
  4033  0719                     	;# 
  4034  071A                     	;# 
  4035  071B                     	;# 
  4036  071C                     	;# 
  4037  071D                     	;# 
  4038  071E                     	;# 
  4039  0796                     	;# 
  4040  0797                     	;# 
  4041  0798                     	;# 
  4042  0799                     	;# 
  4043  079A                     	;# 
  4044  079B                     	;# 
  4045  080C                     	;# 
  4046  080D                     	;# 
  4047  080E                     	;# 
  4048  080F                     	;# 
  4049  0810                     	;# 
  4050  0811                     	;# 
  4051  0812                     	;# 
  4052  0813                     	;# 
  4053  0814                     	;# 
  4054  081A                     	;# 
  4055  081B                     	;# 
  4056  081C                     	;# 
  4057  081D                     	;# 
  4058  081E                     	;# 
  4059  081F                     	;# 
  4060  088C                     	;# 
  4061  088D                     	;# 
  4062  088E                     	;# 
  4063  088F                     	;# 
  4064  0890                     	;# 
  4065  0891                     	;# 
  4066  0892                     	;# 
  4067  0893                     	;# 
  4068  0895                     	;# 
  4069  0896                     	;# 
  4070  0897                     	;# 
  4071  0898                     	;# 
  4072  0899                     	;# 
  4073  089A                     	;# 
  4074  089B                     	;# 
  4075  090C                     	;# 
  4076  090E                     	;# 
  4077  090F                     	;# 
  4078  091F                     	;# 
  4079  091F                     	;# 
  4080  098F                     	;# 
  4081  098F                     	;# 
  4082  0990                     	;# 
  4083  0991                     	;# 
  4084  0992                     	;# 
  4085  0993                     	;# 
  4086  0994                     	;# 
  4087  0995                     	;# 
  4088  0996                     	;# 
  4089  0997                     	;# 
  4090  0E0F                     	;# 
  4091  0E10                     	;# 
  4092  0E11                     	;# 
  4093  0E12                     	;# 
  4094  0E13                     	;# 
  4095  0E14                     	;# 
  4096  0E15                     	;# 
  4097  0E16                     	;# 
  4098  0E17                     	;# 
  4099  0E18                     	;# 
  4100  0E19                     	;# 
  4101  0E1A                     	;# 
  4102  0E1B                     	;# 
  4103  0E1C                     	;# 
  4104  0E1D                     	;# 
  4105  0E1E                     	;# 
  4106  0E1F                     	;# 
  4107  0E20                     	;# 
  4108  0E21                     	;# 
  4109  0E22                     	;# 
  4110  0E23                     	;# 
  4111  0E24                     	;# 
  4112  0E25                     	;# 
  4113  0E26                     	;# 
  4114  0E27                     	;# 
  4115  0E28                     	;# 
  4116  0E29                     	;# 
  4117  0E2A                     	;# 
  4118  0E2B                     	;# 
  4119  0E2C                     	;# 
  4120  0E2D                     	;# 
  4121  0E2E                     	;# 
  4122  0E2F                     	;# 
  4123  0E30                     	;# 
  4124  0E31                     	;# 
  4125  0E32                     	;# 
  4126  0E33                     	;# 
  4127  0E34                     	;# 
  4128  0E35                     	;# 
  4129  0E36                     	;# 
  4130  0E37                     	;# 
  4131  0E8F                     	;# 
  4132  0E90                     	;# 
  4133  0E91                     	;# 
  4134  0E92                     	;# 
  4135  0E93                     	;# 
  4136  0E94                     	;# 
  4137  0E95                     	;# 
  4138  0E96                     	;# 
  4139  0E97                     	;# 
  4140  0E9C                     	;# 
  4141  0E9D                     	;# 
  4142  0E9E                     	;# 
  4143  0EA1                     	;# 
  4144  0EA2                     	;# 
  4145  0EA3                     	;# 
  4146  0EA4                     	;# 
  4147  0EA5                     	;# 
  4148  0EA9                     	;# 
  4149  0EAA                     	;# 
  4150  0EAB                     	;# 
  4151  0EAC                     	;# 
  4152  0EB1                     	;# 
  4153  0EB2                     	;# 
  4154  0EB3                     	;# 
  4155  0EB8                     	;# 
  4156  0EB9                     	;# 
  4157  0EBA                     	;# 
  4158  0EBB                     	;# 
  4159  0EBC                     	;# 
  4160  0EBD                     	;# 
  4161  0EBE                     	;# 
  4162  0EC3                     	;# 
  4163  0EC5                     	;# 
  4164  0EC6                     	;# 
  4165  0EC7                     	;# 
  4166  0EC8                     	;# 
  4167  0EC9                     	;# 
  4168  0ECA                     	;# 
  4169  0ECB                     	;# 
  4170  0ECC                     	;# 
  4171  0F10                     	;# 
  4172  0F11                     	;# 
  4173  0F12                     	;# 
  4174  0F13                     	;# 
  4175  0F14                     	;# 
  4176  0F15                     	;# 
  4177  0F16                     	;# 
  4178  0F17                     	;# 
  4179  0F18                     	;# 
  4180  0F19                     	;# 
  4181  0F1A                     	;# 
  4182  0F1B                     	;# 
  4183  0F1C                     	;# 
  4184  0F1D                     	;# 
  4185  0F1E                     	;# 
  4186  0F1F                     	;# 
  4187  0F20                     	;# 
  4188  0F21                     	;# 
  4189  0F22                     	;# 
  4190  0F23                     	;# 
  4191  0F24                     	;# 
  4192  0F25                     	;# 
  4193  0F26                     	;# 
  4194  0F27                     	;# 
  4195  0F38                     	;# 
  4196  0F39                     	;# 
  4197  0F3A                     	;# 
  4198  0F3B                     	;# 
  4199  0F3C                     	;# 
  4200  0F3D                     	;# 
  4201  0F3E                     	;# 
  4202  0F3F                     	;# 
  4203  0F40                     	;# 
  4204  0F41                     	;# 
  4205  0F43                     	;# 
  4206  0F44                     	;# 
  4207  0F45                     	;# 
  4208  0F46                     	;# 
  4209  0F47                     	;# 
  4210  0F48                     	;# 
  4211  0F49                     	;# 
  4212  0F4A                     	;# 
  4213  0F4B                     	;# 
  4214  0F4C                     	;# 
  4215  0F4E                     	;# 
  4216  0F4F                     	;# 
  4217  0F50                     	;# 
  4218  0F51                     	;# 
  4219  0F52                     	;# 
  4220  0F53                     	;# 
  4221  0F54                     	;# 
  4222  0F55                     	;# 
  4223  0F56                     	;# 
  4224  0F57                     	;# 
  4225  0F65                     	;# 
  4226  0F68                     	;# 
  4227  0F69                     	;# 
  4228  0F6A                     	;# 
  4229  0F6B                     	;# 
  4230  0FE4                     	;# 
  4231  0FE5                     	;# 
  4232  0FE6                     	;# 
  4233  0FE7                     	;# 
  4234  0FE8                     	;# 
  4235  0FE9                     	;# 
  4236  0FEA                     	;# 
  4237  0FEB                     	;# 
  4238  0FED                     	;# 
  4239  0FEE                     	;# 
  4240  0FEF                     	;# 
  4241  0000                     	;# 
  4242  0001                     	;# 
  4243  0002                     	;# 
  4244  0003                     	;# 
  4245  0004                     	;# 
  4246  0005                     	;# 
  4247  0006                     	;# 
  4248  0007                     	;# 
  4249  0008                     	;# 
  4250  0009                     	;# 
  4251  000A                     	;# 
  4252  000B                     	;# 
  4253  000C                     	;# 
  4254  000D                     	;# 
  4255  000E                     	;# 
  4256  0010                     	;# 
  4257  0011                     	;# 
  4258  0012                     	;# 
  4259  0013                     	;# 
  4260  0016                     	;# 
  4261  0017                     	;# 
  4262  0018                     	;# 
  4263  001C                     	;# 
  4264  001C                     	;# 
  4265  001D                     	;# 
  4266  001D                     	;# 
  4267  001E                     	;# 
  4268  001F                     	;# 
  4269  008C                     	;# 
  4270  008C                     	;# 
  4271  008D                     	;# 
  4272  008E                     	;# 
  4273  008E                     	;# 
  4274  008F                     	;# 
  4275  0090                     	;# 
  4276  0090                     	;# 
  4277  0091                     	;# 
  4278  0093                     	;# 
  4279  0094                     	;# 
  4280  0095                     	;# 
  4281  0096                     	;# 
  4282  0097                     	;# 
  4283  0098                     	;# 
  4284  0099                     	;# 
  4285  009A                     	;# 
  4286  009B                     	;# 
  4287  009C                     	;# 
  4288  009D                     	;# 
  4289  009E                     	;# 
  4290  010C                     	;# 
  4291  010D                     	;# 
  4292  010E                     	;# 
  4293  010E                     	;# 
  4294  010F                     	;# 
  4295  0110                     	;# 
  4296  0110                     	;# 
  4297  0111                     	;# 
  4298  0112                     	;# 
  4299  0112                     	;# 
  4300  0113                     	;# 
  4301  0114                     	;# 
  4302  0114                     	;# 
  4303  0115                     	;# 
  4304  0116                     	;# 
  4305  0116                     	;# 
  4306  0117                     	;# 
  4307  0119                     	;# 
  4308  0119                     	;# 
  4309  0119                     	;# 
  4310  011A                     	;# 
  4311  011A                     	;# 
  4312  011A                     	;# 
  4313  011B                     	;# 
  4314  011B                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011B                     	;# 
  4318  011C                     	;# 
  4319  011C                     	;# 
  4320  011C                     	;# 
  4321  011D                     	;# 
  4322  011D                     	;# 
  4323  011D                     	;# 
  4324  011E                     	;# 
  4325  011E                     	;# 
  4326  011E                     	;# 
  4327  011F                     	;# 
  4328  011F                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  011F                     	;# 
  4332  018C                     	;# 
  4333  018D                     	;# 
  4334  018E                     	;# 
  4335  018F                     	;# 
  4336  0190                     	;# 
  4337  0191                     	;# 
  4338  0192                     	;# 
  4339  0196                     	;# 
  4340  0197                     	;# 
  4341  0198                     	;# 
  4342  0199                     	;# 
  4343  019A                     	;# 
  4344  019B                     	;# 
  4345  019C                     	;# 
  4346  020C                     	;# 
  4347  020C                     	;# 
  4348  020D                     	;# 
  4349  020E                     	;# 
  4350  020F                     	;# 
  4351  020F                     	;# 
  4352  0210                     	;# 
  4353  0210                     	;# 
  4354  0211                     	;# 
  4355  0211                     	;# 
  4356  0212                     	;# 
  4357  0212                     	;# 
  4358  0213                     	;# 
  4359  0214                     	;# 
  4360  0215                     	;# 
  4361  0215                     	;# 
  4362  0216                     	;# 
  4363  0216                     	;# 
  4364  0217                     	;# 
  4365  0217                     	;# 
  4366  0218                     	;# 
  4367  0218                     	;# 
  4368  0219                     	;# 
  4369  021A                     	;# 
  4370  021B                     	;# 
  4371  021B                     	;# 
  4372  021C                     	;# 
  4373  021C                     	;# 
  4374  021D                     	;# 
  4375  021D                     	;# 
  4376  021E                     	;# 
  4377  021F                     	;# 
  4378  028C                     	;# 
  4379  028C                     	;# 
  4380  028D                     	;# 
  4381  028D                     	;# 
  4382  028E                     	;# 
  4383  028F                     	;# 
  4384  0290                     	;# 
  4385  0290                     	;# 
  4386  0291                     	;# 
  4387  0292                     	;# 
  4388  0292                     	;# 
  4389  0293                     	;# 
  4390  0293                     	;# 
  4391  0294                     	;# 
  4392  0295                     	;# 
  4393  0296                     	;# 
  4394  0296                     	;# 
  4395  0297                     	;# 
  4396  0298                     	;# 
  4397  0298                     	;# 
  4398  0299                     	;# 
  4399  0299                     	;# 
  4400  029A                     	;# 
  4401  029B                     	;# 
  4402  029C                     	;# 
  4403  029C                     	;# 
  4404  029D                     	;# 
  4405  030C                     	;# 
  4406  030C                     	;# 
  4407  030D                     	;# 
  4408  030E                     	;# 
  4409  030F                     	;# 
  4410  0310                     	;# 
  4411  0310                     	;# 
  4412  0311                     	;# 
  4413  0312                     	;# 
  4414  0313                     	;# 
  4415  0314                     	;# 
  4416  0314                     	;# 
  4417  0315                     	;# 
  4418  0316                     	;# 
  4419  0317                     	;# 
  4420  0318                     	;# 
  4421  0318                     	;# 
  4422  0319                     	;# 
  4423  031A                     	;# 
  4424  031B                     	;# 
  4425  031C                     	;# 
  4426  031C                     	;# 
  4427  031D                     	;# 
  4428  031E                     	;# 
  4429  031F                     	;# 
  4430  038C                     	;# 
  4431  038D                     	;# 
  4432  038E                     	;# 
  4433  0390                     	;# 
  4434  0391                     	;# 
  4435  0392                     	;# 
  4436  040C                     	;# 
  4437  040D                     	;# 
  4438  040E                     	;# 
  4439  040F                     	;# 
  4440  0410                     	;# 
  4441  0411                     	;# 
  4442  0416                     	;# 
  4443  0416                     	;# 
  4444  0417                     	;# 
  4445  0418                     	;# 
  4446  0418                     	;# 
  4447  0419                     	;# 
  4448  041A                     	;# 
  4449  041A                     	;# 
  4450  041B                     	;# 
  4451  041C                     	;# 
  4452  041C                     	;# 
  4453  041D                     	;# 
  4454  041E                     	;# 
  4455  041F                     	;# 
  4456  048C                     	;# 
  4457  048C                     	;# 
  4458  048D                     	;# 
  4459  048E                     	;# 
  4460  048F                     	;# 
  4461  048F                     	;# 
  4462  0490                     	;# 
  4463  0491                     	;# 
  4464  0492                     	;# 
  4465  0492                     	;# 
  4466  0493                     	;# 
  4467  0494                     	;# 
  4468  0495                     	;# 
  4469  0495                     	;# 
  4470  0496                     	;# 
  4471  0497                     	;# 
  4472  0498                     	;# 
  4473  0499                     	;# 
  4474  049A                     	;# 
  4475  049B                     	;# 
  4476  049C                     	;# 
  4477  049D                     	;# 
  4478  050C                     	;# 
  4479  050C                     	;# 
  4480  050D                     	;# 
  4481  050E                     	;# 
  4482  050F                     	;# 
  4483  050F                     	;# 
  4484  0510                     	;# 
  4485  0511                     	;# 
  4486  0512                     	;# 
  4487  0512                     	;# 
  4488  0513                     	;# 
  4489  0514                     	;# 
  4490  0515                     	;# 
  4491  0515                     	;# 
  4492  0516                     	;# 
  4493  0517                     	;# 
  4494  0518                     	;# 
  4495  0519                     	;# 
  4496  051A                     	;# 
  4497  051B                     	;# 
  4498  051C                     	;# 
  4499  051D                     	;# 
  4500  058C                     	;# 
  4501  058C                     	;# 
  4502  058D                     	;# 
  4503  058E                     	;# 
  4504  058F                     	;# 
  4505  058F                     	;# 
  4506  0590                     	;# 
  4507  0591                     	;# 
  4508  0592                     	;# 
  4509  0593                     	;# 
  4510  060C                     	;# 
  4511  060D                     	;# 
  4512  060E                     	;# 
  4513  060F                     	;# 
  4514  0610                     	;# 
  4515  0611                     	;# 
  4516  0612                     	;# 
  4517  0613                     	;# 
  4518  0614                     	;# 
  4519  0616                     	;# 
  4520  0617                     	;# 
  4521  0618                     	;# 
  4522  0619                     	;# 
  4523  061A                     	;# 
  4524  061B                     	;# 
  4525  061C                     	;# 
  4526  061D                     	;# 
  4527  061E                     	;# 
  4528  068C                     	;# 
  4529  068D                     	;# 
  4530  068E                     	;# 
  4531  068F                     	;# 
  4532  0690                     	;# 
  4533  0691                     	;# 
  4534  0692                     	;# 
  4535  0693                     	;# 
  4536  0694                     	;# 
  4537  070C                     	;# 
  4538  070D                     	;# 
  4539  070E                     	;# 
  4540  070F                     	;# 
  4541  0710                     	;# 
  4542  0711                     	;# 
  4543  0712                     	;# 
  4544  0713                     	;# 
  4545  0714                     	;# 
  4546  0716                     	;# 
  4547  0717                     	;# 
  4548  0718                     	;# 
  4549  0719                     	;# 
  4550  071A                     	;# 
  4551  071B                     	;# 
  4552  071C                     	;# 
  4553  071D                     	;# 
  4554  071E                     	;# 
  4555  0796                     	;# 
  4556  0797                     	;# 
  4557  0798                     	;# 
  4558  0799                     	;# 
  4559  079A                     	;# 
  4560  079B                     	;# 
  4561  080C                     	;# 
  4562  080D                     	;# 
  4563  080E                     	;# 
  4564  080F                     	;# 
  4565  0810                     	;# 
  4566  0811                     	;# 
  4567  0812                     	;# 
  4568  0813                     	;# 
  4569  0814                     	;# 
  4570  081A                     	;# 
  4571  081B                     	;# 
  4572  081C                     	;# 
  4573  081D                     	;# 
  4574  081E                     	;# 
  4575  081F                     	;# 
  4576  088C                     	;# 
  4577  088D                     	;# 
  4578  088E                     	;# 
  4579  088F                     	;# 
  4580  0890                     	;# 
  4581  0891                     	;# 
  4582  0892                     	;# 
  4583  0893                     	;# 
  4584  0895                     	;# 
  4585  0896                     	;# 
  4586  0897                     	;# 
  4587  0898                     	;# 
  4588  0899                     	;# 
  4589  089A                     	;# 
  4590  089B                     	;# 
  4591  090C                     	;# 
  4592  090E                     	;# 
  4593  090F                     	;# 
  4594  091F                     	;# 
  4595  091F                     	;# 
  4596  098F                     	;# 
  4597  098F                     	;# 
  4598  0990                     	;# 
  4599  0991                     	;# 
  4600  0992                     	;# 
  4601  0993                     	;# 
  4602  0994                     	;# 
  4603  0995                     	;# 
  4604  0996                     	;# 
  4605  0997                     	;# 
  4606  0E0F                     	;# 
  4607  0E10                     	;# 
  4608  0E11                     	;# 
  4609  0E12                     	;# 
  4610  0E13                     	;# 
  4611  0E14                     	;# 
  4612  0E15                     	;# 
  4613  0E16                     	;# 
  4614  0E17                     	;# 
  4615  0E18                     	;# 
  4616  0E19                     	;# 
  4617  0E1A                     	;# 
  4618  0E1B                     	;# 
  4619  0E1C                     	;# 
  4620  0E1D                     	;# 
  4621  0E1E                     	;# 
  4622  0E1F                     	;# 
  4623  0E20                     	;# 
  4624  0E21                     	;# 
  4625  0E22                     	;# 
  4626  0E23                     	;# 
  4627  0E24                     	;# 
  4628  0E25                     	;# 
  4629  0E26                     	;# 
  4630  0E27                     	;# 
  4631  0E28                     	;# 
  4632  0E29                     	;# 
  4633  0E2A                     	;# 
  4634  0E2B                     	;# 
  4635  0E2C                     	;# 
  4636  0E2D                     	;# 
  4637  0E2E                     	;# 
  4638  0E2F                     	;# 
  4639  0E30                     	;# 
  4640  0E31                     	;# 
  4641  0E32                     	;# 
  4642  0E33                     	;# 
  4643  0E34                     	;# 
  4644  0E35                     	;# 
  4645  0E36                     	;# 
  4646  0E37                     	;# 
  4647  0E8F                     	;# 
  4648  0E90                     	;# 
  4649  0E91                     	;# 
  4650  0E92                     	;# 
  4651  0E93                     	;# 
  4652  0E94                     	;# 
  4653  0E95                     	;# 
  4654  0E96                     	;# 
  4655  0E97                     	;# 
  4656  0E9C                     	;# 
  4657  0E9D                     	;# 
  4658  0E9E                     	;# 
  4659  0EA1                     	;# 
  4660  0EA2                     	;# 
  4661  0EA3                     	;# 
  4662  0EA4                     	;# 
  4663  0EA5                     	;# 
  4664  0EA9                     	;# 
  4665  0EAA                     	;# 
  4666  0EAB                     	;# 
  4667  0EAC                     	;# 
  4668  0EB1                     	;# 
  4669  0EB2                     	;# 
  4670  0EB3                     	;# 
  4671  0EB8                     	;# 
  4672  0EB9                     	;# 
  4673  0EBA                     	;# 
  4674  0EBB                     	;# 
  4675  0EBC                     	;# 
  4676  0EBD                     	;# 
  4677  0EBE                     	;# 
  4678  0EC3                     	;# 
  4679  0EC5                     	;# 
  4680  0EC6                     	;# 
  4681  0EC7                     	;# 
  4682  0EC8                     	;# 
  4683  0EC9                     	;# 
  4684  0ECA                     	;# 
  4685  0ECB                     	;# 
  4686  0ECC                     	;# 
  4687  0F10                     	;# 
  4688  0F11                     	;# 
  4689  0F12                     	;# 
  4690  0F13                     	;# 
  4691  0F14                     	;# 
  4692  0F15                     	;# 
  4693  0F16                     	;# 
  4694  0F17                     	;# 
  4695  0F18                     	;# 
  4696  0F19                     	;# 
  4697  0F1A                     	;# 
  4698  0F1B                     	;# 
  4699  0F1C                     	;# 
  4700  0F1D                     	;# 
  4701  0F1E                     	;# 
  4702  0F1F                     	;# 
  4703  0F20                     	;# 
  4704  0F21                     	;# 
  4705  0F22                     	;# 
  4706  0F23                     	;# 
  4707  0F24                     	;# 
  4708  0F25                     	;# 
  4709  0F26                     	;# 
  4710  0F27                     	;# 
  4711  0F38                     	;# 
  4712  0F39                     	;# 
  4713  0F3A                     	;# 
  4714  0F3B                     	;# 
  4715  0F3C                     	;# 
  4716  0F3D                     	;# 
  4717  0F3E                     	;# 
  4718  0F3F                     	;# 
  4719  0F40                     	;# 
  4720  0F41                     	;# 
  4721  0F43                     	;# 
  4722  0F44                     	;# 
  4723  0F45                     	;# 
  4724  0F46                     	;# 
  4725  0F47                     	;# 
  4726  0F48                     	;# 
  4727  0F49                     	;# 
  4728  0F4A                     	;# 
  4729  0F4B                     	;# 
  4730  0F4C                     	;# 
  4731  0F4E                     	;# 
  4732  0F4F                     	;# 
  4733  0F50                     	;# 
  4734  0F51                     	;# 
  4735  0F52                     	;# 
  4736  0F53                     	;# 
  4737  0F54                     	;# 
  4738  0F55                     	;# 
  4739  0F56                     	;# 
  4740  0F57                     	;# 
  4741  0F65                     	;# 
  4742  0F68                     	;# 
  4743  0F69                     	;# 
  4744  0F6A                     	;# 
  4745  0F6B                     	;# 
  4746  0FE4                     	;# 
  4747  0FE5                     	;# 
  4748  0FE6                     	;# 
  4749  0FE7                     	;# 
  4750  0FE8                     	;# 
  4751  0FE9                     	;# 
  4752  0FEA                     	;# 
  4753  0FEB                     	;# 
  4754  0FED                     	;# 
  4755  0FEE                     	;# 
  4756  0FEF                     	;_aPatchMemory
  4757                           
  4758                           	psect	idataBANK2
  4759  0B7E                     __pidataBANK2:	
  4760                           
  4761                           ;initializer for _segdisp
  4762  0B7E  3403               	retlw	3
  4763  0B7F  3400               	retlw	0
  4764  0B80  349F               	retlw	159
  4765  0B81  3400               	retlw	0
  4766  0B82  3425               	retlw	37
  4767  0B83  3400               	retlw	0
  4768  0B84  340D               	retlw	13
  4769  0B85  3400               	retlw	0
  4770  0B86  3499               	retlw	153
  4771  0B87  3400               	retlw	0
  4772  0B88  3449               	retlw	73
  4773  0B89  3400               	retlw	0
  4774  0B8A  3441               	retlw	65
  4775  0B8B  3400               	retlw	0
  4776  0B8C  341B               	retlw	27
  4777  0B8D  3400               	retlw	0
  4778  0B8E  3401               	retlw	1
  4779  0B8F  3400               	retlw	0
  4780  0B90  3409               	retlw	9
  4781  0B91  3400               	retlw	0
  4782                           
  4783                           	psect	stringtext1
  4784  1000                     __pstringtext1:	
  4785  1000                     _cPowerOfTwo:	
  4786  1000  3401               	retlw	1
  4787  1001  3400               	retlw	0
  4788  1002  3402               	retlw	2
  4789  1003  3400               	retlw	0
  4790  1004  3404               	retlw	4
  4791  1005  3400               	retlw	0
  4792  1006  3408               	retlw	8
  4793  1007  3400               	retlw	0
  4794  1008  3410               	retlw	16
  4795  1009  3400               	retlw	0
  4796  100A  3420               	retlw	32
  4797  100B  3400               	retlw	0
  4798  100C  3440               	retlw	64
  4799  100D  3400               	retlw	0
  4800  100E  3480               	retlw	128
  4801  100F  3400               	retlw	0
  4802  1010                     __end_of_cPowerOfTwo:	
  4803                           
  4804                           	psect	stringtext2
  4805  1010                     __pstringtext2:	
  4806  1010                     _maxBanks:	
  4807  1010  3401               	retlw	1
  4808  1011  3400               	retlw	0
  4809  1012                     __end_of_maxBanks:	
  4810                           
  4811                           	psect	stringtext3
  4812  1012                     __pstringtext3:	
  4813  1012                     _maxPatches:	
  4814  1012  3464               	retlw	100
  4815  1013  3400               	retlw	0
  4816  1014                     __end_of_maxPatches:	
  4817                           
  4818                           	psect	stringtext4
  4819  1014                     __pstringtext4:	
  4820  1014                     _MvcMaxValue:	
  4821  1014  34FF               	retlw	255
  4822  1015  3403               	retlw	3
  4823  1016                     __end_of_MvcMaxValue:	
  4824                           
  4825                           	psect	stringtext5
  4826  1016                     __pstringtext5:	
  4827  1016                     _MvcMinValue:	
  4828  1016  3400               	retlw	0
  4829  1017  3400               	retlw	0
  4830  1018                     __end_of_MvcMinValue:	
  4831                           
  4832                           	psect	stringtext6
  4833  1018                     __pstringtext6:	
  4834  1018                     _clockMicroTime:	
  4835  1018  34C8               	retlw	200
  4836  1019  3400               	retlw	0
  4837  101A                     __end_of_clockMicroTime:	
  4838                           
  4839                           	psect	stringtext7
  4840  101A                     __pstringtext7:	
  4841  101A                     _lineSettleMicroTime:	
  4842  101A  3490               	retlw	144
  4843  101B  3401               	retlw	1
  4844  101C                     __end_of_lineSettleMicroTime:	
  4845                           
  4846                           	psect	stringtext8
  4847  101C                     __pstringtext8:	
  4848  101C                     _toggleDly:	
  4849  101C  340A               	retlw	10
  4850  101D  3400               	retlw	0
  4851  101E                     __end_of_toggleDly:	
  4852                           
  4853                           	psect	stringtext9
  4854  101E                     __pstringtext9:	
  4855  101E                     _twoK:	
  4856  101E  3410               	retlw	16
  4857  101F  3427               	retlw	39
  4858  1020                     __end_of_twoK:	
  4859                           
  4860                           	psect	stringtext10
  4861  1020                     __pstringtext10:	
  4862  1020                     _speed:	
  4863  1020  3432               	retlw	50
  4864  1021  3400               	retlw	0
  4865  1022                     __end_of_speed:	
  4866                           
  4867                           	psect	stringtext11
  4868  1022                     __pstringtext11:	
  4869  1022                     _datapin:	
  4870  1022  3412               	retlw	18
  4871  1023  3400               	retlw	0
  4872  1024                     __end_of_datapin:	
  4873                           
  4874                           	psect	stringtext12
  4875  1024                     __pstringtext12:	
  4876  1024                     _clockpin:	
  4877  1024  3411               	retlw	17
  4878  1025  3400               	retlw	0
  4879  1026                     __end_of_clockpin:	
  4880                           
  4881                           	psect	stringtext13
  4882  1026                     __pstringtext13:	
  4883  1026                     _latchpin:	
  4884  1026  3410               	retlw	16
  4885  1027  3400               	retlw	0
  4886  1028                     __end_of_latchpin:	
  4887                           
  4888                           	psect	stringtext14
  4889  1028                     __pstringtext14:	
  4890  1028                     main@iResetValue:	
  4891  1028  3464               	retlw	100
  4892  1029  3400               	retlw	0
  4893  102A                     __end_ofmain@iResetValue:	
  4894                           
  4895                           	psect	stringtext15
  4896  102A                     __pstringtext15:	
  4897  102A                     _cMstrClkAdjust:	
  4898  102A  3420               	retlw	32
  4899  102B  3400               	retlw	0
  4900  102C                     __end_of_cMstrClkAdjust:	
  4901                           
  4902                           	psect	stringtext16
  4903  102C                     __pstringtext16:	
  4904  102C                     _i2c_addr_dualADSR1:	
  4905  102C  3469               	retlw	105
  4906  102D                     __end_of_i2c_addr_dualADSR1:	
  4907                           
  4908                           	psect	stringtext17
  4909  102D                     __pstringtext17:	
  4910  102D                     _i2c_addr_dualADSR0:	
  4911  102D  3468               	retlw	104
  4912  102E                     __end_of_i2c_addr_dualADSR0:	
  4913                           
  4914                           	psect	stringtext18
  4915  102E                     __pstringtext18:	
  4916  102E                     _cPointerByteWriteLED:	
  4917  102E  3410               	retlw	16
  4918  102F                     __end_of_cPointerByteWriteLED:	
  4919                           
  4920                           	psect	stringtext19
  4921  102F                     __pstringtext19:	
  4922  102F                     _cPointerByteReadFaders:	
  4923  102F  3420               	retlw	32
  4924  1030                     __end_of_cPointerByteReadFaders:	
  4925                           
  4926                           	psect	stringtext20
  4927  1030                     __pstringtext20:	
  4928  1030                     _cPointerByteWriteFaders:	
  4929  1030  3430               	retlw	48
  4930  1031                     __end_of_cPointerByteWriteFaders:	
  4931  000C                     _PORTA	set	12
  4932  0018                     _LATCbits	set	24
  4933  0013                     _TRISCbits	set	19
  4934  000D                     _PORTBbits	set	13
  4935  000E                     _PORTC	set	14
  4936  000D                     _PORTB	set	13
  4937  000B                     _INTCONbits	set	11
  4938  0013                     _TRISC	set	19
  4939  0012                     _TRISB	set	18
  4940  0011                     _TRISA	set	17
  4941  0018                     _LATC	set	24
  4942  0017                     _LATB	set	23
  4943  0016                     _LATA	set	22
  4944  005F                     _GIE	set	95
  4945  0094                     _ADCON1bits	set	148
  4946  008E                     _ADPREVL	set	142
  4947  008F                     _ADPREVH	set	143
  4948  0097                     _ADSTATbits	set	151
  4949  0090                     _ADACCL	set	144
  4950  0091                     _ADACCH	set	145
  4951  0095                     _ADCON2bits	set	149
  4952  0096                     _ADCON3bits	set	150
  4953  008C                     _ADRESL	set	140
  4954  008D                     _ADRESH	set	141
  4955  0093                     _ADCON0bits	set	147
  4956  0093                     _ADCON0	set	147
  4957  009E                     _ADPCH	set	158
  4958  009D                     _ADACQ	set	157
  4959  009C                     _ADPRE	set	156
  4960  009B                     _ADCAP	set	155
  4961  009A                     _ADREF	set	154
  4962  0098                     _ADCLK	set	152
  4963  0097                     _ADSTAT	set	151
  4964  0099                     _ADACT	set	153
  4965  0096                     _ADCON3	set	150
  4966  0095                     _ADCON2	set	149
  4967  0094                     _ADCON1	set	148
  4968  0116                     _ADERRL	set	278
  4969  0117                     _ADERRH	set	279
  4970  0114                     _ADFLTRL	set	276
  4971  0115                     _ADFLTRH	set	277
  4972  010C                     _ADCNT	set	268
  4973  0113                     _ADSTPTH	set	275
  4974  0112                     _ADSTPTL	set	274
  4975  0111                     _ADUTHH	set	273
  4976  0110                     _ADUTHL	set	272
  4977  010F                     _ADLTHH	set	271
  4978  010E                     _ADLTHL	set	270
  4979  010D                     _ADRPT	set	269
  4980  018C                     _SSP1BUF	set	396
  4981  0191                     _SSP1CON2bits	set	401
  4982  0190                     _SSP1CON1bits	set	400
  4983  018D                     _SSP1ADD	set	397
  4984  0192                     _SSP1CON3	set	402
  4985  0190                     _SSP1CON1	set	400
  4986  018F                     _SSP1STAT	set	399
  4987  0719                     _PIE3bits	set	1817
  4988  070F                     _PIR3bits	set	1807
  4989  0892                     _OSCTUNE	set	2194
  4990  0893                     _OSCFRQ	set	2195
  4991  0891                     _OSCEN	set	2193
  4992  088F                     _OSCCON3	set	2191
  4993  088D                     _OSCCON1	set	2189
  4994  0EC5                     _SSP1CLKPPSbits	set	3781
  4995  0EC6                     _SSP1DATPPSbits	set	3782
  4996  0E8F                     _PPSLOCKbits	set	3727
  4997  0E8F                     _PPSLOCK	set	3727
  4998  0F4E                     _ANSELCbits	set	3918
  4999  0F24                     _RC4PPS	set	3876
  5000  0F23                     _RC3PPS	set	3875
  5001  0F50                     _ODCONC	set	3920
  5002  0F45                     _ODCONB	set	3909
  5003  0F3A                     _ODCONA	set	3898
  5004  0F4F                     _WPUC	set	3919
  5005  0F39                     _WPUA	set	3897
  5006  0F44                     _WPUB	set	3908
  5007  0F65                     _WPUE	set	3941
  5008  0F38                     _ANSELA	set	3896
  5009  0F43                     _ANSELB	set	3907
  5010  0F4E                     _ANSELC	set	3918
  5011                           
  5012                           ; #config settings
  5013  0000                     
  5014                           	psect	cinit
  5015  0022                     start_initialization:	
  5016  0022                     __initialization:		;BIGRAM
  5017                           
  5018                           ; Initialize objects allocated to BANK2
  5019  0022  307E               	movlw	low __pidataBANK2
  5020  0023  0084               	movwf	4
  5021  0024  308B               	movlw	(high __pidataBANK2)| (0+128)
  5022  0025  0085               	movwf	5
  5023  0026  3020               	movlw	low __pdataBANK2
  5024  0027  0086               	movwf	6
  5025  0028  3001               	movlw	high __pdataBANK2
  5026  0029  0087               	movwf	7
  5027  002A  3000               	movlw	0
  5028  002B  00FF               	movwf	btemp+1
  5029  002C  3014               	movlw	20
  5030  002D  318B  233F  3180   	fcall	init_ram
  5031                           
  5032                           ; Clear objects allocated to BIGRAM
  5033  0030  3070               	movlw	low (0+9072)
  5034  0031  0084               	movwf	4
  5035  0032  3023               	movlw	high (0+9072)
  5036  0033  0085               	movwf	5
  5037  0034  3080               	movlw	128
  5038  0035  00FE               	movwf	btemp
  5039  0036  3000               	movlw	0
  5040  0037  00FF               	movwf	btemp+1
  5041  0038  318B  2333  3180   	fcall	clear_ram0
  5042                           
  5043                           ; Clear objects allocated to COMMON
  5044  003B  01F0               	clrf	__pbssCOMMON& (0+127)
  5045  003C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
  5046  003D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
  5047  003E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
  5048  003F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
  5049  0040  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
  5050  0041  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
  5051                           
  5052                           ; Clear objects allocated to BANK0
  5053  0042  01E7               	clrf	__pbssBANK0& (0+127)
  5054  0043  01E8               	clrf	(__pbssBANK0+1)& (0+127)
  5055  0044  01E9               	clrf	(__pbssBANK0+2)& (0+127)
  5056  0045  01EA               	clrf	(__pbssBANK0+3)& (0+127)
  5057  0046  01EB               	clrf	(__pbssBANK0+4)& (0+127)
  5058  0047  01EC               	clrf	(__pbssBANK0+5)& (0+127)
  5059  0048  01ED               	clrf	(__pbssBANK0+6)& (0+127)
  5060  0049  01EE               	clrf	(__pbssBANK0+7)& (0+127)
  5061  004A  01EF               	clrf	(__pbssBANK0+8)& (0+127)
  5062                           
  5063                           ; Clear objects allocated to BANK1
  5064  004B  30A0               	movlw	low __pbssBANK1
  5065  004C  0084               	movwf	4
  5066  004D  3000               	movlw	high __pbssBANK1
  5067  004E  0085               	movwf	5
  5068  004F  3038               	movlw	56
  5069  0050  00FE               	movwf	btemp
  5070  0051  3000               	movlw	0
  5071  0052  00FF               	movwf	btemp+1
  5072  0053  318B  2333  3180   	fcall	clear_ram0
  5073                           
  5074                           ; Clear objects allocated to BANK2
  5075  0056  3034               	movlw	low __pbssBANK2
  5076  0057  0084               	movwf	4
  5077  0058  3001               	movlw	high __pbssBANK2
  5078  0059  0085               	movwf	5
  5079  005A  3010               	movlw	16
  5080  005B  00FE               	movwf	btemp
  5081  005C  3000               	movlw	0
  5082  005D  00FF               	movwf	btemp+1
  5083  005E  318B  2333         	fcall	clear_ram0
  5084  0060                     end_of_initialization:	
  5085                           ;End of C runtime variable initialization code
  5086                           
  5087  0060                     __end_of__initialization:	
  5088  0060  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5089  0061  0020               	movlb	0
  5090  0062  3180  2864         	ljmp	_main	;jump to C main() function
  5091                           
  5092                           	psect	bssCOMMON
  5093  0070                     __pbssCOMMON:	
  5094  0070                     I2C1_ISR@i2c_bytes_left:	
  5095  0070                     	ds	1
  5096  0071                     I2C1_ISR@pi2c_buf_ptr:	
  5097  0071                     	ds	1
  5098  0072                     _p_i2c1_current:	
  5099  0072                     	ds	1
  5100  0073                     _p_i2c1_trb_current:	
  5101  0073                     	ds	1
  5102  0074                     _i2c1_trb_count:	
  5103  0074                     	ds	1
  5104  0075                     I2C1_ISR@i2c_address:	
  5105  0075                     	ds	2
  5106                           
  5107                           	psect	bssBANK0
  5108  0067                     __pbssBANK0:	
  5109  0067                     _i2c1_object:	
  5110  0067                     	ds	5
  5111  006C                     _iLEDs0_MSB:	
  5112  006C                     	ds	1
  5113  006D                     _MY_CONSTS:	
  5114  006D                     	ds	1
  5115  006E                     I2C1_ISR@i2c_10bit_address_restart:	
  5116  006E                     	ds	1
  5117  006F                     _i2c1_state:	
  5118  006F                     	ds	1
  5119                           
  5120                           	psect	bssBANK1
  5121  00A0                     __pbssBANK1:	
  5122  00A0                     _prevPanelInChannels:	
  5123  00A0                     	ds	4
  5124  00A4                     _PanelInChannels:	
  5125  00A4                     	ds	4
  5126  00A8                     _faderActiveFlag:	
  5127  00A8                     	ds	4
  5128  00AC                     _d:	
  5129  00AC                     	ds	3
  5130  00AF                     _b:	
  5131  00AF                     	ds	3
  5132  00B2                     _wkFloat:	
  5133  00B2                     	ds	3
  5134  00B5                     _e:	
  5135  00B5                     	ds	2
  5136  00B7                     _c:	
  5137  00B7                     	ds	2
  5138  00B9                     _mvcPatchNumber:	
  5139  00B9                     	ds	2
  5140  00BB                     _wkByte:	
  5141  00BB                     	ds	1
  5142  00BC                     _wkMIDICC:	
  5143  00BC                     	ds	1
  5144  00BD                     _wkFaderValue:	
  5145  00BD                     	ds	1
  5146  00BE                     _iLEDs1_LSB:	
  5147  00BE                     	ds	1
  5148  00BF                     _iLEDs1_MSB:	
  5149  00BF                     	ds	1
  5150  00C0                     _iLEDs0_LSB:	
  5151  00C0                     	ds	1
  5152  00C1                     _iI2CFaderValue:	
  5153  00C1                     	ds	8
  5154  00C9                     _mvcChannels:	
  5155  00C9                     	ds	4
  5156  00CD                     I2C1_MasterRead@trBlock:	
  5157  00CD                     	ds	4
  5158  00D1                     I2C1_MasterWrite@trBlock:	
  5159  00D1                     	ds	4
  5160  00D5                     _i2c1_tr_queue:	
  5161  00D5                     	ds	3
  5162                           
  5163                           	psect	bssBANK2
  5164  0134                     __pbssBANK2:	
  5165  0134                     _dualADSRdata1:	
  5166  0134                     	ds	8
  5167  013C                     _dualADSRdata0:	
  5168  013C                     	ds	8
  5169                           
  5170                           	psect	dataBANK2
  5171  0120                     __pdataBANK2:	
  5172  0120                     _segdisp:	
  5173  0120                     	ds	20
  5174                           
  5175                           	psect	inittext
  5176  0B3F                     init_ram:	
  5177  0B3F  00FE               	movwf	126
  5178  0B40                     initloop:	
  5179  0B40  0012               	moviw fsr0++
  5180  0B41  001E               	movwi fsr1++
  5181  0B42  3001               	movlw	1
  5182  0B43  02FE               	subwf	126,f
  5183  0B44  3000               	movlw	0
  5184  0B45  3BFF               	subwfb	127,f
  5185  0B46  087F               	movf	127,w
  5186  0B47  047E               	iorwf	126,w
  5187  0B48  1903               	btfsc	3,2
  5188  0B49  3400               	retlw	0
  5189  0B4A  2B40               	goto	initloop
  5190                           
  5191                           	psect	clrtext
  5192  0B33                     clear_ram0:	
  5193                           ;	Called with FSR0 containing the base address, and
  5194                           ;	btemp/btemp+1 has the size to clear
  5195                           
  5196  0B33  0064               	clrwdt	;clear the watchdog before getting into this loop
  5197  0B34                     clrloop0:	
  5198  0B34  0180               	clrf	0	;clear RAM location pointed to by FSR
  5199  0B35  3101               	addfsr 0,1
  5200  0B36  3001               	movlw	1
  5201  0B37  02FE               	subwf	126,f
  5202  0B38  3000               	movlw	0
  5203  0B39  3BFF               	subwfb	127,f
  5204  0B3A  087F               	movf	127,w
  5205  0B3B  047E               	iorwf	126,w
  5206  0B3C  1903               	btfsc	3,2
  5207  0B3D  3400               	retlw	0	;all done for this memory range, return
  5208  0B3E  2B34               	goto	clrloop0	;have we reached the end yet?
  5209                           
  5210                           	psect	cstackBANK1
  5211  00D8                     __pcstackBANK1:	
  5212  00D8                     main@readStatus:	
  5213                           
  5214                           ; 1 bytes @ 0x0
  5215  00D8                     	ds	1
  5216  00D9                     main@iCounter:	
  5217                           
  5218                           ; 2 bytes @ 0x1
  5219  00D9                     	ds	2
  5220  00DB                     main@iChangeCount:	
  5221                           
  5222                           ; 1 bytes @ 0x3
  5223  00DB                     	ds	1
  5224  00DC                     main@prevFader8bitValue:	
  5225                           
  5226                           ; 1 bytes @ 0x4
  5227  00DC                     	ds	1
  5228  00DD                     main@iLoopCounter:	
  5229                           
  5230                           ; 2 bytes @ 0x5
  5231  00DD                     	ds	2
  5232  00DF                     main@POT0Value:	
  5233                           
  5234                           ; 1 bytes @ 0x7
  5235  00DF                     	ds	1
  5236  00E0                     main@POT1Value:	
  5237                           
  5238                           ; 1 bytes @ 0x8
  5239  00E0                     	ds	1
  5240  00E1                     main@LoadDebounceCount:	
  5241                           
  5242                           ; 2 bytes @ 0x9
  5243  00E1                     	ds	2
  5244  00E3                     main@SaveDebounceCount:	
  5245                           
  5246                           ; 2 bytes @ 0xB
  5247  00E3                     	ds	2
  5248  00E5                     main@fader8bitValue:	
  5249                           
  5250                           ; 1 bytes @ 0xD
  5251  00E5                     	ds	1
  5252  00E6                     main@faderValue:	
  5253                           
  5254                           ; 2 bytes @ 0xE
  5255  00E6                     	ds	2
  5256  00E8                     main@fx:	
  5257                           
  5258                           ; 2 bytes @ 0x10
  5259  00E8                     	ds	2
  5260                           
  5261                           	psect	cstackCOMMON
  5262  0077                     __pcstackCOMMON:	
  5263  0077                     ?_OSCILLATOR_Initialize:	
  5264  0077                     ?_I2C1_Initialize:	
  5265                           ; 1 bytes @ 0x0
  5266                           
  5267  0077                     ?_ADCC_Initialize:	
  5268                           ; 1 bytes @ 0x0
  5269                           
  5270  0077                     ?_I2C1_Stop:	
  5271                           ; 1 bytes @ 0x0
  5272                           
  5273  0077                     ??_I2C1_Stop:	
  5274                           ; 1 bytes @ 0x0
  5275                           
  5276  0077                     ?_I2C1_FunctionComplete:	
  5277                           ; 1 bytes @ 0x0
  5278                           
  5279  0077                     ??_I2C1_FunctionComplete:	
  5280                           ; 1 bytes @ 0x0
  5281                           
  5282  0077                     ?_initDAC528:	
  5283                           ; 1 bytes @ 0x0
  5284                           
  5285  0077                     ?_LED7SegSetup:	
  5286                           ; 1 bytes @ 0x0
  5287                           
  5288  0077                     ?_PIN_MANAGER_Initialize:	
  5289                           ; 1 bytes @ 0x0
  5290                           
  5291  0077                     ?_SYSTEM_Initialize:	
  5292                           ; 1 bytes @ 0x0
  5293                           
  5294  0077                     ?_I2C1_ISR:	
  5295                           ; 1 bytes @ 0x0
  5296                           
  5297  0077                     ?_I2C1_BusCollisionISR:	
  5298                           ; 1 bytes @ 0x0
  5299                           
  5300  0077                     ??_I2C1_BusCollisionISR:	
  5301                           ; 1 bytes @ 0x0
  5302                           
  5303  0077                     ?_INTERRUPT_InterruptManager:	
  5304                           ; 1 bytes @ 0x0
  5305                           
  5306  0077                     ?_InitPanelInChannels:	
  5307                           ; 1 bytes @ 0x0
  5308                           
  5309  0077                     ?_InitmvcChannels:	
  5310                           ; 1 bytes @ 0x0
  5311                           
  5312  0077                     ?_main:	
  5313                           ; 1 bytes @ 0x0
  5314                           
  5315  0077                     ?_LED7SegPinWrite:	
  5316                           ; 1 bytes @ 0x0
  5317                           
  5318  0077                     ?_LED7SegPulseClock:	
  5319                           ; 1 bytes @ 0x0
  5320                           
  5321  0077                     ?_LED7SegShiftOutPulseClock:	
  5322                           ; 1 bytes @ 0x0
  5323                           
  5324                           
  5325                           ; 1 bytes @ 0x0
  5326  0077                     	ds	1
  5327  0078                     I2C1_Stop@completion_code:	
  5328                           
  5329                           ; 1 bytes @ 0x1
  5330  0078                     	ds	1
  5331  0079                     ??_I2C1_ISR:	
  5332                           
  5333                           ; 1 bytes @ 0x2
  5334  0079                     	ds	4
  5335  007D                     ??_INTERRUPT_InterruptManager:	
  5336                           
  5337                           ; 1 bytes @ 0x6
  5338  007D                     	ds	1
  5339                           
  5340                           	psect	cstackBANK0
  5341  0020                     __pcstackBANK0:	
  5342  0020                     ??_OSCILLATOR_Initialize:	
  5343  0020                     ??_I2C1_Initialize:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0020                     ??_ADCC_Initialize:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0020                     ?_I2C1_MasterWriteTRBBuild:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0020                     ?_I2C1_MasterTRBInsert:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0020                     ??_LED7SegSetup:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0020                     ?_marshallPatchMemory:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0020                     ?_updateModelFromPatchMemory:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0020                     ??_PIN_MANAGER_Initialize:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367  0020                     ??_InitPanelInChannels:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370  0020                     ??_InitmvcChannels:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373  0020                     ??_LED7SegPinWrite:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0020                     ?_ADCC_GetSingleConversion:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0020                     ?___wmul:	
  5380                           ; 2 bytes @ 0x0
  5381                           
  5382  0020                     ?___ftpack:	
  5383                           ; 2 bytes @ 0x0
  5384                           
  5385  0020                     PIN_MANAGER_Initialize@state:	
  5386                           ; 3 bytes @ 0x0
  5387                           
  5388  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0020                     LED7SegPinWrite@val:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0020                     marshallPatchMemory@dualADSRdata0:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400  0020                     updateModelFromPatchMemory@dualADSRdata0:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403  0020                     ___wmul@multiplier:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406  0020                     ___ftpack@arg:	
  5407                           ; 2 bytes @ 0x0
  5408                           
  5409                           
  5410                           ; 3 bytes @ 0x0
  5411  0020                     	ds	1
  5412  0021                     ??_SYSTEM_Initialize:	
  5413  0021                     I2C1_MasterTRBInsert@pflag:	
  5414                           ; 1 bytes @ 0x1
  5415                           
  5416  0021                     I2C1_MasterWriteTRBBuild@length:	
  5417                           ; 1 bytes @ 0x1
  5418                           
  5419  0021                     marshallPatchMemory@dualADSRdata1:	
  5420                           ; 1 bytes @ 0x1
  5421                           
  5422  0021                     updateModelFromPatchMemory@dualADSRdata1:	
  5423                           ; 1 bytes @ 0x1
  5424                           
  5425  0021                     InitPanelInChannels@i:	
  5426                           ; 1 bytes @ 0x1
  5427                           
  5428  0021                     InitmvcChannels@i:	
  5429                           ; 2 bytes @ 0x1
  5430                           
  5431                           
  5432                           ; 2 bytes @ 0x1
  5433  0021                     	ds	1
  5434  0022                     ??_I2C1_MasterTRBInsert:	
  5435  0022                     ??_marshallPatchMemory:	
  5436                           ; 1 bytes @ 0x2
  5437                           
  5438  0022                     ??_updateModelFromPatchMemory:	
  5439                           ; 1 bytes @ 0x2
  5440                           
  5441  0022                     I2C1_MasterWriteTRBBuild@address:	
  5442                           ; 1 bytes @ 0x2
  5443                           
  5444  0022                     ___wmul@multiplicand:	
  5445                           ; 2 bytes @ 0x2
  5446                           
  5447                           
  5448                           ; 2 bytes @ 0x2
  5449  0022                     	ds	1
  5450  0023                     ??_ADCC_GetSingleConversion:	
  5451  0023                     ADCC_GetSingleConversion@channel:	
  5452                           ; 1 bytes @ 0x3
  5453                           
  5454  0023                     I2C1_MasterTRBInsert@count:	
  5455                           ; 1 bytes @ 0x3
  5456                           
  5457  0023                     ___ftpack@exp:	
  5458                           ; 1 bytes @ 0x3
  5459                           
  5460                           
  5461                           ; 1 bytes @ 0x3
  5462  0023                     	ds	1
  5463  0024                     ??_I2C1_MasterWriteTRBBuild:	
  5464  0024                     ??___wmul:	
  5465                           ; 1 bytes @ 0x4
  5466                           
  5467  0024                     ___ftpack@sign:	
  5468                           ; 1 bytes @ 0x4
  5469                           
  5470  0024                     ___wmul@product:	
  5471                           ; 1 bytes @ 0x4
  5472                           
  5473                           
  5474                           ; 2 bytes @ 0x4
  5475  0024                     	ds	1
  5476  0025                     ??___ftpack:	
  5477                           
  5478                           ; 1 bytes @ 0x5
  5479  0025                     	ds	1
  5480  0026                     ?_delay:	
  5481  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  5482                           ; 1 bytes @ 0x6
  5483                           
  5484  0026                     updateModelFromPatchMemory@mvcChannels:	
  5485                           ; 1 bytes @ 0x6
  5486                           
  5487  0026                     delay@delaytime:	
  5488                           ; 1 bytes @ 0x6
  5489                           
  5490                           
  5491                           ; 2 bytes @ 0x6
  5492  0026                     	ds	1
  5493  0027                     ?_I2C1_MasterWrite:	
  5494  0027                     I2C1_MasterWrite@length:	
  5495                           ; 1 bytes @ 0x7
  5496                           
  5497  0027                     updateModelFromPatchMemory@i_1220:	
  5498                           ; 1 bytes @ 0x7
  5499                           
  5500                           
  5501                           ; 2 bytes @ 0x7
  5502  0027                     	ds	1
  5503  0028                     ??_delay:	
  5504  0028                     ?___awtoft:	
  5505                           ; 1 bytes @ 0x8
  5506                           
  5507  0028                     marshallPatchMemory@mvcChannels:	
  5508                           ; 3 bytes @ 0x8
  5509                           
  5510  0028                     I2C1_MasterWrite@address:	
  5511                           ; 1 bytes @ 0x8
  5512                           
  5513  0028                     ___awtoft@c:	
  5514                           ; 2 bytes @ 0x8
  5515                           
  5516                           
  5517                           ; 2 bytes @ 0x8
  5518  0028                     	ds	1
  5519  0029                     marshallPatchMemory@i:	
  5520  0029                     updateModelFromPatchMemory@i_1221:	
  5521                           ; 2 bytes @ 0x9
  5522                           
  5523  0029                     delay@adjustedDelaytime:	
  5524                           ; 2 bytes @ 0x9
  5525                           
  5526                           
  5527                           ; 4 bytes @ 0x9
  5528  0029                     	ds	1
  5529  002A                     I2C1_MasterWrite@pflag:	
  5530                           
  5531                           ; 1 bytes @ 0xA
  5532  002A                     	ds	1
  5533  002B                     ??_I2C1_MasterWrite:	
  5534  002B                     ??___awtoft:	
  5535                           ; 1 bytes @ 0xB
  5536                           
  5537  002B                     marshallPatchMemory@i_1212:	
  5538                           ; 1 bytes @ 0xB
  5539                           
  5540  002B                     updateModelFromPatchMemory@iPatchMemoryNDX:	
  5541                           ; 2 bytes @ 0xB
  5542                           
  5543                           
  5544                           ; 2 bytes @ 0xB
  5545  002B                     	ds	2
  5546  002D                     I2C1_MasterWrite@pdata:	
  5547  002D                     ___awtoft@sign:	
  5548                           ; 1 bytes @ 0xD
  5549                           
  5550  002D                     marshallPatchMemory@i_1213:	
  5551                           ; 1 bytes @ 0xD
  5552                           
  5553  002D                     updateModelFromPatchMemory@i:	
  5554                           ; 2 bytes @ 0xD
  5555                           
  5556  002D                     delay@counter:	
  5557                           ; 2 bytes @ 0xD
  5558                           
  5559                           
  5560                           ; 4 bytes @ 0xD
  5561  002D                     	ds	1
  5562  002E                     ?_MYI2C_Write16EEPROMBytes:	
  5563  002E                     ?___ftdiv:	
  5564                           ; 1 bytes @ 0xE
  5565                           
  5566  002E                     ?___ftmul:	
  5567                           ; 3 bytes @ 0xE
  5568                           
  5569  002E                     MYI2C_Write16EEPROMBytes@writeAddress:	
  5570                           ; 3 bytes @ 0xE
  5571                           
  5572  002E                     ___ftdiv@f2:	
  5573                           ; 2 bytes @ 0xE
  5574                           
  5575  002E                     ___ftmul@f1:	
  5576                           ; 3 bytes @ 0xE
  5577                           
  5578                           
  5579                           ; 3 bytes @ 0xE
  5580  002E                     	ds	1
  5581  002F                     marshallPatchMemory@iPatchMemoryNDX:	
  5582                           
  5583                           ; 2 bytes @ 0xF
  5584  002F                     	ds	1
  5585  0030                     MYI2C_Write16EEPROMBytes@pData:	
  5586                           
  5587                           ; 2 bytes @ 0x10
  5588  0030                     	ds	1
  5589  0031                     ??_LED7SegPulseClock:	
  5590  0031                     ??_LED7SegShiftOutPulseClock:	
  5591                           ; 1 bytes @ 0x11
  5592                           
  5593  0031                     ___ftdiv@f1:	
  5594                           ; 1 bytes @ 0x11
  5595                           
  5596  0031                     ___ftmul@f2:	
  5597                           ; 3 bytes @ 0x11
  5598                           
  5599                           
  5600                           ; 3 bytes @ 0x11
  5601  0031                     	ds	1
  5602  0032                     ??_MYI2C_Write16EEPROMBytes:	
  5603  0032                     LED7SegShiftOutPulseClock@val:	
  5604                           ; 1 bytes @ 0x12
  5605                           
  5606                           
  5607                           ; 1 bytes @ 0x12
  5608  0032                     	ds	1
  5609  0033                     LED7SegShiftOutPulseClock@i:	
  5610                           
  5611                           ; 1 bytes @ 0x13
  5612  0033                     	ds	1
  5613  0034                     ?_LED7SegDisplayValueByDigit:	
  5614  0034                     ??___ftdiv:	
  5615                           ; 1 bytes @ 0x14
  5616                           
  5617  0034                     ??___ftmul:	
  5618                           ; 1 bytes @ 0x14
  5619                           
  5620  0034                     LED7SegDisplayValueByDigit@iTensDigit:	
  5621                           ; 1 bytes @ 0x14
  5622                           
  5623                           
  5624                           ; 2 bytes @ 0x14
  5625  0034                     	ds	2
  5626  0036                     LED7SegDisplayValueByDigit@iUnitsDigit:	
  5627  0036                     MYI2C_Write16EEPROMBytes@writeBuffer:	
  5628                           ; 2 bytes @ 0x16
  5629                           
  5630                           
  5631                           ; 17 bytes @ 0x16
  5632  0036                     	ds	2
  5633  0038                     ??_LED7SegDisplayValueByDigit:	
  5634  0038                     ___ftdiv@cntr:	
  5635                           ; 1 bytes @ 0x18
  5636                           
  5637  0038                     ___ftmul@exp:	
  5638                           ; 1 bytes @ 0x18
  5639                           
  5640  0038                     LED7SegDisplayValueByDigit@iTensCode:	
  5641                           ; 1 bytes @ 0x18
  5642                           
  5643                           
  5644                           ; 2 bytes @ 0x18
  5645  0038                     	ds	1
  5646  0039                     ___ftdiv@f3:	
  5647  0039                     ___ftmul@f3_as_product:	
  5648                           ; 3 bytes @ 0x19
  5649                           
  5650                           
  5651                           ; 3 bytes @ 0x19
  5652  0039                     	ds	3
  5653  003C                     ___ftdiv@exp:	
  5654  003C                     ___ftmul@cntr:	
  5655                           ; 1 bytes @ 0x1C
  5656                           
  5657                           
  5658                           ; 1 bytes @ 0x1C
  5659  003C                     	ds	1
  5660  003D                     ___ftdiv@sign:	
  5661  003D                     ___ftmul@sign:	
  5662                           ; 1 bytes @ 0x1D
  5663                           
  5664                           
  5665                           ; 1 bytes @ 0x1D
  5666  003D                     	ds	1
  5667  003E                     ?___fttol:	
  5668  003E                     ___fttol@f1:	
  5669                           ; 4 bytes @ 0x1E
  5670                           
  5671                           
  5672                           ; 3 bytes @ 0x1E
  5673  003E                     	ds	4
  5674  0042                     ??___fttol:	
  5675                           
  5676                           ; 1 bytes @ 0x22
  5677  0042                     	ds	4
  5678  0046                     ___fttol@sign1:	
  5679                           
  5680                           ; 1 bytes @ 0x26
  5681  0046                     	ds	1
  5682  0047                     MYI2C_Write16EEPROMBytes@iPatchAddressLow:	
  5683  0047                     ___fttol@lval:	
  5684                           ; 1 bytes @ 0x27
  5685                           
  5686                           
  5687                           ; 4 bytes @ 0x27
  5688  0047                     	ds	1
  5689  0048                     MYI2C_Write16EEPROMBytes@nCount:	
  5690                           
  5691                           ; 2 bytes @ 0x28
  5692  0048                     	ds	2
  5693  004A                     MYI2C_Write16EEPROMBytes@timeOut:	
  5694                           
  5695                           ; 2 bytes @ 0x2A
  5696  004A                     	ds	1
  5697  004B                     ___fttol@exp1:	
  5698                           
  5699                           ; 1 bytes @ 0x2B
  5700  004B                     	ds	1
  5701  004C                     ?_putByte:	
  5702  004C                     MYI2C_Write16EEPROMBytes@pointerByte:	
  5703                           ; 1 bytes @ 0x2C
  5704                           
  5705  004C                     putByte@clockPin:	
  5706                           ; 1 bytes @ 0x2C
  5707                           
  5708                           
  5709                           ; 2 bytes @ 0x2C
  5710  004C                     	ds	1
  5711  004D                     MYI2C_Write16EEPROMBytes@slaveDeviceAddress:	
  5712                           
  5713                           ; 1 bytes @ 0x2D
  5714  004D                     	ds	1
  5715  004E                     ??_putByte:	
  5716  004E                     MYI2C_Write16EEPROMBytes@iPatchAddressHigh:	
  5717                           ; 1 bytes @ 0x2E
  5718                           
  5719                           
  5720                           ; 1 bytes @ 0x2E
  5721  004E                     	ds	1
  5722  004F                     MYI2C_Write16EEPROMBytes@counter:	
  5723                           
  5724                           ; 2 bytes @ 0x2F
  5725  004F                     	ds	2
  5726  0051                     MYI2C_Write16EEPROMBytes@i:	
  5727                           
  5728                           ; 2 bytes @ 0x31
  5729  0051                     	ds	1
  5730  0052                     putByte@data:	
  5731                           
  5732                           ; 1 bytes @ 0x32
  5733  0052                     	ds	1
  5734  0053                     putByte@mask:	
  5735  0053                     MYI2C_Write16EEPROMBytes@status:	
  5736                           ; 1 bytes @ 0x33
  5737                           
  5738                           
  5739                           ; 1 bytes @ 0x33
  5740  0053                     	ds	1
  5741  0054                     ?_savePatch:	
  5742  0054                     putByte@i:	
  5743                           ; 1 bytes @ 0x34
  5744                           
  5745  0054                     savePatch@PatchNumber:	
  5746                           ; 1 bytes @ 0x34
  5747                           
  5748                           
  5749                           ; 2 bytes @ 0x34
  5750  0054                     	ds	1
  5751  0055                     ??_initDAC528:	
  5752  0055                     ?_writeDAC528:	
  5753                           ; 1 bytes @ 0x35
  5754                           
  5755  0055                     writeDAC528@dacNumber:	
  5756                           ; 1 bytes @ 0x35
  5757                           
  5758                           
  5759                           ; 2 bytes @ 0x35
  5760  0055                     	ds	1
  5761  0056                     ??_savePatch:	
  5762                           
  5763                           ; 1 bytes @ 0x36
  5764  0056                     	ds	1
  5765  0057                     writeDAC528@dacData:	
  5766                           
  5767                           ; 1 bytes @ 0x37
  5768  0057                     	ds	1
  5769  0058                     ??_writeDAC528:	
  5770                           
  5771                           ; 1 bytes @ 0x38
  5772  0058                     	ds	1
  5773  0059                     savePatch@iPatchAddressHigh:	
  5774  0059                     writeDAC528@wkDacNumber:	
  5775                           ; 1 bytes @ 0x39
  5776                           
  5777                           
  5778                           ; 1 bytes @ 0x39
  5779  0059                     	ds	1
  5780  005A                     ?_loadPatch:	
  5781  005A                     savePatch@iPatchAddressLow:	
  5782                           ; 1 bytes @ 0x3A
  5783                           
  5784  005A                     loadPatch@PatchNumber:	
  5785                           ; 1 bytes @ 0x3A
  5786                           
  5787                           
  5788                           ; 2 bytes @ 0x3A
  5789  005A                     	ds	1
  5790  005B                     savePatch@pData:	
  5791                           
  5792                           ; 2 bytes @ 0x3B
  5793  005B                     	ds	1
  5794  005C                     ??_loadPatch:	
  5795                           
  5796                           ; 1 bytes @ 0x3C
  5797  005C                     	ds	1
  5798  005D                     savePatch@idx:	
  5799                           
  5800                           ; 2 bytes @ 0x3D
  5801  005D                     	ds	1
  5802  005E                     loadPatch@iPatchAddress:	
  5803                           
  5804                           ; 2 bytes @ 0x3E
  5805  005E                     	ds	1
  5806  005F                     savePatch@batchNum:	
  5807                           
  5808                           ; 2 bytes @ 0x3F
  5809  005F                     	ds	1
  5810  0060                     loadPatch@i:	
  5811                           
  5812                           ; 2 bytes @ 0x40
  5813  0060                     	ds	1
  5814  0061                     savePatch@iPatchAddress:	
  5815                           
  5816                           ; 2 bytes @ 0x41
  5817  0061                     	ds	2
  5818  0063                     ??_main:	
  5819                           
  5820                           ; 1 bytes @ 0x43
  5821  0063                     	ds	4
  5822                           
  5823                           	psect	maintext
  5824  0064                     __pmaintext:	
  5825 ;;
  5826 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  5827 ;;
  5828 ;; *************** function _main *****************
  5829 ;; Defined at:
  5830 ;;		line 246 in file "main.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  fx              2   16[BANK1 ] int 
  5835 ;;  dFader8bitVa    3    0        int 
  5836 ;;  faderValue      2   14[BANK1 ] int 
  5837 ;;  SaveDebounce    2   11[BANK1 ] int 
  5838 ;;  LoadDebounce    2    9[BANK1 ] int 
  5839 ;;  iLoopCounter    2    5[BANK1 ] unsigned int 
  5840 ;;  iCounter        2    1[BANK1 ] unsigned int 
  5841 ;;  iLSByte         2    0        unsigned int 
  5842 ;;  iMSByte         2    0        unsigned int 
  5843 ;;  fader8bitVal    1   13[BANK1 ] unsigned char 
  5844 ;;  POT1Value       1    8[BANK1 ] unsigned char 
  5845 ;;  POT0Value       1    7[BANK1 ] unsigned char 
  5846 ;;  prevFader8bi    1    4[BANK1 ] unsigned char 
  5847 ;;  iChangeCount    1    3[BANK1 ] unsigned char 
  5848 ;;  readStatus      1    0[BANK1 ] enum E14267
  5849 ;;  DACDataValue    1    0        unsigned char 
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      void 
  5852 ;; Registers used:
  5853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5854 ;; Tracked objects:
  5855 ;;		On entry : B1F/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5860 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  5861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Totals:         0       4      18       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;Total ram usage:       22 bytes
  5864 ;; Hardware stack levels required when called:    8
  5865 ;; This function calls:
  5866 ;;		_ADCC_GetSingleConversion
  5867 ;;		_InitPanelInChannels
  5868 ;;		_InitmvcChannels
  5869 ;;		_LED7SegDisplayValueByDigit
  5870 ;;		_LED7SegSetup
  5871 ;;		_SYSTEM_Initialize
  5872 ;;		___awtoft
  5873 ;;		___ftdiv
  5874 ;;		___fttol
  5875 ;;		___wmul
  5876 ;;		_delay
  5877 ;;		_initDAC528
  5878 ;;		_loadPatch
  5879 ;;		_savePatch
  5880 ;;		_writeDAC528
  5881 ;; This function is called by:
  5882 ;;		Startup code after reset
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function _main
  5888  0064                     _main:	
  5889                           
  5890                           ;main.c: 248: uint16_t iCounter=0;
  5891                           
  5892                           ;incstack = 0
  5893                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5894  0064  0021               	movlb	1	; select bank1
  5895  0065  01D9               	clrf	main@iCounter^(0+128)
  5896  0066  01DA               	clrf	(main@iCounter+1)^(0+128)
  5897                           
  5898                           ;main.c: 249: uint16_t iMSByte;
  5899                           ;main.c: 250: uint16_t iLSByte;
  5900                           ;main.c: 251: const uint16_t iResetValue=100;
  5901                           ;main.c: 252: uint16_t iLoopCounter=0;
  5902  0067  01DD               	clrf	main@iLoopCounter^(0+128)
  5903  0068  01DE               	clrf	(main@iLoopCounter+1)^(0+128)
  5904                           
  5905                           ;main.c: 253: uint8_t iChangeCount=0;
  5906  0069  01DB               	clrf	main@iChangeCount^(0+128)
  5907                           
  5908                           ;main.c: 254: int faderValue;
  5909                           ;main.c: 255: uint8_t fader8bitValue;
  5910                           ;main.c: 256: uint8_t prevFader8bitValue;
  5911                           ;main.c: 257: uint8_t POT0Value;
  5912                           ;main.c: 258: uint8_t POT1Value;
  5913                           ;main.c: 259: uint8_t DACDataValue;
  5914                           ;main.c: 260: double dFader8bitValue;
  5915                           ;main.c: 261: int LoadDebounceCount=0;
  5916  006A  01E1               	clrf	main@LoadDebounceCount^(0+128)
  5917  006B  01E2               	clrf	(main@LoadDebounceCount+1)^(0+128)
  5918                           
  5919                           ;main.c: 262: int SaveDebounceCount=0;
  5920  006C  01E3               	clrf	main@SaveDebounceCount^(0+128)
  5921  006D  01E4               	clrf	(main@SaveDebounceCount+1)^(0+128)
  5922                           
  5923                           ;main.c: 264: I2C1_MESSAGE_STATUS readStatus=0;
  5924  006E  01D8               	clrf	main@readStatus^(0+128)
  5925                           
  5926                           ;main.c: 267: SYSTEM_Initialize();
  5927  006F  318B  2327  3180   	fcall	_SYSTEM_Initialize
  5928                           
  5929                           ;main.c: 268: initDAC528();
  5930  0072  318B  2392  3180   	fcall	_initDAC528
  5931                           
  5932                           ;main.c: 269: LED7SegSetup();
  5933  0075  318B  234B  3180   	fcall	_LED7SegSetup
  5934                           
  5935                           ;main.c: 271: InitPanelInChannels();
  5936  0078  318C  2443  3180   	fcall	_InitPanelInChannels
  5937                           
  5938                           ;main.c: 272: InitmvcChannels();
  5939  007B  318B  23D7  3180   	fcall	_InitmvcChannels
  5940                           
  5941                           ;main.c: 277: (INTCONbits.GIE = 1);
  5942  007E  178B               	bsf	11,7	;volatile
  5943                           
  5944                           ;main.c: 280: (INTCONbits.PEIE = 1);
  5945  007F  170B               	bsf	11,6	;volatile
  5946                           
  5947                           ;main.c: 301: PORTB |= 0x0F;
  5948  0080  300F               	movlw	15
  5949  0081  0020               	movlb	0	; select bank0
  5950  0082  00E3               	movwf	??_main
  5951  0083  0863               	movf	??_main,w
  5952  0084  048D               	iorwf	13,f	;volatile
  5953                           
  5954                           ;main.c: 302: PORTC |= 0xE0;
  5955  0085  30E0               	movlw	224
  5956  0086  00E3               	movwf	??_main
  5957  0087  0863               	movf	??_main,w
  5958  0088  048E               	iorwf	14,f	;volatile
  5959                           
  5960                           ;main.c: 303: ODCONB &= 0xF0;
  5961  0089  30F0               	movlw	240
  5962  008A  00E3               	movwf	??_main
  5963  008B  0863               	movf	??_main,w
  5964  008C  003E               	movlb	30	; select bank30
  5965  008D  05C5               	andwf	69,f	;volatile
  5966                           
  5967                           ;main.c: 304: ODCONC &= 0x1F;
  5968  008E  301F               	movlw	31
  5969  008F  0020               	movlb	0	; select bank0
  5970  0090  00E3               	movwf	??_main
  5971  0091  0863               	movf	??_main,w
  5972  0092  003E               	movlb	30	; select bank30
  5973  0093  05D0               	andwf	80,f	;volatile
  5974  0094                     l4358:	
  5975                           ;main.c: 306: while (1) {
  5976                           
  5977                           
  5978                           ;main.c: 307: iLoopCounter++;
  5979  0094  3001               	movlw	1
  5980  0095  0021               	movlb	1	; select bank1
  5981  0096  07DD               	addwf	main@iLoopCounter^(0+128),f
  5982  0097  3000               	movlw	0
  5983  0098  3DDE               	addwfc	(main@iLoopCounter+1)^(0+128),f
  5984                           
  5985                           ;main.c: 308: if (iResetValue<=iLoopCounter) iLoopCounter=0;
  5986  0099  3028               	movlw	low (main@iResetValue| (0+32768))
  5987  009A  0084               	movwf	4
  5988  009B  3090               	movlw	high (main@iResetValue| (0+32768))
  5989  009C  0085               	movwf	5
  5990  009D  3F00               	moviw [0]fsr0
  5991  009E  0020               	movlb	0	; select bank0
  5992  009F  00E3               	movwf	??_main
  5993  00A0  3F01               	moviw [1]fsr0
  5994  00A1  00E4               	movwf	??_main+1
  5995  00A2  0864               	movf	??_main+1,w
  5996  00A3  0021               	movlb	1	; select bank1
  5997  00A4  025E               	subwf	(main@iLoopCounter+1)^(0+128),w
  5998  00A5  1D03               	skipz
  5999  00A6  28AB               	goto	u4125
  6000  00A7  0020               	movlb	0	; select bank0
  6001  00A8  0863               	movf	??_main,w
  6002  00A9  0021               	movlb	1	; select bank1
  6003  00AA  025D               	subwf	main@iLoopCounter^(0+128),w
  6004  00AB                     u4125:	
  6005  00AB  1C03               	skipc
  6006  00AC  28AF               	goto	l519
  6007  00AD  01DD               	clrf	main@iLoopCounter^(0+128)
  6008  00AE  01DE               	clrf	(main@iLoopCounter+1)^(0+128)
  6009  00AF                     l519:	
  6010                           
  6011                           ;main.c: 311: {
  6012                           ;main.c: 313: for(int fx=0;fx<cMixFaderCount;fx++){
  6013  00AF  01E8               	clrf	main@fx^(0+128)
  6014  00B0  01E9               	clrf	(main@fx+1)^(0+128)
  6015  00B1  0869               	movf	(main@fx+1)^(0+128),w
  6016  00B2  3A80               	xorlw	128
  6017  00B3  0020               	movlb	0	; select bank0
  6018  00B4  00E3               	movwf	??_main
  6019  00B5  3080               	movlw	128
  6020  00B6  0263               	subwf	??_main,w
  6021  00B7  1D03               	skipz
  6022  00B8  28BC               	goto	u4135
  6023  00B9  3004               	movlw	4
  6024  00BA  0021               	movlb	1	; select bank1
  6025  00BB  0268               	subwf	main@fx^(0+128),w
  6026  00BC                     u4135:	
  6027  00BC  1803               	btfsc	3,0
  6028  00BD  2983               	goto	l4392
  6029  00BE                     l4368:	
  6030                           
  6031                           ;main.c: 314: faderValue=ADCC_GetSingleConversion(fx);
  6032  00BE  0021               	movlb	1	; select bank1
  6033  00BF  0868               	movf	main@fx^(0+128),w
  6034  00C0  318B  236A  3180   	fcall	_ADCC_GetSingleConversion
  6035  00C3  0020               	movlb	0	; select bank0
  6036  00C4  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6037  00C5  0021               	movlb	1	; select bank1
  6038  00C6  00E7               	movwf	(main@faderValue+1)^(0+128)
  6039  00C7  0020               	movlb	0	; select bank0
  6040  00C8  0820               	movf	?_ADCC_GetSingleConversion,w
  6041  00C9  0021               	movlb	1	; select bank1
  6042  00CA  00E6               	movwf	main@faderValue^(0+128)
  6043                           
  6044                           ;main.c: 315: PanelInChannels[fx]=255-(faderValue>>2);
  6045  00CB  0867               	movf	(main@faderValue+1)^(0+128),w
  6046  00CC  0020               	movlb	0	; select bank0
  6047  00CD  00E4               	movwf	??_main+1
  6048  00CE  0021               	movlb	1	; select bank1
  6049  00CF  0866               	movf	main@faderValue^(0+128),w
  6050  00D0  0020               	movlb	0	; select bank0
  6051  00D1  00E3               	movwf	??_main
  6052  00D2  0D64               	rlf	??_main+1,w
  6053  00D3  0CE4               	rrf	??_main+1,f
  6054  00D4  0CE3               	rrf	??_main,f
  6055  00D5  0D64               	rlf	??_main+1,w
  6056  00D6  0CE4               	rrf	??_main+1,f
  6057  00D7  0CE3               	rrf	??_main,f
  6058  00D8  0863               	movf	??_main,w
  6059  00D9  3AFF               	xorlw	255
  6060  00DA  3E01               	addlw	1
  6061  00DB  3EFF               	addlw	255
  6062  00DC  00E5               	movwf	??_main+2
  6063  00DD  0021               	movlb	1	; select bank1
  6064  00DE  0868               	movf	main@fx^(0+128),w
  6065  00DF  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6066  00E0  0086               	movwf	6
  6067  00E1  0187               	clrf	7
  6068  00E2  0020               	movlb	0	; select bank0
  6069  00E3  0865               	movf	??_main+2,w
  6070  00E4  0081               	movwf	1
  6071                           
  6072                           ;main.c: 317: fader8bitValue=PanelInChannels[fx];
  6073  00E5  0021               	movlb	1	; select bank1
  6074  00E6  0868               	movf	main@fx^(0+128),w
  6075  00E7  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6076  00E8  0086               	movwf	6
  6077  00E9  0187               	clrf	7
  6078  00EA  0801               	movf	1,w
  6079  00EB  0020               	movlb	0	; select bank0
  6080  00EC  00E3               	movwf	??_main
  6081  00ED  0863               	movf	??_main,w
  6082  00EE  0021               	movlb	1	; select bank1
  6083  00EF  00E5               	movwf	main@fader8bitValue^(0+128)
  6084                           
  6085                           ;main.c: 318: if( (PanelInChannels[fx]<(mvcChannels[fx]+4))
  6086                           ;main.c: 319: && (PanelInChannels[fx]>(mvcChannels[fx]-4)) ) {
  6087  00F0  0868               	movf	main@fx^(0+128),w
  6088  00F1  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  6089  00F2  0086               	movwf	6
  6090  00F3  0187               	clrf	7
  6091  00F4  0801               	movf	1,w
  6092  00F5  3E04               	addlw	4
  6093  00F6  0020               	movlb	0	; select bank0
  6094  00F7  00E3               	movwf	??_main
  6095  00F8  3000               	movlw	0
  6096  00F9  1803               	skipnc
  6097  00FA  3001               	movlw	1
  6098  00FB  00E4               	movwf	??_main+1
  6099  00FC  0021               	movlb	1	; select bank1
  6100  00FD  0868               	movf	main@fx^(0+128),w
  6101  00FE  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6102  00FF  0086               	movwf	6
  6103  0100  0187               	clrf	7
  6104  0101  0020               	movlb	0	; select bank0
  6105  0102  0864               	movf	??_main+1,w
  6106  0103  3A80               	xorlw	128
  6107  0104  3C80               	sublw	128
  6108  0105  1D03               	skipz
  6109  0106  2909               	goto	u4145
  6110  0107  0863               	movf	??_main,w
  6111  0108  0201               	subwf	1,w
  6112  0109                     u4145:	
  6113  0109  1803               	skipnc
  6114  010A  2930               	goto	l522
  6115  010B  0021               	movlb	1	; select bank1
  6116  010C  0868               	movf	main@fx^(0+128),w
  6117  010D  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6118  010E  0086               	movwf	6
  6119  010F  0187               	clrf	7
  6120  0110  0868               	movf	main@fx^(0+128),w
  6121  0111  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  6122  0112  0084               	movwf	4
  6123  0113  0185               	clrf	5
  6124  0114  0800               	movf	0,w
  6125  0115  3EFC               	addlw	252
  6126  0116  0020               	movlb	0	; select bank0
  6127  0117  00E3               	movwf	??_main
  6128  0118  30FF               	movlw	255
  6129  0119  1803               	skipnc
  6130  011A  3000               	movlw	0
  6131  011B  00E4               	movwf	??_main+1
  6132  011C  0864               	movf	??_main+1,w
  6133  011D  3A80               	xorlw	128
  6134  011E  00E5               	movwf	??_main+2
  6135  011F  3080               	movlw	128
  6136  0120  0265               	subwf	??_main+2,w
  6137  0121  1D03               	skipz
  6138  0122  2925               	goto	u4155
  6139  0123  0801               	movf	1,w
  6140  0124  0263               	subwf	??_main,w
  6141  0125                     u4155:	
  6142  0125  1803               	skipnc
  6143  0126  2930               	goto	l522
  6144                           
  6145                           ;main.c: 320: faderActiveFlag[fx]=1;
  6146  0127  0021               	movlb	1	; select bank1
  6147  0128  0868               	movf	main@fx^(0+128),w
  6148  0129  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
  6149  012A  0086               	movwf	6
  6150  012B  0187               	clrf	7
  6151  012C  0181               	clrf	1
  6152  012D  0A81               	incf	1,f
  6153                           
  6154                           ;main.c: 321: LATB |= 0b00000010 ;
  6155  012E  0020               	movlb	0	; select bank0
  6156  012F  1497               	bsf	23,1	;volatile
  6157  0130                     l522:	
  6158                           
  6159                           ;main.c: 322: }
  6160                           ;main.c: 323: if(faderActiveFlag[fx]>0){
  6161  0130  0021               	movlb	1	; select bank1
  6162  0131  0868               	movf	main@fx^(0+128),w
  6163  0132  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
  6164  0133  0086               	movwf	6
  6165  0134  0187               	clrf	7
  6166  0135  0801               	movf	1,w
  6167  0136  1903               	btfsc	3,2
  6168  0137  295A               	goto	l4386
  6169                           
  6170                           ;main.c: 324: mvcChannels[fx]=PanelInChannels[fx];
  6171  0138  0868               	movf	main@fx^(0+128),w
  6172  0139  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6173  013A  0086               	movwf	6
  6174  013B  0187               	clrf	7
  6175  013C  0801               	movf	1,w
  6176  013D  0020               	movlb	0	; select bank0
  6177  013E  00E3               	movwf	??_main
  6178  013F  0021               	movlb	1	; select bank1
  6179  0140  0868               	movf	main@fx^(0+128),w
  6180  0141  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  6181  0142  0086               	movwf	6
  6182  0143  0187               	clrf	7
  6183  0144  0020               	movlb	0	; select bank0
  6184  0145  0863               	movf	??_main,w
  6185  0146  0081               	movwf	1
  6186                           
  6187                           ;main.c: 325: writeDAC528(fx+4,fader8bitValue);
  6188  0147  0021               	movlb	1	; select bank1
  6189  0148  0868               	movf	main@fx^(0+128),w
  6190  0149  3E04               	addlw	4
  6191  014A  0020               	movlb	0	; select bank0
  6192  014B  00D5               	movwf	writeDAC528@dacNumber
  6193  014C  3000               	movlw	0
  6194  014D  0021               	movlb	1	; select bank1
  6195  014E  3D69               	addwfc	(main@fx+1)^(0+128),w
  6196  014F  0020               	movlb	0	; select bank0
  6197  0150  00D6               	movwf	writeDAC528@dacNumber+1
  6198  0151  0021               	movlb	1	; select bank1
  6199  0152  0865               	movf	main@fader8bitValue^(0+128),w
  6200  0153  0020               	movlb	0	; select bank0
  6201  0154  00E3               	movwf	??_main
  6202  0155  0863               	movf	??_main,w
  6203  0156  00D7               	movwf	writeDAC528@dacData
  6204  0157  318C  24A3  3180   	fcall	_writeDAC528
  6205  015A                     l4386:	
  6206                           
  6207                           ;main.c: 326: }
  6208                           ;main.c: 327: prevPanelInChannels[fx]=PanelInChannels[fx];
  6209  015A  0021               	movlb	1	; select bank1
  6210  015B  0868               	movf	main@fx^(0+128),w
  6211  015C  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
  6212  015D  0086               	movwf	6
  6213  015E  0187               	clrf	7
  6214  015F  0801               	movf	1,w
  6215  0160  0020               	movlb	0	; select bank0
  6216  0161  00E3               	movwf	??_main
  6217  0162  0021               	movlb	1	; select bank1
  6218  0163  0868               	movf	main@fx^(0+128),w
  6219  0164  3EA0               	addlw	(low (_prevPanelInChannels| 0))& (0+255)
  6220  0165  0086               	movwf	6
  6221  0166  0187               	clrf	7
  6222  0167  0020               	movlb	0	; select bank0
  6223  0168  0863               	movf	??_main,w
  6224  0169  0081               	movwf	1
  6225                           
  6226                           ;main.c: 328: delay(10);
  6227  016A  300A               	movlw	10
  6228  016B  00A6               	movwf	delay@delaytime
  6229  016C  3000               	movlw	0
  6230  016D  00A7               	movwf	delay@delaytime+1
  6231  016E  318D  25AE  3180   	fcall	_delay
  6232  0171  3001               	movlw	1
  6233  0172  0021               	movlb	1	; select bank1
  6234  0173  07E8               	addwf	main@fx^(0+128),f
  6235  0174  3000               	movlw	0
  6236  0175  3DE9               	addwfc	(main@fx+1)^(0+128),f
  6237  0176  0869               	movf	(main@fx+1)^(0+128),w
  6238  0177  3A80               	xorlw	128
  6239  0178  0020               	movlb	0	; select bank0
  6240  0179  00E3               	movwf	??_main
  6241  017A  3080               	movlw	128
  6242  017B  0263               	subwf	??_main,w
  6243  017C  1D03               	skipz
  6244  017D  2981               	goto	u4175
  6245  017E  3004               	movlw	4
  6246  017F  0021               	movlb	1	; select bank1
  6247  0180  0268               	subwf	main@fx^(0+128),w
  6248  0181                     u4175:	
  6249  0181  1C03               	skipc
  6250  0182  28BE               	goto	l4368
  6251  0183                     l4392:	
  6252                           
  6253                           ;main.c: 329: }
  6254                           ;main.c: 332: delay(10);
  6255  0183  300A               	movlw	10
  6256  0184  0020               	movlb	0	; select bank0
  6257  0185  00A6               	movwf	delay@delaytime
  6258  0186  3000               	movlw	0
  6259  0187  00A7               	movwf	delay@delaytime+1
  6260  0188  318D  25AE  3180   	fcall	_delay
  6261                           
  6262                           ;main.c: 333: faderValue=ADCC_GetSingleConversion(POT0);
  6263  018B  3004               	movlw	4
  6264  018C  318B  236A  3180   	fcall	_ADCC_GetSingleConversion
  6265  018F  0020               	movlb	0	; select bank0
  6266  0190  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6267  0191  0021               	movlb	1	; select bank1
  6268  0192  00E7               	movwf	(main@faderValue+1)^(0+128)
  6269  0193  0020               	movlb	0	; select bank0
  6270  0194  0820               	movf	?_ADCC_GetSingleConversion,w
  6271  0195  0021               	movlb	1	; select bank1
  6272  0196  00E6               	movwf	main@faderValue^(0+128)
  6273                           
  6274                           ;main.c: 334: faderValue=1023-faderValue;
  6275  0197  0966               	comf	main@faderValue^(0+128),w
  6276  0198  0020               	movlb	0	; select bank0
  6277  0199  00E3               	movwf	??_main
  6278  019A  0021               	movlb	1	; select bank1
  6279  019B  0967               	comf	(main@faderValue+1)^(0+128),w
  6280  019C  0020               	movlb	0	; select bank0
  6281  019D  00E4               	movwf	??_main+1
  6282  019E  0AE3               	incf	??_main,f
  6283  019F  1903               	skipnz
  6284  01A0  0AE4               	incf	??_main+1,f
  6285  01A1  0863               	movf	??_main,w
  6286  01A2  3EFF               	addlw	255
  6287  01A3  0021               	movlb	1	; select bank1
  6288  01A4  00E6               	movwf	main@faderValue^(0+128)
  6289  01A5  3003               	movlw	3
  6290  01A6  0020               	movlb	0	; select bank0
  6291  01A7  3D64               	addwfc	??_main+1,w
  6292  01A8  0021               	movlb	1	; select bank1
  6293  01A9  00E7               	movwf	(main@faderValue+1)^(0+128)
  6294                           
  6295                           ;main.c: 336: POT0Value=faderValue/102.3;
  6296  01AA  0867               	movf	(main@faderValue+1)^(0+128),w
  6297  01AB  0020               	movlb	0	; select bank0
  6298  01AC  00A9               	movwf	___awtoft@c+1
  6299  01AD  0021               	movlb	1	; select bank1
  6300  01AE  0866               	movf	main@faderValue^(0+128),w
  6301  01AF  0020               	movlb	0	; select bank0
  6302  01B0  00A8               	movwf	___awtoft@c
  6303  01B1  318C  2481  3180   	fcall	___awtoft
  6304  01B4  0020               	movlb	0	; select bank0
  6305  01B5  0828               	movf	?___awtoft,w
  6306  01B6  00B1               	movwf	___ftdiv@f1
  6307  01B7  0829               	movf	?___awtoft+1,w
  6308  01B8  00B2               	movwf	___ftdiv@f1+1
  6309  01B9  082A               	movf	?___awtoft+2,w
  6310  01BA  00B3               	movwf	___ftdiv@f1+2
  6311  01BB  309A               	movlw	154
  6312  01BC  00AE               	movwf	___ftdiv@f2
  6313  01BD  30CC               	movlw	204
  6314  01BE  00AF               	movwf	___ftdiv@f2+1
  6315  01BF  3042               	movlw	66
  6316  01C0  00B0               	movwf	___ftdiv@f2+2
  6317  01C1  3186  2677  3180   	fcall	___ftdiv
  6318  01C4  0020               	movlb	0	; select bank0
  6319  01C5  082E               	movf	?___ftdiv,w
  6320  01C6  00BE               	movwf	___fttol@f1
  6321  01C7  082F               	movf	?___ftdiv+1,w
  6322  01C8  00BF               	movwf	___fttol@f1+1
  6323  01C9  0830               	movf	?___ftdiv+2,w
  6324  01CA  00C0               	movwf	___fttol@f1+2
  6325  01CB  318E  26DF  3180   	fcall	___fttol
  6326  01CE  0020               	movlb	0	; select bank0
  6327  01CF  083E               	movf	?___fttol,w
  6328  01D0  00E3               	movwf	??_main
  6329  01D1  0863               	movf	??_main,w
  6330  01D2  0021               	movlb	1	; select bank1
  6331  01D3  00DF               	movwf	main@POT0Value^(0+128)
  6332                           
  6333                           ;main.c: 337: delay(10);
  6334  01D4  300A               	movlw	10
  6335  01D5  0020               	movlb	0	; select bank0
  6336  01D6  00A6               	movwf	delay@delaytime
  6337  01D7  3000               	movlw	0
  6338  01D8  00A7               	movwf	delay@delaytime+1
  6339  01D9  318D  25AE  3180   	fcall	_delay
  6340                           
  6341                           ;main.c: 338: faderValue=ADCC_GetSingleConversion(POT1);
  6342  01DC  3005               	movlw	5
  6343  01DD  318B  236A  3180   	fcall	_ADCC_GetSingleConversion
  6344  01E0  0020               	movlb	0	; select bank0
  6345  01E1  0821               	movf	?_ADCC_GetSingleConversion+1,w
  6346  01E2  0021               	movlb	1	; select bank1
  6347  01E3  00E7               	movwf	(main@faderValue+1)^(0+128)
  6348  01E4  0020               	movlb	0	; select bank0
  6349  01E5  0820               	movf	?_ADCC_GetSingleConversion,w
  6350  01E6  0021               	movlb	1	; select bank1
  6351  01E7  00E6               	movwf	main@faderValue^(0+128)
  6352                           
  6353                           ;main.c: 339: faderValue=1023-faderValue;
  6354  01E8  0966               	comf	main@faderValue^(0+128),w
  6355  01E9  0020               	movlb	0	; select bank0
  6356  01EA  00E3               	movwf	??_main
  6357  01EB  0021               	movlb	1	; select bank1
  6358  01EC  0967               	comf	(main@faderValue+1)^(0+128),w
  6359  01ED  0020               	movlb	0	; select bank0
  6360  01EE  00E4               	movwf	??_main+1
  6361  01EF  0AE3               	incf	??_main,f
  6362  01F0  1903               	skipnz
  6363  01F1  0AE4               	incf	??_main+1,f
  6364  01F2  0863               	movf	??_main,w
  6365  01F3  3EFF               	addlw	255
  6366  01F4  0021               	movlb	1	; select bank1
  6367  01F5  00E6               	movwf	main@faderValue^(0+128)
  6368  01F6  3003               	movlw	3
  6369  01F7  0020               	movlb	0	; select bank0
  6370  01F8  3D64               	addwfc	??_main+1,w
  6371  01F9  0021               	movlb	1	; select bank1
  6372  01FA  00E7               	movwf	(main@faderValue+1)^(0+128)
  6373                           
  6374                           ;main.c: 340: POT1Value=faderValue/102.3;
  6375  01FB  0867               	movf	(main@faderValue+1)^(0+128),w
  6376  01FC  0020               	movlb	0	; select bank0
  6377  01FD  00A9               	movwf	___awtoft@c+1
  6378  01FE  0021               	movlb	1	; select bank1
  6379  01FF  0866               	movf	main@faderValue^(0+128),w
  6380  0200  0020               	movlb	0	; select bank0
  6381  0201  00A8               	movwf	___awtoft@c
  6382  0202  318C  2481  3180   	fcall	___awtoft
  6383  0205  0020               	movlb	0	; select bank0
  6384  0206  0828               	movf	?___awtoft,w
  6385  0207  00B1               	movwf	___ftdiv@f1
  6386  0208  0829               	movf	?___awtoft+1,w
  6387  0209  00B2               	movwf	___ftdiv@f1+1
  6388  020A  082A               	movf	?___awtoft+2,w
  6389  020B  00B3               	movwf	___ftdiv@f1+2
  6390  020C  309A               	movlw	154
  6391  020D  00AE               	movwf	___ftdiv@f2
  6392  020E  30CC               	movlw	204
  6393  020F  00AF               	movwf	___ftdiv@f2+1
  6394  0210  3042               	movlw	66
  6395  0211  00B0               	movwf	___ftdiv@f2+2
  6396  0212  3186  2677  3180   	fcall	___ftdiv
  6397  0215  0020               	movlb	0	; select bank0
  6398  0216  082E               	movf	?___ftdiv,w
  6399  0217  00BE               	movwf	___fttol@f1
  6400  0218  082F               	movf	?___ftdiv+1,w
  6401  0219  00BF               	movwf	___fttol@f1+1
  6402  021A  0830               	movf	?___ftdiv+2,w
  6403  021B  00C0               	movwf	___fttol@f1+2
  6404  021C  318E  26DF  3180   	fcall	___fttol
  6405  021F  0020               	movlb	0	; select bank0
  6406  0220  083E               	movf	?___fttol,w
  6407  0221  00E3               	movwf	??_main
  6408  0222  0863               	movf	??_main,w
  6409  0223  0021               	movlb	1	; select bank1
  6410  0224  00E0               	movwf	main@POT1Value^(0+128)
  6411                           
  6412                           ;main.c: 341: }
  6413                           ;main.c: 404: if (prevFader8bitValue!=fader8bitValue) {
  6414  0225  085C               	movf	main@prevFader8bitValue^(0+128),w
  6415  0226  0665               	xorwf	main@fader8bitValue^(0+128),w
  6416  0227  1903               	skipnz
  6417  0228  2A2F               	goto	l4410
  6418                           
  6419                           ;main.c: 405: iChangeCount++;
  6420  0229  3001               	movlw	1
  6421  022A  0020               	movlb	0	; select bank0
  6422  022B  00E3               	movwf	??_main
  6423  022C  0863               	movf	??_main,w
  6424  022D  0021               	movlb	1	; select bank1
  6425  022E  07DB               	addwf	main@iChangeCount^(0+128),f
  6426  022F                     l4410:	
  6427                           
  6428                           ;main.c: 407: }
  6429                           ;main.c: 408: prevFader8bitValue=fader8bitValue;
  6430  022F  0865               	movf	main@fader8bitValue^(0+128),w
  6431  0230  0020               	movlb	0	; select bank0
  6432  0231  00E3               	movwf	??_main
  6433  0232  0863               	movf	??_main,w
  6434  0233  0021               	movlb	1	; select bank1
  6435  0234  00DC               	movwf	main@prevFader8bitValue^(0+128)
  6436                           
  6437                           ;main.c: 411: iCounter++;
  6438  0235  3001               	movlw	1
  6439  0236  07D9               	addwf	main@iCounter^(0+128),f
  6440  0237  3000               	movlw	0
  6441  0238  3DDA               	addwfc	(main@iCounter+1)^(0+128),f
  6442                           
  6443                           ;main.c: 412: if (fader8bitValue<252)
  6444  0239  30FC               	movlw	252
  6445  023A  0265               	subwf	main@fader8bitValue^(0+128),w
  6446  023B  1803               	skipnc
  6447  023C  2A4F               	goto	l4418
  6448                           
  6449                           ;main.c: 413: delay(1*(255-fader8bitValue));
  6450  023D  0865               	movf	main@fader8bitValue^(0+128),w
  6451  023E  0020               	movlb	0	; select bank0
  6452  023F  00E3               	movwf	??_main
  6453  0240  01E4               	clrf	??_main+1
  6454  0241  09E3               	comf	??_main,f
  6455  0242  09E4               	comf	??_main+1,f
  6456  0243  0AE3               	incf	??_main,f
  6457  0244  1903               	skipnz
  6458  0245  0AE4               	incf	??_main+1,f
  6459  0246  0863               	movf	??_main,w
  6460  0247  3EFF               	addlw	255
  6461  0248  00A6               	movwf	delay@delaytime
  6462  0249  3000               	movlw	0
  6463  024A  3D64               	addwfc	??_main+1,w
  6464  024B  00A7               	movwf	delay@delaytime+1
  6465  024C  318D  25AE  3180   	fcall	_delay
  6466  024F                     l4418:	
  6467                           
  6468                           ;main.c: 419: mvcPatchNumber=(POT1Value*10)+POT0Value;
  6469  024F  0021               	movlb	1	; select bank1
  6470  0250  085F               	movf	main@POT0Value^(0+128),w
  6471  0251  0020               	movlb	0	; select bank0
  6472  0252  00E3               	movwf	??_main
  6473  0253  01E4               	clrf	??_main+1
  6474  0254  0021               	movlb	1	; select bank1
  6475  0255  0860               	movf	main@POT1Value^(0+128),w
  6476  0256  0020               	movlb	0	; select bank0
  6477  0257  00E5               	movwf	??_main+2
  6478  0258  01E6               	clrf	??_main+3
  6479  0259  0865               	movf	??_main+2,w
  6480  025A  00A0               	movwf	___wmul@multiplier
  6481  025B  0866               	movf	??_main+3,w
  6482  025C  00A1               	movwf	___wmul@multiplier+1
  6483  025D  300A               	movlw	10
  6484  025E  00A2               	movwf	___wmul@multiplicand
  6485  025F  3000               	movlw	0
  6486  0260  00A3               	movwf	___wmul@multiplicand+1
  6487  0261  318C  240B  3180   	fcall	___wmul
  6488  0264  0020               	movlb	0	; select bank0
  6489  0265  0863               	movf	??_main,w
  6490  0266  0720               	addwf	?___wmul,w
  6491  0267  0021               	movlb	1	; select bank1
  6492  0268  00B9               	movwf	_mvcPatchNumber^(0+128)
  6493  0269  0020               	movlb	0	; select bank0
  6494  026A  0864               	movf	??_main+1,w
  6495  026B  3D21               	addwfc	?___wmul+1,w
  6496  026C  0021               	movlb	1	; select bank1
  6497  026D  00BA               	movwf	(_mvcPatchNumber+1)^(0+128)
  6498                           
  6499                           ;main.c: 420: LED7SegDisplayValueByDigit(POT1Value,POT0Value);
  6500  026E  0860               	movf	main@POT1Value^(0+128),w
  6501  026F  0020               	movlb	0	; select bank0
  6502  0270  00E3               	movwf	??_main
  6503  0271  01E4               	clrf	??_main+1
  6504  0272  0863               	movf	??_main,w
  6505  0273  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
  6506  0274  0864               	movf	??_main+1,w
  6507  0275  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
  6508  0276  0021               	movlb	1	; select bank1
  6509  0277  085F               	movf	main@POT0Value^(0+128),w
  6510  0278  0020               	movlb	0	; select bank0
  6511  0279  00E5               	movwf	??_main+2
  6512  027A  01E6               	clrf	??_main+3
  6513  027B  0865               	movf	??_main+2,w
  6514  027C  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
  6515  027D  0866               	movf	??_main+3,w
  6516  027E  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
  6517  027F  318C  24F0  3180   	fcall	_LED7SegDisplayValueByDigit
  6518                           
  6519                           ;main.c: 425: if (PORTBbits.RB4 == 0){
  6520  0282  0020               	movlb	0	; select bank0
  6521  0283  1A0D               	btfsc	13,4	;volatile
  6522  0284  2AA8               	goto	l4430
  6523                           
  6524                           ;main.c: 427: LoadDebounceCount++;
  6525  0285  3001               	movlw	1
  6526  0286  0021               	movlb	1	; select bank1
  6527  0287  07E1               	addwf	main@LoadDebounceCount^(0+128),f
  6528  0288  3000               	movlw	0
  6529  0289  3DE2               	addwfc	(main@LoadDebounceCount+1)^(0+128),f
  6530                           
  6531                           ;main.c: 428: if(5<LoadDebounceCount) {
  6532  028A  0862               	movf	(main@LoadDebounceCount+1)^(0+128),w
  6533  028B  3A80               	xorlw	128
  6534  028C  0020               	movlb	0	; select bank0
  6535  028D  00E3               	movwf	??_main
  6536  028E  3080               	movlw	128
  6537  028F  0263               	subwf	??_main,w
  6538  0290  1D03               	skipz
  6539  0291  2A95               	goto	u4215
  6540  0292  3006               	movlw	6
  6541  0293  0021               	movlb	1	; select bank1
  6542  0294  0261               	subwf	main@LoadDebounceCount^(0+128),w
  6543  0295                     u4215:	
  6544  0295  1C03               	skipc
  6545  0296  2ABB               	goto	l4436
  6546                           
  6547                           ;main.c: 429: LATB &= 0b10011110 ;
  6548  0297  309E               	movlw	158
  6549  0298  0020               	movlb	0	; select bank0
  6550  0299  00E3               	movwf	??_main
  6551  029A  0863               	movf	??_main,w
  6552  029B  0597               	andwf	23,f	;volatile
  6553                           
  6554                           ;main.c: 431: loadPatch(mvcPatchNumber);
  6555  029C  0021               	movlb	1	; select bank1
  6556  029D  083A               	movf	(_mvcPatchNumber+1)^(0+128),w
  6557  029E  0020               	movlb	0	; select bank0
  6558  029F  00DB               	movwf	loadPatch@PatchNumber+1
  6559  02A0  0021               	movlb	1	; select bank1
  6560  02A1  0839               	movf	_mvcPatchNumber^(0+128),w
  6561  02A2  0020               	movlb	0	; select bank0
  6562  02A3  00DA               	movwf	loadPatch@PatchNumber
  6563  02A4  3187  27BF  3180   	fcall	_loadPatch
  6564                           
  6565                           ;main.c: 432: }
  6566                           ;main.c: 433: }else{
  6567  02A7  2ABB               	goto	l4436
  6568  02A8                     l4430:	
  6569                           
  6570                           ;main.c: 434: if(0<LoadDebounceCount){
  6571  02A8  0021               	movlb	1	; select bank1
  6572  02A9  0862               	movf	(main@LoadDebounceCount+1)^(0+128),w
  6573  02AA  3A80               	xorlw	128
  6574  02AB  0020               	movlb	0	; select bank0
  6575  02AC  00E3               	movwf	??_main
  6576  02AD  3080               	movlw	128
  6577  02AE  0263               	subwf	??_main,w
  6578  02AF  1D03               	skipz
  6579  02B0  2AB4               	goto	u4225
  6580  02B1  3001               	movlw	1
  6581  02B2  0021               	movlb	1	; select bank1
  6582  02B3  0261               	subwf	main@LoadDebounceCount^(0+128),w
  6583  02B4                     u4225:	
  6584  02B4  1C03               	skipc
  6585  02B5  2ABB               	goto	l4436
  6586                           
  6587                           ;main.c: 435: LoadDebounceCount=0;
  6588  02B6  0021               	movlb	1	; select bank1
  6589  02B7  01E1               	clrf	main@LoadDebounceCount^(0+128)
  6590  02B8  01E2               	clrf	(main@LoadDebounceCount+1)^(0+128)
  6591                           
  6592                           ;main.c: 436: LATB |= 0b00000001 ;
  6593  02B9  0020               	movlb	0	; select bank0
  6594  02BA  1417               	bsf	23,0	;volatile
  6595  02BB                     l4436:	
  6596                           
  6597                           ;main.c: 437: }
  6598                           ;main.c: 438: }
  6599                           ;main.c: 439: if (PORTBbits.RB5 == 0){
  6600  02BB  0020               	movlb	0	; select bank0
  6601  02BC  1A8D               	btfsc	13,5	;volatile
  6602  02BD  2AF0               	goto	l4448
  6603                           
  6604                           ;main.c: 441: SaveDebounceCount++;
  6605  02BE  3001               	movlw	1
  6606  02BF  0021               	movlb	1	; select bank1
  6607  02C0  07E3               	addwf	main@SaveDebounceCount^(0+128),f
  6608  02C1  3000               	movlw	0
  6609  02C2  3DE4               	addwfc	(main@SaveDebounceCount+1)^(0+128),f
  6610                           
  6611                           ;main.c: 442: if(5<SaveDebounceCount) {
  6612  02C3  0864               	movf	(main@SaveDebounceCount+1)^(0+128),w
  6613  02C4  3A80               	xorlw	128
  6614  02C5  0020               	movlb	0	; select bank0
  6615  02C6  00E3               	movwf	??_main
  6616  02C7  3080               	movlw	128
  6617  02C8  0263               	subwf	??_main,w
  6618  02C9  1D03               	skipz
  6619  02CA  2ACE               	goto	u4245
  6620  02CB  3006               	movlw	6
  6621  02CC  0021               	movlb	1	; select bank1
  6622  02CD  0263               	subwf	main@SaveDebounceCount^(0+128),w
  6623  02CE                     u4245:	
  6624  02CE  1C03               	skipc
  6625  02CF  2894               	goto	l4358
  6626                           
  6627                           ;main.c: 443: LATB |= 0b00000010 ;
  6628  02D0  0020               	movlb	0	; select bank0
  6629  02D1  1497               	bsf	23,1	;volatile
  6630                           
  6631                           ;main.c: 462: savePatch(mvcPatchNumber);
  6632  02D2  0021               	movlb	1	; select bank1
  6633  02D3  083A               	movf	(_mvcPatchNumber+1)^(0+128),w
  6634  02D4  0020               	movlb	0	; select bank0
  6635  02D5  00D5               	movwf	savePatch@PatchNumber+1
  6636  02D6  0021               	movlb	1	; select bank1
  6637  02D7  0839               	movf	_mvcPatchNumber^(0+128),w
  6638  02D8  0020               	movlb	0	; select bank0
  6639  02D9  00D4               	movwf	savePatch@PatchNumber
  6640  02DA  318E  2666  3180   	fcall	_savePatch
  6641                           
  6642                           ;main.c: 467: SaveDebounceCount=1;
  6643  02DD  3001               	movlw	1
  6644  02DE  0021               	movlb	1	; select bank1
  6645  02DF  00E3               	movwf	main@SaveDebounceCount^(0+128)
  6646  02E0  3000               	movlw	0
  6647  02E1  00E4               	movwf	(main@SaveDebounceCount^(0+128)+1)
  6648                           
  6649                           ;main.c: 468: _delay((unsigned long)((500)*(32000000/4000.0)));
  6650  02E2  3015               	movlw	21
  6651  02E3  0020               	movlb	0	; select bank0
  6652  02E4  00E4               	movwf	??_main+1
  6653  02E5  304B               	movlw	75
  6654  02E6  00E3               	movwf	??_main
  6655  02E7  30BE               	movlw	190
  6656  02E8                     u4347:	
  6657  02E8  0B89               	decfsz	9,f
  6658  02E9  2AE8               	goto	u4347
  6659  02EA  0BE3               	decfsz	??_main,f
  6660  02EB  2AE8               	goto	u4347
  6661  02EC  0BE4               	decfsz	??_main+1,f
  6662  02ED  2AE8               	goto	u4347
  6663  02EE  0000               	nop
  6664                           
  6665                           ;main.c: 469: }
  6666                           ;main.c: 470: }else{
  6667  02EF  2894               	goto	l4358
  6668  02F0                     l4448:	
  6669                           
  6670                           ;main.c: 471: if(0<SaveDebounceCount){
  6671  02F0  0021               	movlb	1	; select bank1
  6672  02F1  0864               	movf	(main@SaveDebounceCount+1)^(0+128),w
  6673  02F2  3A80               	xorlw	128
  6674  02F3  0020               	movlb	0	; select bank0
  6675  02F4  00E3               	movwf	??_main
  6676  02F5  3080               	movlw	128
  6677  02F6  0263               	subwf	??_main,w
  6678  02F7  1D03               	skipz
  6679  02F8  2AFC               	goto	u4255
  6680  02F9  3001               	movlw	1
  6681  02FA  0021               	movlb	1	; select bank1
  6682  02FB  0263               	subwf	main@SaveDebounceCount^(0+128),w
  6683  02FC                     u4255:	
  6684  02FC  1C03               	skipc
  6685  02FD  2894               	goto	l4358
  6686                           
  6687                           ;main.c: 472: SaveDebounceCount=0;
  6688  02FE  0021               	movlb	1	; select bank1
  6689  02FF  01E3               	clrf	main@SaveDebounceCount^(0+128)
  6690  0300  01E4               	clrf	(main@SaveDebounceCount+1)^(0+128)
  6691                           
  6692                           ;main.c: 473: LATB &= 0b10011101 ;
  6693  0301  309D               	movlw	157
  6694  0302  0020               	movlb	0	; select bank0
  6695  0303  00E3               	movwf	??_main
  6696  0304  0863               	movf	??_main,w
  6697  0305  0597               	andwf	23,f	;volatile
  6698  0306  2894               	goto	l4358
  6699  0307                     __end_of_main:	
  6700                           
  6701                           	psect	text1
  6702  0E66                     __ptext1:	
  6703 ;; *************** function _savePatch *****************
  6704 ;; Defined at:
  6705 ;;		line 807 in file "main.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  PatchNumber     2   52[BANK0 ] int 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  batchNum        2   63[BANK0 ] int 
  6710 ;;  iPatchAddres    2   65[BANK0 ] int 
  6711 ;;  idx             2   61[BANK0 ] int 
  6712 ;;  pData           2   59[BANK0 ] PTR unsigned char 
  6713 ;;		 -> aPatchMemory(128), 
  6714 ;;  iPatchAddres    1   58[BANK0 ] unsigned char 
  6715 ;;  iPatchAddres    1   57[BANK0 ] unsigned char 
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      void 
  6718 ;; Registers used:
  6719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6726 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;Total ram usage:       15 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; Hardware stack levels required when called:    6
  6732 ;; This function calls:
  6733 ;;		_MYI2C_Write16EEPROMBytes
  6734 ;;		_marshallPatchMemory
  6735 ;; This function is called by:
  6736 ;;		_main
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           
  6741                           ;psect for function _savePatch
  6742  0E66                     _savePatch:	
  6743                           
  6744                           ;main.c: 808: int iPatchAddress=PatchNumber*cPatchSize;
  6745                           
  6746                           ;incstack = 0
  6747                           ; Regs used in _savePatch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6748  0E66  0020               	movlb	0	; select bank0
  6749  0E67  0855               	movf	savePatch@PatchNumber+1,w
  6750  0E68  00D7               	movwf	??_savePatch+1
  6751  0E69  0854               	movf	savePatch@PatchNumber,w
  6752  0E6A  00D6               	movwf	??_savePatch
  6753  0E6B  3007               	movlw	7
  6754  0E6C                     u3005:	
  6755  0E6C  35D6               	lslf	??_savePatch,f
  6756  0E6D  0DD7               	rlf	??_savePatch+1,f
  6757  0E6E  0B89               	decfsz	9,f
  6758  0E6F  2E6C               	goto	u3005
  6759  0E70  0856               	movf	??_savePatch,w
  6760  0E71  00E1               	movwf	savePatch@iPatchAddress
  6761  0E72  0857               	movf	??_savePatch+1,w
  6762  0E73  00E2               	movwf	savePatch@iPatchAddress+1
  6763                           
  6764                           ;main.c: 809: uint8_t iPatchAddressHigh=iPatchAddress>>8;
  6765  0E74  0862               	movf	savePatch@iPatchAddress+1,w
  6766  0E75  00D6               	movwf	??_savePatch
  6767  0E76  0856               	movf	??_savePatch,w
  6768  0E77  00D9               	movwf	savePatch@iPatchAddressHigh
  6769                           
  6770                           ;main.c: 810: uint8_t iPatchAddressLow=iPatchAddress&0xFF;
  6771  0E78  0861               	movf	savePatch@iPatchAddress,w
  6772  0E79  00D6               	movwf	??_savePatch
  6773  0E7A  0856               	movf	??_savePatch,w
  6774  0E7B  00DA               	movwf	savePatch@iPatchAddressLow
  6775                           
  6776                           ;main.c: 813: marshallPatchMemory(mvcChannels,dualADSRdata0,dualADSRdata1);
  6777  0E7C  303C               	movlw	(low (_dualADSRdata0| (0+256)))& (0+255)
  6778  0E7D  00D6               	movwf	??_savePatch
  6779  0E7E  0856               	movf	??_savePatch,w
  6780  0E7F  00A0               	movwf	marshallPatchMemory@dualADSRdata0
  6781  0E80  3034               	movlw	(low (_dualADSRdata1| (0+256)))& (0+255)
  6782  0E81  00D7               	movwf	??_savePatch+1
  6783  0E82  0857               	movf	??_savePatch+1,w
  6784  0E83  00A1               	movwf	marshallPatchMemory@dualADSRdata1
  6785  0E84  30C9               	movlw	(low (_mvcChannels| 0))& (0+255)
  6786  0E85  3184  2442  318E   	fcall	_marshallPatchMemory
  6787                           
  6788                           ;main.c: 816: uint8_t *pData;
  6789                           ;main.c: 817: int idx;
  6790                           ;main.c: 820: for(int batchNum=0;(batchNum*ciBatchSize)<cPatchSize;batchNum++){
  6791  0E88  0020               	movlb	0	; select bank0
  6792  0E89  01DF               	clrf	savePatch@batchNum
  6793  0E8A  01E0               	clrf	savePatch@batchNum+1
  6794  0E8B                     l3504:	
  6795  0E8B  0860               	movf	savePatch@batchNum+1,w
  6796  0E8C  00D7               	movwf	??_savePatch+1
  6797  0E8D  085F               	movf	savePatch@batchNum,w
  6798  0E8E  00D6               	movwf	??_savePatch
  6799  0E8F  0ED6               	swapf	??_savePatch,f
  6800  0E90  0ED7               	swapf	??_savePatch+1,f
  6801  0E91  30F0               	movlw	240
  6802  0E92  05D7               	andwf	??_savePatch+1,f
  6803  0E93  0856               	movf	??_savePatch,w
  6804  0E94  390F               	andlw	15
  6805  0E95  04D7               	iorwf	??_savePatch+1,f
  6806  0E96  30F0               	movlw	240
  6807  0E97  05D6               	andwf	??_savePatch,f
  6808  0E98  0857               	movf	??_savePatch+1,w
  6809  0E99  3A80               	xorlw	128
  6810  0E9A  00D8               	movwf	??_savePatch+2
  6811  0E9B  3080               	movlw	128
  6812  0E9C  0258               	subwf	??_savePatch+2,w
  6813  0E9D  1D03               	skipz
  6814  0E9E  2EA1               	goto	u3015
  6815  0E9F  3080               	movlw	128
  6816  0EA0  0256               	subwf	??_savePatch,w
  6817  0EA1                     u3015:	
  6818  0EA1  1803               	btfsc	3,0
  6819  0EA2  0008               	return
  6820                           
  6821                           ;main.c: 822: idx=batchNum*ciBatchSize;
  6822  0EA3  0020               	movlb	0	; select bank0
  6823  0EA4  0860               	movf	savePatch@batchNum+1,w
  6824  0EA5  00D7               	movwf	??_savePatch+1
  6825  0EA6  085F               	movf	savePatch@batchNum,w
  6826  0EA7  00D6               	movwf	??_savePatch
  6827  0EA8  0ED6               	swapf	??_savePatch,f
  6828  0EA9  0ED7               	swapf	??_savePatch+1,f
  6829  0EAA  30F0               	movlw	240
  6830  0EAB  05D7               	andwf	??_savePatch+1,f
  6831  0EAC  0856               	movf	??_savePatch,w
  6832  0EAD  390F               	andlw	15
  6833  0EAE  04D7               	iorwf	??_savePatch+1,f
  6834  0EAF  30F0               	movlw	240
  6835  0EB0  05D6               	andwf	??_savePatch,f
  6836  0EB1  0856               	movf	??_savePatch,w
  6837  0EB2  00DD               	movwf	savePatch@idx
  6838  0EB3  0857               	movf	??_savePatch+1,w
  6839  0EB4  00DE               	movwf	savePatch@idx+1
  6840                           
  6841                           ;main.c: 823: pData=&aPatchMemory[idx];
  6842  0EB5  3070               	movlw	112
  6843  0EB6  00D6               	movwf	??_savePatch
  6844  0EB7  3023               	movlw	35
  6845  0EB8  00D7               	movwf	??_savePatch+1
  6846  0EB9  085D               	movf	savePatch@idx,w
  6847  0EBA  0756               	addwf	??_savePatch,w
  6848  0EBB  00DB               	movwf	savePatch@pData
  6849  0EBC  085E               	movf	savePatch@idx+1,w
  6850  0EBD  3D57               	addwfc	??_savePatch+1,w
  6851  0EBE  00DC               	movwf	savePatch@pData+1
  6852                           
  6853                           ;main.c: 824: MYI2C_Write16EEPROMBytes(ciI2C_EEPROM_DEVICE_ADDRESS,iPatchAddress,pData);
  6854  0EBF  0862               	movf	savePatch@iPatchAddress+1,w
  6855  0EC0  00AF               	movwf	MYI2C_Write16EEPROMBytes@writeAddress+1
  6856  0EC1  0861               	movf	savePatch@iPatchAddress,w
  6857  0EC2  00AE               	movwf	MYI2C_Write16EEPROMBytes@writeAddress
  6858  0EC3  085C               	movf	savePatch@pData+1,w
  6859  0EC4  00B1               	movwf	MYI2C_Write16EEPROMBytes@pData+1
  6860  0EC5  085B               	movf	savePatch@pData,w
  6861  0EC6  00B0               	movwf	MYI2C_Write16EEPROMBytes@pData
  6862  0EC7  3050               	movlw	80
  6863  0EC8  318F  2766  318E   	fcall	_MYI2C_Write16EEPROMBytes
  6864                           
  6865                           ;main.c: 826: iPatchAddress+=ciBatchSize;
  6866  0ECB  3010               	movlw	16
  6867  0ECC  0020               	movlb	0	; select bank0
  6868  0ECD  07E1               	addwf	savePatch@iPatchAddress,f
  6869  0ECE  3000               	movlw	0
  6870  0ECF  3DE2               	addwfc	savePatch@iPatchAddress+1,f
  6871                           
  6872                           ;main.c: 828: _delay((unsigned long)((5)*(32000000/4000.0)));
  6873  0ED0  3034               	movlw	52
  6874  0ED1  0020               	movlb	0	; select bank0
  6875  0ED2  00D6               	movwf	??_savePatch
  6876  0ED3  30F1               	movlw	241
  6877  0ED4                     u4357:	
  6878  0ED4  0B89               	decfsz	9,f
  6879  0ED5  2ED4               	goto	u4357
  6880  0ED6  0BD6               	decfsz	??_savePatch,f
  6881  0ED7  2ED4               	goto	u4357
  6882  0ED8  3200               	nop2
  6883  0ED9  3001               	movlw	1
  6884  0EDA  0020               	movlb	0	; select bank0
  6885  0EDB  07DF               	addwf	savePatch@batchNum,f
  6886  0EDC  3000               	movlw	0
  6887  0EDD  3DE0               	addwfc	savePatch@batchNum+1,f
  6888  0EDE  2E8B               	goto	l3504
  6889  0EDF                     __end_of_savePatch:	
  6890                           
  6891                           	psect	text2
  6892  0442                     __ptext2:	
  6893 ;; *************** function _marshallPatchMemory *****************
  6894 ;; Defined at:
  6895 ;;		line 22 in file "EEPROM_24LC256.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;  mvcChannels     1    wreg     PTR unsigned char 
  6898 ;;		 -> mvcChannels(4), 
  6899 ;;  dualADSRdata    1    0[BANK0 ] PTR unsigned char 
  6900 ;;		 -> dualADSRdata0(8), 
  6901 ;;  dualADSRdata    1    1[BANK0 ] PTR unsigned char 
  6902 ;;		 -> dualADSRdata1(8), 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  mvcChannels     1    8[BANK0 ] PTR unsigned char 
  6905 ;;		 -> mvcChannels(4), 
  6906 ;;  i               2   13[BANK0 ] int 
  6907 ;;  i               2   11[BANK0 ] int 
  6908 ;;  i               2    9[BANK0 ] int 
  6909 ;;  iPatchMemory    2   15[BANK0 ] int 
  6910 ;; Return value:  Size  Location     Type
  6911 ;;                  1    wreg      void 
  6912 ;; Registers used:
  6913 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6914 ;; Tracked objects:
  6915 ;;		On entry : 0/0
  6916 ;;		On exit  : 0/0
  6917 ;;		Unchanged: 0/0
  6918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6919 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6920 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6921 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6922 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;Total ram usage:       17 bytes
  6924 ;; Hardware stack levels used:    1
  6925 ;; Hardware stack levels required when called:    3
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_savePatch
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           
  6934                           ;psect for function _marshallPatchMemory
  6935  0442                     _marshallPatchMemory:	
  6936                           
  6937                           ;incstack = 0
  6938                           ; Regs used in _marshallPatchMemory: [wreg+fsr1l+fsr1h+status,2+status,0]
  6939                           ;marshallPatchMemory@mvcChannels stored from wreg
  6940  0442  0020               	movlb	0	; select bank0
  6941  0443  00A8               	movwf	marshallPatchMemory@mvcChannels
  6942                           
  6943                           ;EEPROM_24LC256.c: 23: int iPatchMemoryNDX=0;
  6944  0444  01AF               	clrf	marshallPatchMemory@iPatchMemoryNDX
  6945  0445  01B0               	clrf	marshallPatchMemory@iPatchMemoryNDX+1
  6946                           
  6947                           ;EEPROM_24LC256.c: 24: for(int i=0; i<cMixFaderCount;i++) {
  6948  0446  01A9               	clrf	marshallPatchMemory@i
  6949  0447  01AA               	clrf	marshallPatchMemory@i+1
  6950  0448  082A               	movf	marshallPatchMemory@i+1,w
  6951  0449  3A80               	xorlw	128
  6952  044A  00A2               	movwf	??_marshallPatchMemory
  6953  044B  3080               	movlw	128
  6954  044C  0222               	subwf	??_marshallPatchMemory,w
  6955  044D  1D03               	skipz
  6956  044E  2C51               	goto	u2465
  6957  044F  3004               	movlw	4
  6958  0450  0229               	subwf	marshallPatchMemory@i,w
  6959  0451                     u2465:	
  6960  0451  1803               	btfsc	3,0
  6961  0452  2C7F               	goto	l3094
  6962  0453                     l3086:	
  6963                           
  6964                           ;EEPROM_24LC256.c: 25: aPatchMemory[iPatchMemoryNDX++]=mvcChannels[i];
  6965  0453  0020               	movlb	0	; select bank0
  6966  0454  0829               	movf	marshallPatchMemory@i,w
  6967  0455  0728               	addwf	marshallPatchMemory@mvcChannels,w
  6968  0456  00A2               	movwf	??_marshallPatchMemory
  6969  0457  0822               	movf	??_marshallPatchMemory,w
  6970  0458  0086               	movwf	6
  6971  0459  0187               	clrf	7
  6972  045A  0801               	movf	1,w
  6973  045B  00A3               	movwf	??_marshallPatchMemory+1
  6974  045C  3070               	movlw	112
  6975  045D  00A4               	movwf	??_marshallPatchMemory+2
  6976  045E  3023               	movlw	35
  6977  045F  00A5               	movwf	??_marshallPatchMemory+3
  6978  0460  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  6979  0461  0724               	addwf	??_marshallPatchMemory+2,w
  6980  0462  00A6               	movwf	??_marshallPatchMemory+4
  6981  0463  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  6982  0464  3D25               	addwfc	??_marshallPatchMemory+3,w
  6983  0465  00A7               	movwf	??_marshallPatchMemory+5
  6984  0466  0826               	movf	??_marshallPatchMemory+4,w
  6985  0467  0086               	movwf	6
  6986  0468  0827               	movf	??_marshallPatchMemory+5,w
  6987  0469  0087               	movwf	7
  6988  046A  0823               	movf	??_marshallPatchMemory+1,w
  6989  046B  0081               	movwf	1
  6990  046C  3001               	movlw	1
  6991  046D  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  6992  046E  3000               	movlw	0
  6993  046F  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  6994  0470  3001               	movlw	1
  6995  0471  07A9               	addwf	marshallPatchMemory@i,f
  6996  0472  3000               	movlw	0
  6997  0473  3DAA               	addwfc	marshallPatchMemory@i+1,f
  6998  0474  082A               	movf	marshallPatchMemory@i+1,w
  6999  0475  3A80               	xorlw	128
  7000  0476  00A2               	movwf	??_marshallPatchMemory
  7001  0477  3080               	movlw	128
  7002  0478  0222               	subwf	??_marshallPatchMemory,w
  7003  0479  1D03               	skipz
  7004  047A  2C7D               	goto	u2475
  7005  047B  3004               	movlw	4
  7006  047C  0229               	subwf	marshallPatchMemory@i,w
  7007  047D                     u2475:	
  7008  047D  1C03               	skipc
  7009  047E  2C53               	goto	l3086
  7010  047F                     l3094:	
  7011                           
  7012                           ;EEPROM_24LC256.c: 26: }
  7013                           ;EEPROM_24LC256.c: 27: for(int i=0; i<cADSRdataBytes;i++) {
  7014  047F  0020               	movlb	0	; select bank0
  7015  0480  01AB               	clrf	marshallPatchMemory@i_1212
  7016  0481  01AC               	clrf	marshallPatchMemory@i_1212+1
  7017  0482  082C               	movf	marshallPatchMemory@i_1212+1,w
  7018  0483  3A80               	xorlw	128
  7019  0484  00A2               	movwf	??_marshallPatchMemory
  7020  0485  3080               	movlw	128
  7021  0486  0222               	subwf	??_marshallPatchMemory,w
  7022  0487  3008               	movlw	8
  7023  0488  1903               	btfsc	3,2
  7024  0489  022B               	subwf	marshallPatchMemory@i_1212,w
  7025  048A  1803               	btfsc	3,0
  7026  048B  2CB8               	goto	l3108
  7027  048C                     l3100:	
  7028                           
  7029                           ;EEPROM_24LC256.c: 28: aPatchMemory[iPatchMemoryNDX++]=dualADSRdata0[i];
  7030  048C  0020               	movlb	0	; select bank0
  7031  048D  082B               	movf	marshallPatchMemory@i_1212,w
  7032  048E  0720               	addwf	marshallPatchMemory@dualADSRdata0,w
  7033  048F  00A2               	movwf	??_marshallPatchMemory
  7034  0490  0822               	movf	??_marshallPatchMemory,w
  7035  0491  0086               	movwf	6
  7036  0492  3001               	movlw	1	; select bank2/3
  7037  0493  0087               	movwf	7
  7038  0494  0801               	movf	1,w
  7039  0495  00A3               	movwf	??_marshallPatchMemory+1
  7040  0496  3070               	movlw	112
  7041  0497  00A4               	movwf	??_marshallPatchMemory+2
  7042  0498  3023               	movlw	35
  7043  0499  00A5               	movwf	??_marshallPatchMemory+3
  7044  049A  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7045  049B  0724               	addwf	??_marshallPatchMemory+2,w
  7046  049C  00A6               	movwf	??_marshallPatchMemory+4
  7047  049D  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7048  049E  3D25               	addwfc	??_marshallPatchMemory+3,w
  7049  049F  00A7               	movwf	??_marshallPatchMemory+5
  7050  04A0  0826               	movf	??_marshallPatchMemory+4,w
  7051  04A1  0086               	movwf	6
  7052  04A2  0827               	movf	??_marshallPatchMemory+5,w
  7053  04A3  0087               	movwf	7
  7054  04A4  0823               	movf	??_marshallPatchMemory+1,w
  7055  04A5  0081               	movwf	1
  7056  04A6  3001               	movlw	1
  7057  04A7  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7058  04A8  3000               	movlw	0
  7059  04A9  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7060  04AA  3001               	movlw	1
  7061  04AB  07AB               	addwf	marshallPatchMemory@i_1212,f
  7062  04AC  3000               	movlw	0
  7063  04AD  3DAC               	addwfc	marshallPatchMemory@i_1212+1,f
  7064  04AE  082C               	movf	marshallPatchMemory@i_1212+1,w
  7065  04AF  3A80               	xorlw	128
  7066  04B0  00A2               	movwf	??_marshallPatchMemory
  7067  04B1  3080               	movlw	128
  7068  04B2  0222               	subwf	??_marshallPatchMemory,w
  7069  04B3  3008               	movlw	8
  7070  04B4  1903               	btfsc	3,2
  7071  04B5  022B               	subwf	marshallPatchMemory@i_1212,w
  7072  04B6  1C03               	skipc
  7073  04B7  2C8C               	goto	l3100
  7074  04B8                     l3108:	
  7075                           
  7076                           ;EEPROM_24LC256.c: 29: }
  7077                           ;EEPROM_24LC256.c: 30: for(int i=0; i<cADSRdataBytes;i++) {
  7078  04B8  0020               	movlb	0	; select bank0
  7079  04B9  01AD               	clrf	marshallPatchMemory@i_1213
  7080  04BA  01AE               	clrf	marshallPatchMemory@i_1213+1
  7081  04BB  082E               	movf	marshallPatchMemory@i_1213+1,w
  7082  04BC  3A80               	xorlw	128
  7083  04BD  00A2               	movwf	??_marshallPatchMemory
  7084  04BE  3080               	movlw	128
  7085  04BF  0222               	subwf	??_marshallPatchMemory,w
  7086  04C0  3008               	movlw	8
  7087  04C1  1903               	btfsc	3,2
  7088  04C2  022D               	subwf	marshallPatchMemory@i_1213,w
  7089  04C3  1803               	btfsc	3,0
  7090  04C4  2CF1               	goto	l3122
  7091  04C5                     l3114:	
  7092                           
  7093                           ;EEPROM_24LC256.c: 31: aPatchMemory[iPatchMemoryNDX++]=dualADSRdata1[i];
  7094  04C5  0020               	movlb	0	; select bank0
  7095  04C6  082D               	movf	marshallPatchMemory@i_1213,w
  7096  04C7  0721               	addwf	marshallPatchMemory@dualADSRdata1,w
  7097  04C8  00A2               	movwf	??_marshallPatchMemory
  7098  04C9  0822               	movf	??_marshallPatchMemory,w
  7099  04CA  0086               	movwf	6
  7100  04CB  3001               	movlw	1	; select bank2/3
  7101  04CC  0087               	movwf	7
  7102  04CD  0801               	movf	1,w
  7103  04CE  00A3               	movwf	??_marshallPatchMemory+1
  7104  04CF  3070               	movlw	112
  7105  04D0  00A4               	movwf	??_marshallPatchMemory+2
  7106  04D1  3023               	movlw	35
  7107  04D2  00A5               	movwf	??_marshallPatchMemory+3
  7108  04D3  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7109  04D4  0724               	addwf	??_marshallPatchMemory+2,w
  7110  04D5  00A6               	movwf	??_marshallPatchMemory+4
  7111  04D6  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7112  04D7  3D25               	addwfc	??_marshallPatchMemory+3,w
  7113  04D8  00A7               	movwf	??_marshallPatchMemory+5
  7114  04D9  0826               	movf	??_marshallPatchMemory+4,w
  7115  04DA  0086               	movwf	6
  7116  04DB  0827               	movf	??_marshallPatchMemory+5,w
  7117  04DC  0087               	movwf	7
  7118  04DD  0823               	movf	??_marshallPatchMemory+1,w
  7119  04DE  0081               	movwf	1
  7120  04DF  3001               	movlw	1
  7121  04E0  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7122  04E1  3000               	movlw	0
  7123  04E2  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7124  04E3  3001               	movlw	1
  7125  04E4  07AD               	addwf	marshallPatchMemory@i_1213,f
  7126  04E5  3000               	movlw	0
  7127  04E6  3DAE               	addwfc	marshallPatchMemory@i_1213+1,f
  7128  04E7  082E               	movf	marshallPatchMemory@i_1213+1,w
  7129  04E8  3A80               	xorlw	128
  7130  04E9  00A2               	movwf	??_marshallPatchMemory
  7131  04EA  3080               	movlw	128
  7132  04EB  0222               	subwf	??_marshallPatchMemory,w
  7133  04EC  3008               	movlw	8
  7134  04ED  1903               	btfsc	3,2
  7135  04EE  022D               	subwf	marshallPatchMemory@i_1213,w
  7136  04EF  1C03               	skipc
  7137  04F0  2CC5               	goto	l3114
  7138  04F1                     l3122:	
  7139                           
  7140                           ;EEPROM_24LC256.c: 32: }
  7141                           ;EEPROM_24LC256.c: 34: for(;iPatchMemoryNDX<cPatchSize;iPatchMemoryNDX++){
  7142  04F1  0020               	movlb	0	; select bank0
  7143  04F2                     L1:	
  7144  04F2  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7145  04F3  3A80               	xorlw	128
  7146  04F4  00A2               	movwf	??_marshallPatchMemory
  7147  04F5  3080               	movlw	128
  7148  04F6  0222               	subwf	??_marshallPatchMemory,w
  7149  04F7  1D03               	skipz
  7150  04F8  2CFB               	goto	u2525
  7151  04F9  3080               	movlw	128
  7152  04FA  022F               	subwf	marshallPatchMemory@iPatchMemoryNDX,w
  7153  04FB                     u2525:	
  7154  04FB  1803               	btfsc	3,0
  7155  04FC  0008               	return
  7156                           
  7157                           ;EEPROM_24LC256.c: 35: aPatchMemory[iPatchMemoryNDX]=0;
  7158  04FD  3070               	movlw	112
  7159  04FE  0020               	movlb	0	; select bank0
  7160  04FF  00A2               	movwf	??_marshallPatchMemory
  7161  0500  3023               	movlw	35
  7162  0501  00A3               	movwf	??_marshallPatchMemory+1
  7163  0502  082F               	movf	marshallPatchMemory@iPatchMemoryNDX,w
  7164  0503  0722               	addwf	??_marshallPatchMemory,w
  7165  0504  0086               	movwf	6
  7166  0505  0830               	movf	marshallPatchMemory@iPatchMemoryNDX+1,w
  7167  0506  3D23               	addwfc	??_marshallPatchMemory+1,w
  7168  0507  0087               	movwf	7
  7169  0508  0181               	clrf	1
  7170  0509  3001               	movlw	1
  7171  050A  07AF               	addwf	marshallPatchMemory@iPatchMemoryNDX,f
  7172  050B  3000               	movlw	0
  7173  050C  3DB0               	addwfc	marshallPatchMemory@iPatchMemoryNDX+1,f
  7174  050D  2CF2               	goto	L1
  7175  050E                     __end_of_marshallPatchMemory:	
  7176                           
  7177                           	psect	text3
  7178  0F66                     __ptext3:	
  7179 ;; *************** function _MYI2C_Write16EEPROMBytes *****************
  7180 ;; Defined at:
  7181 ;;		line 73 in file "EEPROM_24LC256.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  slaveDeviceA    1    wreg     unsigned char 
  7184 ;;  writeAddress    2   14[BANK0 ] int 
  7185 ;;  pData           2   16[BANK0 ] PTR unsigned char 
  7186 ;;		 -> aPatchMemory(128), 
  7187 ;; Auto vars:     Size  Location     Type
  7188 ;;  slaveDeviceA    1   45[BANK0 ] unsigned char 
  7189 ;;  i               2   49[BANK0 ] int 
  7190 ;;  writeBuffer    17   22[BANK0 ] unsigned char [17]
  7191 ;;  counter         2   47[BANK0 ] unsigned int 
  7192 ;;  timeOut         2   42[BANK0 ] unsigned int 
  7193 ;;  nCount          2   40[BANK0 ] unsigned int 
  7194 ;;  status          1   51[BANK0 ] enum E14260
  7195 ;;  iPatchAddres    1   46[BANK0 ] unsigned char 
  7196 ;;  pointerByte     1   44[BANK0 ] unsigned char 
  7197 ;;  iPatchAddres    1   39[BANK0 ] unsigned char 
  7198 ;; Return value:  Size  Location     Type
  7199 ;;                  1    wreg      void 
  7200 ;; Registers used:
  7201 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7202 ;; Tracked objects:
  7203 ;;		On entry : 0/0
  7204 ;;		On exit  : 0/0
  7205 ;;		Unchanged: 0/0
  7206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7207 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7208 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;Total ram usage:       38 bytes
  7212 ;; Hardware stack levels used:    1
  7213 ;; Hardware stack levels required when called:    5
  7214 ;; This function calls:
  7215 ;;		_I2C1_MasterWrite
  7216 ;; This function is called by:
  7217 ;;		_savePatch
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           
  7222                           ;psect for function _MYI2C_Write16EEPROMBytes
  7223  0F66                     _MYI2C_Write16EEPROMBytes:	
  7224                           
  7225                           ;incstack = 0
  7226                           ; Regs used in _MYI2C_Write16EEPROMBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  7227                           ;MYI2C_Write16EEPROMBytes@slaveDeviceAddress stored from wreg
  7228  0F66  0020               	movlb	0	; select bank0
  7229  0F67  00CD               	movwf	MYI2C_Write16EEPROMBytes@slaveDeviceAddress
  7230                           
  7231                           ;EEPROM_24LC256.c: 75: uint8_t iPatchAddressHigh=writeAddress>>8;
  7232  0F68  082F               	movf	MYI2C_Write16EEPROMBytes@writeAddress+1,w
  7233  0F69  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7234  0F6A  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7235  0F6B  00CE               	movwf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh
  7236                           
  7237                           ;EEPROM_24LC256.c: 76: uint8_t iPatchAddressLow=writeAddress&0xFF;
  7238  0F6C  082E               	movf	MYI2C_Write16EEPROMBytes@writeAddress,w
  7239  0F6D  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7240  0F6E  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7241  0F6F  00C7               	movwf	MYI2C_Write16EEPROMBytes@iPatchAddressLow
  7242                           
  7243                           ;EEPROM_24LC256.c: 82: uint16_t nCount;
  7244                           ;EEPROM_24LC256.c: 83: uint8_t writeBuffer[ciBufferSize];
  7245                           ;EEPROM_24LC256.c: 84: uint16_t counter, timeOut;
  7246                           ;EEPROM_24LC256.c: 86: uint8_t pointerByte = 0b10100000;
  7247  0F70  30A0               	movlw	160
  7248  0F71  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7249  0F72  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7250  0F73  00CC               	movwf	MYI2C_Write16EEPROMBytes@pointerByte
  7251                           
  7252                           ;EEPROM_24LC256.c: 88: I2C1_MESSAGE_STATUS status = I2C1_MESSAGE_PENDING;
  7253  0F74  3002               	movlw	2
  7254  0F75  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7255  0F76  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7256  0F77  00D3               	movwf	MYI2C_Write16EEPROMBytes@status
  7257                           
  7258                           ;EEPROM_24LC256.c: 92: nCount = 2;
  7259  0F78  3002               	movlw	2
  7260  0F79  00C8               	movwf	MYI2C_Write16EEPROMBytes@nCount
  7261  0F7A  3000               	movlw	0
  7262  0F7B  00C9               	movwf	MYI2C_Write16EEPROMBytes@nCount+1
  7263                           
  7264                           ;EEPROM_24LC256.c: 95: for (counter = 0; counter < nCount; counter++)
  7265  0F7C  01CF               	clrf	MYI2C_Write16EEPROMBytes@counter
  7266  0F7D  01D0               	clrf	MYI2C_Write16EEPROMBytes@counter+1
  7267  0F7E                     l829:	
  7268  0F7E  0849               	movf	MYI2C_Write16EEPROMBytes@nCount+1,w
  7269  0F7F  0250               	subwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7270  0F80  1D03               	skipz
  7271  0F81  2F84               	goto	u2635
  7272  0F82  0848               	movf	MYI2C_Write16EEPROMBytes@nCount,w
  7273  0F83  024F               	subwf	MYI2C_Write16EEPROMBytes@counter,w
  7274  0F84                     u2635:	
  7275  0F84  1803               	btfsc	3,0
  7276  0F85  0008               	return
  7277                           
  7278                           ;EEPROM_24LC256.c: 96: {
  7279                           ;EEPROM_24LC256.c: 99: writeBuffer[0] = pointerByte;
  7280  0F86  084C               	movf	MYI2C_Write16EEPROMBytes@pointerByte,w
  7281  0F87  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7282  0F88  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7283  0F89  00B6               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer
  7284                           
  7285                           ;EEPROM_24LC256.c: 101: if(0==counter) {
  7286  0F8A  084F               	movf	MYI2C_Write16EEPROMBytes@counter,w
  7287  0F8B  0450               	iorwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7288  0F8C  1D03               	btfss	3,2
  7289  0F8D  2F97               	goto	l3150
  7290                           
  7291                           ;EEPROM_24LC256.c: 103: writeBuffer[1] = iPatchAddressHigh;
  7292  0F8E  084E               	movf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh,w
  7293  0F8F  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7294  0F90  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7295  0F91  00B7               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer+1
  7296                           
  7297                           ;EEPROM_24LC256.c: 104: writeBuffer[2] = iPatchAddressHigh;
  7298  0F92  084E               	movf	MYI2C_Write16EEPROMBytes@iPatchAddressHigh,w
  7299  0F93  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7300  0F94  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7301  0F95  00B8               	movwf	MYI2C_Write16EEPROMBytes@writeBuffer+2
  7302                           
  7303                           ;EEPROM_24LC256.c: 105: }
  7304  0F96  2FC6               	goto	l3162
  7305  0F97                     l3150:	
  7306                           
  7307                           ;EEPROM_24LC256.c: 106: else
  7308                           ;EEPROM_24LC256.c: 107: {
  7309                           ;EEPROM_24LC256.c: 109: for(int i=1;i<ciBatchSize;i++){
  7310  0F97  3001               	movlw	1
  7311  0F98  00D1               	movwf	MYI2C_Write16EEPROMBytes@i
  7312  0F99  3000               	movlw	0
  7313  0F9A  00D2               	movwf	MYI2C_Write16EEPROMBytes@i+1
  7314  0F9B  0852               	movf	MYI2C_Write16EEPROMBytes@i+1,w
  7315  0F9C  3A80               	xorlw	128
  7316  0F9D  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7317  0F9E  3080               	movlw	128
  7318  0F9F  0232               	subwf	??_MYI2C_Write16EEPROMBytes,w
  7319  0FA0  1D03               	skipz
  7320  0FA1  2FA4               	goto	u2555
  7321  0FA2  3010               	movlw	16
  7322  0FA3  0251               	subwf	MYI2C_Write16EEPROMBytes@i,w
  7323  0FA4                     u2555:	
  7324  0FA4  1803               	btfsc	3,0
  7325  0FA5  2FC6               	goto	l3162
  7326  0FA6                     l3154:	
  7327                           
  7328                           ;EEPROM_24LC256.c: 110: writeBuffer[i]=(*pData++);
  7329  0FA6  0020               	movlb	0	; select bank0
  7330  0FA7  0830               	movf	MYI2C_Write16EEPROMBytes@pData,w
  7331  0FA8  0086               	movwf	6
  7332  0FA9  0831               	movf	MYI2C_Write16EEPROMBytes@pData+1,w
  7333  0FAA  0087               	movwf	7
  7334  0FAB  0801               	movf	1,w
  7335  0FAC  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7336  0FAD  0851               	movf	MYI2C_Write16EEPROMBytes@i,w
  7337  0FAE  3E36               	addlw	(low (MYI2C_Write16EEPROMBytes@writeBuffer| 0))& (0+255)
  7338  0FAF  0086               	movwf	6
  7339  0FB0  0187               	clrf	7
  7340  0FB1  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7341  0FB2  0081               	movwf	1
  7342  0FB3  3001               	movlw	1
  7343  0FB4  07B0               	addwf	MYI2C_Write16EEPROMBytes@pData,f
  7344  0FB5  3000               	movlw	0
  7345  0FB6  3DB1               	addwfc	MYI2C_Write16EEPROMBytes@pData+1,f
  7346  0FB7  3001               	movlw	1
  7347  0FB8  07D1               	addwf	MYI2C_Write16EEPROMBytes@i,f
  7348  0FB9  3000               	movlw	0
  7349  0FBA  3DD2               	addwfc	MYI2C_Write16EEPROMBytes@i+1,f
  7350  0FBB  0852               	movf	MYI2C_Write16EEPROMBytes@i+1,w
  7351  0FBC  3A80               	xorlw	128
  7352  0FBD  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7353  0FBE  3080               	movlw	128
  7354  0FBF  0232               	subwf	??_MYI2C_Write16EEPROMBytes,w
  7355  0FC0  1D03               	skipz
  7356  0FC1  2FC4               	goto	u2565
  7357  0FC2  3010               	movlw	16
  7358  0FC3  0251               	subwf	MYI2C_Write16EEPROMBytes@i,w
  7359  0FC4                     u2565:	
  7360  0FC4  1C03               	skipc
  7361  0FC5  2FA6               	goto	l3154
  7362  0FC6                     l3162:	
  7363                           
  7364                           ;EEPROM_24LC256.c: 111: }
  7365                           ;EEPROM_24LC256.c: 112: }
  7366                           ;EEPROM_24LC256.c: 117: timeOut = 0;
  7367  0FC6  0020               	movlb	0	; select bank0
  7368  0FC7  01CA               	clrf	MYI2C_Write16EEPROMBytes@timeOut
  7369  0FC8  01CB               	clrf	MYI2C_Write16EEPROMBytes@timeOut+1
  7370  0FC9                     l3184:	
  7371                           ;EEPROM_24LC256.c: 118: while(status != I2C1_MESSAGE_FAIL)
  7372                           
  7373  0FC9  0353               	decf	MYI2C_Write16EEPROMBytes@status,w
  7374  0FCA  1903               	btfsc	3,2
  7375  0FCB  2FF8               	goto	l3186
  7376                           
  7377                           ;EEPROM_24LC256.c: 119: {
  7378                           ;EEPROM_24LC256.c: 120: if(0==counter) {
  7379  0FCC  084F               	movf	MYI2C_Write16EEPROMBytes@counter,w
  7380  0FCD  0450               	iorwf	MYI2C_Write16EEPROMBytes@counter+1,w
  7381  0FCE  1D03               	btfss	3,2
  7382  0FCF  2FD2               	goto	l3168
  7383                           
  7384                           ;EEPROM_24LC256.c: 122: I2C1_MasterWrite( writeBuffer,
  7385                           ;EEPROM_24LC256.c: 123: 3,
  7386                           ;EEPROM_24LC256.c: 124: slaveDeviceAddress,
  7387                           ;EEPROM_24LC256.c: 125: &status);
  7388  0FD0  3003               	movlw	3
  7389  0FD1  2FD4               	goto	L2
  7390  0FD2                     l3168:	
  7391                           ;EEPROM_24LC256.c: 126: } else {
  7392                           
  7393                           
  7394                           ;EEPROM_24LC256.c: 128: I2C1_MasterWrite( writeBuffer,
  7395                           ;EEPROM_24LC256.c: 129: ciBatchSize+1,
  7396                           ;EEPROM_24LC256.c: 130: slaveDeviceAddress,
  7397                           ;EEPROM_24LC256.c: 131: &status);
  7398  0FD2  3011               	movlw	17
  7399  0FD3  0020               	movlb	0	; select bank0
  7400  0FD4                     L2:	
  7401  0FD4  00B2               	movwf	??_MYI2C_Write16EEPROMBytes
  7402  0FD5  0832               	movf	??_MYI2C_Write16EEPROMBytes,w
  7403  0FD6  00A7               	movwf	I2C1_MasterWrite@length
  7404  0FD7  084D               	movf	MYI2C_Write16EEPROMBytes@slaveDeviceAddress,w
  7405  0FD8  00B3               	movwf	??_MYI2C_Write16EEPROMBytes+1
  7406  0FD9  01B4               	clrf	??_MYI2C_Write16EEPROMBytes+2
  7407  0FDA  0833               	movf	??_MYI2C_Write16EEPROMBytes+1,w
  7408  0FDB  00A8               	movwf	I2C1_MasterWrite@address
  7409  0FDC  0834               	movf	??_MYI2C_Write16EEPROMBytes+2,w
  7410  0FDD  00A9               	movwf	I2C1_MasterWrite@address+1
  7411  0FDE  3053               	movlw	(low (MYI2C_Write16EEPROMBytes@status| 0))& (0+255)
  7412  0FDF  00B5               	movwf	??_MYI2C_Write16EEPROMBytes+3
  7413  0FE0  0835               	movf	??_MYI2C_Write16EEPROMBytes+3,w
  7414  0FE1  00AA               	movwf	I2C1_MasterWrite@pflag
  7415  0FE2  3036               	movlw	(low (MYI2C_Write16EEPROMBytes@writeBuffer| 0))& (0+255)
  7416  0FE3  318C  24C8  318F   	fcall	_I2C1_MasterWrite
  7417  0FE6                     l3170:	
  7418                           ;EEPROM_24LC256.c: 132: }
  7419                           ;EEPROM_24LC256.c: 135: while(status == I2C1_MESSAGE_PENDING);
  7420                           
  7421  0FE6  3002               	movlw	2
  7422  0FE7  0020               	movlb	0	; select bank0
  7423  0FE8  0653               	xorwf	MYI2C_Write16EEPROMBytes@status,w
  7424  0FE9  1903               	btfsc	3,2
  7425  0FEA  2FE6               	goto	l3170
  7426                           
  7427                           ;EEPROM_24LC256.c: 137: if (status == I2C1_MESSAGE_COMPLETE)
  7428  0FEB  0853               	movf	MYI2C_Write16EEPROMBytes@status,w
  7429  0FEC  1903               	btfsc	3,2
  7430  0FED  2FF8               	goto	l3186
  7431                           
  7432                           ;EEPROM_24LC256.c: 147: if (timeOut == 100)
  7433                           
  7434                           ;EEPROM_24LC256.c: 138: break;
  7435  0FEE  3064               	movlw	100
  7436  0FEF  064A               	xorwf	MYI2C_Write16EEPROMBytes@timeOut,w
  7437  0FF0  044B               	iorwf	MYI2C_Write16EEPROMBytes@timeOut+1,w
  7438  0FF1  1903               	btfsc	3,2
  7439  0FF2  2FF8               	goto	l3186
  7440                           
  7441                           ;EEPROM_24LC256.c: 149: else
  7442                           ;EEPROM_24LC256.c: 150: timeOut++;
  7443                           
  7444                           ;EEPROM_24LC256.c: 148: break;
  7445  0FF3  3001               	movlw	1
  7446  0FF4  07CA               	addwf	MYI2C_Write16EEPROMBytes@timeOut,f
  7447  0FF5  3000               	movlw	0
  7448  0FF6  3DCB               	addwfc	MYI2C_Write16EEPROMBytes@timeOut+1,f
  7449  0FF7  2FC9               	goto	l3184
  7450  0FF8                     l3186:	
  7451                           
  7452                           ;EEPROM_24LC256.c: 151: }
  7453                           ;EEPROM_24LC256.c: 153: if (status == I2C1_MESSAGE_FAIL) { break; }
  7454  0FF8  0353               	decf	MYI2C_Write16EEPROMBytes@status,w
  7455  0FF9  1903               	btfsc	3,2
  7456  0FFA  0008               	return
  7457  0FFB  3001               	movlw	1
  7458  0FFC  07CF               	addwf	MYI2C_Write16EEPROMBytes@counter,f
  7459  0FFD  3000               	movlw	0
  7460  0FFE  3DD0               	addwfc	MYI2C_Write16EEPROMBytes@counter+1,f
  7461  0FFF  2F7E               	goto	l829
  7462  1000                     __end_of_MYI2C_Write16EEPROMBytes:	
  7463                           
  7464                           	psect	text4
  7465  0CC8                     __ptext4:	
  7466 ;; *************** function _I2C1_MasterWrite *****************
  7467 ;; Defined at:
  7468 ;;		line 598 in file "mcc_generated_files/i2c1.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  pdata           1    wreg     PTR unsigned char 
  7471 ;;		 -> MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), MYI2C_WriteFaders@writeBuffer(9),
      + 
  7472 ;;  length          1    7[BANK0 ] unsigned char 
  7473 ;;  address         2    8[BANK0 ] unsigned int 
  7474 ;;  pflag           1   10[BANK0 ] PTR enum E14260
  7475 ;;		 -> MYI2C_Write16EEPROMBytes@status(1), MYI2C_Write2LEDBytes@status(1), MYI2C_WriteFaders@status(1), 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
  7478 ;;		 -> MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), MYI2C_WriteFaders@writeBuffer(9),
      + 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7488 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7491 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7492 ;;Total ram usage:        7 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    4
  7495 ;; This function calls:
  7496 ;;		_I2C1_MasterTRBInsert
  7497 ;;		_I2C1_MasterWriteTRBBuild
  7498 ;; This function is called by:
  7499 ;;		_MYI2C_Write16EEPROMBytes
  7500 ;;		_MYI2C_WriteFaders
  7501 ;;		_MYI2C_Write2LEDBytes
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           
  7506                           ;psect for function _I2C1_MasterWrite
  7507  0CC8                     _I2C1_MasterWrite:	
  7508                           
  7509                           ;incstack = 0
  7510                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7511                           ;I2C1_MasterWrite@pdata stored from wreg
  7512  0CC8  0020               	movlb	0	; select bank0
  7513  0CC9  00AD               	movwf	I2C1_MasterWrite@pdata
  7514                           
  7515                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
  7516                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
  7517  0CCA  1869               	btfsc	_i2c1_object+2,0
  7518  0CCB  2CE9               	goto	l2932
  7519                           
  7520                           ;i2c1.c: 608: {
  7521                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
  7522  0CCC  082D               	movf	I2C1_MasterWrite@pdata,w
  7523  0CCD  00AB               	movwf	??_I2C1_MasterWrite
  7524  0CCE  082B               	movf	??_I2C1_MasterWrite,w
  7525  0CCF  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
  7526  0CD0  0827               	movf	I2C1_MasterWrite@length,w
  7527  0CD1  00AC               	movwf	??_I2C1_MasterWrite+1
  7528  0CD2  082C               	movf	??_I2C1_MasterWrite+1,w
  7529  0CD3  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
  7530  0CD4  0829               	movf	I2C1_MasterWrite@address+1,w
  7531  0CD5  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
  7532  0CD6  0828               	movf	I2C1_MasterWrite@address,w
  7533  0CD7  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
  7534  0CD8  30D1               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  7535  0CD9  318C  2461  318C   	fcall	_I2C1_MasterWriteTRBBuild
  7536                           
  7537                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
  7538  0CDC  30D1               	movlw	(low (I2C1_MasterWrite@trBlock| 0))& (0+255)
  7539  0CDD  0020               	movlb	0	; select bank0
  7540  0CDE  00AB               	movwf	??_I2C1_MasterWrite
  7541  0CDF  082B               	movf	??_I2C1_MasterWrite,w
  7542  0CE0  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
  7543  0CE1  082A               	movf	I2C1_MasterWrite@pflag,w
  7544  0CE2  00AC               	movwf	??_I2C1_MasterWrite+1
  7545  0CE3  082C               	movf	??_I2C1_MasterWrite+1,w
  7546  0CE4  00A1               	movwf	I2C1_MasterTRBInsert@pflag
  7547  0CE5  3001               	movlw	1
  7548  0CE6  318D  2568         	fcall	_I2C1_MasterTRBInsert
  7549                           
  7550                           ;i2c1.c: 611: }
  7551  0CE8  0008               	return
  7552  0CE9                     l2932:	
  7553                           
  7554                           ;i2c1.c: 612: else
  7555                           ;i2c1.c: 613: {
  7556                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
  7557  0CE9  0020               	movlb	0	; select bank0
  7558  0CEA  082A               	movf	I2C1_MasterWrite@pflag,w
  7559  0CEB  0086               	movwf	6
  7560  0CEC  0187               	clrf	7
  7561  0CED  0181               	clrf	1
  7562  0CEE  0A81               	incf	1,f
  7563  0CEF  0008               	return
  7564  0CF0                     __end_of_I2C1_MasterWrite:	
  7565                           
  7566                           	psect	text5
  7567  0C61                     __ptext5:	
  7568 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
  7569 ;; Defined at:
  7570 ;;		line 707 in file "mcc_generated_files/i2c1.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  ptrb            1    wreg     PTR struct .
  7573 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  7574 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
  7575 ;;		 -> MYI2C_ReadPatch@pointerByte(1), MYI2C_Write16EEPROMBytes@writeBuffer(17), MYI2C_Write2LEDBytes@writeBuffer(3), M
      +YI2C_WriteFaders@writeBuffer(9), 
  7576 ;;		 -> MYI2C_ReadFaders@pointerByte(1), 
  7577 ;;  length          1    1[BANK0 ] unsigned char 
  7578 ;;  address         2    2[BANK0 ] unsigned int 
  7579 ;; Auto vars:     Size  Location     Type
  7580 ;;  ptrb            1    6[BANK0 ] PTR struct .
  7581 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterWrite@trBlock(4), 
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7591 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7592 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;Total ram usage:        7 bytes
  7596 ;; Hardware stack levels used:    1
  7597 ;; Hardware stack levels required when called:    3
  7598 ;; This function calls:
  7599 ;;		Nothing
  7600 ;; This function is called by:
  7601 ;;		_I2C1_MasterWrite
  7602 ;;		_MYI2C_ReadFaders
  7603 ;;		_MYI2C_ReadPatch
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           
  7608                           ;psect for function _I2C1_MasterWriteTRBBuild
  7609  0C61                     _I2C1_MasterWriteTRBBuild:	
  7610                           
  7611                           ;incstack = 0
  7612                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
  7613                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
  7614  0C61  0020               	movlb	0	; select bank0
  7615  0C62  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
  7616                           
  7617                           ;i2c1.c: 713: ptrb->address = address << 1;
  7618  0C63  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
  7619  0C64  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
  7620  0C65  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
  7621  0C66  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  7622  0C67  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
  7623  0C68  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
  7624  0C69  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  7625  0C6A  0086               	movwf	6
  7626  0C6B  0187               	clrf	7
  7627  0C6C  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  7628  0C6D  3FC0               	movwi [0]fsr1
  7629  0C6E  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
  7630  0C6F  3FC1               	movwi [1]fsr1
  7631                           
  7632                           ;i2c1.c: 714: ptrb->length = length;
  7633  0C70  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
  7634  0C71  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  7635  0C72  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  7636  0C73  3E02               	addlw	2
  7637  0C74  0086               	movwf	6
  7638  0C75  0187               	clrf	7
  7639  0C76  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  7640  0C77  0081               	movwf	1
  7641                           
  7642                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
  7643  0C78  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
  7644  0C79  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
  7645  0C7A  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
  7646  0C7B  3E03               	addlw	3
  7647  0C7C  0086               	movwf	6
  7648  0C7D  0187               	clrf	7
  7649  0C7E  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
  7650  0C7F  0081               	movwf	1
  7651  0C80  0008               	return
  7652  0C81                     __end_of_I2C1_MasterWriteTRBBuild:	
  7653                           
  7654                           	psect	text6
  7655  0D68                     __ptext6:	
  7656 ;; *************** function _I2C1_MasterTRBInsert *****************
  7657 ;; Defined at:
  7658 ;;		line 641 in file "mcc_generated_files/i2c1.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  count           1    wreg     unsigned char 
  7661 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
  7662 ;;		 -> MYI2C_ReadPatch@readTRB(8), MYI2C_ReadFaders@readTRB(8), I2C1_MasterRead@trBlock(4), I2C1_MasterWrite@trBlock(4)
      +, 
  7663 ;;  pflag           1    1[BANK0 ] PTR enum E14260
  7664 ;;		 -> MYI2C_ReadPatch@status(1), MYI2C_Write16EEPROMBytes@status(1), MYI2C_Write2LEDBytes@status(1), MYI2C_WriteFaders
      +@status(1), 
  7665 ;;		 -> MYI2C_ReadFaders@status(1), 
  7666 ;; Auto vars:     Size  Location     Type
  7667 ;;  count           1    3[BANK0 ] unsigned char 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7680 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7681 ;;Total ram usage:        4 bytes
  7682 ;; Hardware stack levels used:    1
  7683 ;; Hardware stack levels required when called:    3
  7684 ;; This function calls:
  7685 ;;		Nothing
  7686 ;; This function is called by:
  7687 ;;		_I2C1_MasterWrite
  7688 ;;		_I2C1_MasterRead
  7689 ;;		_MYI2C_ReadFaders
  7690 ;;		_MYI2C_ReadPatch
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function _I2C1_MasterTRBInsert
  7696  0D68                     _I2C1_MasterTRBInsert:	
  7697                           
  7698                           ;incstack = 0
  7699                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
  7700                           ;I2C1_MasterTRBInsert@count stored from wreg
  7701  0D68  0020               	movlb	0	; select bank0
  7702  0D69  00A3               	movwf	I2C1_MasterTRBInsert@count
  7703                           
  7704                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
  7705  0D6A  1869               	btfsc	_i2c1_object+2,0
  7706  0D6B  2D9C               	goto	l2806
  7707                           
  7708                           ;i2c1.c: 649: {
  7709                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
  7710  0D6C  3002               	movlw	2
  7711  0D6D  00A2               	movwf	??_I2C1_MasterTRBInsert
  7712  0D6E  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7713  0D6F  0086               	movwf	6
  7714  0D70  0187               	clrf	7
  7715  0D71  0822               	movf	??_I2C1_MasterTRBInsert,w
  7716  0D72  0081               	movwf	1
  7717                           
  7718                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
  7719  0D73  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
  7720  0D74  00A2               	movwf	??_I2C1_MasterTRBInsert
  7721  0D75  0A67               	incf	_i2c1_object,w
  7722  0D76  0086               	movwf	6
  7723  0D77  0187               	clrf	7
  7724  0D78  0822               	movf	??_I2C1_MasterTRBInsert,w
  7725  0D79  0081               	movwf	1
  7726                           
  7727                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
  7728  0D7A  0823               	movf	I2C1_MasterTRBInsert@count,w
  7729  0D7B  00A2               	movwf	??_I2C1_MasterTRBInsert
  7730  0D7C  0867               	movf	_i2c1_object,w
  7731  0D7D  0086               	movwf	6
  7732  0D7E  0187               	clrf	7
  7733  0D7F  0822               	movf	??_I2C1_MasterTRBInsert,w
  7734  0D80  0081               	movwf	1
  7735                           
  7736                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
  7737  0D81  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7738  0D82  00A2               	movwf	??_I2C1_MasterTRBInsert
  7739  0D83  0867               	movf	_i2c1_object,w
  7740  0D84  3E02               	addlw	2
  7741  0D85  0086               	movwf	6
  7742  0D86  0187               	clrf	7
  7743  0D87  0822               	movf	??_I2C1_MasterTRBInsert,w
  7744  0D88  0081               	movwf	1
  7745                           
  7746                           ;i2c1.c: 655: i2c1_object.pTrTail++;
  7747  0D89  3003               	movlw	3
  7748  0D8A  00A2               	movwf	??_I2C1_MasterTRBInsert
  7749  0D8B  0822               	movf	??_I2C1_MasterTRBInsert,w
  7750  0D8C  07E7               	addwf	_i2c1_object,f
  7751                           
  7752                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
  7753  0D8D  0867               	movf	_i2c1_object,w
  7754  0D8E  3AD8               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
  7755  0D8F  1D03               	skipz
  7756  0D90  2D95               	goto	l2802
  7757                           
  7758                           ;i2c1.c: 659: {
  7759                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
  7760  0D91  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  7761  0D92  00A2               	movwf	??_I2C1_MasterTRBInsert
  7762  0D93  0822               	movf	??_I2C1_MasterTRBInsert,w
  7763  0D94  00E7               	movwf	_i2c1_object
  7764  0D95                     l2802:	
  7765                           
  7766                           ;i2c1.c: 662: }
  7767                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
  7768  0D95  10E9               	bcf	_i2c1_object+2,1
  7769                           
  7770                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
  7771  0D96  0868               	movf	low ((_i2c1_object| 0+1)),w
  7772  0D97  0667               	xorwf	_i2c1_object,w
  7773  0D98  1D03               	skipz
  7774  0D99  2DA1               	goto	l2808
  7775                           
  7776                           ;i2c1.c: 670: {
  7777                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
  7778  0D9A  1469               	bsf	_i2c1_object+2,0
  7779                           
  7780                           ;i2c1.c: 673: }
  7781                           ;i2c1.c: 675: }
  7782  0D9B  2DA1               	goto	l2808
  7783  0D9C                     l2806:	
  7784                           
  7785                           ;i2c1.c: 676: else
  7786                           ;i2c1.c: 677: {
  7787                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
  7788  0D9C  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7789  0D9D  0086               	movwf	6
  7790  0D9E  0187               	clrf	7
  7791  0D9F  0181               	clrf	1
  7792  0DA0  0A81               	incf	1,f
  7793  0DA1                     l2808:	
  7794                           
  7795                           ;i2c1.c: 679: }
  7796                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
  7797  0DA1  0821               	movf	I2C1_MasterTRBInsert@pflag,w
  7798  0DA2  0086               	movwf	6
  7799  0DA3  0187               	clrf	7
  7800  0DA4  3002               	movlw	2
  7801  0DA5  0601               	xorwf	1,w
  7802  0DA6  1D03               	btfss	3,2
  7803  0DA7  0008               	return
  7804  0DA8                     l2812:	
  7805                           ;i2c1.c: 683: {
  7806                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
  7807                           
  7808  0DA8  086F               	movf	_i2c1_state,w
  7809  0DA9  1D03               	btfss	3,2
  7810  0DAA  2DA8               	goto	l2812
  7811                           
  7812                           ;i2c1.c: 685: {
  7813                           ;i2c1.c: 688: PIR3bits.SSP1IF = 1;
  7814  0DAB  002E               	movlb	14	; select bank14
  7815  0DAC  140F               	bsf	15,0	;volatile
  7816  0DAD  0008               	return
  7817  0DAE                     __end_of_I2C1_MasterTRBInsert:	
  7818                           
  7819                           	psect	text7
  7820  07BF                     __ptext7:	
  7821 ;; *************** function _loadPatch *****************
  7822 ;; Defined at:
  7823 ;;		line 846 in file "main.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  PatchNumber     2   58[BANK0 ] int 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  i               2   64[BANK0 ] int 
  7828 ;;  iPatchAddres    2   62[BANK0 ] int 
  7829 ;;  idx             2    0        int 
  7830 ;;  pData           2    0        PTR unsigned char 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7840 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7843 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7844 ;;Total ram usage:        8 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:    7
  7847 ;; This function calls:
  7848 ;;		_updateModelFromPatchMemory
  7849 ;;		_writeDAC528
  7850 ;; This function is called by:
  7851 ;;		_main
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           
  7856                           ;psect for function _loadPatch
  7857  07BF                     _loadPatch:	
  7858                           
  7859                           ;main.c: 847: int iPatchAddress=PatchNumber*cPatchSize;
  7860                           
  7861                           ;incstack = 0
  7862                           ; Regs used in _loadPatch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7863  07BF  0020               	movlb	0	; select bank0
  7864  07C0  085B               	movf	loadPatch@PatchNumber+1,w
  7865  07C1  00DD               	movwf	??_loadPatch+1
  7866  07C2  085A               	movf	loadPatch@PatchNumber,w
  7867  07C3  00DC               	movwf	??_loadPatch
  7868  07C4  3007               	movlw	7
  7869  07C5                     u2975:	
  7870  07C5  35DC               	lslf	??_loadPatch,f
  7871  07C6  0DDD               	rlf	??_loadPatch+1,f
  7872  07C7  0B89               	decfsz	9,f
  7873  07C8  2FC5               	goto	u2975
  7874  07C9  085C               	movf	??_loadPatch,w
  7875  07CA  00DE               	movwf	loadPatch@iPatchAddress
  7876  07CB  085D               	movf	??_loadPatch+1,w
  7877  07CC  00DF               	movwf	loadPatch@iPatchAddress+1
  7878                           
  7879                           ;main.c: 850: uint8_t *pData;
  7880                           ;main.c: 851: int idx;
  7881                           ;main.c: 864: updateModelFromPatchMemory(mvcChannels,dualADSRdata0,dualADSRdata1);
  7882  07CD  303C               	movlw	(low (_dualADSRdata0| (0+256)))& (0+255)
  7883  07CE  00DC               	movwf	??_loadPatch
  7884  07CF  085C               	movf	??_loadPatch,w
  7885  07D0  00A0               	movwf	updateModelFromPatchMemory@dualADSRdata0
  7886  07D1  3034               	movlw	(low (_dualADSRdata1| (0+256)))& (0+255)
  7887  07D2  00DD               	movwf	??_loadPatch+1
  7888  07D3  085D               	movf	??_loadPatch+1,w
  7889  07D4  00A1               	movwf	updateModelFromPatchMemory@dualADSRdata1
  7890  07D5  30C9               	movlw	(low (_mvcChannels| 0))& (0+255)
  7891  07D6  3187  2720  3187   	fcall	_updateModelFromPatchMemory
  7892                           
  7893                           ;main.c: 867: for(int i=0;i<cMixFaderCount;i++){
  7894  07D9  0020               	movlb	0	; select bank0
  7895  07DA  01E0               	clrf	loadPatch@i
  7896  07DB  01E1               	clrf	loadPatch@i+1
  7897  07DC                     L3:	
  7898  07DC  0861               	movf	loadPatch@i+1,w
  7899  07DD  3A80               	xorlw	128
  7900  07DE  00DC               	movwf	??_loadPatch
  7901  07DF  3080               	movlw	128
  7902  07E0  025C               	subwf	??_loadPatch,w
  7903  07E1  1D03               	skipz
  7904  07E2  2FE5               	goto	u2985
  7905  07E3  3004               	movlw	4
  7906  07E4  0260               	subwf	loadPatch@i,w
  7907  07E5                     u2985:	
  7908  07E5  1803               	btfsc	3,0
  7909  07E6  0008               	return
  7910                           
  7911                           ;main.c: 868: writeDAC528(i+4,mvcChannels[i]);
  7912  07E7  0020               	movlb	0	; select bank0
  7913  07E8  0860               	movf	loadPatch@i,w
  7914  07E9  3E04               	addlw	4
  7915  07EA  00D5               	movwf	writeDAC528@dacNumber
  7916  07EB  3000               	movlw	0
  7917  07EC  3D61               	addwfc	loadPatch@i+1,w
  7918  07ED  00D6               	movwf	writeDAC528@dacNumber+1
  7919  07EE  0860               	movf	loadPatch@i,w
  7920  07EF  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
  7921  07F0  0086               	movwf	6
  7922  07F1  0187               	clrf	7
  7923  07F2  0801               	movf	1,w
  7924  07F3  00DC               	movwf	??_loadPatch
  7925  07F4  085C               	movf	??_loadPatch,w
  7926  07F5  00D7               	movwf	writeDAC528@dacData
  7927  07F6  318C  24A3  3187   	fcall	_writeDAC528
  7928  07F9  3001               	movlw	1
  7929  07FA  0020               	movlb	0	; select bank0
  7930  07FB  07E0               	addwf	loadPatch@i,f
  7931  07FC  3000               	movlw	0
  7932  07FD  3DE1               	addwfc	loadPatch@i+1,f
  7933  07FE  2FDC               	goto	L3
  7934  07FF                     __end_of_loadPatch:	
  7935                           
  7936                           	psect	text8
  7937  0CA3                     __ptext8:	
  7938 ;; *************** function _writeDAC528 *****************
  7939 ;; Defined at:
  7940 ;;		line 59 in file "VCAMIX_SPI_Master.c"
  7941 ;; Parameters:    Size  Location     Type
  7942 ;;  dacNumber       2   53[BANK0 ] int 
  7943 ;;  dacData         1   55[BANK0 ] unsigned char 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;  wkDacNumber     1   57[BANK0 ] unsigned char 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7955 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;Total ram usage:        5 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    6
  7962 ;; This function calls:
  7963 ;;		_putByte
  7964 ;; This function is called by:
  7965 ;;		_main
  7966 ;;		_loadPatch
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           
  7971                           ;psect for function _writeDAC528
  7972  0CA3                     _writeDAC528:	
  7973                           
  7974                           ;VCAMIX_SPI_Master.c: 60: uint8_t wkDacNumber=0;
  7975                           
  7976                           ;incstack = 0
  7977                           ; Regs used in _writeDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7978  0CA3  0020               	movlb	0	; select bank0
  7979  0CA4  01D9               	clrf	writeDAC528@wkDacNumber
  7980                           
  7981                           ;VCAMIX_SPI_Master.c: 61: wkDacNumber=cPowerOfTwo[dacNumber];
  7982  0CA5  0856               	movf	writeDAC528@dacNumber+1,w
  7983  0CA6  0085               	movwf	5
  7984  0CA7  0855               	movf	writeDAC528@dacNumber,w
  7985  0CA8  0084               	movwf	4
  7986  0CA9  3584               	lslf	4,f
  7987  0CAA  0D85               	rlf	5,f
  7988  0CAB  3000               	movlw	low (_cPowerOfTwo| (0+32768))
  7989  0CAC  0784               	addwf	4,f
  7990  0CAD  3090               	movlw	high (_cPowerOfTwo| (0+32768))
  7991  0CAE  3D85               	addwfc	5,f
  7992  0CAF  0800               	movf	0,w	;code access
  7993  0CB0  00D8               	movwf	??_writeDAC528
  7994  0CB1  0858               	movf	??_writeDAC528,w
  7995  0CB2  00D9               	movwf	writeDAC528@wkDacNumber
  7996                           
  7997                           ;VCAMIX_SPI_Master.c: 72: PORTA &= 0x7F ;
  7998  0CB3  307F               	movlw	127
  7999  0CB4  00D8               	movwf	??_writeDAC528
  8000  0CB5  0858               	movf	??_writeDAC528,w
  8001  0CB6  058C               	andwf	12,f	;volatile
  8002                           
  8003                           ;VCAMIX_SPI_Master.c: 74: putByte(wkDacNumber,0);
  8004  0CB7  3000               	movlw	0
  8005  0CB8  00CC               	movwf	putByte@clockPin
  8006  0CB9  00CD               	movwf	putByte@clockPin+1
  8007  0CBA  0859               	movf	writeDAC528@wkDacNumber,w
  8008  0CBB  3185  250E  318C   	fcall	_putByte
  8009                           
  8010                           ;VCAMIX_SPI_Master.c: 76: putByte(dacData,0);
  8011  0CBE  3000               	movlw	0
  8012  0CBF  0020               	movlb	0	; select bank0
  8013  0CC0  00CC               	movwf	putByte@clockPin
  8014  0CC1  00CD               	movwf	putByte@clockPin+1
  8015  0CC2  0857               	movf	writeDAC528@dacData,w
  8016  0CC3  3185  250E         	fcall	_putByte
  8017                           
  8018                           ;VCAMIX_SPI_Master.c: 79: PORTA |= 0x80 ;
  8019  0CC5  0020               	movlb	0	; select bank0
  8020  0CC6  178C               	bsf	12,7	;volatile
  8021  0CC7  0008               	return
  8022  0CC8                     __end_of_writeDAC528:	
  8023                           
  8024                           	psect	text9
  8025  0720                     __ptext9:	
  8026 ;; *************** function _updateModelFromPatchMemory *****************
  8027 ;; Defined at:
  8028 ;;		line 39 in file "EEPROM_24LC256.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;  mvcChannels     1    wreg     PTR unsigned char 
  8031 ;;		 -> mvcChannels(4), 
  8032 ;;  dualADSRdata    1    0[BANK0 ] PTR unsigned char 
  8033 ;;		 -> dualADSRdata0(8), 
  8034 ;;  dualADSRdata    1    1[BANK0 ] PTR unsigned char 
  8035 ;;		 -> dualADSRdata1(8), 
  8036 ;; Auto vars:     Size  Location     Type
  8037 ;;  mvcChannels     1    6[BANK0 ] PTR unsigned char 
  8038 ;;		 -> mvcChannels(4), 
  8039 ;;  i               2    9[BANK0 ] int 
  8040 ;;  i               2    7[BANK0 ] int 
  8041 ;;  i               2   13[BANK0 ] int 
  8042 ;;  iPatchMemory    2   11[BANK0 ] int 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8052 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8053 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8054 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;Total ram usage:       15 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    3
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_loadPatch
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function _updateModelFromPatchMemory
  8068  0720                     _updateModelFromPatchMemory:	
  8069                           
  8070                           ;incstack = 0
  8071                           ; Regs used in _updateModelFromPatchMemory: [wreg+fsr1l+fsr1h+status,2+status,0]
  8072                           ;updateModelFromPatchMemory@mvcChannels stored from wreg
  8073  0720  0020               	movlb	0	; select bank0
  8074  0721  00A6               	movwf	updateModelFromPatchMemory@mvcChannels
  8075                           
  8076                           ;EEPROM_24LC256.c: 40: int iPatchMemoryNDX=0;
  8077  0722  01AB               	clrf	updateModelFromPatchMemory@iPatchMemoryNDX
  8078  0723  01AC               	clrf	updateModelFromPatchMemory@iPatchMemoryNDX+1
  8079                           
  8080                           ;EEPROM_24LC256.c: 41: for(int i=0; i<cMixFaderCount;i++) {
  8081  0724  01AD               	clrf	updateModelFromPatchMemory@i
  8082  0725  01AE               	clrf	updateModelFromPatchMemory@i+1
  8083  0726  082E               	movf	updateModelFromPatchMemory@i+1,w
  8084  0727  3A80               	xorlw	128
  8085  0728  00A2               	movwf	??_updateModelFromPatchMemory
  8086  0729  3080               	movlw	128
  8087  072A  0222               	subwf	??_updateModelFromPatchMemory,w
  8088  072B  1D03               	skipz
  8089  072C  2F2F               	goto	u2645
  8090  072D  3004               	movlw	4
  8091  072E  022D               	subwf	updateModelFromPatchMemory@i,w
  8092  072F                     u2645:	
  8093  072F  1803               	btfsc	3,0
  8094  0730  2F5E               	goto	l3204
  8095  0731                     l3198:	
  8096                           
  8097                           ;EEPROM_24LC256.c: 42: mvcChannels[i]=aPatchMemory[iPatchMemoryNDX++];
  8098  0731  3070               	movlw	112
  8099  0732  0020               	movlb	0	; select bank0
  8100  0733  00A2               	movwf	??_updateModelFromPatchMemory
  8101  0734  3023               	movlw	35
  8102  0735  00A3               	movwf	??_updateModelFromPatchMemory+1
  8103  0736  082B               	movf	updateModelFromPatchMemory@iPatchMemoryNDX,w
  8104  0737  0722               	addwf	??_updateModelFromPatchMemory,w
  8105  0738  0086               	movwf	6
  8106  0739  082C               	movf	updateModelFromPatchMemory@iPatchMemoryNDX+1,w
  8107  073A  3D23               	addwfc	??_updateModelFromPatchMemory+1,w
  8108  073B  0087               	movwf	7
  8109  073C  0801               	movf	1,w
  8110  073D  00A4               	movwf	??_updateModelFromPatchMemory+2
  8111  073E  082D               	movf	updateModelFromPatchMemory@i,w
  8112  073F  0726               	addwf	updateModelFromPatchMemory@mvcChannels,w
  8113  0740  00A5               	movwf	??_updateModelFromPatchMemory+3
  8114  0741  0825               	movf	??_updateModelFromPatchMemory+3,w
  8115  0742  0086               	movwf	6
  8116  0743  0187               	clrf	7
  8117  0744  0824               	movf	??_updateModelFromPatchMemory+2,w
  8118  0745  0081               	movwf	1
  8119  0746  3001               	movlw	1
  8120  0747  07AB               	addwf	updateModelFromPatchMemory@iPatchMemoryNDX,f
  8121  0748  3000               	movlw	0
  8122  0749  3DAC               	addwfc	updateModelFromPatchMemory@iPatchMemoryNDX+1,f
  8123                           
  8124                           ;EEPROM_24LC256.c: 43: faderActiveFlag[i]=0;
  8125  074A  082D               	movf	updateModelFromPatchMemory@i,w
  8126  074B  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
  8127  074C  0086               	movwf	6
  8128  074D  0187               	clrf	7
  8129  074E  0181               	clrf	1
  8130  074F  3001               	movlw	1
  8131  0750  07AD               	addwf	updateModelFromPatchMemory@i,f
  8132  0751  3000               	movlw	0
  8133  0752  3DAE               	addwfc	updateModelFromPatchMemory@i+1,f
  8134  0753  082E               	movf	updateModelFromPatchMemory@i+1,w
  8135  0754  3A80               	xorlw	128
  8136  0755  00A2               	movwf	??_updateModelFromPatchMemory
  8137  0756  3080               	movlw	128
  8138  0757  0222               	subwf	??_updateModelFromPatchMemory,w
  8139  0758  1D03               	skipz
  8140  0759  2F5C               	goto	u2655
  8141  075A  3004               	movlw	4
  8142  075B  022D               	subwf	updateModelFromPatchMemory@i,w
  8143  075C                     u2655:	
  8144  075C  1C03               	skipc
  8145  075D  2F31               	goto	l3198
  8146  075E                     l3204:	
  8147                           
  8148                           ;EEPROM_24LC256.c: 44: }
  8149                           ;EEPROM_24LC256.c: 45: for(int i=0; i<cADSRdataBytes;i++) {
  8150  075E  0020               	movlb	0	; select bank0
  8151  075F  01A7               	clrf	updateModelFromPatchMemory@i_1220
  8152  0760  01A8               	clrf	updateModelFromPatchMemory@i_1220+1
  8153  0761  0828               	movf	updateModelFromPatchMemory@i_1220+1,w
  8154  0762  3A80               	xorlw	128
  8155  0763  00A2               	movwf	??_updateModelFromPatchMemory
  8156  0764  3080               	movlw	128
  8157  0765  0222               	subwf	??_updateModelFromPatchMemory,w
  8158  0766  3008               	movlw	8
  8159  0767  1903               	btfsc	3,2
  8160  0768  0227               	subwf	updateModelFromPatchMemory@i_1220,w
  8161  0769  1803               	btfsc	3,0
  8162  076A  2F93               	goto	l3218
  8163  076B                     l3210:	
  8164                           
  8165                           ;EEPROM_24LC256.c: 46: dualADSRdata0[i]=aPatchMemory[iPatchMemoryNDX++];
  8166  076B  3070               	movlw	112
  8167  076C  0020               	movlb	0	; select bank0
  8168  076D  00A2               	movwf	??_updateModelFromPatchMemory
  8169  076E  3023               	movlw	35
  8170  076F  00A3               	movwf	??_updateModelFromPatchMemory+1
  8171  0770  082B               	movf	updateModelFromPatchMemory@iPatchMemoryNDX,w
  8172  0771  0722               	addwf	??_updateModelFromPatchMemory,w
  8173  0772  0086               	movwf	6
  8174  0773  082C               	movf	updateModelFromPatchMemory@iPatchMemoryNDX+1,w
  8175  0774  3D23               	addwfc	??_updateModelFromPatchMemory+1,w
  8176  0775  0087               	movwf	7
  8177  0776  0801               	movf	1,w
  8178  0777  00A4               	movwf	??_updateModelFromPatchMemory+2
  8179  0778  0827               	movf	updateModelFromPatchMemory@i_1220,w
  8180  0779  0720               	addwf	updateModelFromPatchMemory@dualADSRdata0,w
  8181  077A  00A5               	movwf	??_updateModelFromPatchMemory+3
  8182  077B  0825               	movf	??_updateModelFromPatchMemory+3,w
  8183  077C  0086               	movwf	6
  8184  077D  3001               	movlw	1	; select bank2/3
  8185  077E  0087               	movwf	7
  8186  077F  0824               	movf	??_updateModelFromPatchMemory+2,w
  8187  0780  0081               	movwf	1
  8188  0781  3001               	movlw	1
  8189  0782  07AB               	addwf	updateModelFromPatchMemory@iPatchMemoryNDX,f
  8190  0783  3000               	movlw	0
  8191  0784  3DAC               	addwfc	updateModelFromPatchMemory@iPatchMemoryNDX+1,f
  8192  0785  3001               	movlw	1
  8193  0786  07A7               	addwf	updateModelFromPatchMemory@i_1220,f
  8194  0787  3000               	movlw	0
  8195  0788  3DA8               	addwfc	updateModelFromPatchMemory@i_1220+1,f
  8196  0789  0828               	movf	updateModelFromPatchMemory@i_1220+1,w
  8197  078A  3A80               	xorlw	128
  8198  078B  00A2               	movwf	??_updateModelFromPatchMemory
  8199  078C  3080               	movlw	128
  8200  078D  0222               	subwf	??_updateModelFromPatchMemory,w
  8201  078E  3008               	movlw	8
  8202  078F  1903               	btfsc	3,2
  8203  0790  0227               	subwf	updateModelFromPatchMemory@i_1220,w
  8204  0791  1C03               	skipc
  8205  0792  2F6B               	goto	l3210
  8206  0793                     l3218:	
  8207                           
  8208                           ;EEPROM_24LC256.c: 47: }
  8209                           ;EEPROM_24LC256.c: 48: for(int i=0; i<cADSRdataBytes;i++) {
  8210  0793  0020               	movlb	0	; select bank0
  8211  0794  01A9               	clrf	updateModelFromPatchMemory@i_1221
  8212  0795  01AA               	clrf	updateModelFromPatchMemory@i_1221+1
  8213  0796                     L4:	
  8214  0796  082A               	movf	updateModelFromPatchMemory@i_1221+1,w
  8215  0797  3A80               	xorlw	128
  8216  0798  00A2               	movwf	??_updateModelFromPatchMemory
  8217  0799  3080               	movlw	128
  8218  079A  0222               	subwf	??_updateModelFromPatchMemory,w
  8219  079B  3008               	movlw	8
  8220  079C  1903               	btfsc	3,2
  8221  079D  0229               	subwf	updateModelFromPatchMemory@i_1221,w
  8222  079E  1803               	btfsc	3,0
  8223  079F  0008               	return
  8224                           
  8225                           ;EEPROM_24LC256.c: 49: dualADSRdata1[i]=aPatchMemory[iPatchMemoryNDX++];
  8226  07A0  3070               	movlw	112
  8227  07A1  0020               	movlb	0	; select bank0
  8228  07A2  00A2               	movwf	??_updateModelFromPatchMemory
  8229  07A3  3023               	movlw	35
  8230  07A4  00A3               	movwf	??_updateModelFromPatchMemory+1
  8231  07A5  082B               	movf	updateModelFromPatchMemory@iPatchMemoryNDX,w
  8232  07A6  0722               	addwf	??_updateModelFromPatchMemory,w
  8233  07A7  0086               	movwf	6
  8234  07A8  082C               	movf	updateModelFromPatchMemory@iPatchMemoryNDX+1,w
  8235  07A9  3D23               	addwfc	??_updateModelFromPatchMemory+1,w
  8236  07AA  0087               	movwf	7
  8237  07AB  0801               	movf	1,w
  8238  07AC  00A4               	movwf	??_updateModelFromPatchMemory+2
  8239  07AD  0829               	movf	updateModelFromPatchMemory@i_1221,w
  8240  07AE  0721               	addwf	updateModelFromPatchMemory@dualADSRdata1,w
  8241  07AF  00A5               	movwf	??_updateModelFromPatchMemory+3
  8242  07B0  0825               	movf	??_updateModelFromPatchMemory+3,w
  8243  07B1  0086               	movwf	6
  8244  07B2  3001               	movlw	1	; select bank2/3
  8245  07B3  0087               	movwf	7
  8246  07B4  0824               	movf	??_updateModelFromPatchMemory+2,w
  8247  07B5  0081               	movwf	1
  8248  07B6  3001               	movlw	1
  8249  07B7  07AB               	addwf	updateModelFromPatchMemory@iPatchMemoryNDX,f
  8250  07B8  3000               	movlw	0
  8251  07B9  3DAC               	addwfc	updateModelFromPatchMemory@iPatchMemoryNDX+1,f
  8252  07BA  3001               	movlw	1
  8253  07BB  07A9               	addwf	updateModelFromPatchMemory@i_1221,f
  8254  07BC  3000               	movlw	0
  8255  07BD  3DAA               	addwfc	updateModelFromPatchMemory@i_1221+1,f
  8256  07BE  2F96               	goto	L4
  8257  07BF                     __end_of_updateModelFromPatchMemory:	
  8258                           
  8259                           	psect	text10
  8260  0B92                     __ptext10:	
  8261 ;; *************** function _initDAC528 *****************
  8262 ;; Defined at:
  8263 ;;		line 44 in file "VCAMIX_SPI_Master.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;		None
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;		None
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8281 ;;Total ram usage:        1 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    6
  8284 ;; This function calls:
  8285 ;;		_putByte
  8286 ;; This function is called by:
  8287 ;;		_main
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _initDAC528
  8293  0B92                     _initDAC528:	
  8294                           
  8295                           ;VCAMIX_SPI_Master.c: 49: PORTA &= 0x7F ;
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in _initDAC528: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8299  0B92  307F               	movlw	127
  8300  0B93  0020               	movlb	0	; select bank0
  8301  0B94  00D5               	movwf	??_initDAC528
  8302  0B95  0855               	movf	??_initDAC528,w
  8303  0B96  058C               	andwf	12,f	;volatile
  8304                           
  8305                           ;VCAMIX_SPI_Master.c: 51: putByte(0x00,0);
  8306  0B97  3000               	movlw	0
  8307  0B98  00CC               	movwf	putByte@clockPin
  8308  0B99  00CD               	movwf	putByte@clockPin+1
  8309  0B9A  3000               	movlw	0
  8310  0B9B  3185  250E  318B   	fcall	_putByte
  8311                           
  8312                           ;VCAMIX_SPI_Master.c: 53: putByte(0xFF,0);
  8313  0B9E  3000               	movlw	0
  8314  0B9F  0020               	movlb	0	; select bank0
  8315  0BA0  00CC               	movwf	putByte@clockPin
  8316  0BA1  00CD               	movwf	putByte@clockPin+1
  8317  0BA2  30FF               	movlw	255
  8318  0BA3  3185  250E         	fcall	_putByte
  8319                           
  8320                           ;VCAMIX_SPI_Master.c: 56: PORTA |= 0x80 ;
  8321  0BA5  0020               	movlb	0	; select bank0
  8322  0BA6  178C               	bsf	12,7	;volatile
  8323  0BA7  0008               	return
  8324  0BA8                     __end_of_initDAC528:	
  8325                           
  8326                           	psect	text11
  8327  050E                     __ptext11:	
  8328 ;; *************** function _putByte *****************
  8329 ;; Defined at:
  8330 ;;		line 14 in file "VCAMIX_SPI_Master.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  data            1    wreg     unsigned char 
  8333 ;;  clockPin        2   44[BANK0 ] int 
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;  data            1   50[BANK0 ] unsigned char 
  8336 ;;  i               1   52[BANK0 ] unsigned char 
  8337 ;;  mask            1   51[BANK0 ] unsigned char 
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8347 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8348 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8350 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8351 ;;Total ram usage:        9 bytes
  8352 ;; Hardware stack levels used:    1
  8353 ;; Hardware stack levels required when called:    5
  8354 ;; This function calls:
  8355 ;;		___awtoft
  8356 ;;		___ftmul
  8357 ;;		___fttol
  8358 ;; This function is called by:
  8359 ;;		_initDAC528
  8360 ;;		_writeDAC528
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           
  8365                           ;psect for function _putByte
  8366  050E                     _putByte:	
  8367                           
  8368                           ;incstack = 0
  8369                           ; Regs used in _putByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8370                           ;putByte@data stored from wreg
  8371  050E  0020               	movlb	0	; select bank0
  8372  050F  00D2               	movwf	putByte@data
  8373                           
  8374                           ;VCAMIX_SPI_Master.c: 15: uint8_t i = 8;
  8375  0510  3008               	movlw	8
  8376  0511  00CE               	movwf	??_putByte
  8377  0512  084E               	movf	??_putByte,w
  8378  0513  00D4               	movwf	putByte@i
  8379  0514                     l771:	
  8380                           ;VCAMIX_SPI_Master.c: 16: uint8_t mask;
  8381                           ;VCAMIX_SPI_Master.c: 17: while(i > 0) {
  8382                           
  8383  0514  0854               	movf	putByte@i,w
  8384  0515  1903               	btfsc	3,2
  8385  0516  0008               	return
  8386                           
  8387                           ;VCAMIX_SPI_Master.c: 18: mask = 0x01 << (i - 1);
  8388  0517  3001               	movlw	1
  8389  0518  00CE               	movwf	??_putByte
  8390  0519  0854               	movf	putByte@i,w
  8391  051A  3EFF               	addlw	-1
  8392  051B  0A89               	incf	9,f
  8393  051C  2D1E               	goto	u2394
  8394  051D                     u2395:	
  8395  051D  35CE               	lslf	??_putByte,f
  8396  051E                     u2394:	
  8397  051E  0B89               	decfsz	9,f
  8398  051F  2D1D               	goto	u2395
  8399  0520  084E               	movf	??_putByte,w
  8400  0521  00CF               	movwf	??_putByte+1
  8401  0522  084F               	movf	??_putByte+1,w
  8402  0523  00D3               	movwf	putByte@mask
  8403                           
  8404                           ;VCAMIX_SPI_Master.c: 20: PORTB &= 0xBF ;
  8405  0524  30BF               	movlw	191
  8406  0525  00CE               	movwf	??_putByte
  8407  0526  084E               	movf	??_putByte,w
  8408  0527  058D               	andwf	13,f	;volatile
  8409                           
  8410                           ;VCAMIX_SPI_Master.c: 22: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8411  0528  3018               	movlw	low (_clockMicroTime| (0+32768))
  8412  0529  0084               	movwf	4
  8413  052A  3090               	movlw	high (_clockMicroTime| (0+32768))
  8414  052B  0085               	movwf	5
  8415  052C  3F00               	moviw [0]fsr0
  8416  052D  00A8               	movwf	___awtoft@c
  8417  052E  3F01               	moviw [1]fsr0
  8418  052F  00A9               	movwf	___awtoft@c+1
  8419  0530  318C  2481  3185   	fcall	___awtoft
  8420  0533  0020               	movlb	0	; select bank0
  8421  0534  0828               	movf	?___awtoft,w
  8422  0535  00B1               	movwf	___ftmul@f2
  8423  0536  0829               	movf	?___awtoft+1,w
  8424  0537  00B2               	movwf	___ftmul@f2+1
  8425  0538  082A               	movf	?___awtoft+2,w
  8426  0539  00B3               	movwf	___ftmul@f2+2
  8427  053A  3000               	movlw	0
  8428  053B  00AE               	movwf	___ftmul@f1
  8429  053C  3000               	movlw	0
  8430  053D  00AF               	movwf	___ftmul@f1+1
  8431  053E  3041               	movlw	65
  8432  053F  00B0               	movwf	___ftmul@f1+2
  8433  0540  3185  25C3  3185   	fcall	___ftmul
  8434  0543  0020               	movlb	0	; select bank0
  8435  0544  082E               	movf	?___ftmul,w
  8436  0545  00BE               	movwf	___fttol@f1
  8437  0546  082F               	movf	?___ftmul+1,w
  8438  0547  00BF               	movwf	___fttol@f1+1
  8439  0548  0830               	movf	?___ftmul+2,w
  8440  0549  00C0               	movwf	___fttol@f1+2
  8441  054A  318E  26DF  3185   	fcall	___fttol
  8442  054D  0020               	movlb	0	; select bank0
  8443  054E  083E               	movf	?___fttol,w
  8444  054F  00CE               	movwf	??_putByte
  8445  0550  083F               	movf	?___fttol+1,w
  8446  0551  00CF               	movwf	??_putByte+1
  8447  0552  0840               	movf	?___fttol+2,w
  8448  0553  00D0               	movwf	??_putByte+2
  8449  0554  0841               	movf	?___fttol+3,w
  8450  0555  00D1               	movwf	??_putByte+3
  8451                           
  8452                           ;VCAMIX_SPI_Master.c: 23: if (data & mask){
  8453  0556  0020               	movlb	0	; select bank0
  8454  0557  0852               	movf	putByte@data,w
  8455  0558  0553               	andwf	putByte@mask,w
  8456  0559  1903               	btfsc	3,2
  8457  055A  2D5D               	goto	l2950
  8458                           
  8459                           ;VCAMIX_SPI_Master.c: 25: PORTB |= 0x80 ;
  8460  055B  178D               	bsf	13,7	;volatile
  8461                           
  8462                           ;VCAMIX_SPI_Master.c: 26: }else{
  8463  055C  2D61               	goto	l2952
  8464  055D                     l2950:	
  8465                           
  8466                           ;VCAMIX_SPI_Master.c: 28: PORTB &= 0x7F ;
  8467  055D  307F               	movlw	127
  8468  055E  00CE               	movwf	??_putByte
  8469  055F  084E               	movf	??_putByte,w
  8470  0560  058D               	andwf	13,f	;volatile
  8471  0561                     l2952:	
  8472                           
  8473                           ;VCAMIX_SPI_Master.c: 29: }
  8474                           ;VCAMIX_SPI_Master.c: 31: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8475  0561  3018               	movlw	low (_clockMicroTime| (0+32768))
  8476  0562  0084               	movwf	4
  8477  0563  3090               	movlw	high (_clockMicroTime| (0+32768))
  8478  0564  0085               	movwf	5
  8479  0565  3F00               	moviw [0]fsr0
  8480  0566  00A8               	movwf	___awtoft@c
  8481  0567  3F01               	moviw [1]fsr0
  8482  0568  00A9               	movwf	___awtoft@c+1
  8483  0569  318C  2481  3185   	fcall	___awtoft
  8484  056C  0020               	movlb	0	; select bank0
  8485  056D  0828               	movf	?___awtoft,w
  8486  056E  00B1               	movwf	___ftmul@f2
  8487  056F  0829               	movf	?___awtoft+1,w
  8488  0570  00B2               	movwf	___ftmul@f2+1
  8489  0571  082A               	movf	?___awtoft+2,w
  8490  0572  00B3               	movwf	___ftmul@f2+2
  8491  0573  3000               	movlw	0
  8492  0574  00AE               	movwf	___ftmul@f1
  8493  0575  3000               	movlw	0
  8494  0576  00AF               	movwf	___ftmul@f1+1
  8495  0577  3041               	movlw	65
  8496  0578  00B0               	movwf	___ftmul@f1+2
  8497  0579  3185  25C3  3185   	fcall	___ftmul
  8498  057C  0020               	movlb	0	; select bank0
  8499  057D  082E               	movf	?___ftmul,w
  8500  057E  00BE               	movwf	___fttol@f1
  8501  057F  082F               	movf	?___ftmul+1,w
  8502  0580  00BF               	movwf	___fttol@f1+1
  8503  0581  0830               	movf	?___ftmul+2,w
  8504  0582  00C0               	movwf	___fttol@f1+2
  8505  0583  318E  26DF  3185   	fcall	___fttol
  8506  0586  0020               	movlb	0	; select bank0
  8507  0587  083E               	movf	?___fttol,w
  8508  0588  00CE               	movwf	??_putByte
  8509  0589  083F               	movf	?___fttol+1,w
  8510  058A  00CF               	movwf	??_putByte+1
  8511  058B  0840               	movf	?___fttol+2,w
  8512  058C  00D0               	movwf	??_putByte+2
  8513  058D  0841               	movf	?___fttol+3,w
  8514  058E  00D1               	movwf	??_putByte+3
  8515                           
  8516                           ;VCAMIX_SPI_Master.c: 33: PORTB |= 0x40 ;
  8517  058F  0020               	movlb	0	; select bank0
  8518  0590  170D               	bsf	13,6	;volatile
  8519                           
  8520                           ;VCAMIX_SPI_Master.c: 35: _delay((unsigned long)((clockMicroTime)*(32000000/4000000.0)))
      +                          ;
  8521  0591  3018               	movlw	low (_clockMicroTime| (0+32768))
  8522  0592  0084               	movwf	4
  8523  0593  3090               	movlw	high (_clockMicroTime| (0+32768))
  8524  0594  0085               	movwf	5
  8525  0595  3F00               	moviw [0]fsr0
  8526  0596  00A8               	movwf	___awtoft@c
  8527  0597  3F01               	moviw [1]fsr0
  8528  0598  00A9               	movwf	___awtoft@c+1
  8529  0599  318C  2481  3185   	fcall	___awtoft
  8530  059C  0020               	movlb	0	; select bank0
  8531  059D  0828               	movf	?___awtoft,w
  8532  059E  00B1               	movwf	___ftmul@f2
  8533  059F  0829               	movf	?___awtoft+1,w
  8534  05A0  00B2               	movwf	___ftmul@f2+1
  8535  05A1  082A               	movf	?___awtoft+2,w
  8536  05A2  00B3               	movwf	___ftmul@f2+2
  8537  05A3  3000               	movlw	0
  8538  05A4  00AE               	movwf	___ftmul@f1
  8539  05A5  3000               	movlw	0
  8540  05A6  00AF               	movwf	___ftmul@f1+1
  8541  05A7  3041               	movlw	65
  8542  05A8  00B0               	movwf	___ftmul@f1+2
  8543  05A9  3185  25C3  3185   	fcall	___ftmul
  8544  05AC  0020               	movlb	0	; select bank0
  8545  05AD  082E               	movf	?___ftmul,w
  8546  05AE  00BE               	movwf	___fttol@f1
  8547  05AF  082F               	movf	?___ftmul+1,w
  8548  05B0  00BF               	movwf	___fttol@f1+1
  8549  05B1  0830               	movf	?___ftmul+2,w
  8550  05B2  00C0               	movwf	___fttol@f1+2
  8551  05B3  318E  26DF  3185   	fcall	___fttol
  8552  05B6  0020               	movlb	0	; select bank0
  8553  05B7  083E               	movf	?___fttol,w
  8554  05B8  00CE               	movwf	??_putByte
  8555  05B9  083F               	movf	?___fttol+1,w
  8556  05BA  00CF               	movwf	??_putByte+1
  8557  05BB  0840               	movf	?___fttol+2,w
  8558  05BC  00D0               	movwf	??_putByte+2
  8559  05BD  0841               	movf	?___fttol+3,w
  8560  05BE  00D1               	movwf	??_putByte+3
  8561                           
  8562                           ;VCAMIX_SPI_Master.c: 36: --i;
  8563  05BF  3001               	movlw	1
  8564  05C0  0020               	movlb	0	; select bank0
  8565  05C1  02D4               	subwf	putByte@i,f
  8566  05C2  2D14               	goto	l771
  8567  05C3                     __end_of_putByte:	
  8568                           
  8569                           	psect	text12
  8570  0EDF                     __ptext12:	
  8571 ;; *************** function ___fttol *****************
  8572 ;; Defined at:
  8573 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  f1              3   30[BANK0 ] float 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  lval            4   39[BANK0 ] unsigned long 
  8578 ;;  exp1            1   43[BANK0 ] unsigned char 
  8579 ;;  sign1           1   38[BANK0 ] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  4   30[BANK0 ] long 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;Total ram usage:       14 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:    3
  8596 ;; This function calls:
  8597 ;;		Nothing
  8598 ;; This function is called by:
  8599 ;;		_main
  8600 ;;		_putByte
  8601 ;;		_LED7SegDisplayValue
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           
  8606                           ;psect for function ___fttol
  8607  0EDF                     ___fttol:	
  8608                           
  8609                           ;incstack = 0
  8610                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8611  0EDF  0020               	movlb	0	; select bank0
  8612  0EE0  083E               	movf	___fttol@f1,w
  8613  0EE1  00C2               	movwf	??___fttol
  8614  0EE2  083F               	movf	___fttol@f1+1,w
  8615  0EE3  00C3               	movwf	??___fttol+1
  8616  0EE4  0840               	movf	___fttol@f1+2,w
  8617  0EE5  00C4               	movwf	??___fttol+2
  8618  0EE6  1003               	clrc
  8619  0EE7  0D43               	rlf	??___fttol+1,w
  8620  0EE8  0D44               	rlf	??___fttol+2,w
  8621  0EE9  00C5               	movwf	??___fttol+3
  8622  0EEA  0845               	movf	??___fttol+3,w
  8623  0EEB  00CB               	movwf	___fttol@exp1
  8624  0EEC  084B               	movf	___fttol@exp1,w
  8625  0EED  1D03               	btfss	3,2
  8626  0EEE  2EF8               	goto	l2892
  8627  0EEF  3000               	movlw	0
  8628  0EF0  00C1               	movwf	?___fttol+3
  8629  0EF1  3000               	movlw	0
  8630  0EF2  00C0               	movwf	?___fttol+2
  8631  0EF3  3000               	movlw	0
  8632  0EF4  00BF               	movwf	?___fttol+1
  8633  0EF5  3000               	movlw	0
  8634  0EF6  00BE               	movwf	?___fttol
  8635  0EF7  0008               	return
  8636  0EF8                     l2892:	
  8637  0EF8  083E               	movf	___fttol@f1,w
  8638  0EF9  00C2               	movwf	??___fttol
  8639  0EFA  083F               	movf	___fttol@f1+1,w
  8640  0EFB  00C3               	movwf	??___fttol+1
  8641  0EFC  0840               	movf	___fttol@f1+2,w
  8642  0EFD  00C4               	movwf	??___fttol+2
  8643  0EFE  3017               	movlw	23
  8644  0EFF                     u2285:	
  8645  0EFF  36C4               	lsrf	??___fttol+2,f
  8646  0F00  0CC3               	rrf	??___fttol+1,f
  8647  0F01  0CC2               	rrf	??___fttol,f
  8648  0F02  0B89               	decfsz	9,f
  8649  0F03  2EFF               	goto	u2285
  8650  0F04  0842               	movf	??___fttol,w
  8651  0F05  00C5               	movwf	??___fttol+3
  8652  0F06  0845               	movf	??___fttol+3,w
  8653  0F07  00C6               	movwf	___fttol@sign1
  8654  0F08  17BF               	bsf	___fttol@f1+1,7
  8655  0F09  30FF               	movlw	255
  8656  0F0A  05BE               	andwf	___fttol@f1,f
  8657  0F0B  30FF               	movlw	255
  8658  0F0C  05BF               	andwf	___fttol@f1+1,f
  8659  0F0D  3000               	movlw	0
  8660  0F0E  05C0               	andwf	___fttol@f1+2,f
  8661  0F0F  083E               	movf	___fttol@f1,w
  8662  0F10  00C7               	movwf	___fttol@lval
  8663  0F11  083F               	movf	___fttol@f1+1,w
  8664  0F12  00C8               	movwf	___fttol@lval+1
  8665  0F13  0840               	movf	___fttol@f1+2,w
  8666  0F14  00C9               	movwf	___fttol@lval+2
  8667  0F15  01CA               	clrf	___fttol@lval+3
  8668  0F16  308E               	movlw	142
  8669  0F17  02CB               	subwf	___fttol@exp1,f
  8670  0F18  1FCB               	btfss	___fttol@exp1,7
  8671  0F19  2F36               	goto	l2912
  8672  0F1A  084B               	movf	___fttol@exp1,w
  8673  0F1B  3A80               	xorlw	128
  8674  0F1C  3E8F               	addlw	143
  8675  0F1D  1803               	skipnc
  8676  0F1E  2F28               	goto	l2910
  8677  0F1F  3000               	movlw	0
  8678  0F20  00C1               	movwf	?___fttol+3
  8679  0F21  3000               	movlw	0
  8680  0F22  00C0               	movwf	?___fttol+2
  8681  0F23  3000               	movlw	0
  8682  0F24  00BF               	movwf	?___fttol+1
  8683  0F25  3000               	movlw	0
  8684  0F26  00BE               	movwf	?___fttol
  8685  0F27  0008               	return
  8686  0F28                     l2910:	
  8687  0F28  3001               	movlw	1
  8688  0F29                     u2315:	
  8689  0F29  36CA               	lsrf	___fttol@lval+3,f
  8690  0F2A  0CC9               	rrf	___fttol@lval+2,f
  8691  0F2B  0CC8               	rrf	___fttol@lval+1,f
  8692  0F2C  0CC7               	rrf	___fttol@lval,f
  8693  0F2D  0B89               	decfsz	9,f
  8694  0F2E  2F29               	goto	u2315
  8695  0F2F  3001               	movlw	1
  8696  0F30  00C2               	movwf	??___fttol
  8697  0F31  0842               	movf	??___fttol,w
  8698  0F32  07CB               	addwf	___fttol@exp1,f
  8699  0F33  1903               	btfsc	3,2
  8700  0F34  2F4F               	goto	l2920
  8701  0F35  2F28               	goto	l2910
  8702  0F36                     l2912:	
  8703  0F36  3018               	movlw	24
  8704  0F37  024B               	subwf	___fttol@exp1,w
  8705  0F38  1C03               	skipc
  8706  0F39  2F4C               	goto	l1198
  8707  0F3A  3000               	movlw	0
  8708  0F3B  00C1               	movwf	?___fttol+3
  8709  0F3C  3000               	movlw	0
  8710  0F3D  00C0               	movwf	?___fttol+2
  8711  0F3E  3000               	movlw	0
  8712  0F3F  00BF               	movwf	?___fttol+1
  8713  0F40  3000               	movlw	0
  8714  0F41  00BE               	movwf	?___fttol
  8715  0F42  0008               	return
  8716  0F43                     l2918:	
  8717  0F43  3001               	movlw	1
  8718  0F44                     u2345:	
  8719  0F44  35C7               	lslf	___fttol@lval,f
  8720  0F45  0DC8               	rlf	___fttol@lval+1,f
  8721  0F46  0DC9               	rlf	___fttol@lval+2,f
  8722  0F47  0DCA               	rlf	___fttol@lval+3,f
  8723  0F48  0B89               	decfsz	9,f
  8724  0F49  2F44               	goto	u2345
  8725  0F4A  3001               	movlw	1
  8726  0F4B  02CB               	subwf	___fttol@exp1,f
  8727  0F4C                     l1198:	
  8728  0F4C  084B               	movf	___fttol@exp1,w
  8729  0F4D  1D03               	btfss	3,2
  8730  0F4E  2F43               	goto	l2918
  8731  0F4F                     l2920:	
  8732  0F4F  0846               	movf	___fttol@sign1,w
  8733  0F50  1903               	btfsc	3,2
  8734  0F51  2F5D               	goto	l2924
  8735  0F52  09C7               	comf	___fttol@lval,f
  8736  0F53  09C8               	comf	___fttol@lval+1,f
  8737  0F54  09C9               	comf	___fttol@lval+2,f
  8738  0F55  09CA               	comf	___fttol@lval+3,f
  8739  0F56  0AC7               	incf	___fttol@lval,f
  8740  0F57  1903               	skipnz
  8741  0F58  0AC8               	incf	___fttol@lval+1,f
  8742  0F59  1903               	skipnz
  8743  0F5A  0AC9               	incf	___fttol@lval+2,f
  8744  0F5B  1903               	skipnz
  8745  0F5C  0ACA               	incf	___fttol@lval+3,f
  8746  0F5D                     l2924:	
  8747  0F5D  084A               	movf	___fttol@lval+3,w
  8748  0F5E  00C1               	movwf	?___fttol+3
  8749  0F5F  0849               	movf	___fttol@lval+2,w
  8750  0F60  00C0               	movwf	?___fttol+2
  8751  0F61  0848               	movf	___fttol@lval+1,w
  8752  0F62  00BF               	movwf	?___fttol+1
  8753  0F63  0847               	movf	___fttol@lval,w
  8754  0F64  00BE               	movwf	?___fttol
  8755  0F65  0008               	return
  8756  0F66                     __end_of___fttol:	
  8757                           
  8758                           	psect	text13
  8759  05C3                     __ptext13:	
  8760 ;; *************** function ___ftmul *****************
  8761 ;; Defined at:
  8762 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  f1              3   14[BANK0 ] float 
  8765 ;;  f2              3   17[BANK0 ] float 
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  8768 ;;  sign            1   29[BANK0 ] unsigned char 
  8769 ;;  cntr            1   28[BANK0 ] unsigned char 
  8770 ;;  exp             1   24[BANK0 ] unsigned char 
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  3   14[BANK0 ] float 
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0, pclath, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8781 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8782 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8783 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;Total ram usage:       16 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    4
  8787 ;; This function calls:
  8788 ;;		___ftpack
  8789 ;; This function is called by:
  8790 ;;		_putByte
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           
  8795                           ;psect for function ___ftmul
  8796  05C3                     ___ftmul:	
  8797                           
  8798                           ;incstack = 0
  8799                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8800  05C3  0020               	movlb	0	; select bank0
  8801  05C4  082E               	movf	___ftmul@f1,w
  8802  05C5  00B4               	movwf	??___ftmul
  8803  05C6  082F               	movf	___ftmul@f1+1,w
  8804  05C7  00B5               	movwf	??___ftmul+1
  8805  05C8  0830               	movf	___ftmul@f1+2,w
  8806  05C9  00B6               	movwf	??___ftmul+2
  8807  05CA  1003               	clrc
  8808  05CB  0D35               	rlf	??___ftmul+1,w
  8809  05CC  0D36               	rlf	??___ftmul+2,w
  8810  05CD  00B7               	movwf	??___ftmul+3
  8811  05CE  0837               	movf	??___ftmul+3,w
  8812  05CF  00B8               	movwf	___ftmul@exp
  8813  05D0  0838               	movf	___ftmul@exp,w
  8814  05D1  1D03               	btfss	3,2
  8815  05D2  2DDA               	goto	l2842
  8816  05D3  3000               	movlw	0
  8817  05D4  00AE               	movwf	?___ftmul
  8818  05D5  3000               	movlw	0
  8819  05D6  00AF               	movwf	?___ftmul+1
  8820  05D7  3000               	movlw	0
  8821  05D8  00B0               	movwf	?___ftmul+2
  8822  05D9  0008               	return
  8823  05DA                     l2842:	
  8824  05DA  0831               	movf	___ftmul@f2,w
  8825  05DB  00B4               	movwf	??___ftmul
  8826  05DC  0832               	movf	___ftmul@f2+1,w
  8827  05DD  00B5               	movwf	??___ftmul+1
  8828  05DE  0833               	movf	___ftmul@f2+2,w
  8829  05DF  00B6               	movwf	??___ftmul+2
  8830  05E0  1003               	clrc
  8831  05E1  0D35               	rlf	??___ftmul+1,w
  8832  05E2  0D36               	rlf	??___ftmul+2,w
  8833  05E3  00B7               	movwf	??___ftmul+3
  8834  05E4  0837               	movf	??___ftmul+3,w
  8835  05E5  00BD               	movwf	___ftmul@sign
  8836  05E6  083D               	movf	___ftmul@sign,w
  8837  05E7  1D03               	btfss	3,2
  8838  05E8  2DF0               	goto	l2848
  8839  05E9  3000               	movlw	0
  8840  05EA  00AE               	movwf	?___ftmul
  8841  05EB  3000               	movlw	0
  8842  05EC  00AF               	movwf	?___ftmul+1
  8843  05ED  3000               	movlw	0
  8844  05EE  00B0               	movwf	?___ftmul+2
  8845  05EF  0008               	return
  8846  05F0                     l2848:	
  8847  05F0  083D               	movf	___ftmul@sign,w
  8848  05F1  3E7B               	addlw	123
  8849  05F2  00B4               	movwf	??___ftmul
  8850  05F3  0834               	movf	??___ftmul,w
  8851  05F4  07B8               	addwf	___ftmul@exp,f
  8852  05F5  082E               	movf	___ftmul@f1,w
  8853  05F6  00B4               	movwf	??___ftmul
  8854  05F7  082F               	movf	___ftmul@f1+1,w
  8855  05F8  00B5               	movwf	??___ftmul+1
  8856  05F9  0830               	movf	___ftmul@f1+2,w
  8857  05FA  00B6               	movwf	??___ftmul+2
  8858  05FB  3010               	movlw	16
  8859  05FC                     u2175:	
  8860  05FC  36B6               	lsrf	??___ftmul+2,f
  8861  05FD  0CB5               	rrf	??___ftmul+1,f
  8862  05FE  0CB4               	rrf	??___ftmul,f
  8863  05FF  0B89               	decfsz	9,f
  8864  0600  2DFC               	goto	u2175
  8865  0601  0834               	movf	??___ftmul,w
  8866  0602  00B7               	movwf	??___ftmul+3
  8867  0603  0837               	movf	??___ftmul+3,w
  8868  0604  00BD               	movwf	___ftmul@sign
  8869  0605  0831               	movf	___ftmul@f2,w
  8870  0606  00B4               	movwf	??___ftmul
  8871  0607  0832               	movf	___ftmul@f2+1,w
  8872  0608  00B5               	movwf	??___ftmul+1
  8873  0609  0833               	movf	___ftmul@f2+2,w
  8874  060A  00B6               	movwf	??___ftmul+2
  8875  060B  3010               	movlw	16
  8876  060C                     u2185:	
  8877  060C  36B6               	lsrf	??___ftmul+2,f
  8878  060D  0CB5               	rrf	??___ftmul+1,f
  8879  060E  0CB4               	rrf	??___ftmul,f
  8880  060F  0B89               	decfsz	9,f
  8881  0610  2E0C               	goto	u2185
  8882  0611  0834               	movf	??___ftmul,w
  8883  0612  00B7               	movwf	??___ftmul+3
  8884  0613  0837               	movf	??___ftmul+3,w
  8885  0614  06BD               	xorwf	___ftmul@sign,f
  8886  0615  3080               	movlw	128
  8887  0616  00B4               	movwf	??___ftmul
  8888  0617  0834               	movf	??___ftmul,w
  8889  0618  05BD               	andwf	___ftmul@sign,f
  8890  0619  17AF               	bsf	___ftmul@f1+1,7
  8891  061A  17B2               	bsf	___ftmul@f2+1,7
  8892  061B  30FF               	movlw	255
  8893  061C  05B1               	andwf	___ftmul@f2,f
  8894  061D  30FF               	movlw	255
  8895  061E  05B2               	andwf	___ftmul@f2+1,f
  8896  061F  3000               	movlw	0
  8897  0620  05B3               	andwf	___ftmul@f2+2,f
  8898  0621  3000               	movlw	0
  8899  0622  00B9               	movwf	___ftmul@f3_as_product
  8900  0623  3000               	movlw	0
  8901  0624  00BA               	movwf	___ftmul@f3_as_product+1
  8902  0625  3000               	movlw	0
  8903  0626  00BB               	movwf	___ftmul@f3_as_product+2
  8904  0627  3007               	movlw	7
  8905  0628  00B4               	movwf	??___ftmul
  8906  0629  0834               	movf	??___ftmul,w
  8907  062A  00BC               	movwf	___ftmul@cntr
  8908  062B                     l2860:	
  8909  062B  1C2E               	btfss	___ftmul@f1,0
  8910  062C  2E33               	goto	l2864
  8911  062D  0831               	movf	___ftmul@f2,w
  8912  062E  07B9               	addwf	___ftmul@f3_as_product,f
  8913  062F  0832               	movf	___ftmul@f2+1,w
  8914  0630  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8915  0631  0833               	movf	___ftmul@f2+2,w
  8916  0632  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8917  0633                     l2864:	
  8918  0633  3001               	movlw	1
  8919  0634                     u2205:	
  8920  0634  36B0               	lsrf	___ftmul@f1+2,f
  8921  0635  0CAF               	rrf	___ftmul@f1+1,f
  8922  0636  0CAE               	rrf	___ftmul@f1,f
  8923  0637  0B89               	decfsz	9,f
  8924  0638  2E34               	goto	u2205
  8925  0639  3001               	movlw	1
  8926  063A                     u2215:	
  8927  063A  35B1               	lslf	___ftmul@f2,f
  8928  063B  0DB2               	rlf	___ftmul@f2+1,f
  8929  063C  0DB3               	rlf	___ftmul@f2+2,f
  8930  063D  0B89               	decfsz	9,f
  8931  063E  2E3A               	goto	u2215
  8932  063F  3001               	movlw	1
  8933  0640  02BC               	subwf	___ftmul@cntr,f
  8934  0641  1D03               	btfss	3,2
  8935  0642  2E2B               	goto	l2860
  8936  0643  3009               	movlw	9
  8937  0644  00B4               	movwf	??___ftmul
  8938  0645  0834               	movf	??___ftmul,w
  8939  0646  00BC               	movwf	___ftmul@cntr
  8940  0647                     l2872:	
  8941  0647  1C2E               	btfss	___ftmul@f1,0
  8942  0648  2E4F               	goto	l2876
  8943  0649  0831               	movf	___ftmul@f2,w
  8944  064A  07B9               	addwf	___ftmul@f3_as_product,f
  8945  064B  0832               	movf	___ftmul@f2+1,w
  8946  064C  3DBA               	addwfc	___ftmul@f3_as_product+1,f
  8947  064D  0833               	movf	___ftmul@f2+2,w
  8948  064E  3DBB               	addwfc	___ftmul@f3_as_product+2,f
  8949  064F                     l2876:	
  8950  064F  3001               	movlw	1
  8951  0650                     u2245:	
  8952  0650  36B0               	lsrf	___ftmul@f1+2,f
  8953  0651  0CAF               	rrf	___ftmul@f1+1,f
  8954  0652  0CAE               	rrf	___ftmul@f1,f
  8955  0653  0B89               	decfsz	9,f
  8956  0654  2E50               	goto	u2245
  8957  0655  3001               	movlw	1
  8958  0656                     u2255:	
  8959  0656  36BB               	lsrf	___ftmul@f3_as_product+2,f
  8960  0657  0CBA               	rrf	___ftmul@f3_as_product+1,f
  8961  0658  0CB9               	rrf	___ftmul@f3_as_product,f
  8962  0659  0B89               	decfsz	9,f
  8963  065A  2E56               	goto	u2255
  8964  065B  3001               	movlw	1
  8965  065C  02BC               	subwf	___ftmul@cntr,f
  8966  065D  1D03               	btfss	3,2
  8967  065E  2E47               	goto	l2872
  8968  065F  0839               	movf	___ftmul@f3_as_product,w
  8969  0660  00A0               	movwf	___ftpack@arg
  8970  0661  083A               	movf	___ftmul@f3_as_product+1,w
  8971  0662  00A1               	movwf	___ftpack@arg+1
  8972  0663  083B               	movf	___ftmul@f3_as_product+2,w
  8973  0664  00A2               	movwf	___ftpack@arg+2
  8974  0665  0838               	movf	___ftmul@exp,w
  8975  0666  00B4               	movwf	??___ftmul
  8976  0667  0834               	movf	??___ftmul,w
  8977  0668  00A3               	movwf	___ftpack@exp
  8978  0669  083D               	movf	___ftmul@sign,w
  8979  066A  00B5               	movwf	??___ftmul+1
  8980  066B  0835               	movf	??___ftmul+1,w
  8981  066C  00A4               	movwf	___ftpack@sign
  8982  066D  318E  2601         	fcall	___ftpack
  8983  066F  0020               	movlb	0	; select bank0
  8984  0670  0820               	movf	?___ftpack,w
  8985  0671  00AE               	movwf	?___ftmul
  8986  0672  0821               	movf	?___ftpack+1,w
  8987  0673  00AF               	movwf	?___ftmul+1
  8988  0674  0822               	movf	?___ftpack+2,w
  8989  0675  00B0               	movwf	?___ftmul+2
  8990  0676  0008               	return
  8991  0677                     __end_of___ftmul:	
  8992                           
  8993                           	psect	text14
  8994  0C81                     __ptext14:	
  8995 ;; *************** function ___awtoft *****************
  8996 ;; Defined at:
  8997 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;  c               2    8[BANK0 ] int 
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  sign            1   13[BANK0 ] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  3    8[BANK0 ] float 
  9004 ;; Registers used:
  9005 ;;		wreg, status,2, status,0, pclath, cstack
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9011 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9014 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9015 ;;Total ram usage:        6 bytes
  9016 ;; Hardware stack levels used:    1
  9017 ;; Hardware stack levels required when called:    4
  9018 ;; This function calls:
  9019 ;;		___ftpack
  9020 ;; This function is called by:
  9021 ;;		_main
  9022 ;;		_putByte
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           
  9027                           ;psect for function ___awtoft
  9028  0C81                     ___awtoft:	
  9029                           
  9030                           ;incstack = 0
  9031                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9032  0C81  0020               	movlb	0	; select bank0
  9033  0C82  01AD               	clrf	___awtoft@sign
  9034  0C83  1FA9               	btfss	___awtoft@c+1,7
  9035  0C84  2C8C               	goto	l2832
  9036  0C85  09A8               	comf	___awtoft@c,f
  9037  0C86  09A9               	comf	___awtoft@c+1,f
  9038  0C87  0AA8               	incf	___awtoft@c,f
  9039  0C88  1903               	skipnz
  9040  0C89  0AA9               	incf	___awtoft@c+1,f
  9041  0C8A  01AD               	clrf	___awtoft@sign
  9042  0C8B  0AAD               	incf	___awtoft@sign,f
  9043  0C8C                     l2832:	
  9044  0C8C  0828               	movf	___awtoft@c,w
  9045  0C8D  00A0               	movwf	___ftpack@arg
  9046  0C8E  0829               	movf	___awtoft@c+1,w
  9047  0C8F  00A1               	movwf	___ftpack@arg+1
  9048  0C90  01A2               	clrf	___ftpack@arg+2
  9049  0C91  308E               	movlw	142
  9050  0C92  00AB               	movwf	??___awtoft
  9051  0C93  082B               	movf	??___awtoft,w
  9052  0C94  00A3               	movwf	___ftpack@exp
  9053  0C95  082D               	movf	___awtoft@sign,w
  9054  0C96  00AC               	movwf	??___awtoft+1
  9055  0C97  082C               	movf	??___awtoft+1,w
  9056  0C98  00A4               	movwf	___ftpack@sign
  9057  0C99  318E  2601         	fcall	___ftpack
  9058  0C9B  0020               	movlb	0	; select bank0
  9059  0C9C  0820               	movf	?___ftpack,w
  9060  0C9D  00A8               	movwf	?___awtoft
  9061  0C9E  0821               	movf	?___ftpack+1,w
  9062  0C9F  00A9               	movwf	?___awtoft+1
  9063  0CA0  0822               	movf	?___ftpack+2,w
  9064  0CA1  00AA               	movwf	?___awtoft+2
  9065  0CA2  0008               	return
  9066  0CA3                     __end_of___awtoft:	
  9067                           
  9068                           	psect	text15
  9069  0677                     __ptext15:	
  9070 ;; *************** function ___ftdiv *****************
  9071 ;; Defined at:
  9072 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  f2              3   14[BANK0 ] float 
  9075 ;;  f1              3   17[BANK0 ] float 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  f3              3   25[BANK0 ] float 
  9078 ;;  sign            1   29[BANK0 ] unsigned char 
  9079 ;;  exp             1   28[BANK0 ] unsigned char 
  9080 ;;  cntr            1   24[BANK0 ] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  3   14[BANK0 ] float 
  9083 ;; Registers used:
  9084 ;;		wreg, status,2, status,0, pclath, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9090 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;Total ram usage:       16 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    4
  9097 ;; This function calls:
  9098 ;;		___ftpack
  9099 ;; This function is called by:
  9100 ;;		_main
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           
  9105                           ;psect for function ___ftdiv
  9106  0677                     ___ftdiv:	
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9110  0677  0020               	movlb	0	; select bank0
  9111  0678  0831               	movf	___ftdiv@f1,w
  9112  0679  00B4               	movwf	??___ftdiv
  9113  067A  0832               	movf	___ftdiv@f1+1,w
  9114  067B  00B5               	movwf	??___ftdiv+1
  9115  067C  0833               	movf	___ftdiv@f1+2,w
  9116  067D  00B6               	movwf	??___ftdiv+2
  9117  067E  1003               	clrc
  9118  067F  0D35               	rlf	??___ftdiv+1,w
  9119  0680  0D36               	rlf	??___ftdiv+2,w
  9120  0681  00B7               	movwf	??___ftdiv+3
  9121  0682  0837               	movf	??___ftdiv+3,w
  9122  0683  00BC               	movwf	___ftdiv@exp
  9123  0684  083C               	movf	___ftdiv@exp,w
  9124  0685  1D03               	btfss	3,2
  9125  0686  2E8E               	goto	l3580
  9126  0687  3000               	movlw	0
  9127  0688  00AE               	movwf	?___ftdiv
  9128  0689  3000               	movlw	0
  9129  068A  00AF               	movwf	?___ftdiv+1
  9130  068B  3000               	movlw	0
  9131  068C  00B0               	movwf	?___ftdiv+2
  9132  068D  0008               	return
  9133  068E                     l3580:	
  9134  068E  082E               	movf	___ftdiv@f2,w
  9135  068F  00B4               	movwf	??___ftdiv
  9136  0690  082F               	movf	___ftdiv@f2+1,w
  9137  0691  00B5               	movwf	??___ftdiv+1
  9138  0692  0830               	movf	___ftdiv@f2+2,w
  9139  0693  00B6               	movwf	??___ftdiv+2
  9140  0694  1003               	clrc
  9141  0695  0D35               	rlf	??___ftdiv+1,w
  9142  0696  0D36               	rlf	??___ftdiv+2,w
  9143  0697  00B7               	movwf	??___ftdiv+3
  9144  0698  0837               	movf	??___ftdiv+3,w
  9145  0699  00BD               	movwf	___ftdiv@sign
  9146  069A  083D               	movf	___ftdiv@sign,w
  9147  069B  1D03               	btfss	3,2
  9148  069C  2EA4               	goto	l3586
  9149  069D  3000               	movlw	0
  9150  069E  00AE               	movwf	?___ftdiv
  9151  069F  3000               	movlw	0
  9152  06A0  00AF               	movwf	?___ftdiv+1
  9153  06A1  3000               	movlw	0
  9154  06A2  00B0               	movwf	?___ftdiv+2
  9155  06A3  0008               	return
  9156  06A4                     l3586:	
  9157  06A4  3000               	movlw	0
  9158  06A5  00B9               	movwf	___ftdiv@f3
  9159  06A6  3000               	movlw	0
  9160  06A7  00BA               	movwf	___ftdiv@f3+1
  9161  06A8  3000               	movlw	0
  9162  06A9  00BB               	movwf	___ftdiv@f3+2
  9163  06AA  3089               	movlw	137
  9164  06AB  073D               	addwf	___ftdiv@sign,w
  9165  06AC  00B4               	movwf	??___ftdiv
  9166  06AD  0834               	movf	??___ftdiv,w
  9167  06AE  02BC               	subwf	___ftdiv@exp,f
  9168  06AF  0831               	movf	___ftdiv@f1,w
  9169  06B0  00B4               	movwf	??___ftdiv
  9170  06B1  0832               	movf	___ftdiv@f1+1,w
  9171  06B2  00B5               	movwf	??___ftdiv+1
  9172  06B3  0833               	movf	___ftdiv@f1+2,w
  9173  06B4  00B6               	movwf	??___ftdiv+2
  9174  06B5  3010               	movlw	16
  9175  06B6                     u3135:	
  9176  06B6  36B6               	lsrf	??___ftdiv+2,f
  9177  06B7  0CB5               	rrf	??___ftdiv+1,f
  9178  06B8  0CB4               	rrf	??___ftdiv,f
  9179  06B9  0B89               	decfsz	9,f
  9180  06BA  2EB6               	goto	u3135
  9181  06BB  0834               	movf	??___ftdiv,w
  9182  06BC  00B7               	movwf	??___ftdiv+3
  9183  06BD  0837               	movf	??___ftdiv+3,w
  9184  06BE  00BD               	movwf	___ftdiv@sign
  9185  06BF  082E               	movf	___ftdiv@f2,w
  9186  06C0  00B4               	movwf	??___ftdiv
  9187  06C1  082F               	movf	___ftdiv@f2+1,w
  9188  06C2  00B5               	movwf	??___ftdiv+1
  9189  06C3  0830               	movf	___ftdiv@f2+2,w
  9190  06C4  00B6               	movwf	??___ftdiv+2
  9191  06C5  3010               	movlw	16
  9192  06C6                     u3145:	
  9193  06C6  36B6               	lsrf	??___ftdiv+2,f
  9194  06C7  0CB5               	rrf	??___ftdiv+1,f
  9195  06C8  0CB4               	rrf	??___ftdiv,f
  9196  06C9  0B89               	decfsz	9,f
  9197  06CA  2EC6               	goto	u3145
  9198  06CB  0834               	movf	??___ftdiv,w
  9199  06CC  00B7               	movwf	??___ftdiv+3
  9200  06CD  0837               	movf	??___ftdiv+3,w
  9201  06CE  06BD               	xorwf	___ftdiv@sign,f
  9202  06CF  3080               	movlw	128
  9203  06D0  00B4               	movwf	??___ftdiv
  9204  06D1  0834               	movf	??___ftdiv,w
  9205  06D2  05BD               	andwf	___ftdiv@sign,f
  9206  06D3  17B2               	bsf	___ftdiv@f1+1,7
  9207  06D4  30FF               	movlw	255
  9208  06D5  05B1               	andwf	___ftdiv@f1,f
  9209  06D6  30FF               	movlw	255
  9210  06D7  05B2               	andwf	___ftdiv@f1+1,f
  9211  06D8  3000               	movlw	0
  9212  06D9  05B3               	andwf	___ftdiv@f1+2,f
  9213  06DA  17AF               	bsf	___ftdiv@f2+1,7
  9214  06DB  30FF               	movlw	255
  9215  06DC  05AE               	andwf	___ftdiv@f2,f
  9216  06DD  30FF               	movlw	255
  9217  06DE  05AF               	andwf	___ftdiv@f2+1,f
  9218  06DF  3000               	movlw	0
  9219  06E0  05B0               	andwf	___ftdiv@f2+2,f
  9220  06E1  3018               	movlw	24
  9221  06E2  00B4               	movwf	??___ftdiv
  9222  06E3  0834               	movf	??___ftdiv,w
  9223  06E4  00B8               	movwf	___ftdiv@cntr
  9224  06E5                     l3600:	
  9225  06E5  3001               	movlw	1
  9226  06E6                     u3155:	
  9227  06E6  35B9               	lslf	___ftdiv@f3,f
  9228  06E7  0DBA               	rlf	___ftdiv@f3+1,f
  9229  06E8  0DBB               	rlf	___ftdiv@f3+2,f
  9230  06E9  0B89               	decfsz	9,f
  9231  06EA  2EE6               	goto	u3155
  9232  06EB  0830               	movf	___ftdiv@f2+2,w
  9233  06EC  0233               	subwf	___ftdiv@f1+2,w
  9234  06ED  1D03               	skipz
  9235  06EE  2EF5               	goto	u3165
  9236  06EF  082F               	movf	___ftdiv@f2+1,w
  9237  06F0  0232               	subwf	___ftdiv@f1+1,w
  9238  06F1  1D03               	skipz
  9239  06F2  2EF5               	goto	u3165
  9240  06F3  082E               	movf	___ftdiv@f2,w
  9241  06F4  0231               	subwf	___ftdiv@f1,w
  9242  06F5                     u3165:	
  9243  06F5  1C03               	skipc
  9244  06F6  2EFE               	goto	l3608
  9245  06F7  082E               	movf	___ftdiv@f2,w
  9246  06F8  02B1               	subwf	___ftdiv@f1,f
  9247  06F9  082F               	movf	___ftdiv@f2+1,w
  9248  06FA  3BB2               	subwfb	___ftdiv@f1+1,f
  9249  06FB  0830               	movf	___ftdiv@f2+2,w
  9250  06FC  3BB3               	subwfb	___ftdiv@f1+2,f
  9251  06FD  1439               	bsf	___ftdiv@f3,0
  9252  06FE                     l3608:	
  9253  06FE  3001               	movlw	1
  9254  06FF                     u3175:	
  9255  06FF  35B1               	lslf	___ftdiv@f1,f
  9256  0700  0DB2               	rlf	___ftdiv@f1+1,f
  9257  0701  0DB3               	rlf	___ftdiv@f1+2,f
  9258  0702  0B89               	decfsz	9,f
  9259  0703  2EFF               	goto	u3175
  9260  0704  3001               	movlw	1
  9261  0705  02B8               	subwf	___ftdiv@cntr,f
  9262  0706  1D03               	btfss	3,2
  9263  0707  2EE5               	goto	l3600
  9264  0708  0839               	movf	___ftdiv@f3,w
  9265  0709  00A0               	movwf	___ftpack@arg
  9266  070A  083A               	movf	___ftdiv@f3+1,w
  9267  070B  00A1               	movwf	___ftpack@arg+1
  9268  070C  083B               	movf	___ftdiv@f3+2,w
  9269  070D  00A2               	movwf	___ftpack@arg+2
  9270  070E  083C               	movf	___ftdiv@exp,w
  9271  070F  00B4               	movwf	??___ftdiv
  9272  0710  0834               	movf	??___ftdiv,w
  9273  0711  00A3               	movwf	___ftpack@exp
  9274  0712  083D               	movf	___ftdiv@sign,w
  9275  0713  00B5               	movwf	??___ftdiv+1
  9276  0714  0835               	movf	??___ftdiv+1,w
  9277  0715  00A4               	movwf	___ftpack@sign
  9278  0716  318E  2601         	fcall	___ftpack
  9279  0718  0020               	movlb	0	; select bank0
  9280  0719  0820               	movf	?___ftpack,w
  9281  071A  00AE               	movwf	?___ftdiv
  9282  071B  0821               	movf	?___ftpack+1,w
  9283  071C  00AF               	movwf	?___ftdiv+1
  9284  071D  0822               	movf	?___ftpack+2,w
  9285  071E  00B0               	movwf	?___ftdiv+2
  9286  071F  0008               	return
  9287  0720                     __end_of___ftdiv:	
  9288                           
  9289                           	psect	text16
  9290  0E01                     __ptext16:	
  9291 ;; *************** function ___ftpack *****************
  9292 ;; Defined at:
  9293 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  arg             3    0[BANK0 ] unsigned um
  9296 ;;  exp             1    3[BANK0 ] unsigned char 
  9297 ;;  sign            1    4[BANK0 ] unsigned char 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;		None
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  3    0[BANK0 ] float 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9309 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9312 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9313 ;;Total ram usage:        8 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    3
  9316 ;; This function calls:
  9317 ;;		Nothing
  9318 ;; This function is called by:
  9319 ;;		___awtoft
  9320 ;;		___ftdiv
  9321 ;;		___ftmul
  9322 ;;		___lwtoft
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           
  9327                           ;psect for function ___ftpack
  9328  0E01                     ___ftpack:	
  9329                           
  9330                           ;incstack = 0
  9331                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9332  0E01  0020               	movlb	0	; select bank0
  9333  0E02  0823               	movf	___ftpack@exp,w
  9334  0E03  1903               	btfsc	3,2
  9335  0E04  2E0A               	goto	l2762
  9336  0E05  0822               	movf	___ftpack@arg+2,w
  9337  0E06  0421               	iorwf	___ftpack@arg+1,w
  9338  0E07  0420               	iorwf	___ftpack@arg,w
  9339  0E08  1D03               	skipz
  9340  0E09  2E1B               	goto	l2768
  9341  0E0A                     l2762:	
  9342  0E0A  3000               	movlw	0
  9343  0E0B  00A0               	movwf	?___ftpack
  9344  0E0C  3000               	movlw	0
  9345  0E0D  00A1               	movwf	?___ftpack+1
  9346  0E0E  3000               	movlw	0
  9347  0E0F  00A2               	movwf	?___ftpack+2
  9348  0E10  0008               	return
  9349  0E11                     l2766:	
  9350  0E11  3001               	movlw	1
  9351  0E12  00A5               	movwf	??___ftpack
  9352  0E13  0825               	movf	??___ftpack,w
  9353  0E14  07A3               	addwf	___ftpack@exp,f
  9354  0E15  3001               	movlw	1
  9355  0E16                     u1975:	
  9356  0E16  36A2               	lsrf	___ftpack@arg+2,f
  9357  0E17  0CA1               	rrf	___ftpack@arg+1,f
  9358  0E18  0CA0               	rrf	___ftpack@arg,f
  9359  0E19  0B89               	decfsz	9,f
  9360  0E1A  2E16               	goto	u1975
  9361  0E1B                     l2768:	
  9362  0E1B  30FE               	movlw	254
  9363  0E1C  0522               	andwf	___ftpack@arg+2,w
  9364  0E1D  1903               	btfsc	3,2
  9365  0E1E  2E34               	goto	l1107
  9366  0E1F  2E11               	goto	l2766
  9367  0E20                     l2770:	
  9368  0E20  3001               	movlw	1
  9369  0E21  00A5               	movwf	??___ftpack
  9370  0E22  0825               	movf	??___ftpack,w
  9371  0E23  07A3               	addwf	___ftpack@exp,f
  9372  0E24  3001               	movlw	1
  9373  0E25  07A0               	addwf	___ftpack@arg,f
  9374  0E26  3000               	movlw	0
  9375  0E27  1803               	skipnc
  9376  0E28  3001               	movlw	1
  9377  0E29  07A1               	addwf	___ftpack@arg+1,f
  9378  0E2A  3000               	movlw	0
  9379  0E2B  1803               	skipnc
  9380  0E2C  3001               	movlw	1
  9381  0E2D  07A2               	addwf	___ftpack@arg+2,f
  9382  0E2E  3001               	movlw	1
  9383  0E2F                     u1995:	
  9384  0E2F  36A2               	lsrf	___ftpack@arg+2,f
  9385  0E30  0CA1               	rrf	___ftpack@arg+1,f
  9386  0E31  0CA0               	rrf	___ftpack@arg,f
  9387  0E32  0B89               	decfsz	9,f
  9388  0E33  2E2F               	goto	u1995
  9389  0E34                     l1107:	
  9390  0E34  30FF               	movlw	255
  9391  0E35  0522               	andwf	___ftpack@arg+2,w
  9392  0E36  1903               	btfsc	3,2
  9393  0E37  2E41               	goto	l2778
  9394  0E38  2E20               	goto	l2770
  9395  0E39                     l2776:	
  9396  0E39  3001               	movlw	1
  9397  0E3A  02A3               	subwf	___ftpack@exp,f
  9398  0E3B  3001               	movlw	1
  9399  0E3C                     u2015:	
  9400  0E3C  35A0               	lslf	___ftpack@arg,f
  9401  0E3D  0DA1               	rlf	___ftpack@arg+1,f
  9402  0E3E  0DA2               	rlf	___ftpack@arg+2,f
  9403  0E3F  0B89               	decfsz	9,f
  9404  0E40  2E3C               	goto	u2015
  9405  0E41                     l2778:	
  9406  0E41  1BA1               	btfsc	___ftpack@arg+1,7
  9407  0E42  2E47               	goto	l1114
  9408  0E43  3002               	movlw	2
  9409  0E44  0223               	subwf	___ftpack@exp,w
  9410  0E45  1803               	skipnc
  9411  0E46  2E39               	goto	l2776
  9412  0E47                     l1114:	
  9413  0E47  1823               	btfsc	___ftpack@exp,0
  9414  0E48  2E4F               	goto	l1115
  9415  0E49  30FF               	movlw	255
  9416  0E4A  05A0               	andwf	___ftpack@arg,f
  9417  0E4B  307F               	movlw	127
  9418  0E4C  05A1               	andwf	___ftpack@arg+1,f
  9419  0E4D  30FF               	movlw	255
  9420  0E4E  05A2               	andwf	___ftpack@arg+2,f
  9421  0E4F                     l1115:	
  9422  0E4F  1003               	clrc
  9423  0E50  0CA3               	rrf	___ftpack@exp,f
  9424  0E51  0823               	movf	___ftpack@exp,w
  9425  0E52  00A5               	movwf	??___ftpack
  9426  0E53  01A6               	clrf	??___ftpack+1
  9427  0E54  01A7               	clrf	??___ftpack+2
  9428  0E55  3010               	movlw	16
  9429  0E56                     u2055:	
  9430  0E56  35A5               	lslf	??___ftpack,f
  9431  0E57  0DA6               	rlf	??___ftpack+1,f
  9432  0E58  0DA7               	rlf	??___ftpack+2,f
  9433  0E59  0B89               	decfsz	9,f
  9434  0E5A  2E56               	goto	u2055
  9435  0E5B  0825               	movf	??___ftpack,w
  9436  0E5C  04A0               	iorwf	___ftpack@arg,f
  9437  0E5D  0826               	movf	??___ftpack+1,w
  9438  0E5E  04A1               	iorwf	___ftpack@arg+1,f
  9439  0E5F  0827               	movf	??___ftpack+2,w
  9440  0E60  04A2               	iorwf	___ftpack@arg+2,f
  9441  0E61  0824               	movf	___ftpack@sign,w
  9442  0E62  1903               	btfsc	3,2
  9443  0E63  0008               	return
  9444  0E64  17A2               	bsf	___ftpack@arg+2,7
  9445  0E65  0008               	return
  9446  0E66                     __end_of___ftpack:	
  9447                           
  9448                           	psect	text17
  9449  0B27                     __ptext17:	
  9450 ;; *************** function _SYSTEM_Initialize *****************
  9451 ;; Defined at:
  9452 ;;		line 83 in file "mcc_generated_files/mcc.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  1    wreg      void 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0, pclath, cstack
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;Total ram usage:        0 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; Hardware stack levels required when called:    4
  9473 ;; This function calls:
  9474 ;;		_ADCC_Initialize
  9475 ;;		_I2C1_Initialize
  9476 ;;		_OSCILLATOR_Initialize
  9477 ;;		_PIN_MANAGER_Initialize
  9478 ;; This function is called by:
  9479 ;;		_main
  9480 ;; This function uses a non-reentrant model
  9481 ;;
  9482                           
  9483                           
  9484                           ;psect for function _SYSTEM_Initialize
  9485  0B27                     _SYSTEM_Initialize:	
  9486                           
  9487                           ;mcc.c: 86: PIN_MANAGER_Initialize();
  9488                           
  9489                           ;incstack = 0
  9490                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9491  0B27  318D  2529  318B   	fcall	_PIN_MANAGER_Initialize
  9492                           
  9493                           ;mcc.c: 87: OSCILLATOR_Initialize();
  9494  0B2A  318B  2313  318B   	fcall	_OSCILLATOR_Initialize
  9495                           
  9496                           ;mcc.c: 88: I2C1_Initialize();
  9497  0B2D  318B  23A8  318B   	fcall	_I2C1_Initialize
  9498                           
  9499                           ;mcc.c: 89: ADCC_Initialize();
  9500  0B30  318B  23F0         	fcall	_ADCC_Initialize
  9501  0B32  0008               	return
  9502  0B33                     __end_of_SYSTEM_Initialize:	
  9503                           
  9504                           	psect	text18
  9505  0D29                     __ptext18:	
  9506 ;; *************** function _PIN_MANAGER_Initialize *****************
  9507 ;; Defined at:
  9508 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;		None
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;  state           1    0[BANK0 ] unsigned char 
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      void 
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9525 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9526 ;;Total ram usage:        1 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    3
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_SYSTEM_Initialize
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           
  9537                           ;psect for function _PIN_MANAGER_Initialize
  9538  0D29                     _PIN_MANAGER_Initialize:	
  9539                           
  9540                           ;pin_manager.c: 57: LATA = 0x00;
  9541                           
  9542                           ;incstack = 0
  9543                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  9544  0D29  0020               	movlb	0	; select bank0
  9545  0D2A  0196               	clrf	22	;volatile
  9546                           
  9547                           ;pin_manager.c: 58: LATB = 0x00;
  9548  0D2B  0197               	clrf	23	;volatile
  9549                           
  9550                           ;pin_manager.c: 59: LATC = 0x00;
  9551  0D2C  0198               	clrf	24	;volatile
  9552                           
  9553                           ;pin_manager.c: 64: TRISA = 0x7F;
  9554  0D2D  307F               	movlw	127
  9555  0D2E  0091               	movwf	17	;volatile
  9556                           
  9557                           ;pin_manager.c: 65: TRISB = 0x30;
  9558  0D2F  3030               	movlw	48
  9559  0D30  0092               	movwf	18	;volatile
  9560                           
  9561                           ;pin_manager.c: 66: TRISC = 0x1D;
  9562  0D31  301D               	movlw	29
  9563  0D32  0093               	movwf	19	;volatile
  9564                           
  9565                           ;pin_manager.c: 71: ANSELC = 0xE7;
  9566  0D33  30E7               	movlw	231
  9567  0D34  003E               	movlb	30	; select bank30
  9568  0D35  00CE               	movwf	78	;volatile
  9569                           
  9570                           ;pin_manager.c: 72: ANSELB = 0xCF;
  9571  0D36  30CF               	movlw	207
  9572  0D37  00C3               	movwf	67	;volatile
  9573                           
  9574                           ;pin_manager.c: 73: ANSELA = 0xFF;
  9575  0D38  30FF               	movlw	255
  9576  0D39  00B8               	movwf	56	;volatile
  9577                           
  9578                           ;pin_manager.c: 78: WPUE = 0x00;
  9579  0D3A  01E5               	clrf	101	;volatile
  9580                           
  9581                           ;pin_manager.c: 79: WPUB = 0x30;
  9582  0D3B  3030               	movlw	48
  9583  0D3C  00C4               	movwf	68	;volatile
  9584                           
  9585                           ;pin_manager.c: 80: WPUA = 0x00;
  9586  0D3D  01B9               	clrf	57	;volatile
  9587                           
  9588                           ;pin_manager.c: 81: WPUC = 0x00;
  9589  0D3E  01CF               	clrf	79	;volatile
  9590                           
  9591                           ;pin_manager.c: 86: ODCONA = 0x00;
  9592  0D3F  01BA               	clrf	58	;volatile
  9593                           
  9594                           ;pin_manager.c: 87: ODCONB = 0x00;
  9595  0D40  01C5               	clrf	69	;volatile
  9596                           
  9597                           ;pin_manager.c: 88: ODCONC = 0x00;
  9598  0D41  01D0               	clrf	80	;volatile
  9599                           
  9600                           ;pin_manager.c: 95: bool state = (unsigned char)GIE;
  9601  0D42  3000               	movlw	0
  9602  0D43  1B8B               	btfsc	11,7	;volatile
  9603  0D44  3001               	movlw	1
  9604  0D45  0020               	movlb	0	; select bank0
  9605  0D46  00A0               	movwf	PIN_MANAGER_Initialize@state
  9606                           
  9607                           ;pin_manager.c: 96: GIE = 0;
  9608  0D47  138B               	bcf	11,7	;volatile
  9609                           
  9610                           ;pin_manager.c: 97: PPSLOCK = 0x55;
  9611  0D48  3055               	movlw	85
  9612  0D49  003D               	movlb	29	; select bank29
  9613  0D4A  008F               	movwf	15	;volsfr
  9614                           
  9615                           ;pin_manager.c: 98: PPSLOCK = 0xAA;
  9616  0D4B  30AA               	movlw	170
  9617  0D4C  008F               	movwf	15	;volsfr
  9618                           
  9619                           ;pin_manager.c: 99: PPSLOCKbits.PPSLOCKED = 0x00;
  9620  0D4D  100F               	bcf	15,0	;volsfr
  9621                           
  9622                           ;pin_manager.c: 101: SSP1DATPPSbits.SSP1DATPPS = 0x13;
  9623  0D4E  0846               	movf	70,w	;volatile
  9624  0D4F  39E0               	andlw	-32
  9625  0D50  3813               	iorlw	19
  9626  0D51  00C6               	movwf	70	;volatile
  9627                           
  9628                           ;pin_manager.c: 102: SSP1CLKPPSbits.SSP1CLKPPS = 0x14;
  9629  0D52  0845               	movf	69,w	;volatile
  9630  0D53  39E0               	andlw	-32
  9631  0D54  3814               	iorlw	20
  9632  0D55  00C5               	movwf	69	;volatile
  9633                           
  9634                           ;pin_manager.c: 103: RC3PPS = 0x15;
  9635  0D56  3015               	movlw	21
  9636  0D57  003E               	movlb	30	; select bank30
  9637  0D58  00A3               	movwf	35	;volatile
  9638                           
  9639                           ;pin_manager.c: 104: RC4PPS = 0x14;
  9640  0D59  3014               	movlw	20
  9641  0D5A  00A4               	movwf	36	;volatile
  9642                           
  9643                           ;pin_manager.c: 106: PPSLOCK = 0x55;
  9644  0D5B  3055               	movlw	85
  9645  0D5C  003D               	movlb	29	; select bank29
  9646  0D5D  008F               	movwf	15	;volsfr
  9647                           
  9648                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
  9649  0D5E  30AA               	movlw	170
  9650  0D5F  008F               	movwf	15	;volsfr
  9651                           
  9652                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x01;
  9653  0D60  140F               	bsf	15,0	;volsfr
  9654                           
  9655                           ;pin_manager.c: 110: GIE = state;
  9656  0D61  0020               	movlb	0	; select bank0
  9657  0D62  1C20               	btfss	PIN_MANAGER_Initialize@state,0
  9658  0D63  2D66               	goto	u4010
  9659  0D64  178B               	bsf	11,7	;volatile
  9660  0D65  0008               	return
  9661  0D66                     u4010:	
  9662  0D66  138B               	bcf	11,7	;volatile
  9663  0D67  0008               	return
  9664  0D68                     __end_of_PIN_MANAGER_Initialize:	
  9665                           
  9666                           	psect	text19
  9667  0B13                     __ptext19:	
  9668 ;; *************** function _OSCILLATOR_Initialize *****************
  9669 ;; Defined at:
  9670 ;;		line 92 in file "mcc_generated_files/mcc.c"
  9671 ;; Parameters:    Size  Location     Type
  9672 ;;		None
  9673 ;; Auto vars:     Size  Location     Type
  9674 ;;		None
  9675 ;; Return value:  Size  Location     Type
  9676 ;;                  1    wreg      void 
  9677 ;; Registers used:
  9678 ;;		wreg, status,2
  9679 ;; Tracked objects:
  9680 ;;		On entry : 0/0
  9681 ;;		On exit  : 0/0
  9682 ;;		Unchanged: 0/0
  9683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;Total ram usage:        0 bytes
  9689 ;; Hardware stack levels used:    1
  9690 ;; Hardware stack levels required when called:    3
  9691 ;; This function calls:
  9692 ;;		Nothing
  9693 ;; This function is called by:
  9694 ;;		_SYSTEM_Initialize
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           
  9699                           ;psect for function _OSCILLATOR_Initialize
  9700  0B13                     _OSCILLATOR_Initialize:	
  9701                           
  9702                           ;mcc.c: 95: OSCCON1 = 0x60;
  9703                           
  9704                           ;incstack = 0
  9705                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9706  0B13  3060               	movlw	96
  9707  0B14  0031               	movlb	17	; select bank17
  9708  0B15  008D               	movwf	13	;volatile
  9709                           
  9710                           ;mcc.c: 97: OSCCON3 = 0x00;
  9711  0B16  018F               	clrf	15	;volatile
  9712                           
  9713                           ;mcc.c: 99: OSCEN = 0x00;
  9714  0B17  0191               	clrf	17	;volatile
  9715                           
  9716                           ;mcc.c: 101: OSCFRQ = 0x06;
  9717  0B18  3006               	movlw	6
  9718  0B19  0093               	movwf	19	;volatile
  9719                           
  9720                           ;mcc.c: 103: OSCTUNE = 0x00;
  9721  0B1A  0192               	clrf	18	;volatile
  9722  0B1B  0008               	return
  9723  0B1C                     __end_of_OSCILLATOR_Initialize:	
  9724                           
  9725                           	psect	text20
  9726  0BA8                     __ptext20:	
  9727 ;; *************** function _I2C1_Initialize *****************
  9728 ;; Defined at:
  9729 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  9730 ;; Parameters:    Size  Location     Type
  9731 ;;		None
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;		None
  9734 ;; Return value:  Size  Location     Type
  9735 ;;                  1    wreg      void 
  9736 ;; Registers used:
  9737 ;;		wreg, status,2
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9745 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9746 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;Total ram usage:        1 bytes
  9748 ;; Hardware stack levels used:    1
  9749 ;; Hardware stack levels required when called:    3
  9750 ;; This function calls:
  9751 ;;		Nothing
  9752 ;; This function is called by:
  9753 ;;		_SYSTEM_Initialize
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           
  9758                           ;psect for function _I2C1_Initialize
  9759  0BA8                     _I2C1_Initialize:	
  9760                           
  9761                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  9762                           
  9763                           ;incstack = 0
  9764                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  9765  0BA8  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9766  0BA9  0020               	movlb	0	; select bank0
  9767  0BAA  00A0               	movwf	??_I2C1_Initialize
  9768  0BAB  0820               	movf	??_I2C1_Initialize,w
  9769  0BAC  00E8               	movwf	low ((_i2c1_object| 0+1))
  9770                           
  9771                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  9772  0BAD  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
  9773  0BAE  00A0               	movwf	??_I2C1_Initialize
  9774  0BAF  0820               	movf	??_I2C1_Initialize,w
  9775  0BB0  00E7               	movwf	_i2c1_object
  9776                           
  9777                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  9778  0BB1  14E9               	bsf	_i2c1_object+2,1
  9779                           
  9780                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  9781  0BB2  1069               	bcf	_i2c1_object+2,0
  9782                           
  9783                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  9784  0BB3  01EB               	clrf	_i2c1_object+4
  9785                           
  9786                           ;i2c1.c: 208: SSP1STAT = 0x00;
  9787  0BB4  0023               	movlb	3	; select bank3
  9788  0BB5  018F               	clrf	15	;volatile
  9789                           
  9790                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  9791  0BB6  3028               	movlw	40
  9792  0BB7  0090               	movwf	16	;volatile
  9793                           
  9794                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  9795  0BB8  0192               	clrf	18	;volatile
  9796                           
  9797                           ;i2c1.c: 214: SSP1ADD = 0x13;
  9798  0BB9  3013               	movlw	19
  9799  0BBA  008D               	movwf	13	;volatile
  9800                           
  9801                           ;i2c1.c: 218: PIR3bits.SSP1IF = 0;
  9802  0BBB  002E               	movlb	14	; select bank14
  9803  0BBC  100F               	bcf	15,0	;volatile
  9804                           
  9805                           ;i2c1.c: 220: PIE3bits.SSP1IE = 1;
  9806  0BBD  1419               	bsf	25,0	;volatile
  9807  0BBE  0008               	return
  9808  0BBF                     __end_of_I2C1_Initialize:	
  9809                           
  9810                           	psect	text21
  9811  0BF0                     __ptext21:	
  9812 ;; *************** function _ADCC_Initialize *****************
  9813 ;; Defined at:
  9814 ;;		line 62 in file "mcc_generated_files/adcc.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      void 
  9821 ;; Registers used:
  9822 ;;		wreg, status,2
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9832 ;;Total ram usage:        0 bytes
  9833 ;; Hardware stack levels used:    1
  9834 ;; Hardware stack levels required when called:    3
  9835 ;; This function calls:
  9836 ;;		Nothing
  9837 ;; This function is called by:
  9838 ;;		_SYSTEM_Initialize
  9839 ;; This function uses a non-reentrant model
  9840 ;;
  9841                           
  9842                           
  9843                           ;psect for function _ADCC_Initialize
  9844  0BF0                     _ADCC_Initialize:	
  9845                           
  9846                           ;adcc.c: 66: ADCON1 = 0x00;
  9847                           
  9848                           ;incstack = 0
  9849                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  9850  0BF0  0021               	movlb	1	; select bank1
  9851  0BF1  0194               	clrf	20	;volatile
  9852                           
  9853                           ;adcc.c: 68: ADCON2 = 0x03;
  9854  0BF2  3003               	movlw	3
  9855  0BF3  0095               	movwf	21	;volatile
  9856                           
  9857                           ;adcc.c: 70: ADCON3 = 0x00;
  9858  0BF4  0196               	clrf	22	;volatile
  9859                           
  9860                           ;adcc.c: 72: ADACT = 0x00;
  9861  0BF5  0199               	clrf	25	;volatile
  9862                           
  9863                           ;adcc.c: 74: ADSTAT = 0x00;
  9864  0BF6  0197               	clrf	23	;volatile
  9865                           
  9866                           ;adcc.c: 76: ADCLK = 0x13;
  9867  0BF7  3013               	movlw	19
  9868  0BF8  0098               	movwf	24	;volatile
  9869                           
  9870                           ;adcc.c: 78: ADREF = 0x00;
  9871  0BF9  019A               	clrf	26	;volatile
  9872                           
  9873                           ;adcc.c: 80: ADCAP = 0x00;
  9874  0BFA  019B               	clrf	27	;volatile
  9875                           
  9876                           ;adcc.c: 82: ADPRE = 0x00;
  9877  0BFB  019C               	clrf	28	;volatile
  9878                           
  9879                           ;adcc.c: 84: ADACQ = 0x04;
  9880  0BFC  3004               	movlw	4
  9881  0BFD  009D               	movwf	29	;volatile
  9882                           
  9883                           ;adcc.c: 86: ADPCH = 0x00;
  9884  0BFE  019E               	clrf	30	;volatile
  9885                           
  9886                           ;adcc.c: 88: ADRPT = 0x00;
  9887  0BFF  0022               	movlb	2	; select bank2
  9888  0C00  018D               	clrf	13	;volatile
  9889                           
  9890                           ;adcc.c: 90: ADLTHL = 0x00;
  9891  0C01  018E               	clrf	14	;volatile
  9892                           
  9893                           ;adcc.c: 92: ADLTHH = 0x00;
  9894  0C02  018F               	clrf	15	;volatile
  9895                           
  9896                           ;adcc.c: 94: ADUTHL = 0x00;
  9897  0C03  0190               	clrf	16	;volatile
  9898                           
  9899                           ;adcc.c: 96: ADUTHH = 0x00;
  9900  0C04  0191               	clrf	17	;volatile
  9901                           
  9902                           ;adcc.c: 98: ADSTPTL = 0x00;
  9903  0C05  0192               	clrf	18	;volatile
  9904                           
  9905                           ;adcc.c: 100: ADSTPTH = 0x00;
  9906  0C06  0193               	clrf	19	;volatile
  9907                           
  9908                           ;adcc.c: 103: ADCON0 = 0x84;
  9909  0C07  3084               	movlw	132
  9910  0C08  0021               	movlb	1	; select bank1
  9911  0C09  0093               	movwf	19	;volatile
  9912  0C0A  0008               	return
  9913  0C0B                     __end_of_ADCC_Initialize:	
  9914                           
  9915                           	psect	text22
  9916  0B4B                     __ptext22:	
  9917 ;; *************** function _LED7SegSetup *****************
  9918 ;; Defined at:
  9919 ;;		line 31 in file "LED7Seg.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;		None
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;		None
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  1    wreg      void 
  9926 ;; Registers used:
  9927 ;;		None
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;Total ram usage:        0 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; Hardware stack levels required when called:    3
  9940 ;; This function calls:
  9941 ;;		Nothing
  9942 ;; This function is called by:
  9943 ;;		_main
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           
  9948                           ;psect for function _LED7SegSetup
  9949  0B4B                     _LED7SegSetup:	
  9950                           
  9951                           ;incstack = 0
  9952                           ; Regs used in _LED7SegSetup: []
  9953                           ;LED7Seg.c: 34: do { ANSELCbits.ANSC5 = 0; } while(0);
  9954  0B4B  003E               	movlb	30	; select bank30
  9955  0B4C  12CE               	bcf	78,5	;volatile
  9956                           
  9957                           ;LED7Seg.c: 35: do { TRISCbits.TRISC5 = 0; } while(0);
  9958  0B4D  0020               	movlb	0	; select bank0
  9959  0B4E  1293               	bcf	19,5	;volatile
  9960                           
  9961                           ;LED7Seg.c: 38: do { ANSELCbits.ANSC6 = 0; } while(0);
  9962  0B4F  003E               	movlb	30	; select bank30
  9963  0B50  134E               	bcf	78,6	;volatile
  9964                           
  9965                           ;LED7Seg.c: 39: do { TRISCbits.TRISC6 = 0; } while(0);
  9966  0B51  0020               	movlb	0	; select bank0
  9967  0B52  1313               	bcf	19,6	;volatile
  9968                           
  9969                           ;LED7Seg.c: 42: do { ANSELCbits.ANSC7 = 0; } while(0);
  9970  0B53  003E               	movlb	30	; select bank30
  9971  0B54  13CE               	bcf	78,7	;volatile
  9972                           
  9973                           ;LED7Seg.c: 43: do { TRISCbits.TRISC7 = 0; } while(0);
  9974  0B55  0020               	movlb	0	; select bank0
  9975  0B56  1393               	bcf	19,7	;volatile
  9976  0B57  0008               	return
  9977  0B58                     __end_of_LED7SegSetup:	
  9978                           
  9979                           	psect	text23
  9980  0CF0                     __ptext23:	
  9981 ;; *************** function _LED7SegDisplayValueByDigit *****************
  9982 ;; Defined at:
  9983 ;;		line 95 in file "LED7Seg.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  iTensDigit      2   20[BANK0 ] unsigned int 
  9986 ;;  iUnitsDigit     2   22[BANK0 ] unsigned int 
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;  iTensCode       2   24[BANK0 ] unsigned int 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10001 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;Total ram usage:        6 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; Hardware stack levels required when called:    7
 10005 ;; This function calls:
 10006 ;;		_LED7SegShiftOutPulseClock
 10007 ;; This function is called by:
 10008 ;;		_main
 10009 ;;		_LED7SegDisplayValue
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           
 10014                           ;psect for function _LED7SegDisplayValueByDigit
 10015  0CF0                     _LED7SegDisplayValueByDigit:	
 10016                           
 10017                           ;LED7Seg.c: 99: if(iUnitsDigit>9) iUnitsDigit=9;
 10018                           
 10019                           ;LED7Seg.c: 96: unsigned int iTensCode;
 10020                           ;LED7Seg.c: 98: if(0>iUnitsDigit) iUnitsDigit=0;
 10021                           
 10022                           ;incstack = 0
 10023                           ; Regs used in _LED7SegDisplayValueByDigit: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10024  0CF0  3000               	movlw	0
 10025  0CF1  0020               	movlb	0	; select bank0
 10026  0CF2  0237               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit+1,w
 10027  0CF3  300A               	movlw	10
 10028  0CF4  1903               	skipnz
 10029  0CF5  0236               	subwf	LED7SegDisplayValueByDigit@iUnitsDigit,w
 10030  0CF6  1C03               	skipc
 10031  0CF7  2CFC               	goto	l4266
 10032  0CF8  3009               	movlw	9
 10033  0CF9  00B6               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit
 10034  0CFA  3000               	movlw	0
 10035  0CFB  00B7               	movwf	LED7SegDisplayValueByDigit@iUnitsDigit+1
 10036  0CFC                     l4266:	
 10037                           ;LED7Seg.c: 101: if(0>iTensDigit) iTensDigit=0;
 10038                           
 10039                           
 10040                           ;LED7Seg.c: 102: if(iTensDigit>9) iTensDigit=9;
 10041  0CFC  3000               	movlw	0
 10042  0CFD  0235               	subwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
 10043  0CFE  300A               	movlw	10
 10044  0CFF  1903               	skipnz
 10045  0D00  0234               	subwf	LED7SegDisplayValueByDigit@iTensDigit,w
 10046  0D01  1C03               	skipc
 10047  0D02  2D07               	goto	l4270
 10048  0D03  3009               	movlw	9
 10049  0D04  00B4               	movwf	LED7SegDisplayValueByDigit@iTensDigit
 10050  0D05  3000               	movlw	0
 10051  0D06  00B5               	movwf	LED7SegDisplayValueByDigit@iTensDigit+1
 10052  0D07                     l4270:	
 10053                           
 10054                           ;LED7Seg.c: 104: iTensCode=segdisp[iTensDigit];
 10055  0D07  3534               	lslf	LED7SegDisplayValueByDigit@iTensDigit,w
 10056  0D08  3E20               	addlw	(low (_segdisp| (0+256)))& (0+255)
 10057  0D09  0086               	movwf	6
 10058  0D0A  3001               	movlw	1	; select bank2/3
 10059  0D0B  0087               	movwf	7
 10060  0D0C  3F40               	moviw [0]fsr1
 10061  0D0D  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
 10062  0D0E  3F41               	moviw [1]fsr1
 10063  0D0F  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
 10064                           
 10065                           ;LED7Seg.c: 105: if(0==iTensDigit) iTensCode=255;
 10066  0D10  0834               	movf	LED7SegDisplayValueByDigit@iTensDigit,w
 10067  0D11  0435               	iorwf	LED7SegDisplayValueByDigit@iTensDigit+1,w
 10068  0D12  1D03               	btfss	3,2
 10069  0D13  2D18               	goto	l4276
 10070  0D14  30FF               	movlw	255
 10071  0D15  00B8               	movwf	LED7SegDisplayValueByDigit@iTensCode
 10072  0D16  3000               	movlw	0
 10073  0D17  00B9               	movwf	LED7SegDisplayValueByDigit@iTensCode+1
 10074  0D18                     l4276:	
 10075                           
 10076                           ;LED7Seg.c: 107: LED7SegShiftOutPulseClock( segdisp[iUnitsDigit]);
 10077  0D18  3536               	lslf	LED7SegDisplayValueByDigit@iUnitsDigit,w
 10078  0D19  3E20               	addlw	(low (_segdisp| (0+256)))& (0+255)
 10079  0D1A  0086               	movwf	6
 10080  0D1B  3001               	movlw	1	; select bank2/3
 10081  0D1C  0087               	movwf	7
 10082  0D1D  0801               	movf	1,w
 10083  0D1E  318C  2427  318C   	fcall	_LED7SegShiftOutPulseClock
 10084                           
 10085                           ;LED7Seg.c: 108: LED7SegShiftOutPulseClock( iTensCode );
 10086  0D21  0020               	movlb	0	; select bank0
 10087  0D22  0838               	movf	LED7SegDisplayValueByDigit@iTensCode,w
 10088  0D23  318C  2427         	fcall	_LED7SegShiftOutPulseClock
 10089                           
 10090                           ;LED7Seg.c: 110: do { LATCbits.LATC5 = 1; } while(0);
 10091  0D25  0020               	movlb	0	; select bank0
 10092  0D26  1698               	bsf	24,5	;volatile
 10093                           
 10094                           ;LED7Seg.c: 111: do { LATCbits.LATC5 = 0; } while(0);
 10095  0D27  1298               	bcf	24,5	;volatile
 10096  0D28  0008               	return
 10097  0D29                     __end_of_LED7SegDisplayValueByDigit:	
 10098                           
 10099                           	psect	text24
 10100  0C27                     __ptext24:	
 10101 ;; *************** function _LED7SegShiftOutPulseClock *****************
 10102 ;; Defined at:
 10103 ;;		line 69 in file "LED7Seg.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;  val             1    wreg     unsigned char 
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;  val             1   18[BANK0 ] unsigned char 
 10108 ;;  i               1   19[BANK0 ] unsigned char 
 10109 ;; Return value:  Size  Location     Type
 10110 ;;                  1    wreg      void 
 10111 ;; Registers used:
 10112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10113 ;; Tracked objects:
 10114 ;;		On entry : 0/0
 10115 ;;		On exit  : 0/0
 10116 ;;		Unchanged: 0/0
 10117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10119 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10120 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10121 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;Total ram usage:        3 bytes
 10123 ;; Hardware stack levels used:    1
 10124 ;; Hardware stack levels required when called:    6
 10125 ;; This function calls:
 10126 ;;		_LED7SegPinWrite
 10127 ;;		_LED7SegPulseClock
 10128 ;; This function is called by:
 10129 ;;		_LED7SegDisplayValueByDigit
 10130 ;;		_LED7SegBlankDisplay
 10131 ;; This function uses a non-reentrant model
 10132 ;;
 10133                           
 10134                           
 10135                           ;psect for function _LED7SegShiftOutPulseClock
 10136  0C27                     _LED7SegShiftOutPulseClock:	
 10137                           
 10138                           ;incstack = 0
 10139                           ; Regs used in _LED7SegShiftOutPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10140                           ;LED7SegShiftOutPulseClock@val stored from wreg
 10141  0C27  0020               	movlb	0	; select bank0
 10142  0C28  00B2               	movwf	LED7SegShiftOutPulseClock@val
 10143                           
 10144                           ;LED7Seg.c: 71: char i;
 10145                           ;LED7Seg.c: 75: for (i = 0; i < 8; i++) {
 10146  0C29  01B3               	clrf	LED7SegShiftOutPulseClock@i
 10147  0C2A                     L5:	
 10148  0C2A  3008               	movlw	8
 10149  0C2B  0233               	subwf	LED7SegShiftOutPulseClock@i,w
 10150  0C2C  1803               	btfsc	3,0
 10151  0C2D  0008               	return
 10152                           
 10153                           ;LED7Seg.c: 76: LED7SegPinWrite((val & (1 << i)));
 10154  0C2E  3001               	movlw	1
 10155  0C2F  00B1               	movwf	??_LED7SegShiftOutPulseClock
 10156  0C30  0A33               	incf	LED7SegShiftOutPulseClock@i,w
 10157  0C31  2C33               	goto	u4044
 10158  0C32                     u4045:	
 10159  0C32  35B1               	lslf	??_LED7SegShiftOutPulseClock,f
 10160  0C33                     u4044:	
 10161  0C33  0B89               	decfsz	9,f
 10162  0C34  2C32               	goto	u4045
 10163  0C35  0831               	movf	??_LED7SegShiftOutPulseClock,w
 10164  0C36  0532               	andwf	LED7SegShiftOutPulseClock@val,w
 10165  0C37  318B  230A  318C   	fcall	_LED7SegPinWrite
 10166                           
 10167                           ;LED7Seg.c: 77: LED7SegPulseClock();
 10168  0C3A  318B  231C  318C   	fcall	_LED7SegPulseClock
 10169  0C3D  3001               	movlw	1
 10170  0C3E  0020               	movlb	0	; select bank0
 10171  0C3F  00B1               	movwf	??_LED7SegShiftOutPulseClock
 10172  0C40  0831               	movf	??_LED7SegShiftOutPulseClock,w
 10173  0C41  07B3               	addwf	LED7SegShiftOutPulseClock@i,f
 10174  0C42  2C2A               	goto	L5
 10175  0C43                     __end_of_LED7SegShiftOutPulseClock:	
 10176                           
 10177                           	psect	text25
 10178  0B1C                     __ptext25:	
 10179 ;; *************** function _LED7SegPulseClock *****************
 10180 ;; Defined at:
 10181 ;;		line 60 in file "LED7Seg.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;		None
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10199 ;;Total ram usage:        0 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:    5
 10202 ;; This function calls:
 10203 ;;		_delay
 10204 ;; This function is called by:
 10205 ;;		_LED7SegShiftOutPulseClock
 10206 ;; This function uses a non-reentrant model
 10207 ;;
 10208                           
 10209                           
 10210                           ;psect for function _LED7SegPulseClock
 10211  0B1C                     _LED7SegPulseClock:	
 10212                           
 10213                           ;incstack = 0
 10214                           ; Regs used in _LED7SegPulseClock: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10215                           ;LED7Seg.c: 63: do { LATCbits.LATC6 = 1; } while(0);
 10216  0B1C  0020               	movlb	0	; select bank0
 10217  0B1D  1718               	bsf	24,6	;volatile
 10218                           
 10219                           ;LED7Seg.c: 64: delay(1);
 10220  0B1E  3001               	movlw	1
 10221  0B1F  00A6               	movwf	delay@delaytime
 10222  0B20  3000               	movlw	0
 10223  0B21  00A7               	movwf	delay@delaytime+1
 10224  0B22  318D  25AE         	fcall	_delay
 10225                           
 10226                           ;LED7Seg.c: 66: do { LATCbits.LATC6 = 0; } while(0);
 10227  0B24  0020               	movlb	0	; select bank0
 10228  0B25  1318               	bcf	24,6	;volatile
 10229  0B26  0008               	return
 10230  0B27                     __end_of_LED7SegPulseClock:	
 10231                           
 10232                           	psect	text26
 10233  0DAE                     __ptext26:	
 10234 ;; *************** function _delay *****************
 10235 ;; Defined at:
 10236 ;;		line 194 in file "main.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  delaytime       2    6[BANK0 ] int 
 10239 ;; Auto vars:     Size  Location     Type
 10240 ;;  counter         4   13[BANK0 ] long 
 10241 ;;  adjustedDela    4    9[BANK0 ] long 
 10242 ;; Return value:  Size  Location     Type
 10243 ;;                  1    wreg      void 
 10244 ;; Registers used:
 10245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10246 ;; Tracked objects:
 10247 ;;		On entry : 0/0
 10248 ;;		On exit  : 0/0
 10249 ;;		Unchanged: 0/0
 10250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10252 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10253 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10254 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;Total ram usage:       11 bytes
 10256 ;; Hardware stack levels used:    1
 10257 ;; Hardware stack levels required when called:    4
 10258 ;; This function calls:
 10259 ;;		___wmul
 10260 ;; This function is called by:
 10261 ;;		_main
 10262 ;;		_LED7SegPulseClock
 10263 ;;		_blinkyLoop
 10264 ;;		_LED7SegLoop
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           
 10269                           ;psect for function _delay
 10270  0DAE                     _delay:	
 10271                           
 10272                           ;main.c: 195: long counter = 0;
 10273                           
 10274                           ;incstack = 0
 10275                           ; Regs used in _delay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10276  0DAE  3000               	movlw	0
 10277  0DAF  0020               	movlb	0	; select bank0
 10278  0DB0  00B0               	movwf	delay@counter+3
 10279  0DB1  3000               	movlw	0
 10280  0DB2  00AF               	movwf	delay@counter+2
 10281  0DB3  3000               	movlw	0
 10282  0DB4  00AE               	movwf	delay@counter+1
 10283  0DB5  3000               	movlw	0
 10284  0DB6  00AD               	movwf	delay@counter
 10285                           
 10286                           ;main.c: 196: long adjustedDelaytime=delaytime*cMstrClkAdjust;
 10287  0DB7  0827               	movf	delay@delaytime+1,w
 10288  0DB8  00A1               	movwf	___wmul@multiplier+1
 10289  0DB9  0826               	movf	delay@delaytime,w
 10290  0DBA  00A0               	movwf	___wmul@multiplier
 10291  0DBB  302A               	movlw	low (_cMstrClkAdjust| (0+32768))
 10292  0DBC  0084               	movwf	4
 10293  0DBD  3090               	movlw	high (_cMstrClkAdjust| (0+32768))
 10294  0DBE  0085               	movwf	5
 10295  0DBF  3F00               	moviw [0]fsr0
 10296  0DC0  00A2               	movwf	___wmul@multiplicand
 10297  0DC1  3F01               	moviw [1]fsr0
 10298  0DC2  00A3               	movwf	___wmul@multiplicand+1
 10299  0DC3  318C  240B  318D   	fcall	___wmul
 10300  0DC6  0020               	movlb	0	; select bank0
 10301  0DC7  0820               	movf	?___wmul,w
 10302  0DC8  00A9               	movwf	delay@adjustedDelaytime
 10303  0DC9  0821               	movf	?___wmul+1,w
 10304  0DCA  00AA               	movwf	delay@adjustedDelaytime+1
 10305  0DCB  0D89               	rlf	9,f
 10306  0DCC  3B89               	subwfb	9,f
 10307  0DCD  0989               	comf	9,f
 10308  0DCE  00AB               	movwf	delay@adjustedDelaytime+2
 10309  0DCF  00AC               	movwf	delay@adjustedDelaytime+3
 10310                           
 10311                           ;main.c: 198: if (0<delaytime)
 10312  0DD0  0827               	movf	delay@delaytime+1,w
 10313  0DD1  3A80               	xorlw	128
 10314  0DD2  00A8               	movwf	??_delay
 10315  0DD3  3080               	movlw	128
 10316  0DD4  0228               	subwf	??_delay,w
 10317  0DD5  1D03               	skipz
 10318  0DD6  2DD9               	goto	u3985
 10319  0DD7  3001               	movlw	1
 10320  0DD8  0226               	subwf	delay@delaytime,w
 10321  0DD9                     u3985:	
 10322  0DD9  1C03               	skipc
 10323  0DDA  0008               	return
 10324                           
 10325                           ;main.c: 199: for (counter = 0; counter<adjustedDelaytime; counter++);
 10326  0DDB  3000               	movlw	0
 10327  0DDC  0020               	movlb	0	; select bank0
 10328  0DDD  00B0               	movwf	delay@counter+3
 10329  0DDE  3000               	movlw	0
 10330  0DDF  00AF               	movwf	delay@counter+2
 10331  0DE0  3000               	movlw	0
 10332  0DE1  00AE               	movwf	delay@counter+1
 10333  0DE2  3000               	movlw	0
 10334  0DE3  00AD               	movwf	delay@counter
 10335  0DE4                     l502:	
 10336  0DE4  0830               	movf	delay@counter+3,w
 10337  0DE5  3A80               	xorlw	128
 10338  0DE6  00A8               	movwf	??_delay
 10339  0DE7  082C               	movf	delay@adjustedDelaytime+3,w
 10340  0DE8  3A80               	xorlw	128
 10341  0DE9  0228               	subwf	??_delay,w
 10342  0DEA  1D03               	skipz
 10343  0DEB  2DF6               	goto	u3993
 10344  0DEC  082B               	movf	delay@adjustedDelaytime+2,w
 10345  0DED  022F               	subwf	delay@counter+2,w
 10346  0DEE  1D03               	skipz
 10347  0DEF  2DF6               	goto	u3993
 10348  0DF0  082A               	movf	delay@adjustedDelaytime+1,w
 10349  0DF1  022E               	subwf	delay@counter+1,w
 10350  0DF2  1D03               	skipz
 10351  0DF3  2DF6               	goto	u3993
 10352  0DF4  0829               	movf	delay@adjustedDelaytime,w
 10353  0DF5  022D               	subwf	delay@counter,w
 10354  0DF6                     u3993:	
 10355  0DF6  1803               	btfsc	3,0
 10356  0DF7  0008               	return
 10357  0DF8  3001               	movlw	1
 10358  0DF9  07AD               	addwf	delay@counter,f
 10359  0DFA  3000               	movlw	0
 10360  0DFB  3DAE               	addwfc	delay@counter+1,f
 10361  0DFC  3000               	movlw	0
 10362  0DFD  3DAF               	addwfc	delay@counter+2,f
 10363  0DFE  3000               	movlw	0
 10364  0DFF  3DB0               	addwfc	delay@counter+3,f
 10365  0E00  2DE4               	goto	l502
 10366  0E01                     __end_of_delay:	
 10367                           
 10368                           	psect	text27
 10369  0C0B                     __ptext27:	
 10370 ;; *************** function ___wmul *****************
 10371 ;; Defined at:
 10372 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10375 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10376 ;; Auto vars:     Size  Location     Type
 10377 ;;  product         2    4[BANK0 ] unsigned int 
 10378 ;; Return value:  Size  Location     Type
 10379 ;;                  2    0[BANK0 ] unsigned int 
 10380 ;; Registers used:
 10381 ;;		wreg, status,2, status,0
 10382 ;; Tracked objects:
 10383 ;;		On entry : 0/0
 10384 ;;		On exit  : 0/0
 10385 ;;		Unchanged: 0/0
 10386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10387 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10388 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10390 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10391 ;;Total ram usage:        6 bytes
 10392 ;; Hardware stack levels used:    1
 10393 ;; Hardware stack levels required when called:    3
 10394 ;; This function calls:
 10395 ;;		Nothing
 10396 ;; This function is called by:
 10397 ;;		_delay
 10398 ;;		_main
 10399 ;;		_blinkyLoop
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           
 10404                           ;psect for function ___wmul
 10405  0C0B                     ___wmul:	
 10406                           
 10407                           ;incstack = 0
 10408                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10409  0C0B  0020               	movlb	0	; select bank0
 10410  0C0C  01A4               	clrf	___wmul@product
 10411  0C0D  01A5               	clrf	___wmul@product+1
 10412  0C0E                     l4118:	
 10413  0C0E  1C20               	btfss	___wmul@multiplier,0
 10414  0C0F  2C14               	goto	l946
 10415  0C10  0822               	movf	___wmul@multiplicand,w
 10416  0C11  07A4               	addwf	___wmul@product,f
 10417  0C12  0823               	movf	___wmul@multiplicand+1,w
 10418  0C13  3DA5               	addwfc	___wmul@product+1,f
 10419  0C14                     l946:	
 10420  0C14  3001               	movlw	1
 10421  0C15                     u3955:	
 10422  0C15  35A2               	lslf	___wmul@multiplicand,f
 10423  0C16  0DA3               	rlf	___wmul@multiplicand+1,f
 10424  0C17  0B89               	decfsz	9,f
 10425  0C18  2C15               	goto	u3955
 10426  0C19  3001               	movlw	1
 10427  0C1A                     u3965:	
 10428  0C1A  36A1               	lsrf	___wmul@multiplier+1,f
 10429  0C1B  0CA0               	rrf	___wmul@multiplier,f
 10430  0C1C  0B89               	decfsz	9,f
 10431  0C1D  2C1A               	goto	u3965
 10432  0C1E  0820               	movf	___wmul@multiplier,w
 10433  0C1F  0421               	iorwf	___wmul@multiplier+1,w
 10434  0C20  1D03               	btfss	3,2
 10435  0C21  2C0E               	goto	l4118
 10436  0C22  0825               	movf	___wmul@product+1,w
 10437  0C23  00A1               	movwf	?___wmul+1
 10438  0C24  0824               	movf	___wmul@product,w
 10439  0C25  00A0               	movwf	?___wmul
 10440  0C26  0008               	return
 10441  0C27                     __end_of___wmul:	
 10442                           
 10443                           	psect	text28
 10444  0B0A                     __ptext28:	
 10445 ;; *************** function _LED7SegPinWrite *****************
 10446 ;; Defined at:
 10447 ;;		line 48 in file "LED7Seg.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;  val             1    wreg     unsigned char 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  val             1    0[BANK0 ] unsigned char 
 10452 ;; Return value:  Size  Location     Type
 10453 ;;                  1    wreg      void 
 10454 ;; Registers used:
 10455 ;;		wreg, status,2, status,0
 10456 ;; Tracked objects:
 10457 ;;		On entry : 0/0
 10458 ;;		On exit  : 0/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10464 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10465 ;;Total ram usage:        1 bytes
 10466 ;; Hardware stack levels used:    1
 10467 ;; Hardware stack levels required when called:    3
 10468 ;; This function calls:
 10469 ;;		Nothing
 10470 ;; This function is called by:
 10471 ;;		_LED7SegShiftOutPulseClock
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           
 10475                           
 10476                           ;psect for function _LED7SegPinWrite
 10477  0B0A                     _LED7SegPinWrite:	
 10478                           
 10479                           ;incstack = 0
 10480                           ; Regs used in _LED7SegPinWrite: [wreg+status,2+status,0]
 10481                           ;LED7SegPinWrite@val stored from wreg
 10482  0B0A  0020               	movlb	0	; select bank0
 10483  0B0B  00A0               	movwf	LED7SegPinWrite@val
 10484                           
 10485                           ;LED7Seg.c: 50: if (val){
 10486  0B0C  0820               	movf	LED7SegPinWrite@val,w
 10487  0B0D  1903               	btfsc	3,2
 10488  0B0E  2B11               	goto	l707
 10489                           
 10490                           ;LED7Seg.c: 52: do { LATCbits.LATC7 = 1; } while(0);
 10491  0B0F  1798               	bsf	24,7	;volatile
 10492                           
 10493                           ;LED7Seg.c: 53: } else {
 10494  0B10  0008               	return
 10495  0B11                     l707:	
 10496                           ;LED7Seg.c: 55: do { LATCbits.LATC7 = 0; } while(0);
 10497                           
 10498  0B11  1398               	bcf	24,7	;volatile
 10499  0B12  0008               	return
 10500  0B13                     __end_of_LED7SegPinWrite:	
 10501                           
 10502                           	psect	text29
 10503  0BD7                     __ptext29:	
 10504 ;; *************** function _InitmvcChannels *****************
 10505 ;; Defined at:
 10506 ;;		line 182 in file "main.c"
 10507 ;; Parameters:    Size  Location     Type
 10508 ;;		None
 10509 ;; Auto vars:     Size  Location     Type
 10510 ;;  i               2    1[BANK0 ] int 
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  1    wreg      void 
 10513 ;; Registers used:
 10514 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10523 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10524 ;;Total ram usage:        3 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; Hardware stack levels required when called:    3
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_main
 10531 ;; This function uses a non-reentrant model
 10532 ;;
 10533                           
 10534                           
 10535                           ;psect for function _InitmvcChannels
 10536  0BD7                     _InitmvcChannels:	
 10537                           
 10538                           ;main.c: 183: for(int i=0; i<cMixFaderCount;i++) {
 10539                           
 10540                           ;incstack = 0
 10541                           ; Regs used in _InitmvcChannels: [wreg+fsr1l+fsr1h+status,2+status,0]
 10542  0BD7  0020               	movlb	0	; select bank0
 10543  0BD8  01A1               	clrf	InitmvcChannels@i
 10544  0BD9  01A2               	clrf	InitmvcChannels@i+1
 10545  0BDA                     L6:	
 10546  0BDA  0822               	movf	InitmvcChannels@i+1,w
 10547  0BDB  3A80               	xorlw	128
 10548  0BDC  00A0               	movwf	??_InitmvcChannels
 10549  0BDD  3080               	movlw	128
 10550  0BDE  0220               	subwf	??_InitmvcChannels,w
 10551  0BDF  1D03               	skipz
 10552  0BE0  2BE3               	goto	u2925
 10553  0BE1  3004               	movlw	4
 10554  0BE2  0221               	subwf	InitmvcChannels@i,w
 10555  0BE3                     u2925:	
 10556  0BE3  1803               	btfsc	3,0
 10557  0BE4  0008               	return
 10558                           
 10559                           ;main.c: 184: mvcChannels[i]=0;
 10560  0BE5  0020               	movlb	0	; select bank0
 10561  0BE6  0821               	movf	InitmvcChannels@i,w
 10562  0BE7  3EC9               	addlw	(low (_mvcChannels| 0))& (0+255)
 10563  0BE8  0086               	movwf	6
 10564  0BE9  0187               	clrf	7
 10565  0BEA  0181               	clrf	1
 10566  0BEB  3001               	movlw	1
 10567  0BEC  07A1               	addwf	InitmvcChannels@i,f
 10568  0BED  3000               	movlw	0
 10569  0BEE  3DA2               	addwfc	InitmvcChannels@i+1,f
 10570  0BEF  2BDA               	goto	L6
 10571  0BF0                     __end_of_InitmvcChannels:	
 10572                           
 10573                           	psect	text30
 10574  0C43                     __ptext30:	
 10575 ;; *************** function _InitPanelInChannels *****************
 10576 ;; Defined at:
 10577 ;;		line 176 in file "main.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;		None
 10580 ;; Auto vars:     Size  Location     Type
 10581 ;;  i               2    1[BANK0 ] int 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  1    wreg      void 
 10584 ;; Registers used:
 10585 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10594 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10595 ;;Total ram usage:        3 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:    3
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_main
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           
 10606                           ;psect for function _InitPanelInChannels
 10607  0C43                     _InitPanelInChannels:	
 10608                           
 10609                           ;main.c: 177: for(int i=0; i<cMixFaderCount;i++) {
 10610                           
 10611                           ;incstack = 0
 10612                           ; Regs used in _InitPanelInChannels: [wreg+fsr1l+fsr1h+status,2+status,0]
 10613  0C43  0020               	movlb	0	; select bank0
 10614  0C44  01A1               	clrf	InitPanelInChannels@i
 10615  0C45  01A2               	clrf	InitPanelInChannels@i+1
 10616  0C46                     L7:	
 10617  0C46  0822               	movf	InitPanelInChannels@i+1,w
 10618  0C47  3A80               	xorlw	128
 10619  0C48  00A0               	movwf	??_InitPanelInChannels
 10620  0C49  3080               	movlw	128
 10621  0C4A  0220               	subwf	??_InitPanelInChannels,w
 10622  0C4B  1D03               	skipz
 10623  0C4C  2C4F               	goto	u2905
 10624  0C4D  3004               	movlw	4
 10625  0C4E  0221               	subwf	InitPanelInChannels@i,w
 10626  0C4F                     u2905:	
 10627  0C4F  1803               	btfsc	3,0
 10628  0C50  0008               	return
 10629                           
 10630                           ;main.c: 178: PanelInChannels[i]=0;
 10631  0C51  0020               	movlb	0	; select bank0
 10632  0C52  0821               	movf	InitPanelInChannels@i,w
 10633  0C53  3EA4               	addlw	(low (_PanelInChannels| 0))& (0+255)
 10634  0C54  0086               	movwf	6
 10635  0C55  0187               	clrf	7
 10636  0C56  0181               	clrf	1
 10637                           
 10638                           ;main.c: 179: faderActiveFlag[i]=0;
 10639  0C57  0821               	movf	InitPanelInChannels@i,w
 10640  0C58  3EA8               	addlw	(low (_faderActiveFlag| 0))& (0+255)
 10641  0C59  0086               	movwf	6
 10642  0C5A  0187               	clrf	7
 10643  0C5B  0181               	clrf	1
 10644  0C5C  3001               	movlw	1
 10645  0C5D  07A1               	addwf	InitPanelInChannels@i,f
 10646  0C5E  3000               	movlw	0
 10647  0C5F  3DA2               	addwfc	InitPanelInChannels@i+1,f
 10648  0C60  2C46               	goto	L7
 10649  0C61                     __end_of_InitPanelInChannels:	
 10650                           
 10651                           	psect	text31
 10652  0B6A                     __ptext31:	
 10653 ;; *************** function _ADCC_GetSingleConversion *****************
 10654 ;; Defined at:
 10655 ;;		line 132 in file "mcc_generated_files/adcc.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  channel         1    wreg     enum E14259
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;  channel         1    3[BANK0 ] enum E14259
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  2    0[BANK0 ] unsigned int 
 10662 ;; Registers used:
 10663 ;;		wreg
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10669 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;Total ram usage:        4 bytes
 10674 ;; Hardware stack levels used:    1
 10675 ;; Hardware stack levels required when called:    3
 10676 ;; This function calls:
 10677 ;;		Nothing
 10678 ;; This function is called by:
 10679 ;;		_main
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           
 10684                           ;psect for function _ADCC_GetSingleConversion
 10685  0B6A                     _ADCC_GetSingleConversion:	
 10686                           
 10687                           ;incstack = 0
 10688                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 10689                           ;ADCC_GetSingleConversion@channel stored from wreg
 10690  0B6A  0020               	movlb	0	; select bank0
 10691  0B6B  00A3               	movwf	ADCC_GetSingleConversion@channel
 10692                           
 10693                           ;adcc.c: 135: ADPCH = channel;
 10694  0B6C  0823               	movf	ADCC_GetSingleConversion@channel,w
 10695  0B6D  0021               	movlb	1	; select bank1
 10696  0B6E  009E               	movwf	30	;volatile
 10697                           
 10698                           ;adcc.c: 138: ADCON0bits.ADON = 1;
 10699  0B6F  1793               	bsf	19,7	;volatile
 10700                           
 10701                           ;adcc.c: 141: ADCON0bits.ADCONT = 0;
 10702  0B70  1313               	bcf	19,6	;volatile
 10703                           
 10704                           ;adcc.c: 144: ADCON0bits.ADGO = 1;
 10705  0B71  1413               	bsf	19,0	;volatile
 10706                           
 10707                           ;adcc.c: 147: __nop();
 10708  0B72  0000               	nop
 10709  0B73                     l163:	
 10710                           ;adcc.c: 151: {
 10711                           
 10712                           ;adcc.c: 150: while (ADCON0bits.ADGO)
 10713                           
 10714  0B73  0021               	movlb	1	; select bank1
 10715  0B74  1813               	btfsc	19,0	;volatile
 10716  0B75  2B73               	goto	l163
 10717                           
 10718                           ;adcc.c: 152: }
 10719                           ;adcc.c: 155: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10720  0B76  080D               	movf	13,w	;volatile
 10721  0B77  0020               	movlb	0	; select bank0
 10722  0B78  00A1               	movwf	?_ADCC_GetSingleConversion+1
 10723  0B79  0021               	movlb	1	; select bank1
 10724  0B7A  080C               	movf	12,w	;volatile
 10725  0B7B  0020               	movlb	0	; select bank0
 10726  0B7C  00A0               	movwf	?_ADCC_GetSingleConversion
 10727  0B7D  0008               	return
 10728  0B7E                     __end_of_ADCC_GetSingleConversion:	
 10729                           
 10730                           	psect	intentry
 10731  0004                     __pintentry:	
 10732 ;; *************** function _INTERRUPT_InterruptManager *****************
 10733 ;; Defined at:
 10734 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 10735 ;; Parameters:    Size  Location     Type
 10736 ;;		None
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;		None
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  1    wreg      void 
 10741 ;; Registers used:
 10742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10750 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10752 ;;Total ram usage:        1 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:    2
 10755 ;; This function calls:
 10756 ;;		_I2C1_BusCollisionISR
 10757 ;;		_I2C1_ISR
 10758 ;; This function is called by:
 10759 ;;		Interrupt level 1
 10760 ;; This function uses a non-reentrant model
 10761 ;;
 10762                           
 10763  0004                     _INTERRUPT_InterruptManager:	
 10764                           
 10765                           ;incstack = 0
 10766  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10767                           
 10768                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10769  0005  3180               	pagesel	$
 10770  0006  0020               	movlb	0	; select bank0
 10771  0007  087F               	movf	127,w
 10772  0008  00FD               	movwf	??_INTERRUPT_InterruptManager
 10773                           
 10774                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.BCL1IE == 1 && PIR3bits.BC
      +                          L1IF == 1)
 10775  0009  1F0B               	btfss	11,6	;volatile
 10776  000A  2813               	goto	i1l394
 10777  000B  002E               	movlb	14	; select bank14
 10778  000C  1899               	btfsc	25,1	;volatile
 10779  000D  1C8F               	btfss	15,1	;volatile
 10780  000E  2813               	goto	i1l394
 10781                           
 10782                           ;interrupt_manager.c: 55: {
 10783                           ;interrupt_manager.c: 56: I2C1_BusCollisionISR();
 10784  000F  3187  27FF  3180   	fcall	_I2C1_BusCollisionISR
 10785                           
 10786                           ;interrupt_manager.c: 57: }
 10787  0012  281B               	goto	i1l398
 10788  0013                     i1l394:	
 10789                           
 10790                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.SSP1IE == 1 && PIR3bi
      +                          ts.SSP1IF == 1)
 10791  0013  1F0B               	btfss	11,6	;volatile
 10792  0014  281B               	goto	i1l398
 10793  0015  002E               	movlb	14	; select bank14
 10794  0016  1819               	btfsc	25,0	;volatile
 10795  0017  1C0F               	btfss	15,0	;volatile
 10796  0018  281B               	goto	i1l398
 10797                           
 10798                           ;interrupt_manager.c: 59: {
 10799                           ;interrupt_manager.c: 60: I2C1_ISR();
 10800  0019  3183  2307         	fcall	_I2C1_ISR
 10801  001B                     i1l398:	
 10802                           ;interrupt_manager.c: 62: else
 10803                           ;interrupt_manager.c: 63: {
 10804                           
 10805                           ;interrupt_manager.c: 61: }
 10806                           
 10807  001B  087D               	movf	??_INTERRUPT_InterruptManager,w
 10808  001C  0020               	movlb	0	; select bank0
 10809  001D  00FF               	movwf	127
 10810  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10811  001F  0009               	retfie
 10812  0020                     __end_of_INTERRUPT_InterruptManager:	
 10813                           
 10814                           	psect	text33
 10815  0307                     __ptext33:	
 10816 ;; *************** function _I2C1_ISR *****************
 10817 ;; Defined at:
 10818 ;;		line 233 in file "mcc_generated_files/i2c1.c"
 10819 ;; Parameters:    Size  Location     Type
 10820 ;;		None
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;		None
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      void 
 10825 ;; Registers used:
 10826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;Total ram usage:        4 bytes
 10837 ;; Hardware stack levels used:    1
 10838 ;; Hardware stack levels required when called:    1
 10839 ;; This function calls:
 10840 ;;		_I2C1_FunctionComplete
 10841 ;;		_I2C1_Stop
 10842 ;; This function is called by:
 10843 ;;		_INTERRUPT_InterruptManager
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           
 10848                           ;psect for function _I2C1_ISR
 10849  0307                     _I2C1_ISR:	
 10850                           
 10851                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
 10852                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
 10853                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
 10854                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
 10855                           ;i2c1.c: 241: PIR3bits.SSP1IF = 0;
 10856                           
 10857                           ;incstack = 0
 10858                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10859  0307  002E               	movlb	14	; select bank14
 10860  0308  100F               	bcf	15,0	;volatile
 10861                           
 10862                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
 10863  0309  0023               	movlb	3	; select bank3
 10864  030A  1F90               	btfss	16,7	;volatile
 10865  030B  2C36               	goto	i1l3398
 10866                           
 10867                           ;i2c1.c: 246: {
 10868                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
 10869  030C  1390               	bcf	16,7	;volatile
 10870                           
 10871                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
 10872  030D  0020               	movlb	0	; select bank0
 10873  030E  01EF               	clrf	_i2c1_state
 10874                           
 10875                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 10876  030F  0872               	movf	_p_i2c1_current,w
 10877  0310  3E02               	addlw	2
 10878  0311  0086               	movwf	6
 10879  0312  0187               	clrf	7
 10880  0313  0801               	movf	1,w
 10881  0314  0086               	movwf	6
 10882  0315  0187               	clrf	7
 10883  0316  0181               	clrf	1
 10884  0317  0A81               	incf	1,f
 10885                           
 10886                           ;i2c1.c: 253: p_i2c1_current = (0);
 10887  0318  01F2               	clrf	_p_i2c1_current
 10888                           
 10889                           ;i2c1.c: 255: return;
 10890  0319  0008               	return
 10891  031A                     i1l292:	
 10892                           ;i2c1.c: 260: {
 10893                           ;i2c1.c: 261: case S_MASTER_IDLE:
 10894                           
 10895                           ;i2c1.c: 256: }
 10896                           ;i2c1.c: 259: switch(i2c1_state)
 10897                           
 10898                           
 10899                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
 10900  031A  18E9               	btfsc	_i2c1_object+2,1
 10901  031B  0008               	return
 10902                           
 10903                           ;i2c1.c: 264: {
 10904                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
 10905  031C  0868               	movf	low ((_i2c1_object| 0+1)),w
 10906  031D  00F9               	movwf	??_I2C1_ISR
 10907  031E  0879               	movf	??_I2C1_ISR,w
 10908  031F  00F2               	movwf	_p_i2c1_current
 10909                           
 10910                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
 10911  0320  0868               	movf	low ((_i2c1_object| 0+1)),w
 10912  0321  0086               	movwf	6
 10913  0322  0187               	clrf	7
 10914  0323  0801               	movf	1,w
 10915  0324  00F9               	movwf	??_I2C1_ISR
 10916  0325  0879               	movf	??_I2C1_ISR,w
 10917  0326  00F4               	movwf	_i2c1_trb_count
 10918                           
 10919                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 10920  0327  0868               	movf	low ((_i2c1_object| 0+1)),w
 10921  0328  0086               	movwf	6
 10922  0329  0187               	clrf	7
 10923  032A  3F41               	moviw [1]fsr1
 10924  032B  00F3               	movwf	_p_i2c1_trb_current
 10925                           
 10926                           ;i2c1.c: 270: i2c1_object.pTrHead++;
 10927  032C  3003               	movlw	3
 10928  032D  00F9               	movwf	??_I2C1_ISR
 10929  032E  0879               	movf	??_I2C1_ISR,w
 10930  032F  07E8               	addwf	low ((_i2c1_object| 0+1)),f
 10931                           
 10932                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 10933  0330  0868               	movf	low ((_i2c1_object| 0+1)),w
 10934  0331  3AD8               	xorlw	(low ((_i2c1_tr_queue| 0+3)))& (0+255)
 10935  0332  1D03               	skipz
 10936  0333  2B38               	goto	i1l3286
 10937                           
 10938                           ;i2c1.c: 274: {
 10939                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
 10940  0334  30D5               	movlw	(low (_i2c1_tr_queue| 0))& (0+255)
 10941  0335  00F9               	movwf	??_I2C1_ISR
 10942  0336  0879               	movf	??_I2C1_ISR,w
 10943  0337  00E8               	movwf	low ((_i2c1_object| 0+1))
 10944  0338                     i1l3286:	
 10945                           
 10946                           ;i2c1.c: 277: }
 10947                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
 10948  0338  1069               	bcf	_i2c1_object+2,0
 10949                           
 10950                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 10951  0339  0868               	movf	low ((_i2c1_object| 0+1)),w
 10952  033A  0667               	xorwf	_i2c1_object,w
 10953  033B  1903               	btfsc	3,2
 10954                           
 10955                           ;i2c1.c: 285: {
 10956                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
 10957  033C  14E9               	bsf	_i2c1_object+2,1
 10958                           
 10959                           ;i2c1.c: 288: }
 10960                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
 10961  033D  0023               	movlb	3	; select bank3
 10962  033E  1411               	bsf	17,0	;volatile
 10963                           
 10964                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
 10965  033F  3002               	movlw	2
 10966  0340  00F9               	movwf	??_I2C1_ISR
 10967  0341  0879               	movf	??_I2C1_ISR,w
 10968  0342  0020               	movlb	0	; select bank0
 10969  0343  00EF               	movwf	_i2c1_state
 10970                           
 10971                           ;i2c1.c: 295: }
 10972                           ;i2c1.c: 297: break;
 10973  0344  0008               	return
 10974  0345                     i1l297:	
 10975                           ;i2c1.c: 299: case S_MASTER_RESTART:
 10976                           
 10977                           
 10978                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
 10979  0345  0023               	movlb	3	; select bank3
 10980  0346  1491               	bsf	17,1	;volatile
 10981                           
 10982                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
 10983  0347  3002               	movlw	2
 10984  0348  00F9               	movwf	??_I2C1_ISR
 10985  0349  0879               	movf	??_I2C1_ISR,w
 10986  034A  0020               	movlb	0	; select bank0
 10987  034B  00EF               	movwf	_i2c1_state
 10988                           
 10989                           ;i2c1.c: 309: break;
 10990  034C  0008               	return
 10991  034D                     i1l298:	
 10992                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
 10993                           
 10994                           
 10995                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
 10996  034D  0023               	movlb	3	; select bank3
 10997  034E  1F11               	btfss	17,6	;volatile
 10998  034F  2B59               	goto	i1l3298
 10999                           
 11000                           ;i2c1.c: 314: {
 11001                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
 11002  0350  3001               	movlw	1
 11003  0351  00F9               	movwf	??_I2C1_ISR
 11004  0352  0879               	movf	??_I2C1_ISR,w
 11005  0353  0020               	movlb	0	; select bank0
 11006  0354  07EB               	addwf	_i2c1_object+4,f
 11007                           
 11008                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11009  0355  3004               	movlw	4
 11010  0356  318B  23BF         	fcall	_I2C1_Stop
 11011                           
 11012                           ;i2c1.c: 317: }
 11013  0358  0008               	return
 11014  0359                     i1l3298:	
 11015                           
 11016                           ;i2c1.c: 318: else
 11017                           ;i2c1.c: 319: {
 11018                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 11019  0359  0876               	movf	I2C1_ISR@i2c_address+1,w
 11020  035A  00FA               	movwf	??_I2C1_ISR+1
 11021  035B  0875               	movf	I2C1_ISR@i2c_address,w
 11022  035C  00F9               	movwf	??_I2C1_ISR
 11023  035D  36FA               	lsrf	??_I2C1_ISR+1,f
 11024  035E  0CF9               	rrf	??_I2C1_ISR,f
 11025  035F  0879               	movf	??_I2C1_ISR,w
 11026  0360  0023               	movlb	3	; select bank3
 11027  0361  008C               	movwf	12	;volatile
 11028                           
 11029                           ;i2c1.c: 324: if(i2c_address & 0x01)
 11030  0362  1C75               	btfss	I2C1_ISR@i2c_address,0
 11031  0363  2B6A               	goto	i1l3304
 11032                           
 11033                           ;i2c1.c: 325: {
 11034                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
 11035  0364  300B               	movlw	11
 11036  0365  00F9               	movwf	??_I2C1_ISR
 11037  0366  0879               	movf	??_I2C1_ISR,w
 11038  0367  0020               	movlb	0	; select bank0
 11039  0368  00EF               	movwf	_i2c1_state
 11040                           
 11041                           ;i2c1.c: 329: }
 11042  0369  0008               	return
 11043  036A                     i1l3304:	
 11044                           
 11045                           ;i2c1.c: 330: else
 11046                           ;i2c1.c: 331: {
 11047                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
 11048  036A  3003               	movlw	3
 11049  036B  00F9               	movwf	??_I2C1_ISR
 11050  036C  0879               	movf	??_I2C1_ISR,w
 11051  036D  0020               	movlb	0	; select bank0
 11052  036E  00EF               	movwf	_i2c1_state
 11053                           
 11054                           ;i2c1.c: 334: }
 11055                           ;i2c1.c: 335: }
 11056                           ;i2c1.c: 337: break;
 11057  036F  0008               	return
 11058  0370                     i1l303:	
 11059                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
 11060                           
 11061                           
 11062                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
 11063  0370  0023               	movlb	3	; select bank3
 11064  0371  1F11               	btfss	17,6	;volatile
 11065  0372  2B7C               	goto	i1l304
 11066                           
 11067                           ;i2c1.c: 342: {
 11068                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
 11069  0373  3001               	movlw	1
 11070  0374  00F9               	movwf	??_I2C1_ISR
 11071  0375  0879               	movf	??_I2C1_ISR,w
 11072  0376  0020               	movlb	0	; select bank0
 11073  0377  07EB               	addwf	_i2c1_object+4,f
 11074                           
 11075                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11076  0378  3004               	movlw	4
 11077  0379  318B  23BF         	fcall	_I2C1_Stop
 11078                           
 11079                           ;i2c1.c: 345: }
 11080  037B  0008               	return
 11081  037C                     i1l304:	
 11082                           
 11083                           ;i2c1.c: 346: else
 11084                           ;i2c1.c: 347: {
 11085                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
 11086  037C  1491               	bsf	17,1	;volatile
 11087                           
 11088                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 11089  037D  0876               	movf	I2C1_ISR@i2c_address+1,w
 11090  037E  00FA               	movwf	??_I2C1_ISR+1
 11091  037F  0875               	movf	I2C1_ISR@i2c_address,w
 11092  0380  00F9               	movwf	??_I2C1_ISR
 11093  0381  087A               	movf	??_I2C1_ISR+1,w
 11094  0382  00F9               	movwf	??_I2C1_ISR
 11095  0383  01FA               	clrf	??_I2C1_ISR+1
 11096  0384  3006               	movlw	6
 11097  0385  0579               	andwf	??_I2C1_ISR,w
 11098  0386  00FB               	movwf	??_I2C1_ISR+2
 11099  0387  3000               	movlw	0
 11100  0388  057A               	andwf	??_I2C1_ISR+1,w
 11101  0389  00FC               	movwf	??_I2C1_ISR+3
 11102  038A  30F0               	movlw	240
 11103  038B  047B               	iorwf	??_I2C1_ISR+2,w
 11104  038C  00F5               	movwf	I2C1_ISR@i2c_address
 11105  038D  3000               	movlw	0
 11106  038E  047C               	iorwf	??_I2C1_ISR+3,w
 11107  038F  00F6               	movwf	I2C1_ISR@i2c_address+1
 11108                           
 11109                           ;i2c1.c: 357: i2c_address |= 0x0001;
 11110  0390  1475               	bsf	I2C1_ISR@i2c_address,0
 11111                           
 11112                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
 11113  0391  0020               	movlb	0	; select bank0
 11114  0392  01EE               	clrf	I2C1_ISR@i2c_10bit_address_restart
 11115  0393  0AEE               	incf	I2C1_ISR@i2c_10bit_address_restart,f
 11116                           
 11117                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
 11118  0394  3002               	movlw	2
 11119  0395  00F9               	movwf	??_I2C1_ISR
 11120  0396  0879               	movf	??_I2C1_ISR,w
 11121  0397  00EF               	movwf	_i2c1_state
 11122                           
 11123                           ;i2c1.c: 364: }
 11124                           ;i2c1.c: 366: break;
 11125  0398  0008               	return
 11126  0399                     i1l3318:	
 11127                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
 11128                           
 11129                           
 11130                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
 11131  0399  036E               	decf	I2C1_ISR@i2c_10bit_address_restart,w
 11132  039A  1903               	btfsc	3,2
 11133  039B  2BAD               	goto	i1l3338
 11134                           
 11135                           ;i2c1.c: 382: {
 11136                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
 11137  039C  0873               	movf	_p_i2c1_trb_current,w
 11138  039D  0086               	movwf	6
 11139  039E  0187               	clrf	7
 11140  039F  3F40               	moviw [0]fsr1
 11141  03A0  00F5               	movwf	I2C1_ISR@i2c_address
 11142  03A1  3F41               	moviw [1]fsr1
 11143  03A2  00F6               	movwf	I2C1_ISR@i2c_address+1
 11144                           
 11145                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 11146  03A3  0873               	movf	_p_i2c1_trb_current,w
 11147  03A4  0086               	movwf	6
 11148  03A5  0187               	clrf	7
 11149  03A6  3F43               	moviw [3]fsr1
 11150  03A7  00F1               	movwf	I2C1_ISR@pi2c_buf_ptr
 11151                           
 11152                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
 11153  03A8  0873               	movf	_p_i2c1_trb_current,w
 11154  03A9  0086               	movwf	6
 11155  03AA  0187               	clrf	7
 11156  03AB  3F42               	moviw [2]fsr1
 11157  03AC  00F0               	movwf	I2C1_ISR@i2c_bytes_left
 11158  03AD                     i1l3338:	
 11159                           ;i2c1.c: 407: }
 11160                           ;i2c1.c: 408: }
 11161                           
 11162                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
 11163                           
 11164                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
 11165                           
 11166                           ;i2c1.c: 400: else
 11167                           ;i2c1.c: 401: {
 11168                           ;i2c1.c: 403: SSP1BUF = i2c_address;
 11169                           
 11170                           ;i2c1.c: 399: }
 11171                           
 11172                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
 11173                           
 11174                           ;i2c1.c: 393: {
 11175                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
 11176                           
 11177                           ;i2c1.c: 391: {
 11178                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
 11179                           
 11180                           ;i2c1.c: 387: }
 11181                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
 11182                           
 11183                           
 11184                           ;i2c1.c: 409: else
 11185                           ;i2c1.c: 410: {
 11186                           ;i2c1.c: 412: SSP1BUF = i2c_address;
 11187  03AD  0875               	movf	I2C1_ISR@i2c_address,w
 11188  03AE  0023               	movlb	3	; select bank3
 11189  03AF  008C               	movwf	12	;volatile
 11190                           
 11191                           ;i2c1.c: 413: if(i2c_address & 0x01)
 11192  03B0  1C75               	btfss	I2C1_ISR@i2c_address,0
 11193  03B1  2BB8               	goto	i1l3344
 11194                           
 11195                           ;i2c1.c: 414: {
 11196                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
 11197  03B2  3005               	movlw	5
 11198  03B3  00F9               	movwf	??_I2C1_ISR
 11199  03B4  0879               	movf	??_I2C1_ISR,w
 11200  03B5  0020               	movlb	0	; select bank0
 11201  03B6  00EF               	movwf	_i2c1_state
 11202                           
 11203                           ;i2c1.c: 417: }
 11204  03B7  0008               	return
 11205  03B8                     i1l3344:	
 11206                           
 11207                           ;i2c1.c: 418: else
 11208                           ;i2c1.c: 419: {
 11209                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
 11210  03B8  3003               	movlw	3
 11211  03B9  00F9               	movwf	??_I2C1_ISR
 11212  03BA  0879               	movf	??_I2C1_ISR,w
 11213  03BB  0020               	movlb	0	; select bank0
 11214  03BC  00EF               	movwf	_i2c1_state
 11215                           
 11216                           ;i2c1.c: 422: }
 11217                           ;i2c1.c: 423: }
 11218                           ;i2c1.c: 424: break;
 11219  03BD  0008               	return
 11220  03BE                     i1l314:	
 11221                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
 11222                           
 11223                           
 11224                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
 11225  03BE  0023               	movlb	3	; select bank3
 11226  03BF  1F11               	btfss	17,6	;volatile
 11227  03C0  2BCC               	goto	i1l3352
 11228                           
 11229                           ;i2c1.c: 430: {
 11230                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
 11231  03C1  3001               	movlw	1
 11232  03C2  00F9               	movwf	??_I2C1_ISR
 11233  03C3  0879               	movf	??_I2C1_ISR,w
 11234  03C4  0020               	movlb	0	; select bank0
 11235  03C5  07EB               	addwf	_i2c1_object+4,f
 11236                           
 11237                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
 11238  03C6  0023               	movlb	3	; select bank3
 11239  03C7  1311               	bcf	17,6	;volatile
 11240                           
 11241                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
 11242  03C8  3005               	movlw	5
 11243  03C9  318B  23BF         	fcall	_I2C1_Stop
 11244                           
 11245                           ;i2c1.c: 440: }
 11246  03CB  0008               	return
 11247  03CC                     i1l3352:	
 11248                           
 11249                           ;i2c1.c: 441: else
 11250                           ;i2c1.c: 442: {
 11251                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
 11252  03CC  3001               	movlw	1
 11253  03CD  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
 11254  03CE  0A70               	incf	I2C1_ISR@i2c_bytes_left,w
 11255  03CF  1D03               	btfss	3,2
 11256  03D0  2BE5               	goto	i1l3360
 11257                           
 11258                           ;i2c1.c: 445: {
 11259                           ;i2c1.c: 449: p_i2c1_trb_current++;
 11260  03D1  3004               	movlw	4
 11261  03D2  00F9               	movwf	??_I2C1_ISR
 11262  03D3  0879               	movf	??_I2C1_ISR,w
 11263  03D4  07F3               	addwf	_p_i2c1_trb_current,f
 11264                           
 11265                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
 11266  03D5  3001               	movlw	1
 11267  03D6  02F4               	subwf	_i2c1_trb_count,f
 11268  03D7  1D03               	btfss	3,2
 11269  03D8  2BDD               	goto	i1l318
 11270                           
 11271                           ;i2c1.c: 453: {
 11272                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11273  03D9  3000               	movlw	0
 11274  03DA  318B  23BF         	fcall	_I2C1_Stop
 11275                           
 11276                           ;i2c1.c: 455: }
 11277  03DC  0008               	return
 11278  03DD                     i1l318:	
 11279                           
 11280                           ;i2c1.c: 456: else
 11281                           ;i2c1.c: 457: {
 11282                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
 11283  03DD  0023               	movlb	3	; select bank3
 11284  03DE  1491               	bsf	17,1	;volatile
 11285                           
 11286                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
 11287  03DF  3002               	movlw	2
 11288  03E0  00F9               	movwf	??_I2C1_ISR
 11289  03E1  0879               	movf	??_I2C1_ISR,w
 11290  03E2  0020               	movlb	0	; select bank0
 11291  03E3  00EF               	movwf	_i2c1_state
 11292                           
 11293                           ;i2c1.c: 469: }
 11294                           ;i2c1.c: 470: }
 11295  03E4  0008               	return
 11296  03E5                     i1l3360:	
 11297                           
 11298                           ;i2c1.c: 471: else
 11299                           ;i2c1.c: 472: {
 11300                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
 11301  03E5  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11302  03E6  0086               	movwf	6
 11303  03E7  0187               	clrf	7
 11304  03E8  0801               	movf	1,w
 11305  03E9  0023               	movlb	3	; select bank3
 11306  03EA  008C               	movwf	12	;volatile
 11307  03EB  3001               	movlw	1
 11308  03EC  00F9               	movwf	??_I2C1_ISR
 11309  03ED  0879               	movf	??_I2C1_ISR,w
 11310  03EE  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11311                           
 11312                           ;i2c1.c: 475: }
 11313                           ;i2c1.c: 476: }
 11314                           ;i2c1.c: 477: break;
 11315  03EF  0008               	return
 11316  03F0                     i1l321:	
 11317                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
 11318                           
 11319                           
 11320                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
 11321  03F0  0023               	movlb	3	; select bank3
 11322  03F1  1F11               	btfss	17,6	;volatile
 11323  03F2  2BFE               	goto	i1l322
 11324                           
 11325                           ;i2c1.c: 483: {
 11326                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
 11327  03F3  3001               	movlw	1
 11328  03F4  00F9               	movwf	??_I2C1_ISR
 11329  03F5  0879               	movf	??_I2C1_ISR,w
 11330  03F6  0020               	movlb	0	; select bank0
 11331  03F7  07EB               	addwf	_i2c1_object+4,f
 11332                           
 11333                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 11334  03F8  3004               	movlw	4
 11335  03F9  318B  23BF         	fcall	_I2C1_Stop
 11336                           
 11337                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
 11338  03FB  0023               	movlb	3	; select bank3
 11339  03FC  1311               	bcf	17,6	;volatile
 11340                           
 11341                           ;i2c1.c: 493: }
 11342  03FD  0008               	return
 11343  03FE                     i1l322:	
 11344                           
 11345                           ;i2c1.c: 494: else
 11346                           ;i2c1.c: 495: {
 11347                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
 11348  03FE  1591               	bsf	17,3	;volatile
 11349                           
 11350                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11351  03FF  3008               	movlw	8
 11352  0400  00F9               	movwf	??_I2C1_ISR
 11353  0401  0879               	movf	??_I2C1_ISR,w
 11354  0402  0020               	movlb	0	; select bank0
 11355  0403  00EF               	movwf	_i2c1_state
 11356                           
 11357                           ;i2c1.c: 498: }
 11358                           ;i2c1.c: 499: break;
 11359  0404  0008               	return
 11360  0405                     i1l3372:	
 11361                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
 11362                           
 11363                           
 11364                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
 11365  0405  3008               	movlw	8
 11366  0406  00F9               	movwf	??_I2C1_ISR
 11367  0407  0879               	movf	??_I2C1_ISR,w
 11368  0408  00EF               	movwf	_i2c1_state
 11369                           
 11370                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
 11371  0409  0023               	movlb	3	; select bank3
 11372  040A  1591               	bsf	17,3	;volatile
 11373                           
 11374                           ;i2c1.c: 511: break;
 11375  040B  0008               	return
 11376  040C                     i1l3376:	
 11377                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
 11378                           
 11379                           
 11380                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
 11381  040C  0023               	movlb	3	; select bank3
 11382  040D  080C               	movf	12,w	;volatile
 11383  040E  00F9               	movwf	??_I2C1_ISR
 11384  040F  0871               	movf	I2C1_ISR@pi2c_buf_ptr,w
 11385  0410  0086               	movwf	6
 11386  0411  0187               	clrf	7
 11387  0412  0879               	movf	??_I2C1_ISR,w
 11388  0413  0081               	movwf	1
 11389  0414  3001               	movlw	1
 11390  0415  00F9               	movwf	??_I2C1_ISR
 11391  0416  0879               	movf	??_I2C1_ISR,w
 11392  0417  07F1               	addwf	I2C1_ISR@pi2c_buf_ptr,f
 11393                           
 11394                           ;i2c1.c: 519: if(--i2c_bytes_left)
 11395  0418  3001               	movlw	1
 11396  0419  02F0               	subwf	I2C1_ISR@i2c_bytes_left,f
 11397  041A  1903               	btfsc	3,2
 11398  041B  2C23               	goto	i1l326
 11399                           
 11400                           ;i2c1.c: 520: {
 11401                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
 11402  041C  1291               	bcf	17,5	;volatile
 11403                           
 11404                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
 11405  041D  3006               	movlw	6
 11406  041E  00F9               	movwf	??_I2C1_ISR
 11407  041F  0879               	movf	??_I2C1_ISR,w
 11408  0420  0020               	movlb	0	; select bank0
 11409  0421  00EF               	movwf	_i2c1_state
 11410                           
 11411                           ;i2c1.c: 530: }
 11412  0422  2C26               	goto	i1l3388
 11413  0423                     i1l326:	
 11414                           
 11415                           ;i2c1.c: 531: else
 11416                           ;i2c1.c: 532: {
 11417                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
 11418  0423  1691               	bsf	17,5	;volatile
 11419                           
 11420                           ;i2c1.c: 538: I2C1_FunctionComplete();
 11421  0424  318B  2358         	fcall	_I2C1_FunctionComplete
 11422  0426                     i1l3388:	
 11423                           
 11424                           ;i2c1.c: 539: }
 11425                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
 11426  0426  0023               	movlb	3	; select bank3
 11427  0427  1611               	bsf	17,4	;volatile
 11428                           
 11429                           ;i2c1.c: 543: break;
 11430  0428  0008               	return
 11431  0429                     i1l3390:	
 11432                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
 11433                           
 11434                           
 11435                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
 11436                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 11437  0429  3000               	movlw	0
 11438  042A  318B  23BF         	fcall	_I2C1_Stop
 11439                           
 11440                           ;i2c1.c: 550: break;
 11441  042C  0008               	return
 11442  042D                     i1l3392:	
 11443                           ;i2c1.c: 552: default:
 11444                           
 11445                           
 11446                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
 11447  042D  3001               	movlw	1
 11448  042E  00F9               	movwf	??_I2C1_ISR
 11449  042F  0879               	movf	??_I2C1_ISR,w
 11450  0430  0020               	movlb	0	; select bank0
 11451  0431  07EB               	addwf	_i2c1_object+4,f
 11452                           
 11453                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
 11454  0432  3006               	movlw	6
 11455  0433  318B  23BF         	fcall	_I2C1_Stop
 11456                           
 11457                           ;i2c1.c: 560: }
 11458                           
 11459                           ;i2c1.c: 558: break;
 11460  0435  0008               	return
 11461  0436                     i1l3398:	
 11462  0436  0020               	movlb	0	; select bank0
 11463  0437  086F               	movf	_i2c1_state,w
 11464                           
 11465                           ; Switch size 1, requested type "space"
 11466                           ; Number of cases is 11, Range of values is 0 to 11
 11467                           ; switch strategies available:
 11468                           ; Name         Instructions Cycles
 11469                           ; direct_byte           30     6 (fixed)
 11470                           ; simple_byte           34    18 (average)
 11471                           ; jumptable            260     6 (fixed)
 11472                           ;	Chosen strategy is direct_byte
 11473  0438  0084               	movwf	4
 11474  0439  300C               	movlw	12
 11475  043A  0204               	subwf	4,w
 11476  043B  1803               	skipnc
 11477  043C  2C2D               	goto	i1l3392
 11478  043D  3188               	movlp	high i1S4524
 11479  043E  3504               	lslf	4,w
 11480  043F  3E00               	addlw	low i1S4524
 11481  0440  0082               	movwf	2
 11482  0441  0008               	return
 11483  0442                     __end_of_I2C1_ISR:	
 11484                           
 11485                           	psect	swtext1
 11486  0800                     __pswtext1:	
 11487  0800                     i1S4524:	
 11488  0800  3183  2B1A         	ljmp	i1l292
 11489  0802  3183  2B45         	ljmp	i1l297
 11490  0804  3183  2B99         	ljmp	i1l3318
 11491  0806  3183  2BBE         	ljmp	i1l314
 11492  0808  3184  2C29         	ljmp	i1l3390
 11493  080A  3183  2BF0         	ljmp	i1l321
 11494  080C  3184  2C05         	ljmp	i1l3372
 11495  080E  3184  2C29         	ljmp	i1l3390
 11496  0810  3184  2C0C         	ljmp	i1l3376
 11497  0812  3184  2C2D         	ljmp	i1l3392
 11498  0814  3183  2B4D         	ljmp	i1l298
 11499  0816  3183  2B70         	ljmp	i1l303
 11500                           
 11501                           	psect	text34
 11502  0BBF                     __ptext34:	
 11503 ;; *************** function _I2C1_Stop *****************
 11504 ;; Defined at:
 11505 ;;		line 581 in file "mcc_generated_files/i2c1.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  completion_c    1    wreg     enum E14260
 11508 ;; Auto vars:     Size  Location     Type
 11509 ;;  completion_c    1    1[COMMON] enum E14260
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  1    wreg      void 
 11512 ;; Registers used:
 11513 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11523 ;;Total ram usage:        2 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; This function calls:
 11526 ;;		Nothing
 11527 ;; This function is called by:
 11528 ;;		_I2C1_ISR
 11529 ;; This function uses a non-reentrant model
 11530 ;;
 11531                           
 11532                           
 11533                           ;psect for function _I2C1_Stop
 11534  0BBF                     _I2C1_Stop:	
 11535                           
 11536                           ;incstack = 0
 11537                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 11538                           ;I2C1_Stop@completion_code stored from wreg
 11539  0BBF  00F8               	movwf	I2C1_Stop@completion_code
 11540                           
 11541                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
 11542  0BC0  0023               	movlb	3	; select bank3
 11543  0BC1  1511               	bsf	17,2	;volatile
 11544                           
 11545                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
 11546  0BC2  0872               	movf	_p_i2c1_current,w
 11547  0BC3  3E02               	addlw	2
 11548  0BC4  0086               	movwf	6
 11549  0BC5  0187               	clrf	7
 11550  0BC6  0801               	movf	1,w
 11551  0BC7  1903               	btfsc	3,2
 11552  0BC8  2BD4               	goto	i1l3062
 11553                           
 11554                           ;i2c1.c: 588: {
 11555                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
 11556  0BC9  0878               	movf	I2C1_Stop@completion_code,w
 11557  0BCA  00F7               	movwf	??_I2C1_Stop
 11558  0BCB  0872               	movf	_p_i2c1_current,w
 11559  0BCC  3E02               	addlw	2
 11560  0BCD  0086               	movwf	6
 11561  0BCE  0187               	clrf	7
 11562  0BCF  0801               	movf	1,w
 11563  0BD0  0086               	movwf	6
 11564  0BD1  0187               	clrf	7
 11565  0BD2  0877               	movf	??_I2C1_Stop,w
 11566  0BD3  0081               	movwf	1
 11567  0BD4                     i1l3062:	
 11568                           
 11569                           ;i2c1.c: 591: }
 11570                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
 11571  0BD4  0020               	movlb	0	; select bank0
 11572  0BD5  01EF               	clrf	_i2c1_state
 11573  0BD6  0008               	return
 11574  0BD7                     __end_of_I2C1_Stop:	
 11575                           
 11576                           	psect	text35
 11577  0B58                     __ptext35:	
 11578 ;; *************** function _I2C1_FunctionComplete *****************
 11579 ;; Defined at:
 11580 ;;		line 563 in file "mcc_generated_files/i2c1.c"
 11581 ;; Parameters:    Size  Location     Type
 11582 ;;		None
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;		None
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  1    wreg      void 
 11587 ;; Registers used:
 11588 ;;		wreg, status,2, status,0
 11589 ;; Tracked objects:
 11590 ;;		On entry : 0/0
 11591 ;;		On exit  : 0/0
 11592 ;;		Unchanged: 0/0
 11593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11598 ;;Total ram usage:        1 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		_I2C1_ISR
 11604 ;; This function uses a non-reentrant model
 11605 ;;
 11606                           
 11607                           
 11608                           ;psect for function _I2C1_FunctionComplete
 11609  0B58                     _I2C1_FunctionComplete:	
 11610                           
 11611                           ;i2c1.c: 567: p_i2c1_trb_current++;
 11612                           
 11613                           ;incstack = 0
 11614                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 11615  0B58  3004               	movlw	4
 11616  0B59  00F7               	movwf	??_I2C1_FunctionComplete
 11617  0B5A  0877               	movf	??_I2C1_FunctionComplete,w
 11618  0B5B  07F3               	addwf	_p_i2c1_trb_current,f
 11619                           
 11620                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
 11621  0B5C  3001               	movlw	1
 11622  0B5D  02F4               	subwf	_i2c1_trb_count,f
 11623  0B5E  1D03               	btfss	3,2
 11624  0B5F  2B66               	goto	i1l333
 11625                           
 11626                           ;i2c1.c: 571: {
 11627                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
 11628  0B60  3004               	movlw	4
 11629  0B61  00F7               	movwf	??_I2C1_FunctionComplete
 11630  0B62  0877               	movf	??_I2C1_FunctionComplete,w
 11631  0B63  0020               	movlb	0	; select bank0
 11632  0B64  00EF               	movwf	_i2c1_state
 11633                           
 11634                           ;i2c1.c: 573: }
 11635  0B65  0008               	return
 11636  0B66                     i1l333:	
 11637                           
 11638                           ;i2c1.c: 574: else
 11639                           ;i2c1.c: 575: {
 11640                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
 11641  0B66  0020               	movlb	0	; select bank0
 11642  0B67  01EF               	clrf	_i2c1_state
 11643  0B68  0AEF               	incf	_i2c1_state,f
 11644  0B69  0008               	return
 11645  0B6A                     __end_of_I2C1_FunctionComplete:	
 11646                           
 11647                           	psect	text36
 11648  07FF                     __ptext36:	
 11649 ;; *************** function _I2C1_BusCollisionISR *****************
 11650 ;; Defined at:
 11651 ;;		line 728 in file "mcc_generated_files/i2c1.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;		None
 11654 ;; Auto vars:     Size  Location     Type
 11655 ;;		None
 11656 ;; Return value:  Size  Location     Type
 11657 ;;                  1    wreg      void 
 11658 ;; Registers used:
 11659 ;;		None
 11660 ;; Tracked objects:
 11661 ;;		On entry : 0/0
 11662 ;;		On exit  : 0/0
 11663 ;;		Unchanged: 0/0
 11664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11669 ;;Total ram usage:        0 bytes
 11670 ;; Hardware stack levels used:    1
 11671 ;; This function calls:
 11672 ;;		Nothing
 11673 ;; This function is called by:
 11674 ;;		_INTERRUPT_InterruptManager
 11675 ;; This function uses a non-reentrant model
 11676 ;;
 11677                           
 11678                           
 11679                           ;psect for function _I2C1_BusCollisionISR
 11680  07FF                     _I2C1_BusCollisionISR:	
 11681                           
 11682                           ;incstack = 0
 11683                           ; Regs used in _I2C1_BusCollisionISR: []
 11684  07FF  0008               	return
 11685  0800                     __end_of_I2C1_BusCollisionISR:	
 11686  007E                     btemp	set	126	;btemp
 11687  007E                     int$flags	set	126
 11688  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    49
    Data        20
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     71      80
    BANK1            80     18      74
    BANK2            80      0      36
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    MYI2C_ReadFaders@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    MYI2C_ReadPatch@readTRB.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    MYI2C_Write16EEPROMBytes@pData	PTR unsigned char  size(2) Largest target is 128
		 -> aPatchMemory(BIGRAM[128]), 

    updateModelFromPatchMemory@dualADSRdata1	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata1(BANK2[8]), 

    updateModelFromPatchMemory@dualADSRdata0	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata0(BANK2[8]), 

    updateModelFromPatchMemory@mvcChannels	PTR unsigned char  size(1) Largest target is 4
		 -> mvcChannels(BANK1[4]), 

    marshallPatchMemory@dualADSRdata1	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata1(BANK2[8]), 

    marshallPatchMemory@dualADSRdata0	PTR unsigned char  size(1) Largest target is 8
		 -> dualADSRdata0(BANK2[8]), 

    marshallPatchMemory@mvcChannels	PTR unsigned char  size(1) Largest target is 4
		 -> mvcChannels(BANK1[4]), 

    savePatch@pData	PTR unsigned char  size(2) Largest target is 128
		 -> aPatchMemory(BIGRAM[128]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), 
		 -> MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> MYI2C_ReadFaders@status(COMMON[1]), 

    F14372.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_MasterWrite@pflag	PTR enum E14260 size(1) Largest target is 1
		 -> MYI2C_Write16EEPROMBytes@status(BANK0[1]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@status(COMMON[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), 

    F14367.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), NULL(NULL[0]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 
		 -> NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    S374$pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pbuffer	PTR unsigned char  size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    p_i2c1_current.pTrFlag	PTR enum E14260 size(1) Largest target is 17
		 -> MYI2C_ReadPatch@status(COMMON[1]), MYI2C_ReadPatch@pointerByte(COMMON[1]), MYI2C_Write16EEPROMBytes@writeBuffer(BANK0[17]), MYI2C_Write16EEPROMBytes@status(BANK0[1]), 
		 -> MYI2C_Write2LEDBytes@writeBuffer(COMMON[3]), MYI2C_Write2LEDBytes@status(COMMON[1]), MYI2C_WriteFaders@writeBuffer(COMMON[9]), MYI2C_WriteFaders@status(COMMON[1]), 
		 -> iI2CFaderValue(BANK1[8]), MYI2C_ReadFaders@status(COMMON[1]), MYI2C_ReadFaders@pointerByte(COMMON[1]), 

    S386$ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 10
		 -> MYI2C_ReadPatch@readTRB(COMMON[8]), MYI2C_ReadFaders@readTRB(COMMON[8]), I2C1_MasterRead@trBlock(BANK1[4]), I2C1_MasterWrite@trBlock(BANK1[4]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), NULL(NULL[0]), 

    S397$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    S397$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK1[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _main->_savePatch
    _savePatch->_MYI2C_Write16EEPROMBytes
    _MYI2C_Write16EEPROMBytes->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _loadPatch->_writeDAC528
    _writeDAC528->_putByte
    _initDAC528->_putByte
    _putByte->___fttol
    ___fttol->___ftdiv
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack
    ___ftdiv->___awtoft
    _SYSTEM_Initialize->_I2C1_Initialize
    _SYSTEM_Initialize->_PIN_MANAGER_Initialize
    _LED7SegDisplayValueByDigit->_LED7SegShiftOutPulseClock
    _LED7SegPulseClock->_delay
    _delay->___wmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   30777
                                             67 BANK0      4     4      0
                                              0 BANK1     18    18      0
           _ADCC_GetSingleConversion
                _InitPanelInChannels
                    _InitmvcChannels
         _LED7SegDisplayValueByDigit
                       _LED7SegSetup
                  _SYSTEM_Initialize
                           ___awtoft
                            ___ftdiv
                            ___fttol
                             ___wmul
                              _delay
                         _initDAC528
                          _loadPatch
                          _savePatch
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _savePatch                                           15    13      2    3617
                                             52 BANK0     15    13      2
           _MYI2C_Write16EEPROMBytes
                _marshallPatchMemory
 ---------------------------------------------------------------------------------
 (2) _marshallPatchMemory                                 17    15      2     540
                                              0 BANK0     17    15      2
 ---------------------------------------------------------------------------------
 (2) _MYI2C_Write16EEPROMBytes                            38    34      4    2840
                                             14 BANK0     38    34      4
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     7     3      4    2100
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterWriteTRBBuild                             7     3      4     690
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterTRBInsert                                 4     2      2     556
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _loadPatch                                           12    10      2    6209
                                             58 BANK0      8     6      2
         _updateModelFromPatchMemory
                        _writeDAC528
 ---------------------------------------------------------------------------------
 (1) _writeDAC528                                          5     2      3    5548
                                             53 BANK0      5     2      3
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _updateModelFromPatchMemory                          15    13      2     495
                                              0 BANK0     15    13      2
 ---------------------------------------------------------------------------------
 (1) _initDAC528                                           1     1      0    5268
                                             53 BANK0      1     1      0
                            _putByte
 ---------------------------------------------------------------------------------
 (2) _putByte                                              9     7      2    5268
                                             44 BANK0      9     7      2
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     623
                                             30 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2315
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2027
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2163
                                             14 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1671
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      34
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegSetup                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED7SegDisplayValueByDigit                           6     2      4    2002
                                             20 BANK0      6     2      4
          _LED7SegShiftOutPulseClock
 ---------------------------------------------------------------------------------
 (2) _LED7SegShiftOutPulseClock                            3     3      0    1538
                                             17 BANK0      3     3      0
                    _LED7SegPinWrite
                  _LED7SegPulseClock
 ---------------------------------------------------------------------------------
 (3) _LED7SegPulseClock                                    0     0      0    1377
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                               11     9      2    1377
                                              6 BANK0     11     9      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     526
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _LED7SegPinWrite                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitmvcChannels                                      3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitPanelInChannels                                  3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADCC_GetSingleConversion                             4     1      3      31
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           1     1      0      22
                                              6 COMMON     1     1      0
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             4     4      0      22
                                              2 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (8) _I2C1_Stop                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) _I2C1_FunctionComplete                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C1_BusCollisionISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _InitPanelInChannels
   _InitmvcChannels
   _LED7SegDisplayValueByDigit
     _LED7SegShiftOutPulseClock
       _LED7SegPinWrite
       _LED7SegPulseClock
         _delay
           ___wmul
   _LED7SegSetup
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftdiv (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   ___wmul
   _delay
     ___wmul
   _initDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _loadPatch
     _updateModelFromPatchMemory
     _writeDAC528
       _putByte
         ___awtoft
           ___ftpack
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
   _savePatch
     _MYI2C_Write16EEPROMBytes
       _I2C1_MasterWrite
         _I2C1_MasterTRBInsert
         _I2C1_MasterWriteTRBBuild
     _marshallPatchMemory
   _writeDAC528
     _putByte
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     47      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     12      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      CC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      CC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Aug 26 11:20:57 2018

                                         _b 00AF                                           _c 00B7  
                                         _d 00AC                                           _e 00B5  
                                         pc 0002                                 __CFG_CP$OFF 0000  
              __end_of_cPointerByteWriteLED 102F                  __size_of_LED7SegPulseClock 000B  
                       ___wmul@multiplicand 0022                                         l163 0B73  
                                       l502 0DE4                                         l522 0130  
                                       l519 00AF                                         l707 0B11  
                                       l771 0514                                         l829 0F7E  
                                       l946 0C14                                         _GIE 005F  
                              __CFG_CPD$OFF 0000                         _marshallPatchMemory 0442  
                              __CFG_BORV$LO 0000                                         wreg 0009  
                              __CFG_LVP$OFF 0000                            ?_InitmvcChannels 0077  
                              __CFG_ZCD$OFF 0000                                ___ftdiv@cntr 0038  
                          __end_of_I2C1_ISR 0442                                ___ftdiv@sign 003D  
                                      l1114 0E47                                        l1115 0E4F  
                                      l1107 0E34                                        l3100 048C  
                                      l3210 076B                                        l3122 04F1  
                                      l3114 04C5                                        l3204 075E  
                                      l3108 04B8                                        l1198 0F4C  
                                      l3150 0F97                                        l3218 0793  
                                      l3170 0FE6                                        l3154 0FA6  
                                      l3162 0FC6                                        l4118 0C0E  
                                      l3094 047F                                        l3086 0453  
                                      l3600 06E5                                        l3168 0FD2  
                                      l3184 0FC9                                        l3504 0E8B  
                                      l2802 0D95                                        l3186 0FF8  
                                      l4410 022F                                        l2812 0DA8  
                                      l4270 0D07                                        l2910 0F28  
                                      l3198 0731                                        l2806 0D9C  
                                      l4430 02A8                                        l3608 06FE  
                                      l2832 0C8C                                        l2920 0F4F  
                                      l2912 0F36                                        l2808 0DA1  
                                      l4266 0CFC                                        l2770 0E20  
                                      l2762 0E0A                                        l2842 05DA  
                                      l4418 024F                                        l4276 0D18  
                                      l3580 068E                                        l2860 062B  
                                      l2924 0F5D                                        l2932 0CE9  
                                      l4436 02BB                                        l2766 0E11  
                                      l2918 0F43                                        l2950 055D  
                                      l4358 0094                                        l2776 0E39  
                                      l2768 0E1B                                        l2872 0647  
                                      l2864 0633                                        l2848 05F0  
                                      l2952 0561                                        l4448 02F0  
                                      l4392 0183                                        l4368 00BE  
                                      l2778 0E41                                        l3586 06A4  
                                      l4386 015A                                        l2876 064F  
                                      l2892 0EF8                                        u2015 0E3C  
                                      u2205 0634                                        u3005 0E6C  
                                      _LATA 0016                                        _LATB 0017  
                                      u2055 0E56                                        u2215 063A  
                                      u3015 0EA1                                        _LATC 0018  
                                      u4010 0D66                                        u2315 0F29  
                                      u2245 0650                                        u3135 06B6  
                                      u2255 0656                                        u2175 05FC  
                                      u3145 06C6                                        u2185 060C  
                                      u2345 0F44                                        u3155 06E6  
                                      u4044 0C33                                        u4045 0C32  
                                      u3165 06F5                                        u2285 0EFF  
                                      u2525 04FB                                        u4125 00AB  
                                      u3175 06FF                                        u4215 0295  
                                      u4135 00BC                                        u2465 0451  
                                      u4225 02B4                                        u4145 0109  
                                      u2394 051E                                        u2395 051D  
                                      u2635 0F84                                        u2555 0FA4  
                                      u2475 047D                                        u4155 0125  
                                      u2645 072F                                        u2565 0FC4  
                                      u4245 02CE                                        u2655 075C  
                                      u4255 02FC                                        u4175 0181  
                                      u2905 0C4F                                        u4347 02E8  
                                      u2925 0BE3                                        u4357 0ED4  
                                      u1975 0E16                                        u1995 0E2F  
                                      u2975 07C5                                        u2985 07E5  
                                      u3955 0C15                                        u3965 0C1A  
                                      u3993 0DF6                                        u3985 0DD9  
                                      _WPUA 0F39                                        _WPUB 0F44  
                                      _WPUC 0F4F                                        _WPUE 0F65  
                              __CFG_WRT$OFF 0000                               __CFG_FCMEN$ON 0000  
                                      _main 0064                                ___ftpack@arg 0020  
                              ___ftpack@exp 0023                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        indf1 0001  
                                      fsr1l 0006                                        _twoK 101E  
                    ??_I2C1_MasterTRBInsert 0022                                        btemp 007E  
                              main@iCounter 00D9        LED7SegDisplayValueByDigit@iTensDigit 0034  
                             __CFG_BOREN$ON 0000                     __end_of_LED7SegPinWrite 0B13  
                                      start 0020                        ?_marshallPatchMemory 0020  
                               _writeDAC528 0CA3                               __CFG_CSWEN$ON 0000  
                             __CFG_MCLRE$ON 0000                                ___ftmul@cntr 003C  
                              ___ftmul@sign 003D              I2C1_MasterWriteTRBBuild@length 0021  
                              ___fttol@exp1 004B                                ___fttol@lval 0047  
        __end_of_updateModelFromPatchMemory 07BF                  _updateModelFromPatchMemory 0720  
                                _i2c1_state 006F              __size_of_OSCILLATOR_Initialize 0009  
                 I2C1_MasterTRBInsert@count 0023               __end_of_OSCILLATOR_Initialize 0B1C  
                 I2C1_MasterTRBInsert@pflag 0021                                       _ADACQ 009D  
                                     _ADACT 0099                                       _ADCAP 009B  
                                     ?_main 0077                                       _ADCLK 0098  
                                     _ADCNT 010C                                       _ADPCH 009E  
                                     _ADREF 009A                           __end_of_I2C1_Stop 0BD7  
                                     _ADPRE 009C                               __CFG_WDTE$OFF 0000  
                                     _ADRPT 010D                             __end_of___ftdiv 0720  
                           __end_of___ftmul 0677                             __end_of___fttol 0F66  
                            __CFG_DEBUG$OFF 0000                                       i1l303 0370  
                                     i1l304 037C                                       i1l321 03F0  
                                     i1l322 03FE                                       i1l314 03BE  
                                     i1l333 0B66                                       i1l326 0423  
                                     i1l318 03DD                                       i1l292 031A  
                                     i1l297 0345                                       i1l298 034D  
                                     i1l394 0013                                       i1l398 001B  
                                     _OSCEN 0891                                       _PORTA 000C  
                                     _PORTB 000D                                       _PORTC 000E  
                                     _TRISA 0011                                       _TRISB 0012  
                                     _TRISC 0013                             __end_of_datapin 1024  
              __end_of_I2C1_BusCollisionISR 0800                           ??_I2C1_Initialize 0020  
           __end_of_cPointerByteWriteFaders 1031                               ___awtoft@sign 002D  
                                     _delay 0DAE                               ___ftpack@sign 0024  
                                     _speed 1020                           savePatch@batchNum 005F  
                           __end_of_putByte 05C3                                       status 0003  
                                     wtemp0 007E                       ??_marshallPatchMemory 0022  
           I2C1_MasterWriteTRBBuild@address 0022                                  _iLEDs0_LSB 00C0  
                                _iLEDs0_MSB 006C                                  _iLEDs1_LSB 00BE  
                                _iLEDs1_MSB 00BF                        __end_of_LED7SegSetup 0B58  
                           __initialization 0022                       I2C1_MasterWrite@pdata 002D  
                     I2C1_MasterWrite@pflag 002A                                __end_of_main 0307  
                              __end_of_twoK 1020            __end_of_MYI2C_Write16EEPROMBytes 1000  
               ?_INTERRUPT_InterruptManager 0077                         _lineSettleMicroTime 101A  
                            _iI2CFaderValue 00C1                                 _i2c1_object 0067  
                                    ??_main 0063                               ___fttol@sign1 0046  
               ??_LED7SegShiftOutPulseClock 0031                             putByte@clockPin 004C  
     LED7SegDisplayValueByDigit@iUnitsDigit 0036                   savePatch@iPatchAddressLow 005A  
                                    ?_delay 0026                                      _ADACCH 0091  
                                    _ADACCL 0090                                      _ADCON0 0093  
                                    _ADCON1 0094                                      _ADCON2 0095  
                                    _ADCON3 0096                                      _ADERRH 0117  
                                    _ADERRL 0116                                      i1S4524 0800  
                                    _ADLTHH 010F                                      _ADLTHL 010E  
                                    _ADRESH 008D                                      _ADRESL 008C  
                                    _ADSTAT 0097                                      _ADUTHH 0111  
                                    _ADUTHL 0110                            __end_of___awtoft 0CA3  
                                    _ANSELA 0F38                                      _ANSELB 0F43  
                                    _ANSELC 0F4E                            __end_of___ftpack 0E66  
                        __CFG_RSTOSC$HFINT1 0000                                      _RC3PPS 0F23  
                                    _RC4PPS 0F24                                      _ODCONA 0F3A  
                                    _ODCONB 0F45                                      _ODCONC 0F50  
                                    i1l3062 0BD4                                      i1l3304 036A  
                                    i1l3318 0399                                      i1l3360 03E5  
                                    i1l3352 03CC                                      i1l3344 03B8  
                                    i1l3338 03AD                                      i1l3372 0405  
                                    i1l3390 0429                                      i1l3286 0338  
                                    i1l3392 042D                                      i1l3376 040C  
                                    i1l3298 0359                                      i1l3388 0426  
                                    i1l3398 0436                              __CFG_WDTCCS$SC 0000  
       MYI2C_Write16EEPROMBytes@pointerByte 004C                        _cPointerByteWriteLED 102E  
                                    _OSCFRQ 0893                           ?_I2C1_MasterWrite 0027  
                     main@SaveDebounceCount 00E3                            ?_LED7SegPinWrite 0077  
                            __CFG_PWRTE$OFF 0000        MYI2C_Write16EEPROMBytes@writeAddress 002E  
                       __end_of_MvcMaxValue 1016                            __end_of_clockpin 1026  
                        ??_I2C1_MasterWrite 002B                         __end_of_MvcMinValue 1018  
                            _p_i2c1_current 0072                            __end_of_maxBanks 1012  
                                    ___wmul 0C0B                              __CFG_STVREN$ON 0000  
                                 ??___ftdiv 0034                                   ??___ftmul 0034  
                                 ??___fttol 0042                            __end_of_latchpin 1028  
                ??_I2C1_MasterWriteTRBBuild 0024                                   ?_I2C1_ISR 0077  
                                    _wkByte 00BB                                      main@fx 00E8  
                     ___ftmul@f3_as_product 0039                             _ADCC_Initialize 0BF0  
                                 ??_putByte 004E           __size_of_ADCC_GetSingleConversion 0014  
                 ?_ADCC_GetSingleConversion 0020               I2C1_MasterWriteTRBBuild@pdata 0020  
                         _SYSTEM_Initialize 0B27                   _LED7SegShiftOutPulseClock 0C27  
                   __end_of__initialization 0060                          ?_SYSTEM_Initialize 0077  
                                ___ftdiv@f1 0031                                  ___ftdiv@f2 002E  
                                ___ftdiv@f3 0039                              _i2c1_trb_count 0074  
                                ___awtoft@c 0028                                  ___ftmul@f1 002E  
                                ___ftmul@f2 0031                       _I2C1_FunctionComplete 0B58  
                      _I2C1_BusCollisionISR 07FF                                  ___fttol@f1 003E  
                            __pcstackCOMMON 0077                      I2C1_MasterWrite@length 0027  
                              __pidataBANK2 0B7E                         ??_SYSTEM_Initialize 0021  
                             __end_of_delay 0E01                              main@faderValue 00E6  
                             __end_of_speed 1022                                  ??_I2C1_ISR 0079  
     updateModelFromPatchMemory@mvcChannels 0026                    _MYI2C_Write16EEPROMBytes 0F66  
                        main@fader8bitValue 00E5                                     ??_delay 0028  
                 __end_of_SYSTEM_Initialize 0B33         MYI2C_Write16EEPROMBytes@writeBuffer 0036  
                          InitmvcChannels@i 0021                  __end_of_i2c_addr_dualADSR0 102E  
                __end_of_i2c_addr_dualADSR1 102D                                  __pbssBANK0 0067  
                                __pbssBANK1 00A0                                  __pbssBANK2 0134  
                               _MvcMaxValue 1014                          __size_of_loadPatch 0040  
                               _MvcMinValue 1016                       __size_of_LED7SegSetup 000D  
                    savePatch@iPatchAddress 0061                  LED7SegShiftOutPulseClock@i 0033  
                              ?_writeDAC528 0055                       ?_I2C1_BusCollisionISR 0077  
                            _SSP1DATPPSbits 0EC6                                  __pmaintext 0064  
              __size_of_InitPanelInChannels 001E                                     ?___wmul 0020  
                           __CFG_PPS1WAY$ON 0000                     __end_of_ADCC_Initialize 0C0B  
                        __size_of_savePatch 0079                                  __pintentry 0004  
                           _I2C1_Initialize 0BA8                                     _ADFLTRH 0115  
               ?_updateModelFromPatchMemory 0020                                     _ADFLTRL 0114  
                                   _ADPREVH 008F                                     _ADPREVL 008E  
                                 ?___awtoft 0028                                   ?___ftpack 0020  
                                   _ADSTPTH 0113                                     _ADSTPTL 0112  
                            _SSP1CLKPPSbits 0EC5                                     _OSCCON1 088D  
                                   _OSCCON3 088F                                   _I2C1_Stop 0BBF  
                                   _OSCTUNE 0892                                _LED7SegSetup 0B4B  
                     main@LoadDebounceCount 00E1                                     _SSP1ADD 018D  
                                   _PPSLOCK 0E8F                                     _SSP1BUF 018C  
            marshallPatchMemory@mvcChannels 0028                                  _initDAC528 0B92  
                            main@readStatus 00D8               I2C1_MasterTRBInsert@ptrb_list 0020  
                       __end_of_cPowerOfTwo 1010                                  _maxPatches 1012  
                  __size_of_InitmvcChannels 0019                      ?_I2C1_FunctionComplete 0077  
             __size_of_I2C1_MasterTRBInsert 0046                          _p_i2c1_trb_current 0073  
                           _PanelInChannels 00A4                        __CFG_SCANE$available 0000  
                                   ___ftdiv 0677                             __size_of___wmul 001C  
                                   ___ftmul 05C3                                     ___fttol 0EDF  
                        writeDAC528@dacData 0057          marshallPatchMemory@iPatchMemoryNDX 002F  
                                ??___awtoft 002B                                  ??___ftpack 0025  
                                   _datapin 1022                                     __ptext1 0E66  
                                   __ptext2 0442                                     __ptext3 0F66  
                                   __ptext4 0CC8                                     __ptext5 0C61  
                                   __ptext6 0D68                                     __ptext7 07BF  
                                   __ptext8 0CA3                                     __ptext9 0720  
                         __end_of_loadPatch 07FF                       _OSCILLATOR_Initialize 0B13  
                                   _wkFloat 00B2                                     _segdisp 0120  
                  ??_PIN_MANAGER_Initialize 0020                        loadPatch@PatchNumber 005A  
                                ?_I2C1_Stop 0077                                     _putByte 050E  
                __size_of_SYSTEM_Initialize 000C                        I2C1_ISR@pi2c_buf_ptr 0071  
                                   clrloop0 0B34                           __end_of_savePatch 0EDF  
               __end_of_marshallPatchMemory 050E                        end_of_initialization 0060  
              ??_LED7SegDisplayValueByDigit 0038                                     init_ram 0B3F  
                                   initloop 0B40   updateModelFromPatchMemory@iPatchMemoryNDX 002B  
                    ??_I2C1_BusCollisionISR 0077                     __end_of_I2C1_Initialize 0BBF  
                         __end_of_toggleDly 101E                     _cPointerByteWriteFaders 1030  
          marshallPatchMemory@dualADSRdata0 0020            marshallPatchMemory@dualADSRdata1 0021  
                          ?_ADCC_Initialize 0077            __end_of_ADCC_GetSingleConversion 0B7E  
 MYI2C_Write16EEPROMBytes@iPatchAddressHigh 004E                       __CFG_WDTCPS$WDTCPS_31 0000  
                                 _PORTBbits 000D                   __size_of_I2C1_MasterWrite 0028  
                         __size_of_I2C1_ISR 013B         __size_of_LED7SegDisplayValueByDigit 0039  
                                 _MY_CONSTS 006D                                   _TRISCbits 0013  
                               _cPowerOfTwo 1000                            __CFG_FEXTOSC$OFF 0000  
                               putByte@data 0052                             main@iResetValue 1028  
                               ?_initDAC528 0077                                 putByte@mask 0053  
         I2C1_ISR@i2c_10bit_address_restart 006E                   marshallPatchMemory@i_1212 002B  
                 marshallPatchMemory@i_1213 002D                                 ___ftdiv@exp 003C  
                   I2C1_MasterWrite@address 0028                                 ___ftmul@exp 0038  
                ??_MYI2C_Write16EEPROMBytes 0032                        __size_of_writeDAC528 0025  
   updateModelFromPatchMemory@dualADSRdata0 0020     updateModelFromPatchMemory@dualADSRdata1 0021  
                    delay@adjustedDelaytime 0029                           ??_InitmvcChannels 0020  
                  __size_of_LED7SegPinWrite 0009                              __end_of___wmul 0C27  
                   I2C1_MasterWrite@trBlock 00D1                    I2C1_Stop@completion_code 0078  
                    ?_OSCILLATOR_Initialize 0077                              _clockMicroTime 1018  
               __end_of_lineSettleMicroTime 101C                         start_initialization 0022  
                               ??_I2C1_Stop 0077             __size_of_PIN_MANAGER_Initialize 003F  
                       _InitPanelInChannels 0C43           __size_of_I2C1_MasterWriteTRBBuild 0020  
                 ?_I2C1_MasterWriteTRBBuild 0020                                  loadPatch@i 0060  
                    _cPointerByteReadFaders 102F                            ?_I2C1_Initialize 0077  
                          __CFG_LPBOREN$OFF 0000                        savePatch@PatchNumber 0054  
                      ?_InitPanelInChannels 0077                          _i2c_addr_dualADSR0 102D  
                        _i2c_addr_dualADSR1 102C                                    ??___wmul 0024  
                               __pdataBANK2 0120                      __end_of_clockMicroTime 101A  
                       __size_of_initDAC528 0016                I2C1_MasterWriteTRBBuild@ptrb 0026  
                         __size_of___awtoft 0022                    _ADCC_GetSingleConversion 0B6A  
                         __size_of___ftpack 0065                                 __pbssBIGRAM 2370  
                   __end_ofmain@iResetValue 102A                                 __pbssCOMMON 0070  
                                 ___latbits 0002                               __pcstackBANK0 0020  
                             __pcstackBANK1 00D8                               _i2c1_tr_queue 00D5  
        __end_of_LED7SegDisplayValueByDigit 0D29                  _LED7SegDisplayValueByDigit 0CF0  
                    loadPatch@iPatchAddress 005E                        writeDAC528@dacNumber 0055  
                   ??_I2C1_FunctionComplete 0077               MYI2C_Write16EEPROMBytes@pData 0030  
                    _PIN_MANAGER_Initialize 0D29                       ??_InitPanelInChannels 0020  
           ADCC_GetSingleConversion@channel 0023                                    ?___ftdiv 002E  
                                  ?___ftmul 002E                                    ?___fttol 003E  
                                  _I2C1_ISR 0307                ??_INTERRUPT_InterruptManager 007D  
                      marshallPatchMemory@i 0029                                   __pswtext1 0800  
                          _I2C1_MasterWrite 0CC8                          LED7SegPinWrite@val 0020  
                              savePatch@idx 005D                __end_of_I2C1_MasterTRBInsert 0DAE  
                    main@prevFader8bitValue 00DC                           ??_LED7SegPinWrite 0020  
                                 _loadPatch 07BF                                    ?_putByte 004C  
                              _wkFaderValue 00BD                              __size_of_delay 0053  
                              delay@counter 002D                      I2C1_MasterRead@trBlock 00CD  
                            ___wmul@product 0024                            main@iChangeCount 00DB  
                                  _LATCbits 0018                                   _savePatch 0E66  
                                 clear_ram0 0B33                                    _PIE3bits 0719  
       __size_of_INTERRUPT_InterruptManager 001C                                    _PIR3bits 070F  
       LED7SegDisplayValueByDigit@iTensCode 0038                                    _SSP1CON1 0190  
                                  _SSP1CON3 0192    MYI2C_Write16EEPROMBytes@iPatchAddressLow 0047  
                                  _SSP1STAT 018F                                   _toggleDly 101C  
                                _ADCON0bits 0093                                  _ADCON1bits 0094  
                                _ADCON2bits 0095                                  _ADCON3bits 0096  
                         ___wmul@multiplier 0020                               _dualADSRdata0 013C  
                             _dualADSRdata1 0134                              savePatch@pData 005B  
                                ?_loadPatch 005A                 updateModelFromPatchMemory@i 002D  
                              ??_initDAC528 0055                             _faderActiveFlag 00A8  
MYI2C_Write16EEPROMBytes@slaveDeviceAddress 004D                             _InitmvcChannels 0BD7  
                                ?_savePatch 0054                                  _ADSTATbits 0097  
              __size_of_marshallPatchMemory 00CC                                _aPatchMemory 2370  
             __size_of_I2C1_BusCollisionISR 0001                      I2C1_ISR@i2c_bytes_left 0070  
                   ??_OSCILLATOR_Initialize 0020                              delay@delaytime 0026  
                          __size_of___ftdiv 00A9                            __size_of___ftmul 00B4  
                          __size_of___fttol 0087                                    ___awtoft 0C81  
                                  ___ftpack 0E01            __end_of_I2C1_MasterWriteTRBBuild 0C81  
                        __end_of_initDAC528 0BA8                           _LED7SegPulseClock 0B1C  
                                _ANSELCbits 0F4E                          ?_LED7SegPulseClock 0077  
                  __size_of_ADCC_Initialize 001B                          __end_of_maxPatches 1014  
                       I2C1_ISR@i2c_address 0075                                    __ptext10 0B92  
                                  __ptext11 050E                                    __ptext20 0BA8  
                                  __ptext12 0EDF                                    __ptext21 0BF0  
                                  __ptext13 05C3                                    __ptext30 0C43  
                                  __ptext22 0B4B                                    __ptext14 0C81  
                                  __ptext31 0B6A                                    __ptext23 0CF0  
                                  __ptext15 0677                                    __ptext24 0C27  
                                  __ptext16 0E01                                    __ptext33 0307  
                                  __ptext25 0B1C                                    __ptext17 0B27  
                                  __ptext34 0BBF                                    __ptext26 0DAE  
                                  __ptext18 0D29                                    __ptext35 0B58  
                                  __ptext27 0C0B                                    __ptext19 0B13  
                                  __ptext36 07FF                                    __ptext28 0B0A  
                                  __ptext29 0BD7                                _SSP1CON1bits 0190  
                              _SSP1CON2bits 0191             MYI2C_Write16EEPROMBytes@counter 004F  
                                  _clockpin 1024                                 _mvcChannels 00C9  
                          __size_of_putByte 00B5                                    _maxBanks 1010  
                       ??_LED7SegPulseClock 0031                                    _wkMIDICC 00BC  
           MYI2C_Write16EEPROMBytes@timeOut 004A                                    _latchpin 1026  
                             __size_of_main 02A3                        InitPanelInChannels@i 0021  
                             ??_writeDAC528 0058                        __CFG_WDTCWS$WDTCWS_7 0000  
                      _I2C1_MasterTRBInsert 0D68                      writeDAC528@wkDacNumber 0059  
                ??_ADCC_GetSingleConversion 0023                                    int$flags 007E  
        __end_of_INTERRUPT_InterruptManager 0020                  _INTERRUPT_InterruptManager 0004  
                 __end_of_LED7SegPulseClock 0B27          __size_of_LED7SegShiftOutPulseClock 001C  
              ??_updateModelFromPatchMemory 0022                  ?_LED7SegShiftOutPulseClock 0077  
               PIN_MANAGER_Initialize@state 0020                LED7SegShiftOutPulseClock@val 0032  
                            _cMstrClkAdjust 102A                                  _INTCONbits 000B  
         __size_of_MYI2C_Write16EEPROMBytes 009A                                 ??_loadPatch 005C  
                 ?_MYI2C_Write16EEPROMBytes 002E                               ?_LED7SegSetup 0077  
                            __pstringtext10 1020                              __pstringtext11 1022  
                            __pstringtext20 1030                              __pstringtext12 1024  
                            __pstringtext13 1026                              __pstringtext14 1028  
                            __pstringtext15 102A                              __pstringtext16 102C  
                            __pstringtext17 102D                              __pstringtext18 102E  
                            __pstringtext19 102F                     __end_of_InitmvcChannels 0BF0  
            __end_of_cPointerByteReadFaders 1030                                    intlevel1 0000  
               ?_LED7SegDisplayValueByDigit 0034              MYI2C_Write16EEPROMBytes@nCount 0048  
                            _mvcPatchNumber 00B9                     ?_PIN_MANAGER_Initialize 0077  
                  __end_of_I2C1_MasterWrite 0CF0                                 ??_savePatch 0056  
                         __CFG_CLKOUTEN$OFF 0000              __size_of_I2C1_FunctionComplete 0012  
             __end_of_I2C1_FunctionComplete 0B6A            updateModelFromPatchMemory@i_1220 0027  
          updateModelFromPatchMemory@i_1221 0029                                 _PPSLOCKbits 0E8F  
            MYI2C_Write16EEPROMBytes@status 0053                       ?_I2C1_MasterTRBInsert 0020  
                savePatch@iPatchAddressHigh 0059         __size_of_updateModelFromPatchMemory 009F  
                                  putByte@i 0054                             _LED7SegPinWrite 0B0A  
                       __end_of_writeDAC528 0CC8                      __end_of_cMstrClkAdjust 102C  
                  __size_of_I2C1_Initialize 0017                               __pstringtext1 1000  
                             __pstringtext2 1010                               __pstringtext3 1012  
                             __pstringtext4 1014                               __pstringtext5 1016  
                             __pstringtext6 1018                               __pstringtext7 101A  
                             __pstringtext8 101C                               __pstringtext9 101E  
         __end_of_LED7SegShiftOutPulseClock 0C43                               main@POT0Value 00DF  
                             main@POT1Value 00E0                              ??_LED7SegSetup 0020  
                  _I2C1_MasterWriteTRBBuild 0C61                            main@iLoopCounter 00DD  
            __end_of_PIN_MANAGER_Initialize 0D68                           ??_ADCC_Initialize 0020  
                        __size_of_I2C1_Stop 0018                 __end_of_InitPanelInChannels 0C61  
                 MYI2C_Write16EEPROMBytes@i 0051                         _prevPanelInChannels 00A0  
